{"version":3,"sources":["assets/script/lib/ConfigLanguageData.js","assets/script/uiextend/CustomRichText.ts","assets/script/uiextend/CustomToggle.ts","assets/script/pacakge/public/ui/GrayLable.ts","assets/script/framework/JsonOb.ts","assets/script/pacakge/pdk/module/help/PdkUtils.ts","assets/script/sdk/SdkBridge.js","assets/script/sdk/SdkHandler.ts","assets/script/sdk/SdkInterface.js","assets/script/sdk/SdkStorage.ts","assets/script/polyfill/String.ts","assets/script/lib/TLabel.js","assets/script/uiextend/ToggleObjectContral.ts","assets/script/uiextend/UButton.ts","assets/script/uiextend/ULabel.ts","assets/script/uiextend/USprite.ts","assets/script/utility/aes.ts","assets/script/pacakge/public/const/app_data.ts","assets/script/manager/audio_manager.ts","assets/script/pacakge/hall/module/auth/auth_module.ts","assets/script/pacakge/hall/module/auth/auth_view.ts","assets/script/manager/auto_dialog_manager.ts","assets/script/utility/base64.js","assets/script/shader/blur_shader.ts","assets/script/utility/center_horizont_layout.ts","assets/script/pacakge/hall/component/clubList_item.ts","assets/script/pacakge/club/mem/clubMemList_model.ts","assets/script/pacakge/club/mem/clubMemList_module.ts","assets/script/pacakge/club/mem/clubMemList_view.ts","assets/script/pacakge/club/rank/clubRank_model.ts","assets/script/pacakge/club/rank/clubRank_module.ts","assets/script/pacakge/club/rank/clubRank_view.ts","assets/script/pacakge/club/club_data.ts","assets/script/pacakge/club/club_model.ts","assets/script/pacakge/club/club_module.ts","assets/script/pacakge/club/club_view.ts","assets/script/pacakge/club/component_club.ts","assets/script/pacakge/club/component_marquee.ts","assets/script/pacakge/club/component_table.ts","assets/script/pacakge/public/const/const_code.ts","assets/script/lib/countUp.js","assets/script/pacakge/hall/module/createroom/createroom_model.ts","assets/script/pacakge/hall/module/createroom/createroom_module.ts","assets/script/pacakge/hall/module/createroom/createroom_view.ts","assets/script/pacakge/public/ui/custom_ui_state_switcher.ts","assets/script/manager/debug.ts","assets/script/pacakge/public/module/dialog_tips/dialog_tips_view.ts","assets/script/pacakge/public/module/dialog_tips/dialog_tips.ts","assets/script/pacakge/public/module/dialog/dialog_view.ts","assets/script/pacakge/public/module/dialog/diaolog.ts","assets/script/shader/dissolve_shader.ts","assets/script/pacakge/public/ui/editor_box_center.ts","assets/script/manager/event_manager.ts","assets/script/shader/frozen_shader.ts","assets/script/pacakge/public/const/game_cfg.ts","assets/script/manager/game_manager.ts","assets/script/pacakge/server/gameserver/game_net_route.ts","assets/script/pacakge/server/gameserver/game_server.ts","assets/script/utility/game_util.ts","assets/script/shader/gauss_blur_shader.ts","assets/script/shader/glowing_shader.ts","assets/script/pacakge/hall/hall_model.ts","assets/script/pacakge/hall/hall_module.ts","assets/script/pacakge/server/hallserver/hall_net_route.ts","assets/script/pacakge/hall/hall_route.ts","assets/script/pacakge/server/hallserver/hall_server.ts","assets/script/pacakge/hall/hall_view.ts","assets/script/shader/ice_shader.ts","assets/script/utility/image_font.ts","assets/script/init/init.ts","assets/script/pacakge/joinClub/joinClub_model.ts","assets/script/pacakge/joinClub/joinClub_module.ts","assets/script/pacakge/joinClub/joinClub_route.ts","assets/script/pacakge/joinClub/joinClub_view.ts","assets/script/manager/language_manager.ts","assets/script/pacakge/public/ui/layout_grid.ts","assets/script/framework/tools/scrollview/listview_demo.ts","assets/script/framework/tools/scrollview/listview.ts","assets/script/init/loader_wrap.ts","assets/script/pacakge/public/loading/loading_view.ts","assets/script/pacakge/public/loading/loading.ts","assets/script/manager/local_storage.ts","assets/script/manager/log_report_manager.ts","assets/script/pacakge/server/loginserver/login_net_route.ts","assets/script/pacakge/server/loginserver/login_server.ts","assets/script/manager/make_points_manager.ts","assets/script/pacakge/hall/module/marquee/marquee_component.ts","assets/script/utility/md5.ts","assets/script/manager/memory_storage.ts","assets/script/pacakge/public/ui/menu_scroll_widget.ts","assets/script/shader/mirror_shader.ts","assets/script/framework/core/mvvm/model_base.ts","assets/script/pacakge/public/model_data.ts","assets/script/framework/core/mvvm/module_base.ts","assets/script/pacakge/public/const/module_data.ts","assets/script/framework/core/module_manager.ts","assets/script/shader/mosaic_shader.ts","assets/script/framework/core/mvvm/mvvm_base.ts","assets/script/framework/net/net_client.ts","assets/script/pacakge/club/net_clubRoute.ts","assets/script/pacakge/public/module/netprompt/netprompt_view.ts","assets/script/pacakge/public/module/netprompt/netprompt.ts","assets/script/shader/outline_shader.ts","assets/script/pacakge/pdk/module/table/pdk_base_view.ts","assets/script/pacakge/pdk/module/table/data/pdk_const.ts","assets/script/pacakge/pdk/module/table/data/pdk_data.ts","assets/script/pacakge/pdk/module/help/pdk_help.ts","assets/script/pacakge/pdk/module/table/pdk_model.ts","assets/script/pacakge/pdk/module/table/pdk_module_base.ts","assets/script/pacakge/pdk/module/table/pdk_module.ts","assets/script/pacakge/pdk/module/component/pdk_myseat_pokers.ts","assets/script/pacakge/pdk/net/pdk_route.ts","assets/script/pacakge/pdk/module/component/pdk_seat_pokers.ts","assets/script/pacakge/pdk/module/component/pdk_table_seat_view.ts","assets/script/pacakge/pdk/module/component/pdk_table_sound.ts","assets/script/pacakge/pdk/module/table/pdk_view.ts","assets/script/pacakge/public/ping_component.ts","assets/script/animtion/play_anim.ts","assets/script/shader/poison_shader.ts","assets/script/pacakge/pdk/module/table/poker/poker_data.ts","assets/script/pacakge/pdk/module/table/poker/poker_logic_set.ts","assets/script/pacakge/public/poker_table/poker_myseat_pokers.ts","assets/script/pacakge/pdk/module/component/poker_node_set.ts","assets/script/pacakge/pdk/module/component/poker_node.ts","assets/script/pacakge/pdk/module/table/poker/poker_pattern.ts","assets/script/pacakge/pdk/module/table/poker/poker_recommend.ts","assets/script/pacakge/public/poker_table/poker_seat_pokers_base.ts","assets/script/pacakge/public/poker_table/poker_table_poker_base.ts","assets/script/pacakge/public/poker_table/poker_table_seat_base_view.ts","assets/script/lib/pomelo.js","assets/script/utility/pool.ts","assets/script/utility/promiseUtility.ts","assets/script/pacakge/pdk/module/rule/public_rule_view.ts","assets/script/pacakge/pdk/module/rule/public_rule.ts","assets/script/shader/rain_shader.ts","assets/script/pacakge/pdk/module/table/poker/recommend_tools.ts","assets/script/pacakge/pdk/module/result/result_module.ts","assets/script/pacakge/pdk/module/result/result_view.ts","assets/script/pacakge/pdk/module/room_config.ts","assets/script/pacakge/hall/module/createroom/data/rule_data.ts","assets/script/pacakge/hall/module/createroom/data/rule_factory.ts","assets/script/manager/scene_manager.ts","assets/script/pacakge/public/ui/screenAdaptationUtil.ts","assets/script/framework/tools/scrollview/scrollview.ts","assets/script/sdk/collection/sdk_define.ts","assets/script/sdk/collection/sdk_facebook.ts","assets/script/sdk/collection/sdk_line.ts","assets/script/manager/sdk_manager.ts","assets/script/pacakge/server/server_base.ts","assets/script/pacakge/hall/module/setting/setting_view.ts","assets/script/pacakge/hall/module/setting/setting.ts","assets/script/shader/shader_component.ts","assets/script/shader/shader_test.ts","assets/script/animtion/simple_rotation.ts","assets/script/pacakge/public/ui/spriteFrameHolder.ts","assets/script/shader/stone_shader.ts","assets/script/manager/texture_manager.ts","assets/script/manager/time_manager.ts","assets/script/pacakge/public/module/toast/toast_view.ts","assets/script/pacakge/public/module/toast/toast.ts","assets/script/pacakge/hall/module/createroom/component/toggle_item.ts","assets/script/pacakge/public/ui/ui_state_switcher.ts","assets/script/manager/user_manager.ts","assets/script/utility/utility.ts","assets/script/manager/version_manager.ts","assets/script/framework/core/mvvm/view_base.ts","assets/script/shader/water_shader.ts"],"names":["polyInst","window","i18n","languages","curLang","CC_EDITOR","loadLanguageData","language","LoadCurrentLanguageData","cc","log","Fs","require","Path","absolutePath","join","Editor","Project","path","data","readFileSync","initPolyglot","module","exports","init","this","inst","parse","key","slice","toString","json","JSON","hasOwnProperty","updateSceneRenderers","rootNodes","director","getScene","children","allLocalizedLabels","i","length","labels","getComponentsInChildren","Array","prototype","push","apply","_i","label","updateLabel","_a","_decorator","ccclass","menu","property","executeInEditMode","inspector","CustomRichText","_super","__extends","_this","arguments","overflow","Label","Overflow","NONE","_overflow","_maxFragmentWidth","_updateRichTextWithMaxWidth","labelString","labelWidth","styleIndex","SHRINK","_updateRichTextWithMaxWidth_shrink","call","_updateRichText","maxWidth","node","scale","update","sys","platform","EDITOR_PAGE","_updateEditor","fragmentWidth","labelSegment","checkStartIndex","checkEndIndex","checkString","substr","checkStringWidth","remainingString","__decorate","type","Enum","RichText","default","CustomToggle","targetLabel","selectedlColor","Color","WHITE","unSelectedColor","RED","_updateCheckMark","color","isChecked","Toggle","requireComponent","GrayLable","onEnable","_originalNodeColor","calcGrayColor","outLine","getComponent","LabelOutline","_originalOutlineColor","onDisable","srcColor","c","getR","getG","getB","Math","min","max","getA","Component","OP","Object","types","obj","array","OAM","JsonOb","callback","console","error","_callback","observe","overrideArrayProto","keys","forEach","self","oldVal","pathArray","defineProperty","get","set","newVal","originalProto","overrideProto","create","result","method","value","user_manager_1","PdkUtils","ExtractType","clone","Date","copy","setTime","getTime","copy_1","len","copy_2","attr","Error","getSortCard","bCardData","bUserCardCount","tableSortCard","preValue","tableCard","num_1","tempArry","unshift","num","getCardTypeAndCard","CardType_error","CardType_bomb","CardType_single","CardType_pair","tableReturnCard","CardType_straight","tableReturnCard_1","CardType_straightPair","mc","j","mk","m","v","CardType_3Add2","tableReturnCard_2","count","isFound","chilArry","splice","childArry","k","CardType_airplane","getExtractCardType","bTargetCardData","bTargetUserCardCount","targetType","targetCardData","cardData","targetValue","_index","pushData","isArry","wPlayerCount","instance","mPlayerCount","meChairID","mChairID","tableSortCardTemp_1","arr","maxValue","maxData","cardArry","dataArr","tableSortCardTemp_2","tableSortCardTemp_3","targetMinValue","tableSortCardTemp_4","tableSortCardTemp_5","varry","index","i_1","i_2","value1","vVar","CardType_4Add3","tableSortCardTemp_6","vvar","tableSortCardTemp_7","table3SameValue","isAirplane","var1","i_3","i_4","arryT","i_5","i_6","i_7","i_8","tableSortCardTemp","onGetPlatformMsg","jsonString","jsonObj","onHandlerPlatformMsg","game_manager_1","SdkHandler","functionName","isHideGame","params","isHide","gameName","GameManager","changeGame","sdkInterface","SDKCall","prompt","EnterGame","stringify","ExitGame","vibratePhone","time","paramObj","local_storage_1","SdkStorage","setLoginToken","setItem","loginType","getLoginToken","getItem","clearLoginToken","delete","String","format","args","undefined","reg","RegExp","replace","configLanguageData","debounce","func","wait","immediate","timeout","context","later","callNow","clearTimeout","setTimeout","Class","extends","editor","properties","ULabelKey","_ulabelKey","val","ulabel","i18nKey","onLoad","fetchRender","updateULabel","localizedString","string","ToggleObjectContral","activeTab","deActiveTab","_toggle","on","event","toggle","active","start","Node","view_base_1","debug_1","UButton","viewBase","_init","cacheComponent","name","targetComponent","CC_PREVIEW","buttonClick","onChangeLanguage","onFocusInEditor","resetInEditor","Button","zoomScale","parent","language_manager_1","ConfigLanguageData","ULabel","t","USprite","changeLanguage","Sprite","AES","encrypt","word","decrypt","AppData","setServerByData","isTest","ip","port","loginServer","appVersion","appName","gameid","apiGameName","proxyHost","isIphoneX","iphonexOffset","game_util_1","AudioManager","audioSource","_audioPool","_musicOpen","_soundOpen","_vibrateOpen","_musicVolume","_soundVolume","_musicId","_lastMusicId","_soundUrls","_curMusicIndex","_isLoadingMusic","soundCtxPool","maxSoundNum","_musicUrl","AudioManager_1","musicLocalVo","Number","getNumber","audioEngine","setMusicVolume","soundLocalVo","setEffectsVolume","getAudio","success","loadRes","err","clip","warn","playMusicLoop","playHallBgMusic","resume","url","playMusic","playFightMusic","playFightMusic2","loop","resetSame","stopMusic","pauseMusic","stopAllMusic","stopAll","isMusicOpen","setMusicOpen","isOpen","setNumber","volume","isSoundOpen","isNeedPlaySound","getEffectsVolume","setSoundOpen","setSoundVolume","isVibrateOpen","setVibrateOpen","resumeMusic","state","getState","stop","startMusic","playSound","onFinish","id","playEffect","setFinishCallback","release","stopAllSound","vibrate","onDestroy","unscheduleAllCallbacks","soundCtx","paused","AudioSource","module_base_1","auth_view_1","module_manager_1","Utility_1","audio_manager_1","login_server_1","AuthModule","_startBtn","_assets","_loadCount","_httpRequestCount","windowPrefabResPath","viewType","modelType","AuthModule_1","onInit","view","editBoxAccount","floor","random","change","destroyAllModule","showModule","test","onLoginBtnClick","account","parseInt","playButtonSound","showModuleName","showImmediately","accountLogin","toast","onShow","preLoadRes","bindButtonClickEvent","moduleInit","AuthView","browserLoginNode","buttonLogin","EditBox","dialogQueue","AutoDialogManager","openPriorityDialog","moduleName","pop","dealModules","global","factory","_typeof","define","amd","_Base64","Base64","version","buffer","eval","b64chars","b64tab","bin","l","charAt","fromCharCode","cb_utob","charCodeAt","re_utob","utob","u","cb_encode","ccc","padlen","ord","chars","btoa","b","_encode","isUint8Array","encode","urisafe","m0","encodeURI","re_btou","cb_btou","cccc","cp","offset","btou","cb_decode","n","_atob","atob","a","_decode","from","Uint8Array","constructor","decode","noConflict","VERSION","fromBase64","toBase64","__buffer__","noEnum","enumerable","writable","configurable","extendString","shader_component_1","BlurShader","_shaderName","_vert","_frag","setParamValue","material","setNum","app_data_1","CenterHorizontLayout","scrollView","layout","cellWidth","offsetX","_scrollWidth","setLength","widget","Widget","right","ScrollView","Layout","texture_manager_1","club_module_1","ClubListItem","Sprite_flag","Sprite_head","Label_clubName","Button_enterClub","Label_offer","Label_invate","Label_totalCount","Label_onlineCount","clubListData","enterClub","clubId","ClubModule","initUI","myMemInfo","lastId","getLocalSprite","spriteFrame","invateCode","getSprite","leaderUrl","sp","clubName","totalPlayerNum","onlinePlayerNum","model_base_1","net_clubRoute_1","ClubMemListModel","curPageNum","totalPageNum","pageCeilNum","send_getClubMember","pageIdx","pageNum","isOutPartner","send","ClubRoute","getClubMember","clubMemList_view_1","clubMemList_model_1","toast_1","hall_server_1","ClubMemListModule","needAnim","clickAnywhereClose","needViewMask","clubInfo","model","netClient","clearMsgEvent","registerMsg","registerNetMsg","retGetClubMember","bind","onButtonClick","customEventData","pName","destroyModule","code","totalNum","ceil","loadMemList","members","ClubMemListView","EditBox_id","Label_pageIdx","Sprite_memNode","Button_item","curPage","totalPage","removeAllChildren","_loop_1","mem","instantiate","this_1","col","row","x","y","getChildByName","Label_name","Label_state","avatarUrl","lastOfflineTime","ClubRankModel","send_getRankList","rankType","getRankList","clubRank_view_1","clubRank_model_1","retGetRankList","loadRankList","list","myRank","ClubRankView","Label_rank","Label_coins","Sprite_rankNode","Sprite_item","getUserData","formateNumb","coin","item","Sprite_front","Label_before","find","rank","Club","TableType","allTables","sort","getSortIndex","tableData","tbType","GameTable","gameInfo","chairCount","players","ClubModel","selectClub","playWays","send_enterClub","send_setClubPlayway","setClubPlayway","send_getClubTable","gameMode","gameId","playwayId","getClubTable","send_getClubPlayway","getClubPlayway","reset","club_view_1","event_manager_1","club_data_1","club_model_1","hall_module_1","clubMemList_module_1","clubRank_module_1","ClubView","clickToggleFunc","select","retRefreshCLub","retGetClubPlayway","retGetClubTable","onRefreshClubTable","retRefreshClubTable","onRemoveClubTable","enterClubAction","enterClubAllTable","enterClubSingleGame","updateSelectClub","updateClubInfo","str","content","announcement","tag","showCount","dispatch","clearTableList","mTables","getString","playwayNum","playways","ways","idx","way","playWay","PWTable","tableid","concat","appendTable","gtable","tableInfos","gtb","gData","tableId","removeTableItem","gameTable","listview_1","scene_manager_1","component_table_1","scrollview","prefab","m_tablelist","Sprite_leftFrame","Node_top","Sprite_modeIcon","Node_tips","Sprite_scolle","Toggle_all","Toggle_pdk","clickClubFunc","ListView","item_prefab","cb_host","item_update_func","update_table_list_item","gap_x","direction","ListViewDir","Horizontal","toggleCB","setClickClubFunc","removeTable","tbData","datas","tb","remove_data","isSort","adds","isadd","mtb","append_data","refreshTableItem","refresh_item","Sprite_coinFrame","Label_coin","userData","Sprite_scoreFrame","Sprite_butomFrame","Node_vector","vector","Button_rank","Button_personCard","Button_partner","stopAllActions","runAction","moveTo","set_data","item_intact","tableInfo","TableInfo","clickFunc","clickTableItem","setData","checkIsCanMoney","isCan","lowerLimit","upperLimit","lastEntranceOpenModuleName","pwInfo","createGame","gamInfo","enterGame","on_destroy","ClubInfo","avatar","member","clickBtn","clubData","clubInfCall","clickItem","setClubName","setBgOpacity","p","opacity","setAvatar","isValid","MarqueeComponent","root","labelPrefab","mask","startOffset","endOffset","speed","m_availableLabelQueue","m_playingLabelQueue","m_isEmpty","m_max_count","m_index","m_message_queue","m_playing_queue","onload","bindEvent","element","showMarquee","show","play","msg","text","message","playMessage","on_next_play","shift","next","maskWidth","width","getAvailableLabel","startPosX","position","v2","scheduleOnce","calcLabelWidth","totalDis","dis1","duration1","calcDuration","duration2","targetPos1","targetPos2","callFun1","callFunc","callFun2","addToAvailableLabel","move1","move2","seq","sequence","messageFilter","cloneLabel","dis","on_msg_coming","sortQueue","cutQueue","level","unbindEvent","off","Mask","Float","custom_ui_state_switcher_1","seatStyle","seatNode","playWayName","spriteJuShu","lab_JuShu","setPlayWayName","playwayName","setStyle","updatePlayerAvatar","setPlayCount","gameCount","currentCount","countCount","activeAvatar","player","style","st","SwitchState","ServerCode","ClubCode","GameStatus","ServerAdrCode","EnterTableCode","__assign","assign","s","CountUp","target","endVal","options","defaults","startVal","decimalPlaces","duration","useEasing","useGrouping","smartEasingThreshold","smartEasingAmount","separator","decimal","prefix","suffix","finalEndVal","countDown","timestamp","startTime","progress","remaining","frameVal","easingFn","round","decimalMult","printValue","rAF","requestAnimationFrame","formatNumber","neg","x1","x2","x3","abs","toFixed","split","numerals","w","easeOutExpo","d","pow","formattingFn","validateValue","resetDuration","el","determineDirectionAndSmartEasing","end","animateAmount","up","updateCallback","pauseResume","cancelAnimationFrame","newEndVal","ensureNumber","isNaN","newValue","CreateRoomModel","createroom_model_1","createroom_view_1","room_config_1","rule_factory_1","CreateRoomModule","lineHeight","CreateRoomView","RuleFactory","getConfig","PdkRoomConfig","config","startPos","SelectState","SaveState","CustomStyle","lastSelectState","UnSelect","displayName","CustomUIStateSwitcher","styleList","nodeList","_checkSave","_checkSelect","styleName","Select","Save","None","_refreshBrother","uiStyleName","brother","_findBrother","_instantiateBrother","_getBrotherName","_cloneBrotherTransform","_cloneBrotherActive","setPosition","setScale","scaleX","scaleY","angle","setAnchorPoint","getAnchorPoint","setContentSize","getContentSize","skewX","skewY","group","LogType","Debug","getLogStr","values","now","logOpen","_curIndex","_isUploading","_uploadArray","NetPromptView","tipsLab","showTips","dialog_tips_view_1","DialogTips","package","layer","ViewLayer","High","intentData","Content","EnterCallBack","enterCallback","CloseCallBack","closeCallback","onButtonClickName","hide","onHide","label_title","label_content","button_center","button_left","button_right","playAnim","dialog_view_1","Dialog","arg","_clickLeftBtnNotHideView","_leftBtnCallback","_clickRightBtnNotHideView","_rightBtnCallback","_clickCenterBtnNotHideView","_centerBtnCallback","show_center_button","title","clickButtonConfirmNotHideView","show_custom_dialog","show_common","confirmCallback","cancelCallback","leftBtnCallback","rightBtnCallback","centerBtnCallback","clickLeftBtnNotHideView","clickRightBtnNotHideView","clickCenterBtnNotHideView","AddHandleToWaitDealQueue","show_custom","DissolveShader","_needUpdate","EditorBoxCenter","editorBox","charWidth","bgWidth","resetX","setString","onTextChange","size","EventManager","handles","eventName","returns","findEvenName","returnValue","eventData","once","has","directCall","onceCall","clearAll","FrozenShader","GameCfg","gName","setGameServer","gameServer","setHallServer","hallServer","GameServerRoute","enter","server_base_1","module_data_1","netprompt_1","game_net_route_1","const_code_1","model_data_1","game_cfg_1","GameServer","GameServer_1","loginRsp","OK","gotoHall","connectServer","connect","startCheckPing","onConnected","hideModule","cf","isTableModuleActive","gotoSubGame","login","connectTimes","times","_reconTimes","reconnect","_maxReconTimes","openid","clubID","reconnectServerFail","onReconnectServer","protobufjs_1","md5_1","memory_storage_1","GameUtil","_http_get","requestData","responeSuccessCallback","responeErrorCallback","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","responseText","responseURL","useCache","setJson","cacheKey","onerror","indexOf","requestCount","ontimeout","open","signature","sortedObjKeys","sortedObjKeys_1","md5","hex_md5","loadTexture","blob","img","Image","strinsdf","util","base64","base","src","texture","Texture2D","initWithElement","handleLoadedTexture","statusText","responseType","formatParamsForHttp","baseUrl","encodeURL","getQueryString","seach","keyName","r","match","unescape","encodeURIComponent","string2point","e","get_now_timestamp","get_md5","userId","salt_a","salt_b","s1","s2","toLowerCase","s3","s4","stringBytesLength","iCode","str2UTF8Byte","bytes","completeCallback","res","_ResCaches","loader","resource","loadResArray","cutStr","str_length","str_len","str_cut","escape","currencyFormatting","money","fixedNumb","unit","unitIndex","getRightMount","mount","parseFloat","addThousands","number","symble","integer","re","AddChild","Vec2","ZERO","addChild","setNodeString","richComp","labelComp","GaussBlurShader","renderEngine","renderer","GlowingShader","_defines","_params","PARAM_FLOAT3","fromHEX","iResolution","Vec3","height","hall_route_1","HllModel","clubid","HallNetRoute","send_getclubList","getClubList","hall_view_1","game_server_1","hall_model_1","joinClub_module_1","HallModule","updateUserInfo","retGetClubList","gotoPdk","close","showClubList","clubList","HallServerRoute","joinRoom","getGameServerInfo","onRefreshClub","time_manager_1","hall_net_route_1","HallServer","isNeedCheck","HallServer_1","enterTable","setUserData","info","GAME_PLAYING","_enterGameServer","host","showHallUI","checkIsPlaying","playwayid","_joinGame","loginHallServer","userInfo","gender","getServerTime","gotoLogin","clubList_item_1","HallView","userIDLab","userNameLab","Sprite_noClubFlag","Label_noClubFlag","PageView_clubList","Sprite_clubFrame","Node_gameItem","uid","subName","playerNameClamp","removeAllPages","addPage","PageView","IceShader","ImageFont","sourceSprites","numSprites","ge","shi","bai","SpriteFrame","auth_module_1","loading_1","Init","canvas","resize","setResizeCallback","getFrameSize","isNative","curDR","designResolution","dr","rw","rh","finalW","finalH","frameSize","loadiPhoneX","Canvas","joinClub_route_1","JoinClubModel","send_joinClubByCode","JoinClubNetRoute","joinClubByCode","joinClub_view_1","joinClub_model_1","JoinClubModule","emitBindFunc","retJoinClubByCode","onjoinClub","retOnJoinClub","inputNumber","resetNumber","deleteNumber","JoinClubView","Label_input","Node_num","sendJoinClubCallBack","cb","subStr","items","LanguageManager","_curLang","ch","asset","_polyInst","opt","LayoutGrid","cellSize","colNum","spacingX","spacingY","prefabNode","horizontalDirection","HorizontalDirection","RIGHT_TO_LEFT","getChilds","defaultActive","childs","_getNode","childrenCount","_setPosByIndex","sortAllChildren","xIndex","yIndex","xPos","yPos","child","zIndex","serializable","ListView_Demo","m_list","update_list_item","select_cb","on_item_select","column","gap_y","Vertical","select_item","scroll_to","selected_index","m_selected_index","m_scrollview","m_view","m_content","m_item_prefab","m_item_width","m_item_height","m_dir","m_width","m_height","m_gap_x","m_gap_y","m_row","m_col","m_cb_host","recycle_cb","item_select_func","scroll_to_end_cb","item_click_func","item_click_ex_func","m_auto_scrolling","auto_scrolling","m_node_pool","real_width","real_height","vertical","horizontal","inertia","on_scrolling","on_scroll_to_end","beforDestroy","_onPreDestroy","destroy","delayTime","resize_content","m_datas","m_items","clear_items","pack_item","layout_items","m_start_index","m_stop_index","insert_data","is_append","_b","scroll_to_end","old_length","del_items","recycle_item","min_y","vertical_layout","_","setContentPosition","max_x","horizontal_layout","scrollToBottom","scrollToRight","inner_select_item","posy","viewport_start","viewport_stop","render_items","posx","is_select","spawn_node","item_click","removeFromParent","last_item","item_width","item_height","halfOffset","canRelease","caches","tmpId","deps","dependKeys","LoaderWrap","isArray","_getReferenceKey","_cache","version_manager_1","LoadingView","progressBar","barRightNode","textLabel","versionLabel","showTextLabel","updateVersion","checkVersion","updatePercent","bar","barSprite","getRect","ProgressBar","loading_view_1","LoadingModule","Highest","eventBind","already_up_to_date","on_new_version_found","on_update_progress","on_update_finished","on_get_app_version","os","OS_ANDROID","className","methodName","methodSignature","jsb","reflection","callStaticMethod","loadAuth","percent","LoaclStorage","setStorageNumber","CC_WECHATGAME","setStorageString","setStorage","localStorage","defaultValue","getJson","hasItem","LogReportManager","_httpUrl","_baseHttpUrl","report","http","report_cmd","cmd","report_data","report_msg_cmd","isRequest","_serialNumber","requestUrl","_reportFailureHttpUrls","LoginNetRoute","queryEntry","login_net_route_1","LoginServer","LoginServer_1","MakePointType","AppBuriedDataBankruptcyVo","bankruptcyCount","bankruptcyGiveGold","buriedDataEnum","goldId","matchId","AppBuriedDataOrderVo","createCount","orderDataType","orderSourceType","payOutOrderId","AppBuriedDataShareVo","backCount","shareCount","shareSmallId","channelId","MakePointsManager","getUrl","httpCurApiUrl","roleData","get_tokenAndTimestamp","shareRecord","SHARE_MATCH_LOSE","SHARE_SIGN_MATCH","SHARE_MATCH_WIN","SHARE_GOLD_WIN","SHARE_GOLD_LOSE","SHARE_RANKING_MATCH_WIN","SHARE_RANKING_MATCH_LOSE","SHARE_GOLD_SHOW_CARDS","AppBuriedDataComplexVo","shareList","maxLength","tempData","uploadAll","isUploading","checkLength","bankrupRecord","BANKRUP_MATCH","BANKRUP_GOLD","BANKRUP_RANKING_MATCH_LOSE","BANKRUP_RANKING_MATCH_WIN","bankruptcyList","orderRecord","orderList","fail","setRequestHeader","MD5","hexcase","b64pad","rstr2hex","rstr_md5","str2rstr_utf8","b64_md5","rstr2b64","any_md5","rstr2any","hex_hmac_md5","rstr_hmac_md5","b64_hmac_md5","any_hmac_md5","md5_vm_test","binl2rstr","binl_md5","rstr2binl","bkey","ipad","opad","hash","input","hex_tab","output","tab","triplet","encoding","divisor","q","quotient","dividend","full_length","remainders","str2rstr_utf16le","str2rstr_utf16be","olda","oldb","oldc","oldd","md5_ff","md5_gg","md5_hh","md5_ii","safe_add","md5_cmn","bit_rol","lsw","msw","cnt","MemoryStorage","setKeyValue","m_map","getValue","MenuScrollWidget","moduleNode","leftWidget","scrollWidget","_leftWidget_left","_scrollWidget_left","_scrollWidget_right","left","refreshUI","updateAlignment","MirrorShader","ModelBase","_msgEventMap","isDestroyed","route","getHours","getMinutes","getSeconds","ignoreModuleActive","eventDataList","receiveMessageData","msgName","destroyModel","showNetPrompt","ModelData","mvvm_base_1","moduleTypeNames","preloadResUrls","nodeName","closeSound","propertyName","descriptor","onButtonClickEventFunctions","moduleClassName","packageName","subscribeMsg","msgData","mapData","subscribeMsgList","propertyEvent","implementFunction","funName","Module","_viewMask","needViewBaseBg","_viewBaseBg","needViewBaseCloseBtn","_viewBaseCloseBtn","needViewBaseTitleBg","_viewBaseTitleBg","Low","waitDealQueue","mPrefab","autoShowAnim","moduleType","_showId","DealAllWaitDealQueue","resetModule","onModuleInit","resetInit","viewNode","_moduleBase","isInited","setShowState","loadViewMask","loadTimestamp","netPromptsActive","moduleHasActive","isShowState","newNode","setAutoReleaseRecursively","loadBaseBg","addComponent","isAlignTop","isAlignBottom","isAlignLeft","isAlignRight","alignMode","AlignMode","ON_WINDOW_RESIZE","mask_1","sprite_1","button","Type","SLICED","checkCloseBtn","nodeCloseBtn","on_click_base_close_btn","nodeTitleBg","Prefab","showAnim","showLayerTop","setSiblingIndex","scheduleShow","scheduleHide","CleanWaitDealQueue","isShow","destroyView","_baseDestroy","AddToWaitDealQueue","handle","waitDealData","GetWaitDealQueueHead","_ButtonClick","funcName","_node","ModuleData","backFromTable","curMatchId","curGoldId","curMatchStageNum","curMatchData","curGoldData","setCurGoldId","getCurGoldId","getCurMatchId","isBackFromTable","setBackFromTable","gotoMatch","gotoMatchingTableModule","beginEnterTableModule","destoryHallModule","ModuleManager","_asynPath","_asynLoadResCount","allwaysInMemory","_modules","_removeModules","low","middle","high","highest","ModuleManager_1","registModule","T","addModule","onFinishLoad","tName","ONCE","Mid","goToModule","replaceModuleName","hideAllModuleS","module_1","module_2","toastLong","long","toastKey","showDialog_Confirm","confirmBtnCallback","showDialog_CancelConfirm","cancelBtnCallback","nodeIsActive","moduleLayerType","setModuleActive","needAdd","setActive","getModule","getModuleFromType","exclusiveMoudleName","incluePublicPackage","hideAllModule","except","exceptList","needHide","removeModule","destroyRemoveModule","needDestory","destroyPackage","needDestroyModuleName","hidePackage","action1","scaleTo","easing","easeBackOut","action2","fadeTo","addPreloadResUrl","resUrl","progressCallback","path_1","MosaicShader","PARAM_FLOAT","MVVMBase","m_maxId","normalShow","doSchedule","interval","repeat","delay","m_callbackMap","tmpFun","cancelSchedule","schedule","doScheduleOnce","unschedule","eventDispatch","mEventCallback","eventBindOnce","eventUnBind","NetClientProtoType","NetClient","lastReceivePingTime","heartbeatInterval","heartbeatTimeout","msgMap","pomelo","Pomelo","protoType","clear","netClientProtoType","clearSysNetMsg","sysNetMsg","onOpen","onclose","handshake","heartbeatFunc","request","emit","heartbeat","removeAllNetListeners","netState","onConnectStateEvent","heartbeatEvent","checkHeartBeatTimeOut","activeClose","socket","websocket","disconnect","createClub","joinClub","mainNode","reconnectNode","loadingProgress","showTime","isProgress","riseTo80Second","riseTo100Second","refreshProgress","startProgress","dt","netprompt_view_1","NetPrompt","scheduleCallback","autoClose","laterShow","OutlineShader","poker_myseat_pokers_1","poker_table_seat_base_view_1","pdk_seat_pokers_1","poker_data_1","pdk_const_1","pdk_data_1","pdk_table_sound_1","PdkBaseView","effect_offset_pos","myhandPokers","prefabSeatView","nodeSeatParentList","seatHandPokersList","seatPokersList","nodechunTianAnim","hinitBtn","OutButton","nodeClock","labelClock","btnSwitchui","seatExtendViewList","m_clockScheduleId","m_allSeatViewList","mPosExtendSeatMap","initAllSeatView","setCustomGetSpriteFrameKeyByCodeFunc","getPokerSpriteKeyByCode","handPokers","seatPosNodeList","nodeSeat","seatView","resetSeatStyle","resetSeatViewPos","seatview","hidePlayerTag","seat","operatorPlayerTag","playerTagVisible","viewid","showReadyTag","showSelect","showSingle","showClock","userEnter","roomInfo","frame","showAvatar","showName","showCoin","PConst","ReadyState","Ready_Yes","gameState","START","userLeave","changeBtnState","isForbidOutBtn","isgray","setBtnGray","dealCards","card","showPokers","hidePoker","playFaPaiAnim","totalCount","PdkSound","playFaPaiSound","showSeatClock","secs","needShake","refreshClockLable","showHandCards","codeList","withAnim","seatPokers","updateMyHandCards","playFeiJiEffect","localPos","centerWorldPos","extendSeat","getExtendSeatViewByPos","playCommonEffect","nodeFeiJiAnim","playShunZiEffect","nodeShunZiAnim","playLianDuiEffect","nodeLianDuiAnim","playZhaDanEffect","nodeZhaDanAim","playWangZhaEffect","onFinish1","onFinish2","offsetPos","anim","nodeWangZhaAim","Animation","anim1","nodeWangZhaAim1","pos","convertToNodeSpaceAR","targetOff","playChunTianEffect","playSanDaiYiEffect","nodeSanDaiYiAnim","playSanDaiErEffect","nodeSanDaiErAnim","playSiDaiErEffect","nodeSiDaiErAnim","playSiDaiLiangDuiEffect","nodeSiDaiLiangDuiAnim","showDispatchCards","showSeatPassAnim","nodePass","notHide","originalPos","Card","makeCardByCode","CardNameIndex","card_big_king","card_small_king","CardColor","color_black_heart","color_red_heart","color_plum","color_square","SeatExtendHolder","PdkData","SeatInfoData","RoomInfoData","nodeMingPaiAnim","PdkHelp","pdk_route_1","poker_logic_set_1","PdkModel","users","mySeatInfo","mCommonData","initModel","gameStatus","isRoleById","mChair","chairID","_user","enterUser","user","handSet","PokerSet","setPokerList","handcard","setCodeList","getUser","getUserLocalID","chairid","viewID","viewLocation","exitUser","isRole","isMyOutCard","playerCount","initRoomInfo","gameParameter","bPlayerCount","send_readyGame","PdkNetRoute","readyGame","send_playCard","bCardCount","playCard","send_dissolveRoom","dissolveGame","send_leaveRoom","leaveRoom","pdk_model_1","pdk_view_1","poker_pattern_1","public_rule_1","PdkModuleBase","recommendFunc","PdkView","menueMask","clickMenueMask","setCustomOnFinishDragPokerReselectFunc","on_finish_drag_pokers_reselect_fun","setCustomOnSelectPokersChanged","on_select_pokers_changed","onSendParameter","onSendGameScene","onUserEntryRoom","onStartGame","onReadyGame","onOutCard","onPassCard","onDissolveRoom","onSettlement","onHandCardUser","onOutCardNotify","onWarnUser","onLeaveRoom","initTable","lastPattern","outcardUser","outCards","wPassUser","playPassSound","isMale","wChairID","handCardData","selectedData","getSelectedPokers","selected_codeList","checkCanChuPai","canChuPai","pattern","choose_hintIterator","selectPokers","cards","refreshPokerSelectState","menueRoot","showMenue","resetPokers","onClickRemindCard","onClickSendCard","real_selected_codeList","codes","isHaveMask","tishiData","hintIterator","tishiFun","srcPattern","selectedPattern","CardPattern","newPattern","compable","le","playPokerTypeSound","pdk_module_base_1","result_module_1","PdkModule","showOutCard","currentUser","_readyGame","dispatchPoker","myself","roleid","ResultModule","settlementcards","updateAllUser","clearTable","turnUser","turnCardData","bUserWarn","cid","showWarn","outCardUser","wCurrentUser","cbCardData","wWarnUser","playWarningSound","removeAllPokers","seatInfo","playCardPatternSoundAndEffect","cardPatter","disp_type","PatternType","type_zhadan","type_huojian","playPokerTypeEffectSound","type_liandui","type_feiji","type_shunzi","type_sandaiyi","type_sidaier","PdkMySeatPokers","rightStyleMinCardsCount","uiSwitcher","onFinishSingle","pokers","doNextPokerMove","isPlayingSelectPokerAnim","poker","targetPos","callFun","move","centerLocalPos","resetHandCardsRootPos","showRecommends","selectCards","selectIndex","marked","selected","refreshPokersMarkState","Integer","poker_seat_pokers_base_1","PdkSeatPokers","PokerTableSeatView","getSeatStyleName","const_malePath","const_femalePath","const_effectPath","const_musicPath","male","soundName","type_danpai","type_duizi","feijinum","card_cnt","valueToIndex","card_unknow","playShunZiEffectSound","playCommonEffectSound","playFeiJiEffectSound","playZhaDanEffectSound","playHuoJianEffectSound","type_unknow","playPiaEffectSound","randomIndex","getRandomIndex","playDaNiSound","single","playMingPaiSound","playGrabLordSound","score","playSetLordEffectSound","playRemind","playGameLoseSound","playGameWinSound","playMathWinSound","fullPath","playBgm","resum","tmp","stopBgm","playChatShortMsgSound","under","over","getIntRandom","pdk_base_view_1","chupaiBtnSwither","PingComponent","isHallUse","wifiSprites","wifiIcon","pingTex","pingColor","onNotifyPing","ping","showPing","PlayAnim","animation","particles","_isFindParticleSystem","getClips","ParticleSystem","resetSystem","PoisonShader","color_unknow","codeToIndex","codeToValue","cbCardValue","cbCardColor","indexToValue","cardValueMap","max_card_value","DouDiZhuCardCommon","InitParse","SortAsc","card_type_stat","card_name_info","card_name_stat","last_card","card_repeat_cnt","valA","valB","tishi","poker_recommend_1","firstout","outcard","PokerRecommend","pattern_set","has_sidaier_map","pattern_tmp","proc_sanzhang_tail_cards","outData","get_cards_type","cardsList","find_all_biger_sizhang","card_value","proc_sizhang_tail_cards","auto","oldIndex","max_cnt","pattern_1","hint_pattern","comp_pattern","with_cnt","with_type","stack","tail_cards_cnt","rest_cards","used_cards","parseResult","tailData","get_tail_cards","tail_type","tail_cards","parseDispType","sort_name","name1","name2","get_name","card_A","card_K","card_2","straight_cards","remain_single_cards","remain_pair_cards","single_type_stat","porc_serial_cards","used_pair_cards","pair_type_stat","straight_pair_cards","plain_pair_cards","names","remain_three_cards","singleList","tmp_code","tmp_value","staight_names","type_size","type_stat","least_repeat_cnt","straight_names","remain_names","beg","PokerTableMySeatPokers","useDynamicOffset","minOffset","maxOffset","mFirstHoverPoker","mLastHoverPoker","m_sortedByZIndexPokerList","m_selectTimeIndex","custom_on_finish_drag_pokers_fun","selectOffest","m_originalInterval","getOriginalInterval","getIntervalX","totalColCount","totalRowCount","intervalX","maxColCount","getIntervalY","intervalY","maxRowCount","getSelectedOffsetPos","genTimeSelectIndex","genSortedByZIndexPokerList","newList","findTouchedPoker","touch","sortedByZIndexPokerList","isTouchAtPoker","genPoker","setClickListener","on_click","setTouchStartListener","on_touch_start","setTouchMoveListener","on_touch_move","setTouchEndListener","on_touch_end","setTouchCancelListener","on_touch_cancel","on_press","touchedPoker","on_drag","on_press_up","on_draging_pokers","on_finish_drag_pokers","check_drag_mark","startPoker","isLeftPokersUnMark","check_drag_mark_singel","check_poker_selected_state","markedList","selectedList","real_selectedList","disabled","selected_time","real_selected","markAllPokers","isMark","setPokerGrayColor","gray","spriteFace","original_color","playSelectPokerAnim","original_pos","selectedOffsetPos","finishCount","real_selected_time","setCustomOnFinishDragFunc","selectAllPokers","ignoreResetDisable","enabledAllPokers","refreshPokerDisableState","repostionPokers","layoutData","calcLayoutPosAndPriority","dataList","_loop_2","moveAnim","priority","idList","waitSelectedCodeCountTable","selectedCodeCountTable","useIdFind","tmpList","pokerIndex","selectPoker","isSelect","selected_pokerList","selected_idList","real_selected_pokerList","real_selected_idList","enabledPokers","disablePokers","disabledPokers","waitdisabledCodeCountTable","disabledCodeCountTable","enableClick","Boolean","poker_node_1","PokerNodeSet","pokerNodes","playerCardAnim","hands","toCount","hand","tempTransform","getTransFromData","worldPos","easeCubicActionInOut","pokernode","transformDataList","targetScale","targetAngle","easingType","do_fun","rotaAnim","rotateTo","scaleAnim","swap","spawn","PokerNode","mTransformDataList","recommend_tools_1","repeated_cnt","cardTypeFactor","RecommendTools","Max","dispTypeOfSingle","dispTypeOfDouble","value2cardvalue","card_type_vale","card_type","find_all_sizhang","handcards","newcardvalue","codesToValues","fourl","remove_count_same","sort_ascend","removel","zhadanl","value2have_idx","find_all_danzhang","threel","surl","twol","danzhangidx","twoidx","threeidx","value2have_point_idx","all","TableAdd","is_null_or_empty","valueList","first_tishi_card","danPaiTishi","duiZi","find_tishi_type","sandaiyi","zhadan","wangzha","find_huojian","shunzi","sizhang","liandui","feiji","newcards","table_value_shunzi","sort_descend","danPai","isSameValue","find_all_sanzhang","sanzhangl","find_all_duizi","duizil","two_table_add","cardvaluel","pointl","newhandcard","copy_array","havel","tmpE","cardvalue","haveCode","allduizi","alldanpai","huojian","threenum","shunzinum","duizinum","find_all_feiji","find_all_shunzi","find_all_liandui","allthree","value_shunzi","find_point_shunzi","idx_shunzi","copy_table_value","alltwo","find_all_biger_type","danpai","duizi","air","sidaier","allboom","find_all_boom","find_all_biger_danpai","find_all_biger_duizi","find_all_biger_sanzhang","find_all_biger_shunzi","find_all_biger_liandui","find_all_biger_feiji","outvalue","alltype","biger","is_has_pair","base_cards","rest_card_names","cardname","poker_table_poker_base_1","VerticalDirection","StartAxis","HorizontalPriority","VerticalPriority","PokerTableSeatPokers","prefabPoker","nodePokersParent","m_unUseedHandPokers","startAxis","CenterToMargin","verticalDirection","horizontalPriority","Right","verticalPriority","Bottom","followHorizontalDirection","followVerticalDirection","offsetY","m_customGetSpriteFrameKeyFunc","refreshSpriteNow","shiftUnUseedPoker","instantiateObj","fillPoker","pushToUnUseedList","formatPokersLayout","pokerList","centerPos","minColCount","minRowCount","offsetIndex","leftCount","curTotalColCount","curTotalRowCount","LeftToRight","RightToLeft","TopToBottom","BottomToTop","tmpIndex","tmpLeftCount","col_1","getCol","row_1","getRow","calcPos","calcHorizontalPriority","calcVerticalPriority","Left","Top","getOffsetX","getOffsetY","centerCol","centerRow","genPokerList","append","showFace","removePoker","removePokerByIndex","removePokers","convertToWorldSpaceAR","PokerTablePokerBase","spriteAtlasPoker","spriteBack","nodeLaiZiTag","m_id","m_code","m_onTouchStartCallback","m_onTouchStartCallbackObj","m_onTouchMoveCallback","m_onTouchMoveCallbackObj","m_onTouchEndCallback","m_onTouchEndCallbackObj","m_onTouchCancelCallback","m_onTouchCancelCallbackObj","m_onClickCallback","m_onClickCallbackObj","PokerTablePokerBase_1","genId","s_curMaxId","registClickEvent","unregistClickEvent","onClick","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancel","tagget","setFace","showBack","showLaiZiTag","enable","enabled","touchLocalPos","getLocation","minX","anchorX","maxX","minY","anchorY","maxY","getSpriteFrameKeyByCode","getSpriteFrameByName","getSpriteFrame","SpriteAtlas","SpriteCache","m_spriteFrame","refreshTime","getKey","m_key","getRefreshTime","m_refreshTime","tex","getTexture","clearTexture","SpriteCacheManager","maxCount","m_maxCount","addSpriteFrame","findSpriteFrame","spritCache","cleanExcessCaches","cacheList","cleanAllCaches","PokerTableSeatBaseView","nodeRoleInfo","spriteAvatar","lableName","spriteOffLine","spriteReady","styleUiStateSwitcher","spriteOwner","lableClock","nodeChatText","nodeSelect","buttonAvatar","avatarSize","lableCoinBalance","mOnclickKickBtnCallback","mOnclickAvatarBtnCallback","mOnclickNotSeatBtnCallback","PokerTableSeatBaseView_1","showOffLineTag","showOwnerTag","filterPlayerName","showAvatarByUrl","s_avatarSpriteCacheManager","setOriginalSize","enableAvatarBtn","setClickAvatarBtnListener","setClickNotSeatBtnListener","setClickKickBtnListener","getChatTextWorldPos","getPosition","Size","Emitter","mixin","addEventListener","fn","_callbacks","removeListener","removeAllListeners","removeEventListener","callbacks","listeners","hasListeners","EventEmitter","ByteArray","Protocol","PKG_HEAD_BYTES","MSG_FLAG_BYTES","MSG_ROUTE_CODE_BYTES","MSG_ID_MAX_BYTES","MSG_ROUTE_LEN_BYTES","MSG_ROUTE_CODE_MAX","MSG_COMPRESS_ROUTE_MASK","MSG_TYPE_MASK","Package","Message","TYPE_HANDSHAKE","TYPE_HANDSHAKE_ACK","TYPE_HEARTBEAT","TYPE_DATA","TYPE_KICK","TYPE_REQUEST","TYPE_NOTIFY","TYPE_RESPONSE","TYPE_PUSH","strencode","byteArray","charCode","_buffer","copyArray","strdecode","body","rs","compressRoute","idBytes","msgHasId","caculateMsgIdBytes","msgLen","msgHasRoute","encodeMsgFlag","encodeMsgId","encodeMsgRoute","encodeMsgBody","bytesLen","byteLength","flag","routeLen","bodyLen","dest","doffset","soffset","Buffer","Protobuf","opts","encoder","encoderProtos","decoder","decoderProtos","protobuf","constants","TYPES","uInt32","sInt32","int32","double","float","Util","isSimpleType","Codec","codec","ArrayBuffer","float32Array","Float32Array","float64Array","Float64Array","uInt8Array","encodeUInt32","encodeSInt32","decodeUInt32","decodeSInt32","encodeFloat","decodeFloat","encodeDouble","subarray","decodeDouble","encodeStr","encode2UTF8","decodeStr","codeLength","MsgEncoder","constant","protos","checkMsg","encodeMsg","proto","option","__messages","writeBytes","encodeTag","encodeProp","encodeArray","tmpBuffer","MsgDecoder","setProtos","buf","decodeMsg","head","getHead","__tags","decodeProp","decodeArray","isFinish","peekHead","getBytes","peekBytes","JS_WS_CLIENT_TYPE","JS_WS_CLIENT_VERSION","decodeIO_protobuf","decodeIO_encoder","decodeIO_decoder","rsa","RES_OK","RES_FAIL","RES_OLD_CLIENT","o","F","reqId","handlers","routeMap","dict","abbrs","serverProtos","clientProtos","protoVersion","nextHeartbeatTimeout","gapThreshold","heartbeatId","heartbeatTimeoutId","handshakeCallback","reconncetTimer","reconnectUrl","reconnectAttempts","reconnectionDelay","DEFAULT_MAX_RECONNECT_ATTEMPTS","useCrypto","handshakeBuffer","initCallback","defaultEncode","defaultDecode","deCompose","lookup","Builder","build","encodeNB","maxReconnectAttempts","server","client","loadJson","onopen","onmessage","processPackage","WebSocket","binaryType","getNetState","OPEN","sendMessage","notify","sig","signString","packet","handler","heartbeatTimeoutCb","handshakeInit","onData","processMessage","onKick","msgs","_time","processMessageBatch","initData","Pool","template","comp","_pool","recycle","unuse","obtain","last","use","PromiseUtility","genPromise","doFun","promise","Promise","resolve","reject","getPromiseList","doFuns","promiseList","race","PublicRuleView","ruleRichText","closeBtnNode","leftToggleRoot","topToggleRoot","_leftCurrentSelect","_topCurrentSelect","_textArr","leftTabs","onLeftTabClick","topTabs","onTopTabClick","showRule","public_rule_view_1","PublicRule","RainShader","PARAM_FLOAT2","texSize","ntable","ArraySubtract","t1","t2","tempt2","temp1","num1","copyt","contains","lastVal","usort","newArray","get_mulsame","mul","ts","shunzil","tmpLen","daixuan","result_view_1","ResultView","updateUI","winUser","winner","loser","mChairid","rowCount","childList","disable","toggleType","toggleisOn","ToggleType","IChumpItem","ruleCfg","chumps","rule","chump","childArray","praseChildItem","childList_1","SceneManager","subGames","gameCgf","tableModuleName","AdaptationType","screenAdaptationUtil","adaptationStyle","LetfOffset","adaptationValue","widgetLeft","adaptation","refresh_screenAdaptationUtil","viewName","changePos","RightOffset","LessenX","m_node_pools","m_item_templates","item_templates","tpl","ScrollDirection","get_pools_by_key","get_item_by_key","pools","start_pos","prev_item","SdkDefine","FACE_BOOK_NAME","LINE_NAME","SdkFacebook","_instance","receive","param","jsonParam","jsonObject","thirdUnionId","loginFromAuth","SdkLine","sdk_facebook_1","sdk_define_1","sdk_line_1","SdkManager","base64Str","decodeBase64","sdkName","requestNativeFunc","skdName","jsonStr","sdkMgr","net_client_1","ServerBase","_pingDelayTime","clientName","_onConnectState","_onConnectStateEvent","_heartbeatEvent","checkConnect","_lastPingTime","reconnectServer","_reconnect","_checkPing","_loginIsTimeOut","_requestPing","macro","REPEAT_FOREVER","passTime","isConnect","heartbeat_timeout_reconnect","backGround","subscibeMsgEvent","exit","SettingView","closeBtn","musicToggle","soundToggle","musicSlider","musicProgressBar","soundSlider","soundProgressBar","labVersion","Slider","setting_view_1","Setting","isClick","onButtonCancel","onButtonSure","bgNode","markNode","musicValue","soundValue","check","uncheck","getMusicVolume","shader_material_1","disallowMultiple","ShaderComponent","_material","_color","_start","_state","setState","_applyShader","_setShaderColor","_setShaderTime","useShader","game","renderType","RENDER_TYPE_CANVAS","sprite","State","GRAY","setTexture","updateHash","clr","setR","setG","setB","setA","c0","c1","g","f","setColor","ShaderTest","shaderRoot","lastBtn","nextBtn","_totalCount","onLastBtnClick","onNextBtnClick","shoChild","RotateType","SimpleRotation","rotationType","Normal","rotation","RotationY","rotationY","RotationX","rotationX","SpriteFrameKeyPair","SpriteFrameHolder","spriteFrameList","getSpriteFrameByKey","StoneShader","TextureCache","ReloadCache","TextureManager","spriteCache","reloadCache","reloadTimeArray","TextureManager_1","releaseAsset","hasSprite","addSprite","removeReloadCache","getReloadTime","spriteData","hasReloadCache","log_report_manager_1","TimeType","TimeManager","_needCheckModule","_handles","_serverMarkTime","_serverLocalDifTime","_lastTime","_hideTime","_showTime","_startCheckBlack","_blackTimes","_backTarget","AppRunningTime","TimeManager_1","EVENT_HIDE","onApplicationHide","EVENT_SHOW","onApplicationShow","EVENT_RESTART","getScaleX","setBackTarget","getBackTarget","difTime","setInerval","hasHander","INTERVAL","remove","curCount","step","nowTime","callback_1","COUNT_DOWN","targetTime","callback_2","countDownTargetTime","callback_3","offAllByKey","offCountDown","offHander","offInterval","initServerTime","serverTime","checkBlack","startCheckBlack","isActive","cleanDoShedules","object","ToastView","holder","toast_view_1","Toast","_show","spriteBackground","_updateRenderData","finished","time1","time2","action","moveBy","fadeOut","ToggleItem","childToggle","UIStateSwitcher","showChild","needMask","_findMask","isChildActive","hasChildActive","hideAll","UserDataManager","_userInfo","GrayLable_1","base64_1","grayMateral","normalMaterial","Utility","_lastClickTime","_lastAnimTime","_screenSize","range","randomToInt","randomInsideRadius","radius","vec","sqrt","nowTimestamp","btn","isGray","interactable","enableAutoGrayEffect","setNodeGray","coms","getComponents","setGray","resetGray","grayLabls","Material","getBuiltinMaterial","setMaterial","formatTime","date","M+","getMonth","d+","getDate","h+","m+","s+","q+","S","getMilliseconds","$1","getFullYear","year","month","day","notIOS","isMobile","OS_IOS","maxChars","toCodePoint","unicodeSurrogates","codeArr","numChar","add","more","substring","getNameLen","lenInByte","inputLen","curByte","addLen","maxCharLen","newName","byteCount","char","hideAllChildren","playRewardSound","isNumArrayEquel","timeStamp","randomString","maxPos","pwd","resetSpriteSize","maxWH","getOriginalSize","scaleSpriteToSize","lastAnimValid","intervalTime","cur","btnClickValid","getUserHeadImagePath","headImg","getLabelSize","getPrefabNode","getScreenSize","getDesignResolutionSize","strIsContain","sourceStr","needStr","setHeadFrame","getStrLength","resetAnimation","setCurrentTime","findChildNode","isInt","numStr","beforeStr","VersionManager","manifestUrl","VersionManager_1","storagePath","fileUtils","getWritablePath","assetManager","AssetsManager","versionCompareHandle","setVerifyCallback","compressed","expectedMD5","relativePath","setMaxConcurrentTask","checkUpdate","versionCompare","versionA","versionB","vA","vB","localVer","remoteVer","updating","UNINITED","nativeUrl","md5Pipe","transformURL","loadLocalManifest","getLocalManifest","isLoaded","setEventCallback","checkCb","getEventCode","EventAssetsManager","ERROR_NO_LOCAL_MANIFEST","ERROR_DOWNLOAD_MANIFEST","ERROR_PARSE_MANIFEST","ALREADY_UP_TO_DATE","NEW_VERSION_FOUND","hotUpdate","updateCb","needRestart","failed","UPDATE_PROGRESSION","getMessage","downFiles","getDownloadedFiles","totalFiles","getTotalFiles","downBytes","getDownloadedBytes","totalBytes","getTotalBytes","UPDATE_FINISHED","UPDATE_FAILED","canRetry","ERROR_UPDATING","getAssetId","ERROR_DECOMPRESS","searchPaths","getSearchPaths","newPaths","setSearchPaths","restart","retry","downloadFailedAssets","ViewBase","_cacheComponent","arg0","component","WaterShader"],"mappings":"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","sourcesContent":["\r\nlet polyInst = null;\r\nif (!window.i18n) {\r\n    window.i18n = {\r\n        languages: {},\r\n        curLang: ''\r\n    };\r\n}\r\n\r\nif (CC_EDITOR) {\r\n\r\n\r\n    Editor.Profile.load('profile://project/i18n.json', (err, profile) => {\r\n        if (err)\r\n            cc.log(\"报错err:\" + err);\r\n        window.i18n.curLang = profile.data['default_language'];\r\n        if (polyInst) {\r\n            let data = loadLanguageData(window.i18n.curLang) || {};\r\n            initPolyglot(data);\r\n        }\r\n    });\r\n}\r\n\r\nfunction loadLanguageData(language) {\r\n    if (!language) {\r\n        if (window.i18n.curLang)\r\n            return LoadCurrentLanguageData(window.i18n.curLang)\r\n        else return;\r\n    }\r\n    if (!window.i18n.languages[language]) {\r\n        cc.log(\"！！！！！！！！！！！！！！！window.i18n.languages[language] 为空\");\r\n        window.i18n.languages[language] = LoadCurrentLanguageData(language);\r\n    }\r\n    return window.i18n.languages[language];\r\n}\r\n//新增读取\r\nfunction LoadCurrentLanguageData(language) {\r\n    const Fs = require('fs');\r\n    const Path = require(\"path\");\r\n    \r\n    let absolutePath = Path.join(Editor.Project.path, './packages/i18n/config/i18n/' + language + '.json');\r\n    //cc.log(\"absolutePath:\" + absolutePath);\r\n    // var data = {\r\n    //     \"hello\": \"Hello!\",\r\n    //     \"bye\": \"Bye\"\r\n    // }//\r\n    var data = Fs.readFileSync(absolutePath);\r\n    // if (data[0] === 0xEF && data[1] === 0xBB && data[2] === 0xBF) {\r\n    //     data = data.slice(3);\r\n    // }\r\n    // data = data.toString('utf-8');\r\n    // cc.log(data);\r\n    // var result = JSON.parse(data);\r\n    // //result = JSON.stringify(data);\r\n    // cc.log(\"新增读取\");\r\n    // cc.log(result);\r\n    return data;\r\n}\r\nfunction initPolyglot(data) {\r\n    if (data) {\r\n        //cc.log(\"data:\" + data);\r\n        if (polyInst) {\r\n            polyInst = data;\r\n        } else {\r\n            //cc.log(\"polyInst 对象的初始话：\"+polyInst);\r\n            polyInst = \"\";\r\n            polyInst = data;\r\n            //cc.log(\"初始化之后的polyInst：\"+polyInst);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    /**\r\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\r\n     * such as when language is 'zh', it will load your 'zh.js' data source.\r\n     * @method init\r\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\r\n     */\r\n    init(language) {\r\n        //cc.log(\"初始化....init(language):\" + language);\r\n        if (!language) {\r\n            cc.log(\"language 未定义\");\r\n            cc.log(\"window.i18n.curLang:\" + window.i18n.curLang);\r\n            // if (window.i18n.curLang)\r\n            //     language = window.i18n.curLang;\r\n            // else\r\n            //     return;\r\n        }\r\n        if (language === window.i18n.curLang) {\r\n            return;\r\n        }\r\n        let data = loadLanguageData(language) || {};\r\n        //data = JSON.parse(data);\r\n        cc.log(data);\r\n        //cc.log(\"打印出转换之后的json字串\");\r\n        cc.log(data);\r\n        window.i18n.curLang = language;\r\n        initPolyglot(data);\r\n        this.inst = polyInst;\r\n    },\r\n    parse(key) {\r\n        //cc.log(\"调用 t 方法key:\" + key );\r\n        // cc.log(\"polyInst:\"+polyInst);\r\n        if (polyInst[0] === 0xEF && polyInst[1] === 0xBB && polyInst[2] === 0xBF) {\r\n            polyInst =polyInst.slice(3);\r\n        }\r\n        polyInst = polyInst.toString('utf-8');\r\n        // cc.log(\"polyInst文字化:\"+polyInst);\r\n        var json = JSON.parse(polyInst);\r\n        if (json.hasOwnProperty(key))\r\n        {\r\n            cc.log(json[key]);\r\n            return json[key].toString();\r\n        }\r\n        else return \"未定义字段\";\r\n    },\r\n\r\n    inst: polyInst,\r\n    //更新检测 检测场景中所有的ULabel\r\n    updateSceneRenderers() { // very costly iterations\r\n        //cc.log(\"ConfigLanguageData....updateSceneRenderers\");\r\n        let rootNodes = cc.director.getScene().children;\r\n        // walk all nodes with localize label and update\r\n        let allLocalizedLabels = [];\r\n        for (let i = 0; i < rootNodes.length; ++i) {\r\n            let labels = rootNodes[i].getComponentsInChildren('ULabel');\r\n            Array.prototype.push.apply(allLocalizedLabels, labels);\r\n        }\r\n        // cc.log(\"更新000000000000000\");\r\n        // cc.log(\"更新检测 检测场景中所有的ULabel:\"+allLocalizedLabels.length);\r\n        for (let i = 0; i < allLocalizedLabels.length; ++i) {\r\n            let label = allLocalizedLabels[i];\r\n            // cc.log(\"!label.node.active:\"+!label.node.active)\r\n            // if (!label.node.active) continue;\r\n            label.updateLabel();\r\n        } \r\n    }\r\n};\r\n","\r\nconst { ccclass, menu, property, executeInEditMode, inspector } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/customRichText')\r\n@executeInEditMode\r\nexport default class CustomRichText extends cc.RichText {\r\n    @property({type: cc.Enum(cc.Label.Overflow)})\r\n    overflow: cc.Label.Overflow = cc.Label.Overflow.NONE\r\n\r\n    private _overflow: cc.Label.Overflow = cc.Label.Overflow.NONE\r\n    private _maxFragmentWidth: number = 0\r\n    protected _updateRichTextWithMaxWidth(labelString, labelWidth, styleIndex){        \r\n        if(this.overflow == cc.Label.Overflow.SHRINK){\r\n            this._updateRichTextWithMaxWidth_shrink(labelString, labelWidth, styleIndex)\r\n        }else{\r\n            super['_updateRichTextWithMaxWidth'](labelString, labelWidth, styleIndex)\r\n        }\r\n    }\r\n\r\n    protected _updateRichText(){    \r\n        this._maxFragmentWidth = 0    \r\n        super['_updateRichText']()\r\n        if(this.overflow == cc.Label.Overflow.SHRINK){\r\n            if(this.maxWidth > 0 && this._maxFragmentWidth > this.maxWidth){\r\n                this.node.scale = this.maxWidth / this._maxFragmentWidth\r\n            }else{\r\n                this.node.scale = 1\r\n            }            \r\n        }else{            \r\n            this.node.scale = 1\r\n        }\r\n    }\r\n\r\n    update(){\r\n        if(cc.sys.platform == cc.sys.EDITOR_PAGE){\r\n            this._updateEditor()\r\n        }        \r\n    }\r\n\r\n    //用于更新label的显示状态\r\n    private _updateEditor() {\r\n        if(this.overflow != this._overflow){\r\n            this._overflow = this.overflow\r\n            this['_updateRichText']()\r\n        }\r\n    }\r\n\r\n    protected _updateRichTextWithMaxWidth_shrink(labelString, labelWidth, styleIndex){\r\n        var fragmentWidth = labelWidth;\r\n        var labelSegment = void 0;\r\n        if (this['_lineOffsetX'] > 0 && fragmentWidth + this['_lineOffsetX'] > this.maxWidth) {        \r\n            var checkStartIndex = 0;\r\n            while (this['_lineOffsetX'] <= this.maxWidth) {\r\n                var checkEndIndex = this['_getFirstWordLen'](labelString, checkStartIndex, labelString.length);\r\n                var checkString = labelString.substr(checkStartIndex, checkEndIndex);\r\n                var checkStringWidth = this['_measureText'](styleIndex, checkString);\r\n                if (!(this['_lineOffsetX'] + checkStringWidth <= this.maxWidth)) {\r\n                if (checkStartIndex > 0) {\r\n                    var remainingString = labelString.substr(0, checkStartIndex);\r\n                    this['_addLabelSegment'](remainingString, styleIndex);\r\n                    labelString = labelString.substr(checkStartIndex, labelString.length);\r\n                    fragmentWidth = this['_measureText'](styleIndex, labelString);\r\n                }\r\n                this['_updateLineInfo']();\r\n                break;\r\n                }\r\n                this['_lineOffsetX'] += checkStringWidth;\r\n                checkStartIndex += checkEndIndex;                \r\n            }\r\n        }\r\n        if (fragmentWidth > this.maxWidth) {\r\n        //   var fragments = textUtils.fragmentText(labelString, fragmentWidth, this.maxWidth, this['_measureText'](styleIndex));\r\n        //   for (var k = 0; k < fragments.length; ++k) {\r\n        //     var splitString = fragments[k];\r\n        //     labelSegment = this['_addLabelSegment'](splitString, styleIndex);\r\n        //     var labelSize = labelSegment.getContentSize();\r\n        //     this['_lineOffsetX'] += labelSize.width;\r\n        //     fragments.length > 1 && k < fragments.length - 1 && this['_updateLineInfo']();\r\n        //   }\r\n            this['_lineOffsetX'] += fragmentWidth;\r\n            this['_addLabelSegment'](labelString, styleIndex);\r\n            this._maxFragmentWidth += fragmentWidth\r\n        } else {\r\n          this['_lineOffsetX'] += fragmentWidth;\r\n          this['_addLabelSegment'](labelString, styleIndex);\r\n        }        \r\n    }\r\n}","\r\nconst { ccclass, menu, property, inspector } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/customToggle')\r\n@inspector('packages://customtoggle-inspector/inspector.js')\r\nexport default class CustomToggle extends cc.Toggle {\r\n    @property(cc.Label)\r\n    targetLabel: cc.Label = null\r\n\r\n    @property(cc.Color)\r\n    selectedlColor: cc.Color = cc.Color.WHITE\r\n\r\n    @property(cc.Color)\r\n    unSelectedColor: cc.Color = cc.Color.RED\r\n\r\n\r\n    _updateCheckMark(){\r\n        super['_updateCheckMark']()\r\n        this.targetLabel && (this.targetLabel.node.color = this.isChecked? this.selectedlColor: this.unSelectedColor)\r\n    }\r\n\r\n}","\r\nconst { ccclass, property, menu, requireComponent, executeInEditMode } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Label)\r\n@menu('custom/GrayLable')\r\n@executeInEditMode\r\nexport default class GrayLable extends cc.Component{\r\n    \r\n    protected _originalNodeColor: cc.Color\r\n    protected _originalOutlineColor: cc.Color\r\n\r\n    protected onEnable(){\r\n        this._originalNodeColor = this.node.color\r\n        this.node.color = this.calcGrayColor(this.node.color)\r\n        let outLine = this.getComponent(cc.LabelOutline)\r\n        if(outLine){\r\n            this._originalOutlineColor = outLine.color\r\n            outLine.color = this.calcGrayColor(outLine.color)\r\n        }\r\n    }\r\n\r\n    protected onDisable(){\r\n        this.node.color = this._originalNodeColor\r\n        let outLine = this.getComponent(cc.LabelOutline)\r\n        if(outLine && this._originalOutlineColor){            \r\n            outLine.color = this._originalOutlineColor\r\n        }\r\n    }\r\n\r\n    protected calcGrayColor(srcColor: cc.Color){\r\n        let c = 0.299*srcColor.getR() + 0.587*srcColor.getG() + 0.184*srcColor.getB()\r\n        c = Math.min(255, c)\r\n        c = Math.max(0, c)\r\n        return new cc.Color(c, c, c, srcColor.getA())\r\n    }\r\n}\r\n","\r\n/**\r\n * 实现动态绑定的核心部分，\r\n * 每次修改属性值，都会调用对应函数，并且获取值的路径\r\n */\r\n\r\nconst OP = Object.prototype;\r\nconst types = {\r\n    obj: '[object Object]',\r\n    array: '[object Array]'\r\n}\r\nconst OAM = ['push', 'pop', 'shift', 'unshift', 'short', 'reverse', 'splice'];\r\n\r\n\r\n\r\n\r\n/**\r\n * 实现属性拦截的类\r\n */\r\nexport class JsonOb<T> {\r\n    constructor(obj:T, callback: (newVal: any, oldVal: any, pathArray: string[]) => void) {\r\n        if (OP.toString.call(obj) !== types.obj && OP.toString.call(obj) !== types.array) {\r\n            console.error('请传入一个对象或数组');\r\n        }\r\n        this._callback = callback;\r\n        this.observe(obj);\r\n    }\r\n\r\n    private _callback;\r\n    /**对象属性劫持 */\r\n    private observe<T>(obj: T, path?) {\r\n\r\n        if (OP.toString.call(obj) === types.array) {\r\n            this.overrideArrayProto(obj, path);\r\n        }\r\n\r\n        Object.keys(obj).forEach((key) => {\r\n            let self = this;\r\n            let oldVal = obj[key];\r\n            let pathArray = path && path.slice();\r\n            if (pathArray) {\r\n                pathArray.push(key);\r\n            }\r\n            else {\r\n                pathArray = [key];\r\n            }\r\n            Object.defineProperty(obj, key, {\r\n                get: function () {\r\n                    return oldVal;\r\n                },\r\n                set: function (newVal) {\r\n                    //cc.log(newVal);\r\n                    if (oldVal !== newVal) {\r\n                        if (OP.toString.call(newVal) === '[object Object]') {\r\n                            self.observe(newVal, pathArray);\r\n                        }\r\n                        self._callback(newVal, oldVal, pathArray)\r\n                        oldVal = newVal\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (OP.toString.call(obj[key]) === types.obj || OP.toString.call(obj[key]) === types.array) {\r\n                this.observe(obj[key], pathArray)\r\n            }\r\n\r\n        }, this)\r\n    }\r\n\r\n    /**\r\n     * 对数组类型进行动态绑定\r\n     * @param array \r\n     * @param path \r\n     */\r\n    private overrideArrayProto(array: any, path) {\r\n        // 保存原始 Array 原型  \r\n        var originalProto = Array.prototype;\r\n        // 通过 Object.create 方法创建一个对象，该对象的原型是Array.prototype  \r\n        var overrideProto = Object.create(Array.prototype);\r\n        var self = this;\r\n        var result;\r\n\r\n        // 遍历要重写的数组方法  \r\n        OAM.forEach((method) => {\r\n            Object.defineProperty(overrideProto, method, {\r\n                value: function () {\r\n                    var oldVal = this.slice();\r\n                    //调用原始原型上的方法  \r\n                    result = originalProto[method].apply(this, arguments);\r\n                    //继续监听新数组  \r\n                    self.observe(this, path);\r\n                    self._callback(this, oldVal, path);\r\n                    return result;\r\n                }\r\n            })\r\n        });\r\n        // 最后 让该数组实例的 __proto__ 属性指向 假的原型 overrideProto  \r\n        array['__proto__'] = overrideProto;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import UserDataManager from \"../../../../manager/user_manager\";\r\n\r\nexport module PdkUtils\r\n{\r\n    export enum ExtractType\r\n    {\r\n        CardType_error          = 0,//错误牌型\r\n        CardType_single         = 1,    //单牌\r\n        CardType_pair           = 2,    //对子\r\n        CardType_straight       = 3,    //顺子\r\n        CardType_straightPair   = 4,    //连对 \r\n        CardType_3Add2          = 5,    //三带二\r\n        CardType_airplane       = 6,    //飞机\r\n        CardType_4Add3          = 7,    //四带三\r\n        CardType_bomb           = 8,    //炸弹    \r\n    }\r\n\r\n    interface cardData {\r\n        type:ExtractType,\r\n        value:Array<number>;\r\n    }\r\n\r\n    /*深度克隆\r\n    */\r\n    export function clone(obj: any) {\r\n        // Handle the 3 simple types, and null or undefined\r\n        if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n        // Handle Date\r\n        if (obj instanceof Date) {\r\n            var copy = new Date();\r\n            copy.setTime(obj.getTime());\r\n            return copy;\r\n        }\r\n\r\n        // Handle Array\r\n        if (obj instanceof Array) {\r\n            let copy = [];\r\n            var len = obj.length;\r\n            for (var i = 0;i < len; ++i) {\r\n                copy[i] = clone(obj[i]);\r\n            }\r\n            return copy;\r\n        }\r\n\r\n        // Handle Object\r\n        if (obj instanceof Object) {\r\n            let copy = {};\r\n            for (var attr in obj) {\r\n                if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\r\n            }\r\n            return copy;\r\n        }\r\n\r\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n    }\r\n\r\n    //排序\r\n    export function getSortCard(bCardData:Array<number>,bUserCardCount:number)\r\n    {\r\n        if (bCardData == null) {\r\n            cc.error('getSortCard null');\r\n            return\r\n        }\r\n\r\n        let tableSortCard:{[key:number]:Array<Array<number>>} = {\r\n            [1]:[],\r\n            [2]:[],\r\n            [3]:[],\r\n            [4]:[],\r\n        };\r\n\r\n        let preValue = null;\r\n        let tableCard:Array<number> = [];\r\n        for (let key = 0; key < bUserCardCount; key++) {\r\n            let data = bCardData[key];\r\n            let value = data & 0x0F;\r\n            if (value == 1) {\r\n                value = 14;\r\n            }else if(value == 2){\r\n                value = 15;\r\n            }\r\n            if (preValue == null || preValue != value) {\r\n                let num = tableCard.length;\r\n                if (num > 0) {\r\n                    let tempArry = tableCard.slice();\r\n                    tableSortCard[num].unshift(tempArry);\r\n                }\r\n                preValue = value;\r\n                tableCard.length = 0;\r\n                tableCard.unshift(data);\r\n            }else{\r\n                tableCard.unshift(data);\r\n            }\r\n        }\r\n\r\n        let num = tableCard.length;\r\n        if (num > 0 && tableSortCard[num] ) {\r\n            let tempArry = tableCard.slice();\r\n            tableSortCard[num].unshift(tempArry);\r\n        }\r\n        return tableSortCard;\r\n    }\r\n\r\n    //牌型分析\r\n    export function  getCardTypeAndCard(bCardData:Array<number>,bUserCardCount:number):cardData\r\n     {\r\n        if (bUserCardCount<= 0) {\r\n            return {type:ExtractType.CardType_error,value:null};\r\n        }\r\n\r\n        let tableSortCard = getSortCard(bCardData,bUserCardCount);\r\n        if (bUserCardCount == 4 && tableSortCard[4].length == 1) {\r\n            //是否为炸弹\r\n            return {type:ExtractType.CardType_bomb,value:tableSortCard[4][0]};\r\n        }\r\n\r\n        if (bUserCardCount == 1 && tableSortCard[1].length == 1) {\r\n            //是否为单牌\r\n            return {type:ExtractType.CardType_single,value:tableSortCard[1][0]};\r\n        }\r\n\r\n        if (bUserCardCount == 2 && tableSortCard[2].length == 1) {\r\n            //是否为对子\r\n            return {type:ExtractType.CardType_pair,value:tableSortCard[2][0]};\r\n        }\r\n\r\n        if (bUserCardCount >= 5 && bUserCardCount == tableSortCard[1].length) {\r\n            //是否为顺子\r\n            let preValue = null;\r\n            let tableReturnCard :Array<number> = [];\r\n\r\n            for (let i = 0; i < tableSortCard[1].length; i++) {\r\n                let data = tableSortCard[1][i][0];\r\n                let value = data & 0x0f;\r\n                if (value == 1) {\r\n                    value = 14;\r\n                }\r\n                if (preValue == null || preValue + 1 == value) {\r\n                    tableReturnCard.push(data);\r\n                    preValue = value;\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (tableReturnCard.length == bUserCardCount) {\r\n                return {type:ExtractType.CardType_straight,value:tableReturnCard};\r\n            }\r\n        }\r\n\r\n        \r\n        if (bUserCardCount == tableSortCard[2].length * 2) {\r\n            //是否为连对\r\n            let preValue = null;\r\n            let tableReturnCard :Array<number> = [];\r\n            for (let i = 0; i < tableSortCard[2].length; i++) {\r\n                let data = tableSortCard[2][i][0];\r\n                let value = data & 0x0f;\r\n                if (value == 1) {\r\n                    value = 14;\r\n                }\r\n                if (preValue == null || preValue + 1 == value) {\r\n                    tableSortCard[2][i].forEach((value:number)=>{\r\n                        tableReturnCard.push(value);\r\n                    })\r\n                    preValue = value;\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (tableReturnCard.length == bUserCardCount) {\r\n                return {type:ExtractType.CardType_straightPair,value:tableReturnCard};\r\n            }\r\n        }\r\n\r\n        //是否为四带三\r\n        //炸弹是否可以拆\r\n\r\n        if (bUserCardCount >= 3 && bUserCardCount <= 5 && tableSortCard[3].length == 1) {\r\n            //是否为三带二\r\n            let tableReturnCard = tableSortCard[3][0].slice();\r\n            tableSortCard[3] = [];\r\n            for (let i = 1; i <5; i++){\r\n                let mc = tableSortCard[i];\r\n                for (let j = 0; j < mc.length; j++) {\r\n                    let mk = mc[j];\r\n                    for (let m = 0; m < mk.length; m++) {\r\n                        let v = mk[m];\r\n                        tableReturnCard.push(v);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (tableReturnCard.length == bUserCardCount) {\r\n                return {type:ExtractType.CardType_3Add2,value:tableReturnCard};\r\n            }\r\n        }\r\n\r\n        if (tableSortCard[3].length >= 2 && bUserCardCount >= tableSortCard[3].length * 3 && bUserCardCount <= tableSortCard[3].length * 5) {\r\n            //是否为飞机\r\n            let preValue = null;\r\n            let tableReturnCard:Array<number> = [];\r\n\r\n            for (let i = 0; i < tableSortCard[3].length; i++) {\r\n                let data = tableSortCard[3][i][0];\r\n                let value = data & 0x0f;\r\n                if (value == 1) {\r\n                    value = 14;\r\n                }else if(value == 2)\r\n                {\r\n                    value = 15;\r\n                }\r\n                if (preValue == null || preValue + 1 == value) {\r\n                    tableSortCard[3][i].forEach((value:number)=>{\r\n                        tableReturnCard.push(value);\r\n                    })\r\n                    preValue = value;\r\n                }else{\r\n                    if (tableReturnCard.length / 3 < 2) {\r\n                        tableReturnCard = [];\r\n                        tableSortCard[3][i].forEach((value:number)=>{\r\n                            tableReturnCard.push(value);\r\n                        })\r\n                        preValue = value;\r\n                    }else{\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let count = tableReturnCard.length / 3;\r\n            if (count >= 2) {\r\n                tableReturnCard.forEach((value:number)=>{\r\n                    let isFound = false;\r\n\r\n                    for (let i = 0; i < tableSortCard[3].length; i++) {\r\n                            let chilArry = tableSortCard[3][i];\r\n                            for (let j = 0; j < chilArry.length; j++) {\r\n                                let key = chilArry[j];\r\n                                if (value == key) {\r\n                                    chilArry.splice(j,1);\r\n                                    isFound = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (isFound) {\r\n                                break;\r\n                            }\r\n                    }\r\n                })\r\n\r\n                for (let i = 1; i < 5; i++) {\r\n                    let m = tableSortCard[i];\r\n                    for (let j = 0; j < m.length; j++) {\r\n                        let childArry = m[j];\r\n                        for (let k = 0; k < childArry.length; k++) {\r\n                            let value = childArry[k];\r\n                            tableReturnCard.push(value);\r\n                            if (tableReturnCard.length % (count * 5) == 0) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (tableReturnCard.length % (count * 5) == 0) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (tableReturnCard.length == bUserCardCount) {\r\n                    return {type:ExtractType.CardType_airplane,value:tableReturnCard};\r\n                }\r\n            }\r\n        }\r\n        return {type:ExtractType.CardType_error,value:null};\r\n    }\r\n\r\n    //提取牌型\r\n    export function getExtractCardType(bCardData:Array<number>,bUserCardCount:number,bTargetCardData:Array<number>,bTargetUserCardCount:number):{[key:number]:Array<Array<number>>} {\r\n         let tableCard:{[key:number]:Array<Array<number>>}={};\r\n         if (bUserCardCount <= 0) {\r\n             return tableCard;\r\n         }\r\n         let tableSortCard = getSortCard(bCardData,bUserCardCount);\r\n         let targetType = null;\r\n         let targetCardData = null;\r\n         if (bTargetUserCardCount != null && bTargetUserCardCount > 0) {\r\n             let cardData = getCardTypeAndCard(bTargetCardData,bTargetUserCardCount); \r\n             targetType = cardData.type;\r\n             targetCardData = cardData.value;\r\n         }\r\n         let targetValue = 0;\r\n         if (targetCardData != null) {\r\n             targetValue = targetCardData[0] & 0x0F;\r\n         }\r\n\r\n         if (targetValue == 1) {\r\n             targetValue = 14;\r\n         }else if(targetValue == 2){\r\n             targetValue = 15;\r\n         }\r\n\r\n         let _index = 0;\r\n         let pushData = function (data:number|Array<number>,isArry:boolean = false) {\r\n            if (!tableCard[_index]) {\r\n                tableCard[_index] = [];\r\n            }\r\n            if (isArry) {\r\n                tableCard[_index].push(<Array<number>>data);\r\n            }else{\r\n                tableCard[_index].push([<number>data]);\r\n            }\r\n            _index++;\r\n        }\r\n\r\n        if (targetType == ExtractType.CardType_single) {\r\n            //let gameConfig = pdkData.roomCfg;\r\n            let wPlayerCount = UserDataManager.instance.mPlayerCount;\r\n            let meChairID = UserDataManager.instance.mChairID;\r\n            //let xiajia = (meChairID+1)%wPlayerCount;//bug\r\n            if (0 == 0) {//放跑包赔\r\n                let maxValue = null;\r\n                let maxData = null;\r\n                for (let i = 1; i < 5; i++) {\r\n                    let cardArry = tableSortCard[i];\r\n                    for (let j = 0; j < cardArry.length; j++) {\r\n                         let dataArr = cardArry[j];\r\n                         if (dataArr.length < 4) {\r\n                             let value = dataArr[0] & 0x0F;\r\n                             if (value == 1) {\r\n                                 value = 14;\r\n                             }else if(value == 2)\r\n                             {\r\n                                 value = 15;\r\n                             }\r\n                             if (value > targetValue && (maxValue==null || value > maxValue)) {\r\n                                 maxValue = value;\r\n                                 maxData = dataArr[0];\r\n                             }\r\n                         }\r\n                        \r\n                    }\r\n                    \r\n                }\r\n\r\n                if (maxValue) {\r\n                    pushData(maxData);\r\n                }\r\n            }\r\n            else{\r\n                //提取单张\r\n                let tableSortCardTemp = clone(tableSortCard);\r\n\r\n                for (let i = 0; i < tableSortCardTemp[1].length; i++) {\r\n                    let arr = tableSortCardTemp[1][i];\r\n                    let value = arr[0] & 0x0F;\r\n                    if (value == 1) {\r\n                        value = 14;\r\n                    }else if(value == 2){\r\n                        value = 15;\r\n                    }\r\n                    if (value > targetValue) {\r\n                        pushData(arr[arr.length-1]);\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < tableSortCardTemp[2].length; i++) {\r\n                    let arr = tableSortCardTemp[2][i];\r\n                    let value = arr[0] & 0x0F;\r\n                    if (value == 1) {\r\n                        value = 14;\r\n                    }else if(value == 2){\r\n                        value = 15;\r\n                    }\r\n                    if (value > targetValue) {\r\n                        pushData(arr[arr.length-1]);\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < tableSortCardTemp[3].length; i++) {\r\n                    let arr = tableSortCardTemp[3][i];\r\n                    let value = arr[0] & 0x0F;\r\n                    if (value == 1) {\r\n                        value = 14;\r\n                    }else if(value == 2){\r\n                        value = 15;\r\n                    }\r\n                    if (value > targetValue) {\r\n                        pushData(arr[arr.length-1]);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        \r\n        if (targetType == ExtractType.CardType_pair) {\r\n            //提取对子\r\n            let tableSortCardTemp = clone(tableSortCard);\r\n            for (let i = 0; i < tableSortCardTemp[2].length; i++) {\r\n                let arr = tableSortCardTemp[2][i];\r\n                let value = arr[0] & 0x0F;\r\n                if (value == 1) {\r\n                    value = 14;\r\n                }else if(value == 2){\r\n                    value = 15;\r\n                }\r\n                if (value > targetValue) {\r\n                    pushData(arr,true);\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < tableSortCardTemp[3].length; i++) {\r\n                let arr = tableSortCardTemp[3][i];\r\n                let value = arr[0] & 0x0F;\r\n                if (value == 1) {\r\n                    value = 14;\r\n                }else if(value == 2){\r\n                    value = 15;\r\n                }\r\n                if (value > targetValue) {\r\n                    arr.splice(0,1);\r\n                    pushData(arr,true);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (targetType == null || targetType == ExtractType.CardType_straight) {\r\n            //--提取顺子\r\n            //--排序\r\n            let tableSortCardTemp = []\r\n\r\n            for (let i = 1; i < 5; i++) {\r\n                let cardArry = tableSortCard[i];\r\n\r\n                for (let j = 0; j < cardArry.length; j++) {\r\n                     let dataArr = cardArry[j];\r\n\r\n                     if (dataArr.length < 4) {\r\n                         let value = dataArr[0] & 0x0F;\r\n                         if (value == 1) {\r\n                             value = 14;\r\n                         }else if(value == 2)\r\n                         {\r\n                             value = 15;\r\n                         }\r\n                         tableSortCardTemp[value] = dataArr[dataArr.length-1];\r\n                     }\r\n                }\r\n            }\r\n\r\n            tableSortCardTemp[15] = null;\r\n            cc.log('xx',tableSortCardTemp);\r\n            let targetMinValue = 3;\r\n            if (targetCardData != null) {\r\n                targetMinValue = targetCardData[0] & 0x0F;\r\n                if (targetMinValue == 1) {\r\n                    targetMinValue = 14;\r\n                }else if (targetMinValue == 2) {\r\n                    targetMinValue = 15;\r\n                }\r\n                targetMinValue = targetMinValue + 1;\r\n\r\n                for (let i = targetMinValue; i <= 14; i++) {\r\n                    let tableReturnCard:Array<number> = [];\r\n                    for (let j = 0; j < targetCardData.length; j++) {\r\n                        if (tableSortCardTemp[i+j] != null) {\r\n                            tableReturnCard.push(tableSortCardTemp[i+j]);\r\n                        }else{\r\n                            break;\r\n                        }\r\n                        \r\n                    }\r\n\r\n                    if (tableReturnCard.length == targetCardData.length) {\r\n                        pushData(tableReturnCard,true);\r\n                    }\r\n                    \r\n                }\r\n            }else{\r\n                let tableReturnCard:Array<number> = [];\r\n                for (let i = 0; i <= 15; i++) {\r\n                    cc.log('xxx',tableSortCardTemp[i])\r\n                    if (tableSortCardTemp[i] != null) {\r\n                        tableReturnCard.push(tableSortCardTemp[i]);\r\n                    }else{\r\n                        if (tableReturnCard.length >= 5) {\r\n                            pushData(tableReturnCard,true);\r\n                        }\r\n                        tableReturnCard = [];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (targetType == null || targetType == ExtractType.CardType_straightPair ) {\r\n            //提取连队 排序\r\n            let tableSortCardTemp = {};\r\n            for (let i = 1; i < 5; i++) {\r\n                let cardArry = tableSortCard[i];\r\n                for (let j = 0; j < cardArry.length; j++) {\r\n                     let dataArr = cardArry[j];\r\n                     if (dataArr.length < 4 && dataArr.length >=2) {\r\n                         let value = dataArr[0] & 0x0F;\r\n                         if (value == 1) {\r\n                             value = 14;\r\n                         }else if(value == 2)\r\n                         {\r\n                             value = 15;\r\n                         }\r\n                         tableSortCardTemp[value] = [dataArr[dataArr.length-2],dataArr[dataArr.length-1]];\r\n                         cc.log('=>>',tableSortCardTemp);\r\n                     }\r\n                }\r\n            }\r\n\r\n            tableSortCardTemp[15] = null;\r\n\r\n            let targetMinValue = 3;\r\n            if (targetCardData != null) {\r\n                targetMinValue = targetCardData[0] & 0x0f;\r\n                if (targetMinValue == 1) {\r\n                    targetMinValue = 14;\r\n                }else if (targetMinValue == 2) {\r\n                    targetMinValue = 15;\r\n                }\r\n                targetMinValue = targetMinValue + 1;\r\n            }\r\n            if (targetCardData != null) {\r\n                for (let i = targetMinValue; i <= 14; i++) {\r\n                    let tableReturnCard = [];\r\n                    for (let j = 0; j <= targetCardData.length * 0.5 - 1; j++) {\r\n                        if (tableSortCardTemp[i+j] != null\r\n                            && tableSortCardTemp[i+j].length >= 2\r\n                            && tableSortCardTemp[i+j].length <= 3) {\r\n                                let value = tableSortCardTemp[i+j][tableSortCardTemp[i+j].length-1];\r\n                                tableReturnCard.push(value);\r\n                                value = tableSortCardTemp[i+j][tableSortCardTemp[i+j].length-2];\r\n                                tableReturnCard.push(value);\r\n                        }else{\r\n                            break;\r\n                        }\r\n\r\n                        if (tableReturnCard.length == targetCardData.length) {\r\n                            pushData(tableReturnCard,true);\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                let tableReturnCard = [];\r\n                for (let i = 0; i < 15; i++) {\r\n                    if (tableSortCardTemp[i] != null\r\n                        && tableSortCardTemp[i].length >= 2\r\n                        && tableSortCardTemp[i].length <= 3) {\r\n                            let value = tableSortCardTemp[i][tableSortCardTemp[i].length-1];\r\n                            tableReturnCard.push(value);\r\n                            value = tableSortCardTemp[i][tableSortCardTemp[i].length-2];\r\n                            tableReturnCard.push(value);\r\n                    }else{\r\n                        if (tableReturnCard.length >= 4 && tableReturnCard.length % 2 == 0) {\r\n                            pushData(tableReturnCard,true);\r\n                        }\r\n                        tableReturnCard = [];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        //提取3带2\r\n        if (targetType == null || targetType == ExtractType.CardType_3Add2) {\r\n            let tableSortCardTemp = clone(tableSortCard);\r\n            for (let i = 0; i < tableSortCardTemp[3].length; i++) {\r\n                let arr = tableSortCardTemp[3][i];\r\n                let value = arr[0] & 0x0F;\r\n                if (value == 1) {\r\n                    value = 14;\r\n                }else if(value == 2){\r\n                    value = 15;\r\n                }\r\n                if (value > targetValue) {\r\n                    let tableReturnCard = <Array<number>>clone(arr);\r\n                    if (tableReturnCard.length%5 != 0) {\r\n                        for (let j = 0; j < tableSortCardTemp[1].length; j++) {\r\n                            let varry = tableSortCardTemp[1][j];\r\n                            for (let index = 0; index < varry.length; index++) {\r\n                                tableReturnCard.push(varry[index]);\r\n                                if (tableReturnCard.length % 5 == 0) {\r\n                                    break;\r\n                                }                                \r\n                            }\r\n                            if (tableReturnCard.length % 5 == 0) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (tableReturnCard.length%5 != 0) {\r\n                        for (let i = 0; i < tableSortCardTemp[2].length; i++) {\r\n                            for (let j = 0; j < tableSortCardTemp[2][i].length; j++) {\r\n                                tableReturnCard.push(tableSortCardTemp[2][i][j]);\r\n                                if (tableReturnCard.length % 5 == 0) {\r\n                                    break;\r\n                                }  \r\n                            }\r\n                            if (tableReturnCard.length % 5 == 0) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (tableReturnCard.length%5 != 0) {\r\n                        for (let i = 0; i < tableSortCardTemp[3].length; i++) {\r\n                            let v = tableSortCardTemp[3][i];\r\n                           let value1 = v[0] & 0x0f;\r\n                           if (value1 == 1) {\r\n                                value1 = 14;\r\n                           }else if (value1 == 2) {\r\n                                value1 = 15;\r\n                           }\r\n                           if (value != value1) {\r\n                               for (let j = 0; j < v.length; j++) {\r\n                                   let vVar = v[j];\r\n                                   tableReturnCard.push(vVar);\r\n                                   if (tableReturnCard.length % 5 == 0) {\r\n                                       break;\r\n                                   }\r\n                               }\r\n                               if (tableReturnCard.length % 5 == 0) {\r\n                                    break;\r\n                                }\r\n                           }\r\n                        }\r\n                    }\r\n\r\n                    if (targetCardData == null || (targetCardData != null && tableReturnCard.length == targetCardData.length\r\n                        || (tableReturnCard.length  == bUserCardCount&& bUserCardCount >= 3))) {\r\n                            pushData(tableReturnCard,true);\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        //提取4带3\r\n        if ((targetType == ExtractType.CardType_4Add3)) {\r\n            let tableSortCardTemp = clone(tableSortCard);\r\n            for (let i = 0; i < tableSortCardTemp[3].length; i++) {\r\n                let v = tableSortCardTemp[3][i];\r\n                let value = v[0] & 0x0f;\r\n                if (value == 1) {\r\n                    value = 14;\r\n                }else if (value == 2) {\r\n                    value = 15;\r\n                }\r\n                if (value > targetValue) {\r\n                    let tableReturnCard = <Array<number>>clone(v);\r\n                    if (tableReturnCard.length % 7 != 0) {\r\n                        for (let j = 0; j < tableSortCardTemp[0].length; j++) {\r\n                            let arr = tableSortCardTemp[0][j];\r\n                            for (let k = 0; k < arr.length; k++) {\r\n                                let vvar = arr[k];\r\n                                tableReturnCard.push(vvar);\r\n                                if (tableReturnCard.length % 7 == 0) {\r\n                                    break;\r\n                                }                          \r\n                            }\r\n                            if (tableReturnCard.length % 7 == 0) {\r\n                                break;\r\n                            }   \r\n                        }\r\n                    }\r\n\r\n                    if (tableReturnCard.length % 7 != 0) {\r\n                        for (let j = 0; j < tableSortCardTemp[1].length; j++) {\r\n                            let arr = tableSortCardTemp[0][j];\r\n                            for (let k = 0; k < arr.length; k++) {\r\n                                let vvar = arr[k];\r\n                                tableReturnCard.push(vvar);\r\n                                if (tableReturnCard.length % 7 == 0) {\r\n                                    break;\r\n                                }                          \r\n                            }\r\n                            if (tableReturnCard.length % 7 == 0) {\r\n                                break;\r\n                            }   \r\n                        }\r\n                    }\r\n\r\n                    if (tableReturnCard.length % 7 != 0) {\r\n                        for (let j = 0; j < tableSortCardTemp[2].length; j++) {\r\n                            let arr = tableSortCardTemp[0][j];\r\n                            for (let k = 0; k < arr.length; k++) {\r\n                                let vvar = arr[k];\r\n                                tableReturnCard.push(vvar);\r\n                                if (tableReturnCard.length % 7 == 0) {\r\n                                    break;\r\n                                }                          \r\n                            }\r\n                            if (tableReturnCard.length % 7 == 0) {\r\n                                break;\r\n                            }   \r\n                        }\r\n                    }\r\n\r\n                    if (targetCardData == null\r\n                        || (targetCardData != null && tableReturnCard.length == targetCardData.length)) {\r\n                        pushData(tableReturnCard,true);                            \r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //提取飞机\r\n        if (targetType == null || targetType == ExtractType.CardType_airplane) {\r\n            let tableSortCardTemp = [];\r\n            for (let i = 1; i < 5; i++) {\r\n                let cardArry = tableSortCard[i];\r\n                for (let j = 0; j < cardArry.length; j++) {\r\n                     let dataArr = cardArry[j];\r\n                     if (dataArr.length < 4 ) {\r\n                         let value = dataArr[0] & 0x0F;\r\n                         if (value == 1) {\r\n                             value = 14;\r\n                         }else if(value == 2)\r\n                         {\r\n                             value = 15;\r\n                         }\r\n                         tableSortCardTemp[value] = clone(dataArr);\r\n                     }\r\n                }\r\n            }\r\n\r\n            tableSortCardTemp[15] = null;\r\n\r\n            let targetMinValue = 3;\r\n            if (targetCardData != null) {\r\n                targetMinValue = targetCardData[0] & 0x0f;\r\n                if (targetMinValue == 1) {\r\n                    targetMinValue = 14;\r\n                }else if (targetMinValue == 2) {\r\n                    targetMinValue = 15;\r\n                }\r\n                targetMinValue = targetMinValue + 1;\r\n            }\r\n            if (targetCardData != null) {\r\n                let count = targetCardData.length / 5;\r\n                for (let i = targetMinValue; i <= 14; i++) {\r\n                    let tableReturnCard = [];\r\n                    let table3SameValue = [];\r\n                    let isAirplane = true;\r\n                    for (let j = 0; j < count - 1; j++) {\r\n                        if (tableSortCardTemp[i+j] != null\r\n                            && tableSortCardTemp[i+j].length == 3) {\r\n                                table3SameValue[i+j] = true;\r\n                                for (let k = 0; k < tableSortCardTemp[i+j].length; k++) {\r\n                                    let var1 = tableSortCardTemp[i+j][k];\r\n                                    tableReturnCard.push(var1);\r\n                                }\r\n                        }else{\r\n                            isAirplane = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (isAirplane == true) {\r\n                        \r\n                        for (let i = 0; i < tableSortCard[1].length; i++) {\r\n                            let var1 = tableSortCard[1][i];\r\n                            for (let j = 0; j < var1.length; j++) {\r\n                                let v = var1[j];\r\n                                tableReturnCard.push(v);\r\n                                if (tableReturnCard.length % (count * 5) == 0) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (tableReturnCard.length %(count * 5) == 0) {\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (tableReturnCard.length % (count * 5) != 0) {\r\n                            for (let i = 0; i < tableSortCard[2].length; i++) {\r\n                                let arryT = tableSortCard[2][i];\r\n                                for (let j = 0; j < arryT.length; j++) {\r\n                                    let v = arryT[j];\r\n                                    tableReturnCard.push(v);\r\n                                    if (tableReturnCard.length %(count * 5) == 0) {\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (tableReturnCard.length %(count * 5) == 0) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (tableReturnCard.length %(count * 5) != 0) {\r\n                            for (let i = 0; i < tableSortCard[3].length; i++) {\r\n                                let value1 = tableSortCard[3][i];\r\n                                let value = value1[0] & 0x0f;\r\n                                if (value == 2) {\r\n                                    value = 14;\r\n                                }else if (value == 2) {\r\n                                    value = 15;\r\n                                }\r\n                                if (table3SameValue[value] == null) {\r\n                                    for (let k = 0; k < value1.length; k++) {\r\n                                        let v = value1[k];\r\n                                        tableReturnCard.push(v);\r\n                                        if (tableReturnCard.length %(count * 5) == 0) {\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    if (tableReturnCard.length %(count * 5) == 0) {\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        pushData(tableReturnCard,true);\r\n                    }\r\n                }\r\n            }else{\r\n                let tableReturnCard = [];\r\n                let table3SameValue = [];\r\n                for (let i = 0; i < 15; i++) {\r\n                    if (tableSortCardTemp[i] != null\r\n                        && tableSortCardTemp[i].length == 3) {\r\n                            table3SameValue[i] = true;\r\n                            for (let j = 0; j < tableSortCardTemp[i].length; j++) {\r\n                                let v = tableSortCardTemp[i][j];\r\n                                tableReturnCard.push(v);\r\n                            }\r\n                    }else{\r\n                        if (tableReturnCard.length >= 6) {\r\n                            let count = tableReturnCard.length / 3;\r\n\r\n                            if (tableReturnCard.length % (count * 5) != 0) {\r\n                                for (let i = 0; i < tableSortCard[1].length; i++) {\r\n                                    let arryT = tableSortCard[1][i];\r\n                                    for (let j = 0; j < arryT.length; j++) {\r\n                                        let v = arryT[j];\r\n                                        tableReturnCard.push(v);\r\n                                        if (tableReturnCard.length %(count * 5) == 0) {\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    if (tableReturnCard.length %(count * 5) == 0) {\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (tableReturnCard.length % (count * 5) != 0) {\r\n                                for (let i = 0; i < tableSortCard[2].length; i++) {\r\n                                    let arryT = tableSortCard[2][i];\r\n                                    for (let j = 0; j < arryT.length; j++) {\r\n                                        let v = arryT[j];\r\n                                        tableReturnCard.push(v);\r\n                                        if (tableReturnCard.length %(count * 5) == 0) {\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    if (tableReturnCard.length %(count * 5) == 0) {\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n    \r\n                            if (tableReturnCard.length %(count * 5) != 0) {\r\n                                for (let i = 0; i < tableSortCard[3].length; i++) {\r\n                                    let value1 = tableSortCard[3][i];\r\n                                    let value = value1[0] & 0x0f;\r\n                                    if (value == 2) {\r\n                                        value = 14;\r\n                                    }else if (value == 2) {\r\n                                        value = 15;\r\n                                    }\r\n                                    if (table3SameValue[value] == null) {\r\n                                        for (let k = 0; k < value1.length; k++) {\r\n                                            let v = value1[k];\r\n                                            tableReturnCard.push(v);\r\n                                            if (tableReturnCard.length %(count * 5) == 0) {\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        if (tableReturnCard.length %(count * 5) == 0) {\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            pushData(tableReturnCard,true);\r\n\r\n                        }\r\n                        tableReturnCard = [];\r\n                        table3SameValue = [];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //提取炸弹\r\n        if (targetType == null || targetType != ExtractType.CardType_bomb) {\r\n            targetValue = 0;\r\n        }\r\n\r\n        let tableSortCardTemp = clone(tableSortCard);\r\n        cc.log('xx',tableSortCardTemp)\r\n        for (let i = 0; i < tableSortCardTemp[4].length; i++) {\r\n            let v = tableSortCardTemp[4][i];\r\n            let value = v[0] & 0x0F;\r\n            if (value == 1) {\r\n                value = 14;\r\n            }else if (value == 2) {\r\n                value = 15;\r\n            }\r\n            if (value > targetValue) {\r\n                pushData(v,true);\r\n            }\r\n        }\r\n        //@ts-ignore\r\n        tableCard._index = _index;\r\n        return tableCard;\r\n    }\r\n}","//定义一个全局的函数,供JAVA调用\r\n//jsonString可能是JSONObject，可直接使用\r\n//jsonString格式如下。functionName要调用的函数的名称，params传递过去的参数\r\n// {\r\n//     \"functionName\":\"onExitGame\",\r\n//     \"params\":{\r\n//          \"paramName1\":1,\r\n//          \"paramName2\":\"xxx\"\r\n//     }\r\n// }\r\n\r\nwindow.onGetPlatformMsg = (jsonString) =>\r\n{\r\n    //业务逻辑\r\n    console.log(\"receive message from JAVA:\" + jsonString)\r\n    var jsonObj = jsonString\r\n    if (typeof(jsonString) == \"string\") \r\n    {\r\n        jsonObj = JSON.parse(jsonString);\r\n    }\r\n    if(window.onHandlerPlatformMsg != null)\r\n    {\r\n        window.onHandlerPlatformMsg(jsonObj);//onHandlerPlatformMsg函数在SdkHandler.ts中注册了\r\n    }else\r\n    {\r\n        console.log(\"onHandlerPlatformMsg未注册\")\r\n    }\r\n\r\n}\r\n","import { GameManager } from \"../manager/game_manager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SdkHandler{\r\n\r\n    constructor()\r\n    {\r\n        //此函数会在SdkBridge.js中调用，可以忽略这里的警告\r\n        //@ts-ignore\r\n        window.onHandlerPlatformMsg = (jsonObj)=>\r\n        {\r\n            var functionName = jsonObj.functionName\r\n            console.log(\"functionName:\" + functionName);\r\n            if(functionName == \"onExitGame\")\r\n            {\r\n                //关闭游戏\r\n            }else if(functionName == \"preLoadGame\")\r\n            {\r\n                //TO DO:预加载游戏\r\n            }else if(functionName == \"onHideGame\")\r\n            {\r\n                //TO DO:游戏最小化或者最大化要做的事\r\n                var isHideGame = jsonObj.params.isHide //隐藏或者重新显示\r\n                console.log(\"receive message isHideGame:\" + isHideGame);\r\n            }else if(functionName == \"onChangeGame\")\r\n            {\r\n                var gameName = jsonObj.params.gameName; \r\n                GameManager.changeGame(gameName)\r\n            }\r\n            else\r\n            {\r\n                console.log(\"receive message :\" + functionName + \", but the function unuse\");\r\n            }\r\n        }\r\n    }\r\n}\r\n","window.sdkInterface = {\r\n    //js向java发送消息\r\n    //jsonString格式如下。functionName要调用的函数的名称，params传递过去的参数\r\n    // {\r\n    //     \"functionName\":\"exitGame\",\r\n    //     \"params\":{\r\n    //          \"param1\":1,\r\n    //          \"param2\":\"xxx\"\r\n    //     }\r\n    // }\r\n    SDKCall : function(jsonString)\r\n    {\r\n        //js调用JAVA\r\n        //通过window.prompt即可与java通信,仅处理第二个参数为\"JsCallPlatform\"的消息\r\n        //JsCallPlatform禁止修改。\r\n        var result = window.prompt(jsonString,\"JsCallPlatform\");\r\n        console.log(\"SDKCall result:\" + result);\r\n        return result;\r\n    },\r\n\r\n    EnterGame : function()\r\n    {\r\n        var jsonObj = {\r\n            \"functionName\":\"enterGame\",\r\n            \"params\":\"\"\r\n        }\r\n        var jsonString = JSON.stringify(jsonObj);\r\n        return sdkInterface.SDKCall(jsonString);\r\n    },\r\n\r\n    ExitGame : function()\r\n    {\r\n        var jsonObj = {\r\n            \"functionName\":\"exitGame\",\r\n            \"params\":\"\"\r\n        }\r\n        var jsonString = JSON.stringify(jsonObj);\r\n        return sdkInterface.SDKCall(jsonString);\r\n    },\r\n    //震动(time震动时间：毫秒)\r\n    vibratePhone : function(time)\r\n    {\r\n        console.log(\"vibratePhone\")\r\n        var paramObj = {\r\n            \"time\":time\r\n        }\r\n        var jsonObj = {\r\n            \"functionName\":\"vibrate\",\r\n            \"params\":paramObj\r\n        }\r\n        var jsonString = JSON.stringify(jsonObj);\r\n        return sdkInterface.SDKCall(jsonString);\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n","import LoaclStorage from \"../manager/local_storage\";\r\n\r\n\r\nexport default class SdkStorage{\r\n\r\n\r\n    public static loginType;\r\n\r\n    static setLoginToken(value : any){\r\n        \r\n        LoaclStorage.setItem(this.loginType,value);\r\n    }\r\n\r\n    static getLoginToken(key : string){\r\n\r\n        return LoaclStorage.getItem(key);\r\n    }\r\n\r\n    static clearLoginToken(){\r\n\r\n        LoaclStorage.delete(this.loginType);\r\n    }\r\n}\r\n","\r\nString.prototype.format = function(args) {\r\n    let result = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        if (arguments[i] != undefined) {\r\n            let reg= new RegExp(\"({)\" + i + \"(})\", \"g\");\r\n            result = result.replace(reg, arguments[i]);\r\n        }\r\n    }\r\n\t// 一定要转回去字符串，否则这里是一个StringObject\r\n    return result.toString();\r\n};","const configLanguageData = require('./ConfigLanguageData');\r\n// const uiLabel = require('../uiextend/ULabel.js');\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nfunction debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return function () {\r\n\r\n        var context = this, args = arguments;\r\n        //cc.log(\"this:\" + this + \",args:\" + arguments + \",\" + \"context:\" + context);\r\n        var later = function () {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    };\r\n}\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        executeInEditMode: true,\r\n        menu: 'UI/TLabel'\r\n    },\r\n    // properties:\r\n    // {\r\n    //     uiLabel: {\r\n    //         get() {\r\n    //             return this.getComponent(\"ULabel\");\r\n    //         },\r\n    //     }\r\n    // },\r\n    properties: {\r\n        ULabelKey: {\r\n            get() {\r\n                return this._ulabelKey;\r\n            },\r\n            set(val) {\r\n                let ulabel = this.getComponent(\"ULabel\");\r\n                if (ulabel) {\r\n                    ulabel.i18nKey = this._ulabelKey;\r\n                }\r\n                if (this._ulabelKey !== val) {\r\n                    this._ulabelKey = val;\r\n                    if (ulabel) {\r\n                        if (CC_EDITOR) {\r\n                            if (!this._debouncedUpdateLabel) {\r\n                                this._debouncedUpdateLabel = debounce(this.updateULabel, 200);\r\n                            }\r\n                            this._debouncedUpdateLabel();\r\n                        }\r\n                        // else {\r\n                        //     this.updateLabel();\r\n                        // }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _ulabelKey: ''\r\n    },\r\n\r\n    onLoad() {\r\n        //cc.log(\"cc.log(UILabel):\"+UILabel);\r\n        if (CC_EDITOR) {\r\n            let ulabel = this.getComponent(\"ULabel\");\r\n            if (ulabel && ulabel.i18nKey != \"\")\r\n                this._debouncedUpdateLabel = debounce(this.updateULabel, 200);\r\n        }\r\n        if (!configLanguageData.inst) {\r\n            configLanguageData.init();\r\n        }\r\n\r\n        //cc.log('dataID: ' + this.dataID + ' value: ' + i18n.t(this.dataID));\r\n        this.fetchRender();\r\n    },\r\n    fetchRender() {\r\n        //cc.log(\"fetchRender...\");\r\n        let label = this.getComponent(cc.Label);\r\n        //uiLabel.onChangeLanguage();\r\n        //cc.log(\"this.parent:\" + uiLabel);\r\n\r\n        let ulabel = this.getComponent(\"ULabel\");\r\n        if (ulabel)\r\n            ulabel.i18nKey = this._ulabelKey;\r\n        //ulabel.i18nKey = \"123\"\r\n        //cc.log(\"ulabel.i18nKey\" + ulabel.i18nKey);\r\n        //cc.log(\"sdk:\"+require('SdkBridge'));\r\n        if (label && ulabel) {\r\n            this.label = label;\r\n            this.updateULabel();\r\n            return;\r\n        }\r\n    },\r\n\r\n    updateULabel() {\r\n        let ulabel = this.getComponent(\"ULabel\");\r\n        if(ulabel)\r\n        ulabel.i18nKey = this._ulabelKey;\r\n        if (!this.label) {\r\n            this.label = this.getComponent(cc.Label);\r\n        }\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        if (!ulabel) {\r\n            cc.error('Failed to update localized ULabel, ULabel component is invalid!');\r\n            return;\r\n        }\r\n        //在这里修改读取json文件的类容\r\n        let localizedString = configLanguageData.parse(ulabel.i18nKey);\r\n        if (localizedString) {\r\n            this.label.string = configLanguageData.parse(ulabel.i18nKey);\r\n        }\r\n    }\r\n});","import { ENGINE_METHOD_NONE } from \"constants\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ToggleObjectContral extends cc.Component {\r\n\r\n    @property([cc.Node])\r\n    activeTab: cc.Node[] = [];\r\n\r\n    @property([cc.Node])\r\n    deActiveTab: cc.Node[] = [];\r\n\r\n    @property(cc.Toggle)\r\n    _toggle: cc.Toggle = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        if (this._toggle == null) {\r\n            this._toggle = this.getComponent(cc.Toggle);\r\n        }\r\n\r\n        this._toggle.node.on('toggle', function (event: cc.Toggle) {\r\n            let toggle = event;\r\n\r\n            for (let i = 0; i < this.activeTab.length; i++) {\r\n                this.activeTab[i].active = toggle.isChecked;\r\n            }\r\n\r\n            for (let i = 0; i < this.deActiveTab.length; i++) {\r\n                this.deActiveTab[i].active = !toggle.isChecked;\r\n            }\r\n\r\n        }, this);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","import ViewBase from \"../framework/core/mvvm/view_base\";\r\nimport Debug from \"../manager/debug\";\r\n\r\n// protected onFocusInEditor(): void;\t\t\r\n// protected onLostFocusInEditor(): void;\t\t\r\n// /**\r\n// !#en Called to initialize the component or node’s properties when adding the component the first time or when the Reset command is used. This function is only called in editor.\r\n// !#zh 用来初始化组件或节点的一些属性，当该组件被第一次添加到节点上或用户点击了它的 Reset 菜单时调用。这个回调只会在编辑器下调用。 \r\n// */\r\n// protected resetInEditor(): void;\t\t\r\n\r\n\r\nconst { ccclass, menu, property, executeInEditMode, inspector } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('UI/UButton')\r\nexport default class UButton extends cc.Component {\r\n    private _init : boolean\r\n\r\n    @property(ViewBase)\r\n    viewBase: ViewBase = null;\r\n\r\n    // private targetComponent : cc.Button\r\n\r\n    onEnable() {\r\n        if (!this._init) {\r\n            this._init = true\r\n            // this.targetComponent = this.getComponent<cc.Button>(cc.Button)\r\n            if (this.viewBase) {\r\n                this.viewBase.cacheComponent(this.node.name, this)\r\n            }\r\n            this.node.on(\"click\", () => { \r\n                if (CC_PREVIEW) {\r\n                    let targetComponent = this.getComponent<cc.Button>(cc.Button)\r\n                    if (targetComponent.transition == cc.Button.Transition.SCALE && targetComponent.zoomScale > 1.01) {\r\n                        Debug.error(this.viewBase ? this.viewBase.node.name : \"\", this.node.name, \"(Button的ZoomScale效果设置错误，应该为按下缩小、松开变大，请统一设置为0.92)\")\r\n                    }\r\n                }\r\n                this.viewBase.buttonClick(this.node, \"\");\r\n            }, this)\r\n        }\r\n    }   \r\n\r\n    public onChangeLanguage() {\r\n\r\n    }\r\n\r\n    protected onFocusInEditor() {\r\n        this.resetInEditor()\r\n    }\r\n \r\n    protected resetInEditor() {\r\n        let targetComponent = this.getComponent<cc.Button>(cc.Button)\r\n        if (targetComponent.zoomScale > 1.01) {\r\n            targetComponent.zoomScale = 0.92\r\n            // Debug.error(\"Button的ZoomScale设置错误，请统一设置成0.92\")\r\n        }\r\n        if (this.viewBase == null) {\r\n            let parent = this.node\r\n            while (parent != null) {\r\n                this.viewBase = parent.getComponent<ViewBase>(ViewBase)\r\n                if (this.viewBase != null) {\r\n                    break;\r\n                }\r\n                parent = parent.parent\r\n            }\r\n        }\r\n    }\r\n}\r\n","import ViewBase from '../framework/core/mvvm/view_base';\r\nimport { CountUp } from '../lib/countUp';\r\nimport LanguageManager from '../manager/language_manager';\r\nimport { setFlagsFromString } from 'v8';\r\nimport EditorBoxCenter from '../pacakge/public/ui/editor_box_center';\r\nimport *  as ConfigLanguageData from '../lib/ConfigLanguageData';\r\nimport { log } from '../../../creator';\r\nconst { ccclass, menu, property, executeInEditMode, inspector } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('UI/ULabel')\r\n@executeInEditMode\r\nexport default class ULabel extends cc.Component {\r\n    @property(ViewBase)\r\n    viewBase: ViewBase = null;\r\n    private _init: boolean\r\n    private targetComponent: cc.Label\r\n    @property()\r\n    public i18nKey: string = \"\"\r\n    public onChangeLanguage() {\r\n        this.targetComponent.string = LanguageManager.t(this.i18nKey)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        if (!this._init) {\r\n            this._init = true\r\n            this.targetComponent = this.getComponent<cc.Label>(cc.Label)\r\n            if (this.viewBase) {\r\n                this.viewBase.cacheComponent(this.node.name, this)\r\n            }\r\n        }\r\n    }\r\n    protected resetInEditor() {\r\n        if (this.viewBase == null) {\r\n            let parent = this.node.parent\r\n            while (parent != null) {\r\n                this.viewBase = parent.getComponent<ViewBase>(ViewBase)\r\n                if (this.viewBase != null) {\r\n                    break;\r\n                }\r\n                parent = parent.parent\r\n            }\r\n        }\r\n    }\r\n    //编辑器模式下的更新\r\n    updateLabel()\r\n    {  \r\n        //cc.log(\"编辑器模式下更新\");\r\n        if (!this.targetComponent) {\r\n            cc.error('Failed to update Ulabel, label component is invalid!');\r\n            return;\r\n        }\r\n        //cc.log(\"this.targetComponent:\"+this.targetComponent.string);\r\n        let localizedString = ConfigLanguageData.parse(this.i18nKey);\r\n        if (localizedString) {\r\n            this.targetComponent.string = ConfigLanguageData.parse(this.i18nKey);\r\n        }\r\n    }\r\n}\r\n","import ViewBase from '../framework/core/mvvm/view_base';\r\n\r\n\r\n\r\nconst { ccclass, menu, property, executeInEditMode, inspector } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('UI/USprite')\r\n@executeInEditMode\r\nexport default class USprite extends cc.Component {\r\n\r\n    @property(ViewBase)\r\n    viewBase: ViewBase = null;\r\n\r\n    private _init: boolean\r\n    private targetComponent: cc.Sprite\r\n\r\n    @property()\r\n    public i18nKey: string = \"\"\r\n\r\n    public changeLanguage() {\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        if (!this._init) {\r\n            this._init = true\r\n            this.targetComponent = this.getComponent<cc.Sprite>(cc.Sprite)\r\n            if (this.viewBase) {\r\n                this.viewBase.cacheComponent(this.node.name, this)\r\n            }\r\n        }\r\n    }\r\n\r\n    protected resetInEditor() {\r\n        if (this.viewBase == null) {\r\n            let parent = this.node.parent\r\n            while (parent != null) {\r\n                this.viewBase = parent.getComponent<ViewBase>(ViewBase)\r\n                if (this.viewBase != null) {\r\n                    break;\r\n                }\r\n                parent = parent.parent\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n//var  CryptoJS  = require(\"crypto-js/crypto-js\")\r\n\r\nexport default class AES{\r\n\r\n\r\n    static key : string = \"JDh3d2z8MO0Ps\";\r\n\r\n    /**\r\n     * 加密\r\n     * @param word\r\n     * @returns {*}\r\n     */\r\n    static encrypt(key,word){\r\n        // var srcs = CryptoJS.enc.Utf8.parse(word);\r\n        // var encrypted = CryptoJS.AES.encrypt(srcs, key, {mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7});\r\n        // return encrypted.toString();\r\n    }\r\n\r\n    /**\r\n     * 解密\r\n     * @param word\r\n     * @returns {*}\r\n     */\r\n    static decrypt(key,word){\r\n        // var decrypt = CryptoJS.AES.decrypt(word, key, {mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7});\r\n        // return CryptoJS.enc.Utf8.stringify(decrypt).toString();\r\n    }\r\n    \r\n   \r\n}","import { GameManager } from \"../../../manager/game_manager\";\r\nimport Debug from \"../../../manager/debug\";\r\nimport { stat } from \"fs\";\r\n\r\nexport default class AppData {\r\n    //版本信息，非常重要\r\n    static appVersion: string = \"1.0.19\"\r\n    static appName: string = \"TM\"\r\n    static gameid: number = 15;//跑得快\r\n    static apiGameName: string = \"TM_LHD\"\r\n    static ip: string = \"api.slddz.sincebest.com\"\r\n    static code:string;\r\n    static port:number;\r\n    static proxyHost: string = 'http://test.api.h5international.sincebest.com:8080/proxy?url='\r\n\r\n    static isIphoneX: boolean = false //iphonex\r\n    static iphonexOffset = 50\r\n    static designResolution : cc.Size\r\n\r\n    static isTest = false;\r\n\r\n    static setServerByData() {\r\n        if (AppData.isTest) {\r\n            AppData.ip = '127.0.0.1'\r\n            AppData.port = 8686\r\n        }else{\r\n            AppData.ip = \"47.99.50.101\";\r\n            AppData.port = 8686\r\n        }\r\n     \r\n        //登录服地址\r\n        GameManager.loginServer = \"ws://\" + AppData.ip + ':' + AppData.port;\r\n    }\r\n}","import LocalStorage from \"./local_storage\";\r\n// import WXGameManager from \"./wxgame_manager\";\r\nimport Debug from \"../manager/debug\";\r\nimport GameUtil from '../utility/game_util';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AudioManager extends cc.Component {\r\n\r\n    static instance: AudioManager = new AudioManager()\r\n    @property(cc.AudioSource)\r\n    audioSource: cc.AudioSource = null\r\n    _audioPool = []\r\n\r\n    _musicOpen: string = \"music_volume\"\r\n    _soundOpen: string = \"sound_volume\"\r\n    _vibrateOpen: string = \"vibrate\"\r\n\r\n    _musicVolume: string = \"music_volume_number\"\r\n    _soundVolume: string = \"sound_volume_number\"\r\n\r\n    _musicId = -1\r\n    _lastMusicId = -1\r\n    _soundUrls = []\r\n    _curMusicIndex = 0\r\n    _isLoadingMusic = false\r\n    soundCtxPool = []\r\n    maxSoundNum = 8\r\n    _index = 0\r\n    _musicUrl : string = \"\";\r\n\r\n    onLoad() {\r\n        this._audioPool = []\r\n        this._soundUrls = []\r\n        this._musicId = -1\r\n        this._lastMusicId = -1\r\n        this._isLoadingMusic = false\r\n        let self = this\r\n        // WXGameManager.onAudioInterruptionEnd(() => {\r\n        //     //强行暂停音乐 如果不暂停，调用resumeMusic是无效的，因为是微信让声音消失了\r\n        //     cc.audioEngine.pauseMusic();\r\n        //     //恢复音乐播放，比如调用 cc.audioEngine.resumeMusic();\r\n        //     self.resumeMusic()\r\n        //     Debug.warn(\"音乐播放中断，现在恢复播放\")\r\n        // })\r\n        //初始化音乐和音效的音量\r\n        let musicLocalVo = Number(LocalStorage.getNumber(this._musicVolume));\r\n        cc.audioEngine.setMusicVolume(0)\r\n        let soundLocalVo = Number(LocalStorage.getNumber(this._soundVolume));\r\n        cc.audioEngine.setEffectsVolume(0)\r\n    }\r\n\r\n    private getAudio(key: string, success: Function) {\r\n        GameUtil.loadRes(key, function (err, clip) {\r\n            if (err) {\r\n                cc.warn(err)\r\n                return\r\n            }\r\n            if (clip) {\r\n                success(clip)\r\n            }\r\n        });\r\n    }\r\n\r\n    playMusicLoop() {\r\n        this.playHallBgMusic()\r\n    }\r\n\r\n    playHallBgMusic(resume?: boolean) {\r\n        if (this._curMusicIndex == 1 && !resume) {\r\n            return\r\n        }\r\n        let url = \"sound/bgm/hall_bg\"\r\n        this._curMusicIndex = 1\r\n        this.playMusic(url, true)\r\n    }\r\n\r\n    playFightMusic(resume?: boolean) {\r\n        if (this._curMusicIndex == 2 && !resume) {\r\n            return\r\n        }\r\n        let url = \"sound/bgm/bg_zhandou1\"\r\n        this._curMusicIndex = 2\r\n        this.playMusic(url, true)\r\n    }\r\n\r\n    playFightMusic2(resume?: boolean) {\r\n        if (this._curMusicIndex == 3 && !resume) {\r\n            return\r\n        }\r\n        let url = \"sound/bgm/bg_zhandou2\"\r\n        this._curMusicIndex = 3\r\n        this.playMusic(url, true)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param url \r\n     * @param loop \r\n     * @param resetSame 是否从头播放相同的音乐\r\n     */\r\n    playMusic(url: string, loop: boolean = true,resetSame : boolean = false) {\r\n        \r\n        // if (!this.isMusicOpen()) {\r\n        //     Debug.log(\"音乐未开启\")\r\n        //     return\r\n        // }\r\n        if (this._musicUrl == url && !resetSame) {\r\n            return;\r\n        }\r\n        this._musicUrl = url;\r\n        this._curMusicIndex = -1\r\n        // cc.audioEngine.stopMusic()\r\n        let self = this\r\n        this.getAudio(url, (clip) => {\r\n            //cc.audioEngine.setMusicVolume(1)\r\n            cc.audioEngine.stopMusic()\r\n            self._musicId = cc.audioEngine.playMusic(clip, true);\r\n            //cc.audioEngine.setVolume(this._musicId, 1)\r\n            Debug.log(\"播放音乐：\", url)   \r\n        });\r\n    }        \r\n       \r\n    pauseMusic() {\r\n        cc.audioEngine.pauseMusic()\r\n    }   \r\n\r\n    stopAllMusic() {\r\n        cc.audioEngine.stopAll()\r\n    }\r\n\r\n    isMusicOpen() {\r\n        return LocalStorage.getNumber(this._musicOpen, 0) == 0;\r\n    }\r\n\r\n    setMusicOpen(isOpen = true) {\r\n        LocalStorage.setNumber(this._musicOpen, isOpen ? 0 : 1)\r\n    }\r\n    setMusicVolume(volume) {\r\n        volume = Math.max(0,volume);\r\n        volume = Math.min(1,volume);           \r\n\r\n        cc.audioEngine.setMusicVolume(volume)\r\n        LocalStorage.setNumber(this._musicVolume, volume)\r\n    }\r\n    isSoundOpen() {\r\n        return LocalStorage.getNumber(this._soundOpen, 0) == 0\r\n    }\r\n    isNeedPlaySound()\r\n    {\r\n        return this.isSoundOpen() && cc.audioEngine.getEffectsVolume() > 0;//加上音量大于0的判断。bug:音量为0也有一点点声音\r\n    }\r\n    setSoundOpen(isOpen = true) {\r\n        LocalStorage.setNumber(this._soundOpen, isOpen ? 0 : 1)\r\n    }\r\n    setSoundVolume(volume) {\r\n        \r\n        volume = Math.max(0,volume);\r\n        volume = Math.min(1,volume);      \r\n        \r\n        cc.audioEngine.setEffectsVolume(volume)\r\n        LocalStorage.setNumber(this._soundVolume, volume)\r\n    }\r\n    isVibrateOpen() {\r\n        return LocalStorage.getNumber(this._vibrateOpen, 0) == 0\r\n    }\r\n\r\n    setVibrateOpen(isOpen = true) {\r\n        LocalStorage.setNumber(this._vibrateOpen, isOpen ? 0 : 1)\r\n    }\r\n\r\n    resumeMusic() {\r\n        let state = cc.audioEngine.getState(this._musicId)\r\n        //cc.audioEngine.setMusicVolume(1)\r\n        Debug.log(this._musicId, state, this.isMusicOpen())\r\n        if (Number(state) >= 0) {\r\n            cc.audioEngine.resumeMusic()\r\n        } else {\r\n            cc.audioEngine.stop(this._musicId)//防止微信中音乐播放状态未切换过来\r\n            if (this._curMusicIndex == 0) {\r\n                this._curMusicIndex = 1\r\n            }\r\n            this.startMusic()\r\n        }\r\n    }\r\n\r\n    startMusic() {\r\n        if (this._curMusicIndex == 1) {\r\n            this.playHallBgMusic(true)\r\n        } else if (this._curMusicIndex == 2) {\r\n            this.playFightMusic(true)\r\n        } else if (this._curMusicIndex == 3) {\r\n            this.playFightMusic2(true)\r\n        }\r\n    }\r\n\r\n    playSound(url: string, loop: boolean = false, onFinish?: Function) {\r\n        \r\n        if (this.isNeedPlaySound()) {\r\n            this.getAudio(url, (clip : cc.AudioClip) => {\r\n                // Debug.log(\"playsound:\", url)\r\n                // Debug.log(\"playsound volume:\", cc.audioEngine.getEffectsVolume())\r\n\r\n                let id = cc.audioEngine.playEffect(clip, false);    \r\n                if (onFinish) {\r\n                    cc.audioEngine.setFinishCallback(id, onFinish)\r\n                }                            \r\n\r\n                //cc.audioEngine.setEffectsVolume(1)\r\n            });\r\n        }\r\n    }\r\n\r\n    //释放缓存的声音\r\n    release() {\r\n        this.stopAllSound()\r\n    }\r\n\r\n    vibrate() {\r\n        if (this.isVibrateOpen()) {\r\n            // WXGameManager.vibrateLong()\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this.unscheduleAllCallbacks()\r\n    }\r\n\r\n    // // 播放音频\r\n    // playSound1(url: string) {\r\n    //     let url1 = \"resources/\" + url + \".mp3\"\r\n    //     let localUrl = cc.url.raw(url1)\r\n    //     let md5Url = wxDownloader.REMOTE_SERVER_ROOT + \"/\" + cc.loader.md5Pipe.transformURL(localUrl)\r\n    //     Debug.log('音频播放地址：' + md5Url);\r\n    //     let soundCtx = this.getSoundCtx();\r\n    //     if (soundCtx) {\r\n    //         soundCtx.src = md5Url;\r\n    //         soundCtx.stop();\r\n    //         soundCtx.play();\r\n    //     }\r\n    // }\r\n\r\n    stopAllSound() {\r\n        this.soundCtxPool.forEach(soundCtx => {\r\n            // 暂停或停止了\r\n            if (!soundCtx.paused) {\r\n                soundCtx.stop();\r\n            }\r\n        });\r\n    }\r\n\r\n    // // 获取一个音频实例\r\n    // getSoundCtx() {\r\n    //     let soundCtx = null;\r\n    //     for (let i = 0; i++; i < this.soundCtxPool.length) {\r\n    //         soundCtx = this.soundCtxPool[i];\r\n    //         // 暂停或停止了\r\n    //         if (soundCtx.paused) {\r\n    //             return soundCtx;\r\n    //         }\r\n    //     }\r\n    //     if (!soundCtx) {\r\n    //         // 留一个实例用于播放背景音乐\r\n    //         if (this.soundCtxPool.length < this.maxSoundNum - 1) {\r\n    //             soundCtx = wx.createInnerAudioContext();\r\n    //         } else {\r\n    //             soundCtx = this.soundCtxPool[this._index];\r\n    //             this._index++;\r\n    //             if (this._index > this.maxSoundNum) {\r\n    //                 this._index = 0;\r\n    //             }\r\n    //             soundCtx.stop();\r\n    //         }\r\n    //     }\r\n    //     return soundCtx;\r\n    // }\r\n\r\n\r\n}","import Module, { bindButtonClickEvent, moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport AuthView from \"./auth_view\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\nimport Utility from \"../../../../utility/Utility\";\r\nimport LoaclStorage from \"../../../../manager/local_storage\";\r\nimport AppData from \"../../../public/const/app_data\";\r\nimport AudioManager from \"../../../../manager/audio_manager\";\r\nimport LanguageManager from '../../../../manager/language_manager';\r\nimport Debug from \"../../../../manager/debug\";\r\nimport LoginServer from \"../../../server/loginserver/login_server\";\r\n\r\n\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"package/hall/auth/auth\")\r\n@moduleInit(\"AuthModule\")\r\nexport default class AuthModule extends Module<AuthView, null> {\r\n\r\n    //是否获取到了远程的服务器数据\r\n    _getServerVersionData: boolean\r\n    _startBtn = null\r\n    _assets = null\r\n    _loadCount = 0\r\n    _httpRequestCount = 0\r\n\r\n    constructor() {\r\n        super();\r\n        this.windowPrefabResPath = \"package/hall/module/auth/AuthModule\";\r\n        this.viewType = AuthView;\r\n        this.modelType = null;\r\n    }\r\n\r\n    onInit() {\r\n        AudioManager.instance.playMusicLoop()\r\n        if (LoaclStorage.getNumber(\"loginUserID\") != null && LoaclStorage.getNumber(\"loginUserID\") != \"null\" ) {\r\n            this.view.editBoxAccount.string = LoaclStorage.getNumber(\"loginUserID\");\r\n        } else {\r\n            this.view.editBoxAccount.string = (Math.floor(Math.random()* 900) + 100).toString()\r\n        }\r\n    }\r\n\r\n    @bindButtonClickEvent(\"ButtonChangeLanguage\")\r\n    changeLanguage() {\r\n        LanguageManager.change()\r\n        this.view.changeLanguage()\r\n        ModuleManager.instance.destroyAllModule()\r\n        ModuleManager.instance.showModule(AuthModule)\r\n    }\r\n\r\n    @bindButtonClickEvent(\"ButtonTest\")\r\n    test() {\r\n\r\n    }\r\n    \r\n    @bindButtonClickEvent(\"Button_Login\")\r\n    onLoginBtnClick() {        \r\n        let account = parseInt(this.view.editBoxAccount.string)\r\n        if (account) {\r\n            Utility.instance.playButtonSound()\r\n            ModuleManager.instance.showModuleName(\"NetPrompt\", { showImmediately: true })\r\n            LoginServer.instance.accountLogin(this.view.editBoxAccount.string);\r\n            LoaclStorage.setNumber(\"loginUserID\", account)\r\n        } else {\r\n            ModuleManager.instance.toast(\"请输入正确的测试账号\")\r\n        }\r\n    }\r\n\r\n    onShow() {\r\n        this._loadCount = 0\r\n        this._httpRequestCount = 0\r\n        ModuleManager.instance.preLoadRes()\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport { GameManager } from '../../../../manager/game_manager';\r\n\r\nconst { ccclass, property, menu} = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"package/hall/auth/authView\")\r\nexport default class AuthView extends ViewBase {\r\n\r\n    @property(cc.Node)\r\n    browserLoginNode: cc.Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    editBoxAccount: cc.EditBox = null;\r\n\r\n    @property(cc.Node)\r\n    buttonLogin: cc.Node = null;\r\n    \r\n    onLoad() {\r\n        this.browserLoginNode.active = true\r\n    }\r\n\r\n}\r\n","import Debug from \"./debug\";\r\n\r\n// import PayForUtil from \"../utility/payForUtil\";\r\n// import NoobGiftBeforeModule from \"../pacakge/hall/module/noobGiftBefore/noobGiftBefore\";\r\n// import RankingMatchManager from \"../pacakge/public/module/ranking_match/ranking_match_manager\";\r\n// import RankingMatchAward from \"../pacakge/public/module/ranking_match/ranking_match_award\";\r\n// import BeginnerGuideUtil from \"../utility/beginnerGuideUtil\";\r\n// import SevenDayAward from \"../pacakge/hall/module/sevendayaward/sevendayaward\";\r\n// import NoobGiftModule from \"../pacakge/hall/module/noobGift/noobGift\";\r\n\r\nlet dialogQueue: any[] = []\r\ndialogQueue.push(\"RankingMatchAward\")\r\ndialogQueue.push(\"Activity\")\r\ndialogQueue.push(\"DailySign\")\r\ndialogQueue.push(\"NoobGiftBeforeModule\")\r\ndialogQueue.push(\"PayForModule\")\r\ndialogQueue.push(\"BeginnerGuide\")\r\n\r\ndialogQueue.push(\"SpecialQrcode\")//此处优先级最高\r\n\r\nexport class AutoDialogManager {\r\n    static openPriorityDialog() {\r\n        let length = dialogQueue.length\r\n        if (length == 0) {\r\n            return\r\n        }\r\n        let moduleName = dialogQueue[length - 1]\r\n        dialogQueue.pop()\r\n        this.dealModules(moduleName)\r\n    }\r\n\r\n\r\n    private static dealModules(moduleName) {\r\n        if (!moduleName) {\r\n            return\r\n        }\r\n        Debug.warn(\"打开模块：\", moduleName)\r\n        switch (moduleName) {\r\n            // case \"NoobGiftBeforeModule\":\r\n            //     this.showNoobgiftBeforeModule()\r\n            //     break\r\n            // case \"DailySign\":\r\n            //     this.showDailySign(moduleName)\r\n            //     break\r\n            // case \"PayForModule\":\r\n            //     this.showPayForModule()\r\n            //     break\r\n            // case \"Activity\":\r\n            //     this.showActivity(moduleName)\r\n            //     break\r\n            // case \"BeginnerGuide\":\r\n            //     this.showBeginnerGuide()\r\n            //     break\r\n            // case \"SpecialQrcode\":\r\n            //     this.showSpecialQrcode()\r\n            //     break\r\n            // case \"RankingMatchAward\":\r\n            //     this.showRankingMatchAward()\r\n            //     break\r\n            // default:\r\n            //     ModuleManager.instance.showModuleName(moduleName, { auto: \"auto\" })\r\n            //     break\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","/*\r\n *  base64.js\r\n *\r\n *  Licensed under the BSD 3-Clause License.\r\n *    http://opensource.org/licenses/BSD-3-Clause\r\n *\r\n *  References:\r\n *    http://en.wikipedia.org/wiki/Base64\r\n */\r\n;(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined'\r\n        ? module.exports = factory(global)\r\n        : typeof define === 'function' && define.amd\r\n        ? define(factory) : factory(global)\r\n}((\r\n    typeof self !== 'undefined' ? self\r\n        : typeof window !== 'undefined' ? window\r\n        : typeof global !== 'undefined' ? global\r\n: this\r\n), function(global) {\r\n    'use strict';\r\n    // existing version for noConflict()\r\n    global = global || {};\r\n    var _Base64 = global.Base64;\r\n    var version = \"2.5.1\";\r\n    // if node.js and NOT React Native, we use Buffer\r\n    var buffer;\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        try {\r\n            buffer = eval(\"require('buffer').Buffer\");\r\n        } catch (err) {\r\n            buffer = undefined;\r\n        }\r\n    }\r\n    // constants\r\n    var b64chars\r\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n    var b64tab = function(bin) {\r\n        var t = {};\r\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\r\n        return t;\r\n    }(b64chars);\r\n    var fromCharCode = String.fromCharCode;\r\n    // encoder stuff\r\n    var cb_utob = function(c) {\r\n        if (c.length < 2) {\r\n            var cc = c.charCodeAt(0);\r\n            return cc < 0x80 ? c\r\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\r\n                                + fromCharCode(0x80 | (cc & 0x3f)))\r\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\r\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\r\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\r\n        } else {\r\n            var cc = 0x10000\r\n                + (c.charCodeAt(0) - 0xD800) * 0x400\r\n                + (c.charCodeAt(1) - 0xDC00);\r\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\r\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\r\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\r\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\r\n        }\r\n    };\r\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\r\n    var utob = function(u) {\r\n        return u.replace(re_utob, cb_utob);\r\n    };\r\n    var cb_encode = function(ccc) {\r\n        var padlen = [0, 2, 1][ccc.length % 3],\r\n        ord = ccc.charCodeAt(0) << 16\r\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\r\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\r\n        chars = [\r\n            b64chars.charAt( ord >>> 18),\r\n            b64chars.charAt((ord >>> 12) & 63),\r\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\r\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\r\n        ];\r\n        return chars.join('');\r\n    };\r\n    var btoa = global.btoa ? function(b) {\r\n        return global.btoa(b);\r\n    } : function(b) {\r\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\r\n    };\r\n    var _encode = function(u) {\r\n        const isUint8Array = Object.prototype.toString.call(u) === '[object Uint8Array]';\r\n        return isUint8Array ? u.toString('base64')\r\n            : btoa(utob(String(u)));\r\n    }\r\n    var encode = function(u, urisafe) {\r\n        return !urisafe\r\n            ? _encode(u)\r\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\r\n                return m0 == '+' ? '-' : '_';\r\n            }).replace(/=/g, '');\r\n    };\r\n    var encodeURI = function(u) { return encode(u, true) };\r\n    // decoder stuff\r\n    var re_btou = new RegExp([\r\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\r\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\r\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\r\n    ].join('|'), 'g');\r\n    var cb_btou = function(cccc) {\r\n        switch(cccc.length) {\r\n        case 4:\r\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\r\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\r\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\r\n                |     (0x3f & cccc.charCodeAt(3)),\r\n            offset = cp - 0x10000;\r\n            return (fromCharCode((offset  >>> 10) + 0xD800)\r\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\r\n        case 3:\r\n            return fromCharCode(\r\n                ((0x0f & cccc.charCodeAt(0)) << 12)\r\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\r\n                    |  (0x3f & cccc.charCodeAt(2))\r\n            );\r\n        default:\r\n            return  fromCharCode(\r\n                ((0x1f & cccc.charCodeAt(0)) << 6)\r\n                    |  (0x3f & cccc.charCodeAt(1))\r\n            );\r\n        }\r\n    };\r\n    var btou = function(b) {\r\n        return b.replace(re_btou, cb_btou);\r\n    };\r\n    var cb_decode = function(cccc) {\r\n        var len = cccc.length,\r\n        padlen = len % 4,\r\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\r\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\r\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\r\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\r\n        chars = [\r\n            fromCharCode( n >>> 16),\r\n            fromCharCode((n >>>  8) & 0xff),\r\n            fromCharCode( n         & 0xff)\r\n        ];\r\n        chars.length -= [0, 0, 2, 1][padlen];\r\n        return chars.join('');\r\n    };\r\n    var _atob = global.atob ? function(a) {\r\n        return global.atob(a);\r\n    } : function(a){\r\n        return a.replace(/\\S{1,4}/g, cb_decode);\r\n    };\r\n    var atob = function(a) {\r\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\r\n    };\r\n    var _decode = buffer ?\r\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\r\n        ? function(a) {\r\n            return (a.constructor === buffer.constructor\r\n                    ? a : buffer.from(a, 'base64')).toString();\r\n        }\r\n        : function(a) {\r\n            return (a.constructor === buffer.constructor\r\n                    ? a : new buffer(a, 'base64')).toString();\r\n        }\r\n        : function(a) { return btou(_atob(a)) };\r\n    var decode = function(a){\r\n        return _decode(\r\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\r\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\r\n        );\r\n    };\r\n    var noConflict = function() {\r\n        var Base64 = global.Base64;\r\n        global.Base64 = _Base64;\r\n        return Base64;\r\n    };\r\n    // export Base64\r\n    global.Base64 = {\r\n        VERSION: version,\r\n        atob: atob,\r\n        btoa: btoa,\r\n        fromBase64: decode,\r\n        toBase64: encode,\r\n        utob: utob,\r\n        encode: encode,\r\n        encodeURI: encodeURI,\r\n        btou: btou,\r\n        decode: decode,\r\n        noConflict: noConflict,\r\n        __buffer__: buffer\r\n    };\r\n    // if ES5 is available, make Base64.extendString() available\r\n    if (typeof Object.defineProperty === 'function') {\r\n        var noEnum = function(v){\r\n            return {value:v,enumerable:false,writable:true,configurable:true};\r\n        };\r\n        global.Base64.extendString = function () {\r\n            Object.defineProperty(\r\n                String.prototype, 'fromBase64', noEnum(function () {\r\n                    return decode(this)\r\n                }));\r\n            Object.defineProperty(\r\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\r\n                    return encode(this, urisafe)\r\n                }));\r\n            Object.defineProperty(\r\n                String.prototype, 'toBase64URI', noEnum(function () {\r\n                    return encode(this, true)\r\n                }));\r\n        };\r\n    }\r\n    //\r\n    // export Base64 to the namespace\r\n    //\r\n    if (global['Meteor']) { // Meteor.js\r\n        Base64 = global.Base64;\r\n    }\r\n    // module.exports and AMD are mutually exclusive.\r\n    // module.exports has precedence.\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports.Base64 = global.Base64;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define([], function(){ return global.Base64 });\r\n    }\r\n    // that's it!\r\n    return {Base64: global.Base64}\r\n}));","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Blur')\r\nexport default class BlurShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Blur\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    uniform float num;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 sum = vec4(0.0);\r\n        vec2 size = vec2(num,num);\r\n        sum += texture2D(texture, uv0 - 0.4 * size) * 0.05;\r\n        sum += texture2D(texture, uv0 - 0.3 * size) * 0.09;\r\n        sum += texture2D(texture, uv0 - 0.2 * size) * 0.12;\r\n        sum += texture2D(texture, uv0 - 0.1 * size) * 0.15;\r\n        sum += texture2D(texture, uv0             ) * 0.16;\r\n        sum += texture2D(texture, uv0 + 0.1 * size) * 0.15;\r\n        sum += texture2D(texture, uv0 + 0.2 * size) * 0.12;\r\n        sum += texture2D(texture, uv0 + 0.3 * size) * 0.09;\r\n        sum += texture2D(texture, uv0 + 0.4 * size) * 0.05;\r\n        \r\n        vec4 vectemp = vec4(0,0,0,0);\r\n        vec4 substract = vec4(0,0,0,0);\r\n        vectemp = (sum - substract) * color;\r\n    \r\n        float alpha = texture2D(texture, uv0).a;\r\n        if(alpha < 0.05) { gl_FragColor = vec4(0 , 0 , 0 , 0); }\r\n        else { gl_FragColor = vectemp; }\r\n    }\r\n    `\r\n    protected setParamValue(material: ShaderMaterial) {\r\n        material.setNum(0.03);\r\n    }\r\n}\r\n","import AppData from \"../pacakge/public/const/app_data\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CenterHorizontLayout extends cc.Component {\r\n\r\n    @property(cc.ScrollView)\r\n    scrollView: cc.ScrollView = null\r\n    @property(cc.Layout)\r\n    layout: cc.Layout = null\r\n    @property\r\n    cellWidth: number = 100\r\n    @property\r\n    offsetX: number = 0\r\n    _scrollWidth = 0\r\n\r\n\r\n    setLength(length) {\r\n        let widget = this.scrollView.node.getComponent(cc.Widget)\r\n        if(!widget){\r\n            return\r\n        }\r\n        if (AppData.isIphoneX) {\r\n            widget.right = 15 + AppData.iphonexOffset\r\n        }else{\r\n            widget.right = 15\r\n        }\r\n    }\r\n\r\n\r\n    // setLength(length) {\r\n    //     let offset = 0\r\n    //     if (AppData.isIphoneX) {\r\n    //         offset = AppData.iphonexOffset\r\n    //     }\r\n    //     if (this._scrollWidth == 0) {\r\n    //         let scrollWidget = this.scrollView.node.getComponent(cc.Widget)\r\n    //         scrollWidget.updateAlignment()\r\n    //         if (AppData.iphonexOffset) {\r\n    //             scrollWidget.left = scrollWidget.left + AppData.iphonexOffset\r\n    //             this.scrollView.node.width = this.scrollView.node.width - AppData.iphonexOffset\r\n    //             // let p = this.scrollView.node.position\r\n    //             // p.x = p.x - AppData.iphonexOffset / 2\r\n    //             // this.scrollView.node.position = p\r\n    //         }\r\n    //         this._scrollWidth = Math.ceil(this.scrollView.node.width)\r\n    //     }\r\n\r\n    //     let self = this\r\n    //     let width = this._scrollWidth\r\n    //     let needWidth = self.cellWidth * length + offset\r\n    //     if (width > needWidth) {\r\n    //         self.layout.node.setAnchorPoint(0.5, 0.5)\r\n    //         self.layout.updateLayout()\r\n    //         let pos = self.layout.node.position\r\n    //         pos.x = self.offsetX / 2 - offset\r\n    //         self.layout.node.position = pos\r\n    //     } else {\r\n    //         self.layout.node.setAnchorPoint(0, 0.5)\r\n    //         self.layout.updateLayout()\r\n    //         let pos = self.layout.node.position\r\n    //         pos.x = -width / 2\r\n    //         self.layout.node.position = pos\r\n    //         self.scrollView.scrollToTop()//刷新一下 不然点击列表会自动跳动一下\r\n    //     }\r\n    // }\r\n\r\n}\r\n","import TextureManager from \"../../../manager/texture_manager\";\r\nimport ModuleManager from \"../../../framework/core/module_manager\";\r\nimport { ClubModule } from \"../../club/club_module\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class ClubListItem extends cc.Component {\r\n    @property(cc.Sprite)\r\n    Sprite_flag:cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    Sprite_head:cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    Label_clubName:cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    Button_enterClub:cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    Label_offer:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    Label_invate:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    Label_totalCount:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    Label_onlineCount:cc.Label = null;\r\n\r\n    // 俱乐部列表数据\r\n    clubListData:any = null;\r\n\r\n    onLoad() {\r\n        this.Button_enterClub.on('click',this.enterClub,this)\r\n    }\r\n\r\n    enterClub() {\r\n        let clubId = this.clubListData.clubId;\r\n        ModuleManager.instance.showModule(ClubModule, clubId);\r\n    }\r\n\r\n    initUI(data:any) {\r\n        this.clubListData = data;\r\n        let myMemInfo = data.myMemInfo;\r\n        if (myMemInfo.lastId == 0) {\r\n            // 群主\r\n            TextureManager.instance.getLocalSprite('offer_1',(spriteFrame:cc.SpriteFrame)=>{\r\n                this.Sprite_flag.spriteFrame = spriteFrame;\r\n            });\r\n            this.Label_offer.string = '盟主'\r\n        } else if(myMemInfo.invateCode != 0) {\r\n            // 合伙人\r\n            TextureManager.instance.getLocalSprite('offer_2',(spriteFrame:cc.SpriteFrame)=>{\r\n                this.Sprite_flag.spriteFrame = spriteFrame;\r\n            });\r\n            this.Label_offer.string = '合伙人'\r\n        } else {\r\n            // 普通成员\r\n            this.Sprite_flag.node.active = false;\r\n            this.Label_offer.string = '成员'\r\n        }\r\n\r\n        TextureManager.instance.getSprite(data.leaderUrl,(sp:cc.SpriteFrame)=>{\r\n            this.Sprite_head.spriteFrame = sp;\r\n        });\r\n        if (myMemInfo.invateCode == 0) {\r\n            this.Label_invate.string = '无';\r\n        } else {\r\n            this.Label_invate.string = myMemInfo.invateCode;\r\n        }\r\n        this.Label_clubName.string = data.clubName;\r\n        this.Label_totalCount.string = data.totalPlayerNum;\r\n        this.Label_onlineCount.string = data.onlinePlayerNum;\r\n    }\r\n}\r\n","import ModelBase from \"../../../framework/core/mvvm/model_base\";\r\nimport { ClubRoute } from \"../net_clubRoute\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class ClubMemListModel extends ModelBase {\r\n    curPageNum:number = 0;\r\n    totalPageNum:number = 0;\r\n    pageCeilNum:number = 25;\r\n    clubId:number = 0;\r\n\r\n    send_getClubMember(clubId:number, pageIdx:number, pageNum:number, isOutPartner:boolean){\r\n        let data = {\r\n            clubId:clubId,\r\n            pageIdx:pageIdx,\r\n            pageNum: pageNum,\r\n            isOutPartner: isOutPartner,\r\n        }\r\n        this.send(ClubRoute.getClubMember,data);\r\n    }\r\n}\r\n","import ClubMemListView from \"./clubMemList_view\";\r\nimport Module, { moduleInit } from \"../../../framework/core/mvvm/module_base\";\r\nimport { ClubMemListModel } from \"./clubMemList_model\";\r\nimport ModuleManager from \"../../../framework/core/module_manager\";\r\nimport Toast from \"../../public/module/toast/toast\";\r\nimport HallServer from \"../../server/hallserver/hall_server\";\r\nimport { ClubRoute } from \"../net_clubRoute\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"ClubMemListModule\")\r\nexport default class ClubMemListModule extends Module<ClubMemListView,ClubMemListModel> {\r\n    constructor(){\r\n        super()\r\n        this.windowPrefabResPath = 'package/club/clubMemList';\r\n        this.viewType = ClubMemListView;\r\n        this.modelType = ClubMemListModel;\r\n        this.needAnim = true;\r\n        this.clickAnywhereClose = false;\r\n        this.needViewMask = true;\r\n    }\r\n\r\n    onLoad(){\r\n    }\r\n\r\n    onShow(clubInfo){\r\n        this.model.netClient = HallServer.instance.netClient;\r\n        this.model.clearMsgEvent();\r\n        this.registerMsg();\r\n        this.model.clubId = clubInfo.clubId;\r\n        this.model.curPageNum = 1;\r\n        this.model.send_getClubMember(this.model.clubId, this.model.curPageNum, this.model.pageCeilNum, false);\r\n    }\r\n\r\n    registerMsg() {\r\n        this.model.registerNetMsg(ClubRoute.getClubMember, this.retGetClubMember.bind(this));\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        switch (pName) {\r\n            case 'Button_close':\r\n                ModuleManager.instance.destroyModule('ClubMemListModule');\r\n                break;\r\n            case 'Button_add':\r\n                ModuleManager.instance.showModule(Toast, '暂未开放!');\r\n                break;\r\n            case 'Button_find':\r\n                ModuleManager.instance.showModule(Toast, '请输入正确的用户ID!');\r\n                break;\r\n            case 'Button_leftPage':\r\n                if (this.model.curPageNum > 1) {\r\n                    this.model.curPageNum = this.model.curPageNum - 1;\r\n                    this.model.send_getClubMember(this.model.clubId, this.model.curPageNum, this.model.pageCeilNum, false);\r\n                }\r\n                break;\r\n            case 'Button_rightPage':\r\n                if (this.model.curPageNum < this.model.totalPageNum) {\r\n                    this.model.curPageNum = this.model.curPageNum + 1;\r\n                    this.model.send_getClubMember(this.model.clubId, this.model.curPageNum, this.model.pageCeilNum, false);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    retGetClubMember(data:any) {\r\n        if (data.code == 0) {\r\n            let totalNum = Math.ceil(data.totalNum / this.model.pageCeilNum);\r\n            this.model.totalPageNum = totalNum;\r\n            this.view.loadMemList(data.members, this.model.curPageNum, totalNum);\r\n        } else {\r\n            ModuleManager.instance.showModule(Toast,'获取成员列表错误code=' + data.code);\r\n        }\r\n    }\r\n}\r\n","import ViewBase from \"../../../framework/core/mvvm/view_base\";\r\nimport TextureManager from \"../../../manager/texture_manager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ClubMemListView extends ViewBase {\r\n    @property(cc.EditBox)\r\n    EditBox_id:cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    Label_pageIdx:cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    Sprite_memNode:cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    Button_item:cc.Node = null;\r\n\r\n    onShow(){\r\n    }\r\n    onLoad(){\r\n    }\r\n\r\n    loadMemList(data:any, curPage:number, totalPage:number) {\r\n        this.Label_pageIdx.string = curPage + '/' + totalPage;\r\n        this.Sprite_memNode.node.removeAllChildren()\r\n        for (let i = 0; i < data.length; i++) {\r\n            const mem = data[i];\r\n            let Button_item = cc.instantiate(this.Button_item);\r\n            Button_item.active = true;\r\n            Button_item.parent = this.Sprite_memNode.node;\r\n            let col = (i+1) % 5;\r\n            if (col == 0) {\r\n                col = 5\r\n            }\r\n            let row = Math.ceil((i+1) / 5);\r\n            Button_item.x = -501 + (col - 1) * 250;\r\n            Button_item.y = -58 - (row - 1) * 98;\r\n\r\n            let Sprite_head = Button_item.getChildByName('Sprite_head').getComponent(cc.Sprite);\r\n            let Label_name = Button_item.getChildByName('Label_name').getComponent(cc.Label);\r\n            let Label_state = Button_item.getChildByName('Label_state').getComponent(cc.Label);\r\n            TextureManager.instance.getSprite(mem.avatarUrl,(sp:cc.SpriteFrame)=>{\r\n                Sprite_head.spriteFrame = sp;\r\n            })\r\n            Label_name.string = mem.name;\r\n            if (mem.lastOfflineTime == 0) {\r\n                Label_state.string = '在线'\r\n                Label_state.node.color = cc.color(33, 197, 40, 255);\r\n            } else {\r\n                Label_state.string = '离线'\r\n                Label_state.node.color = cc.color(170, 170, 170, 255);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import ModelBase from \"../../../framework/core/mvvm/model_base\";\r\nimport { ClubRoute } from \"../net_clubRoute\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class ClubRankModel extends ModelBase {\r\n\r\n    curPageNum:number = 1;\r\n    pageCeilNum:number = 6;\r\n    totalPageNum:number = 0;\r\n   \r\n    send_getRankList(rankType:number, pageIdx:number, pageNum:number){\r\n        let data = {\r\n            rankType:rankType,\r\n            pageIdx:pageIdx,\r\n            pageNum: pageNum,\r\n        }\r\n        this.send(ClubRoute.getRankList,data);\r\n    }\r\n}\r\n","import Module, { moduleInit } from \"../../../framework/core/mvvm/module_base\";\r\nimport ModuleManager from \"../../../framework/core/module_manager\";\r\nimport Toast from \"../../public/module/toast/toast\";\r\nimport HallServer from \"../../server/hallserver/hall_server\";\r\nimport { ClubRoute } from \"../net_clubRoute\";\r\nimport ClubRankView from \"./clubRank_view\";\r\nimport { ClubRankModel } from \"./clubRank_model\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"ClubRankModule\")\r\nexport default class ClubMemListModule extends Module<ClubRankView,ClubRankModel> {\r\n    constructor(){\r\n        super()\r\n        this.windowPrefabResPath = 'package/club/clubRank';\r\n        this.viewType = ClubRankView;\r\n        this.modelType = ClubRankModel;\r\n        this.needAnim = true;\r\n        this.clickAnywhereClose = false;\r\n        this.needViewMask = true;\r\n    }\r\n\r\n    onLoad(){\r\n    }\r\n\r\n    onShow(){\r\n        this.model.netClient = HallServer.instance.netClient;\r\n        this.model.clearMsgEvent();\r\n        this.registerMsg();\r\n        this.model.curPageNum = 1;\r\n        this.model.send_getRankList(0, this.model.curPageNum, this.model.pageCeilNum);\r\n    }\r\n\r\n    registerMsg() {\r\n        this.model.registerNetMsg(ClubRoute.getRankList, this.retGetRankList.bind(this));\r\n    }\r\n\r\n    retGetRankList(data:any) {\r\n        if (data.code == 0) {\r\n            let totalNum = Math.ceil(data.totalNum / this.model.pageCeilNum);\r\n            this.model.totalPageNum = totalNum;\r\n            this.view.loadRankList(data.list, this.model.curPageNum, this.model.pageCeilNum, data.myRank);\r\n        } else {\r\n            ModuleManager.instance.showModule(Toast,'获取排行榜错误code=' + data.code);\r\n        }\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        switch (pName) {\r\n            case 'Button_close':\r\n                ModuleManager.instance.destroyModule('ClubRankModule');\r\n                break;\r\n            case 'Button_leftPage':\r\n                if (this.model.curPageNum > 1) {\r\n                    this.model.curPageNum = this.model.curPageNum - 1;\r\n                    this.model.send_getRankList(0, this.model.curPageNum, this.model.pageCeilNum);\r\n                }\r\n                break;\r\n            case 'Button_rightPage':\r\n                if (this.model.curPageNum < this.model.totalPageNum) {\r\n                    this.model.curPageNum = this.model.curPageNum + 1;\r\n                    this.model.send_getRankList(0, this.model.curPageNum, this.model.pageCeilNum);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import ViewBase from \"../../../framework/core/mvvm/view_base\";\r\nimport TextureManager from \"../../../manager/texture_manager\";\r\nimport UserDataManager from \"../../../manager/user_manager\";\r\nimport GameUtil from \"../../../utility/game_util\";\r\nimport Utility from \"../../../utility/Utility\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ClubRankView extends ViewBase {\r\n    @property(cc.Label)\r\n    Label_rank:cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    Sprite_head:cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    Label_name:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    Label_coins:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    Label_pageIdx:cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    Sprite_rankNode:cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    Sprite_item:cc.Node = null;\r\n\r\n    onShow(){\r\n        let data = UserDataManager.instance.getUserData();\r\n        this.Label_name.string = data.name;\r\n        this.Label_coins.string = Utility.instance.formateNumb(data.coin).toString();\r\n        TextureManager.instance.getSprite(data.avatarUrl,(sp:cc.SpriteFrame)=>{\r\n            this.Sprite_head.spriteFrame = sp;\r\n        })\r\n    }\r\n\r\n    loadRankList(data:any, curPageNum:number, pageCeilNum:number, myRank:number) {\r\n        if (myRank == 0) {\r\n            this.Label_rank.string = '榜外';\r\n        } else {\r\n            this.Label_rank.string = myRank.toString();\r\n        }\r\n        this.Label_pageIdx.string = curPageNum.toString();\r\n        this.Sprite_rankNode.node.removeAllChildren()\r\n        for (let i = 0; i < data.length; i++) {\r\n            const item = data[i];\r\n            let Sprite_item = cc.instantiate(this.Sprite_item);\r\n            Sprite_item.active = true;\r\n            Sprite_item.parent = this.Sprite_rankNode.node;\r\n            Sprite_item.x = 0;\r\n            Sprite_item.y = -50 - i * 82;\r\n\r\n            let Sprite_front = Sprite_item.getChildByName('Sprite_front').getComponent(cc.Sprite);\r\n            let Label_before = Sprite_item.getChildByName('Label_before').getComponent(cc.Label);\r\n            let Sprite_head = Sprite_item.getChildByName('Sprite_head').getComponent(cc.Sprite);\r\n            let Label_name = Sprite_item.getChildByName('Label_name').getComponent(cc.Label);\r\n            let Label_coins = cc.find(\"Sprite_coinIcon/Label_coins\", Sprite_item).getComponent(cc.Label);\r\n            TextureManager.instance.getSprite(item.avatarUrl,(sp:cc.SpriteFrame)=>{\r\n                Sprite_head.spriteFrame = sp;\r\n            })\r\n            Label_name.string = item.name;\r\n            Label_coins.string = Utility.instance.formateNumb(item.coin).toString();;\r\n\r\n            let rank = i + 1 + (curPageNum - 1) * pageCeilNum;\r\n            if (rank < 4) {\r\n                Sprite_front.node.active = true;\r\n                Label_before.node.active = false;\r\n                TextureManager.instance.getLocalSprite(\"club_rank{0}.png\".format(rank), (spriteFrame:cc.SpriteFrame)=>{\r\n                    Sprite_front.spriteFrame = spriteFrame;\r\n                });\r\n            } else {\r\n                Sprite_front.node.active = false;\r\n                Label_before.node.active = true;\r\n                Label_before.string = rank.toString();\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nexport module Club{\r\n\r\n    //一个俱乐部\r\n    export interface IClubData{\r\n        clubId:number;//俱乐部id\r\n        leaderId:number;\r\n        clubName:string;\r\n        leaderName:string;\r\n        leaderUrl:string;\r\n        announcement:string;\r\n        isSelect:boolean;//是否选中\r\n    }\r\n\r\n    export enum TableType{\r\n        PWTable = 0,//玩法桌\r\n        GameTable = 1,//游戏桌\r\n    }\r\n\r\n    //玩法桌数据\r\n\r\n\r\n    export interface IPlayer{\r\n        id:number,\r\n        name:string,\r\n        avatarUrl:string;\r\n    }\r\n\r\n    export interface IPlayWayInfo{\r\n        id:string,\r\n        clubId:number,\r\n        gameId:number,\r\n        playwayName:string,\r\n        payMode:number,\r\n        payCount:number,\r\n        isPercentage:number,\r\n        sorceCell:number,\r\n        lowerLimit:number,\r\n        upperLimit:number,\r\n        gameParameter:any\r\n    }\r\n\r\n    //游戏桌数据\r\n    export interface IGameTableInfo{\r\n        host: string,\r\n\t\tport: number,\r\n\t\tclubId: number,\r\n\t\tgameId: number,\r\n\t\ttableId: number,\r\n\t\tgameCount: number,\r\n\t\tcurrentCount: number,\r\n\t\tchairCount: number,\r\n\t\tplaywayId: string,\r\n\t\tplaywayName: string,\r\n\t\tgameMode: number,\r\n\t\tlowerLimit: number,\r\n\t\tupperLimit: number,\r\n\t\tplayers: IPlayer[],\r\n    }\r\n\r\n    //一个桌子数据\r\n    export interface ITableInfo{\r\n        playWay?:IPlayWayInfo;\r\n        gameInfo?:IGameTableInfo;\r\n        tbType:TableType;\r\n        tableid:number|string;\r\n    }\r\n\r\n    //牌桌排序\r\n    export function rank(allTables:ITableInfo[]){\r\n        allTables.sort(function(a:Club.ITableInfo,b:Club.ITableInfo){\r\n            return getSortIndex(a) - getSortIndex(b);\r\n        })\r\n    }\r\n\r\n    // 优先没满人的，然后玩法空桌子，最后满人的\r\n    function getSortIndex(tableData: any) {\r\n        if (tableData.tbType == Club.TableType.GameTable) {\r\n            if (tableData.gameInfo.chairCount > tableData.gameInfo.players.length) {\r\n                return -1;\r\n            } else {\r\n                return 999;\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n","\r\nimport { ClubRoute } from \"./net_clubRoute\";\r\nimport ModelBase from \"../../framework/core/mvvm/model_base\";\r\nimport { Club } from \"./club_data\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport class ClubModel extends ModelBase {\r\n\r\n    selectClub:Club.IClubData = null;//当前选中的俱乐部;\r\n\r\n    playWays:Club.ITableInfo[] = [];\r\n\r\n    //请求单个俱乐部\r\n    send_enterClub(clubId:number){\r\n        let data = {\r\n            clubId:clubId,\r\n        }\r\n        this.send(ClubRoute.enterClub,data);\r\n    }\r\n\r\n    send_setClubPlayway(data:any){\r\n        this.send(ClubRoute.setClubPlayway,data);\r\n    }\r\n\r\n    send_getClubTable(clubId:number, gameMode:number, gameId:number, playwayId:string) {\r\n        let data = {\r\n            clubId:clubId,\r\n            gameMode:gameMode || 0,\r\n            gameId:gameId || 0,\r\n            playwayId:playwayId || \"0\",\r\n        }\r\n        this.send(ClubRoute.getClubTable,data);\r\n    }\r\n\r\n    send_getClubPlayway(clubId:number, gameMode:number, gameId:number, playwayId:string){\r\n        let data = {\r\n            clubId:clubId,\r\n            gameMode:gameMode || 0,\r\n            gameId:gameId || 0,\r\n            playwayId:playwayId || \"0\",\r\n        }\r\n        this.send(ClubRoute.getClubPlayway,data);\r\n    }\r\n\r\n    reset(){\r\n        \r\n    }\r\n}\r\n","import Module, { moduleInit } from \"../../framework/core/mvvm/module_base\";\r\nimport { ClubView } from \"./club_view\";\r\nimport HallServer from \"../server/hallserver/hall_server\";\r\nimport { ClubRoute } from \"./net_clubRoute\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport LoaclStorage from \"../../manager/local_storage\";\r\nimport Toast from \"../public/module/toast/toast\";\r\nimport EventManager from \"../../manager/event_manager\";\r\nimport { Club } from \"./club_data\";\r\nimport { ClubModel } from \"./club_model\";\r\nimport HallModule from \"../hall/hall_module\";\r\nimport ClubMemListModule from \"./mem/clubMemList_module\";\r\nimport ClubRankModule from \"./rank/clubRank_module\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit('ClubModule')\r\nexport class ClubModule extends Module<ClubView,ClubModel> {\r\n    constructor(){\r\n        super();\r\n        this.windowPrefabResPath = 'package/club/club';\r\n        this.viewType = ClubView;\r\n        this.modelType = ClubModel;\r\n    }\r\n\r\n    onShow(clubId:number){\r\n        this.model.netClient = HallServer.instance.netClient;\r\n        this.model.clearMsgEvent();\r\n        this.view.clickToggleFunc = this.clickToggleFunc.bind(this);\r\n        this.registerMsg();\r\n        let select = LoaclStorage.getNumber('_select_club_id')\r\n        if (clubId || select) {\r\n            clubId = clubId || select;\r\n            this.model.send_enterClub(clubId);\r\n        }else{\r\n            ModuleManager.instance.showModule(HallModule,null,()=>{\r\n                ModuleManager.instance.destroyModule('ClubModule')\r\n            })\r\n        }\r\n    }\r\n\r\n    protected registerMsg(){\r\n        this.model.registerNetMsg(ClubRoute.enterClub, this.retRefreshCLub.bind(this));\r\n        this.model.registerNetMsg(ClubRoute.getClubPlayway, this.retGetClubPlayway.bind(this));\r\n        this.model.registerNetMsg(ClubRoute.getClubTable, this.retGetClubTable.bind(this));\r\n        this.model.registerNetMsg(ClubRoute.onRefreshClubTable, this.retRefreshClubTable.bind(this));\r\n        this.model.registerNetMsg(ClubRoute.onRemoveClubTable, this.onRemoveClubTable.bind(this));\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        switch (pName) {\r\n            case 'Button_close':\r\n                ModuleManager.instance.showModule(HallModule,null,()=>{\r\n                    ModuleManager.instance.destroyModule('ClubModule');\r\n                });\r\n                break;\r\n            case 'Button_mode':\r\n                let gameMode = LoaclStorage.getNumber('_club_gameMode', 0);\r\n                if (gameMode == 0) {\r\n                    // 进入积分厅\r\n                    LoaclStorage.setNumber('_club_gameMode', 1);\r\n                    this.view.enterClubAction(1);\r\n                } else {\r\n                    // 进入金币厅\r\n                    LoaclStorage.setNumber('_club_gameMode', 0);\r\n                    this.view.enterClubAction(0);\r\n                }\r\n                LoaclStorage.setNumber('_club_gameId', 0);\r\n                this.enterClubAllTable();\r\n                break;\r\n            case 'Button_memList':\r\n                ModuleManager.instance.showModule(ClubMemListModule, this.model.selectClub);\r\n                break;\r\n            case 'Button_rank':\r\n                ModuleManager.instance.showModule(ClubRankModule);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    clickToggleFunc(toggle) {\r\n        if (toggle.name == 'alltoggle<Toggle>') {\r\n            LoaclStorage.setNumber('_club_gameId', 0);\r\n            this.enterClubAllTable();\r\n        } else if (toggle.name == 'pdk<Toggle>'){\r\n            LoaclStorage.setNumber('_club_gameId', 15);\r\n            this.enterClubSingleGame();\r\n        }\r\n    }\r\n\r\n    protected updateSelectClub(data:any){\r\n        LoaclStorage.setNumber('_select_club_id',data.clubInfo.clubId);\r\n        this.model.selectClub = data.clubInfo;\r\n        this.view.updateClubInfo(data.clubInfo);\r\n        let str = {\r\n            content:\"<color=#00ffff>{0}</color>\".format(data.clubInfo.announcement),\r\n            tag:'',\r\n            showCount:1000,\r\n        }\r\n        EventManager.instance.dispatch('Event_Notify_Data',str)\r\n\r\n        let gameId = LoaclStorage.getNumber('_club_gameId', 0);\r\n        if (gameId == 0) {\r\n            this.enterClubAllTable();\r\n        } else {\r\n            this.enterClubSingleGame();\r\n        }\r\n        let gameMode = LoaclStorage.getNumber('_club_gameMode', 0);\r\n        this.view.enterClubAction(gameMode);\r\n    }\r\n\r\n    enterClubAllTable() {\r\n        let gameMode = LoaclStorage.getNumber('_club_gameMode', 0);\r\n        this.view.clearTableList();\r\n        this.view.mTables = [];\r\n        this.model.playWays = [];\r\n        this.model.send_getClubTable(this.model.selectClub.clubId, gameMode, 0, \"0\");\r\n    }\r\n\r\n    enterClubSingleGame() {\r\n        let clubId = LoaclStorage.getNumber('_select_club_id');\r\n        let gameMode = LoaclStorage.getNumber('_club_gameMode', 0);\r\n        let gameId = LoaclStorage.getNumber('_club_gameId', 0);\r\n        let playwayId = LoaclStorage.getString('_club_playwayId', \"0\");\r\n        this.view.clearTableList();\r\n        this.view.mTables = [];\r\n        this.model.playWays = [];\r\n        this.model.send_getClubPlayway(clubId, gameMode, gameId, playwayId);\r\n    }\r\n\r\n    /*********************************************\r\n     * 服务端消息返回\r\n    *********************************************/\r\n    // 刷新俱乐部\r\n    retRefreshCLub(data:any){\r\n        if (data.code == 0) {\r\n            this.updateSelectClub(data);\r\n        }else{\r\n            ModuleManager.instance.showModule(Toast,'异常错误code=' + data.code);\r\n        }\r\n    }\r\n\r\n    // 获取俱乐部玩法\r\n    retGetClubPlayway(data:any){\r\n        if (data.code == 0) {\r\n            let playwayNum = data.playways.length;\r\n            if (playwayNum <= 0) {\r\n                ModuleManager.instance.showModule(Toast,'当前大厅暂未设置玩法.');\r\n            }else{\r\n                let ways:Club.ITableInfo[] = [];\r\n                for (let idx = 0; idx < playwayNum; idx++) {\r\n                    let way:Club.ITableInfo = {\r\n                        playWay:data.playways[idx],\r\n                        tbType:Club.TableType.PWTable,\r\n                        tableid:data.playways[idx].id,\r\n                    }\r\n                    ways.push(way);\r\n                }\r\n                this.model.playWays = this.model.playWays.concat(ways);\r\n                this.view.appendTable(ways, true);\r\n\r\n                // 获取俱乐部已创建桌子\r\n                let gameMode = LoaclStorage.getNumber('_club_gameMode', 0);\r\n                let gameId = LoaclStorage.getNumber('_club_gameId', 0);\r\n                let playwayId = LoaclStorage.getString('_club_playwayId', \"0\");\r\n                this.model.send_getClubTable(this.model.selectClub.clubId, gameMode, gameId, playwayId);\r\n            }\r\n        } else{\r\n            ModuleManager.instance.showModule(Toast,'获取俱乐部玩法失败.');\r\n        }\r\n    }\r\n\r\n    // 获取俱乐部桌子\r\n    retGetClubTable(data:any){\r\n        if (data.code == 0) {\r\n            let gtable:Club.ITableInfo[] = [];\r\n            for (let idx = 0; idx < data.tableInfos.length; idx++) {\r\n                let gtb = data.tableInfos[idx];\r\n                let gData:Club.ITableInfo = {\r\n                    gameInfo:gtb,\r\n                    tableid:gtb.tableId,\r\n                    tbType:Club.TableType.GameTable\r\n                }\r\n                gtable.push(gData);\r\n            }\r\n            this.view.appendTable(gtable, true);\r\n        } else{\r\n            ModuleManager.instance.showModule(Toast,'获取俱乐部桌子失败.');\r\n        }\r\n    }\r\n\r\n    onRemoveClubTable(data:any){\r\n        this.view.removeTableItem(data.tableId);\r\n        cc.log('---------->>>>onremove',data)\r\n    }\r\n\r\n    //推送桌子\r\n    retRefreshClubTable(data:any){\r\n        let gameMode = LoaclStorage.getNumber('_club_gameMode', 0);\r\n        if (data.gameMode != gameMode) {\r\n            return;\r\n        }\r\n\r\n        let gameTable:Club.ITableInfo = {\r\n            tbType:Club.TableType.GameTable,\r\n            gameInfo:data,\r\n            tableid:data.tableId,\r\n        }\r\n        this.view.appendTable([gameTable], false);\r\n    }\r\n}\r\n","import ViewBase from \"../../framework/core/mvvm/view_base\";\r\nimport { ListView, ListViewDir } from \"../../framework/tools/scrollview/listview\";\r\nimport SceneManager from \"../../manager/scene_manager\";\r\nimport { ClubInfo } from \"./component_club\";\r\nimport CustomUIStateSwitcher from \"../public/ui/custom_ui_state_switcher\";\r\nimport LoaclStorage from \"../../manager/local_storage\";\r\nimport { TableInfo } from \"./component_table\";\r\nimport HallServer from \"../server/hallserver/hall_server\";\r\nimport MarqueeComponent from \"./component_marquee\";\r\nimport { Club } from \"./club_data\";\r\nimport TextureManager from \"../../manager/texture_manager\";\r\nimport UserDataManager from \"../../manager/user_manager\";\r\nimport Utility from \"../../utility/Utility\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport Toast from \"../public/module/toast/toast\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class ClubView extends ViewBase {\r\n\r\n    @property(cc.ScrollView)\r\n    scrollview: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    view: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    prefab: cc.Node = null;\r\n\r\n    m_tablelist: ListView = null\r\n\r\n    @property(cc.Label)\r\n    clubName:cc.Label = null;\r\n\r\n    mTables:Club.ITableInfo[] = [];//所有的table\r\n\r\n    @property(cc.Node)\r\n    Sprite_leftFrame: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    Node_top:cc.Node = null;\r\n\r\n    @property(cc.Sprite)\r\n    Sprite_modeIcon:cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    Node_tips:cc.Node = null;\r\n\r\n    @property(cc.Sprite)\r\n    Sprite_scolle:cc.Sprite = null;\r\n\r\n    @property(cc.Toggle)\r\n    Toggle_all:cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    Toggle_pdk:cc.Toggle = null;\r\n\r\n    onShow(){\r\n        let gameId = LoaclStorage.getNumber('_club_gameId', 0);\r\n        if (gameId == 0) {\r\n            this.Toggle_all.isChecked = true;\r\n        } else {\r\n            this.Toggle_pdk.isChecked = true;\r\n        }\r\n\r\n        this.Node_top.active = false;\r\n        this.Node_top.y = 80;\r\n        this.Sprite_leftFrame.active = false;\r\n        this.Sprite_leftFrame.x = -767;\r\n    }\r\n\r\n    onLoad(){\r\n        //创建tablelist\r\n        let list: ListView = new ListView({\r\n            scrollview: this.scrollview,\r\n            view: this.view,\r\n            content: this.content,\r\n            item_prefab: this.prefab,\r\n            cb_host: this,\r\n            item_update_func: this.update_table_list_item,\r\n            row: 2,\r\n            gap_x: 18,\r\n            direction: ListViewDir.Horizontal,\r\n        });\r\n        this.m_tablelist = list\r\n\r\n        // toggle回调\r\n        this.Toggle_all.node.on('toggle', this.toggleCB, this);\r\n        this.Toggle_pdk.node.on('toggle', this.toggleCB, this);\r\n    }\r\n\r\n    clickClubFunc:Function = null;\r\n    setClickClubFunc(func:Function){\r\n        this.clickClubFunc = func;\r\n    }\r\n\r\n    clickToggleFunc:Function = null;\r\n    toggleCB(toggle) {\r\n        if (this.clickToggleFunc) {\r\n            this.clickToggleFunc(toggle);\r\n        }\r\n    }\r\n\r\n    //移除牌桌\r\n    removeTable(data:Club.ITableInfo[]){\r\n        for (let i = 0; i < data.length; i++) {\r\n            let tbData = data[i];\r\n            for (let idx = 0; idx < this.m_tablelist.datas.length; idx++) {\r\n                let tb = this.m_tablelist.datas[idx];\r\n                if (tb.tableid == tbData.tableid) {\r\n                    this.m_tablelist.remove_data(idx,1);\r\n                    this.mTables = this.mTables.splice(idx,1)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //新增牌桌\r\n    appendTable(datas:Club.ITableInfo[], isSort:boolean){\r\n        if (!datas || datas.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        let adds:Club.ITableInfo[] = [];\r\n        for (let idx = 0; idx < datas.length; idx++) {\r\n            let tb = datas[idx];\r\n            let isadd = true;\r\n            for (let i = 0; i < this.mTables.length; i++) {\r\n                let mtb = this.mTables[i];\r\n                if (tb.tableid == mtb.tableid) {\r\n                    this.mTables[i] = tb;\r\n                    isadd = false;\r\n                    break\r\n                }\r\n            }\r\n        \r\n            if (isadd) {\r\n                cc.log('----->>>>>>新增',tb);\r\n                adds.push(tb);\r\n            }\r\n        }\r\n        if (adds.length > 0) {//新增\r\n            this.mTables = this.mTables.concat(datas);\r\n            for (let i = 0; i < adds.length; i++) {\r\n                this.m_tablelist.append_data(adds[i]);\r\n            }\r\n        }\r\n\r\n        //排序\r\n        if (isSort) {\r\n            Club.rank(this.mTables);\r\n        }\r\n        this.refreshTableItem();\r\n    }\r\n\r\n    //更新所有table\r\n    refreshTableItem(){\r\n        for (let idx = 0; idx < this.m_tablelist.datas.length; idx++) {\r\n            let tb = this.mTables[idx];\r\n            this.m_tablelist.refresh_item(idx,tb);\r\n        }\r\n    }\r\n\r\n    removeTableItem(tableid:number){\r\n        for (let idx = 0; idx < this.m_tablelist.datas.length; idx++) {\r\n            let tb = this.mTables[idx];\r\n            if (tb.tableid == tableid) {\r\n                this.m_tablelist.remove_data(idx,1);\r\n                this.mTables.splice(idx,1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //更新我选择的俱乐部信息\r\n    updateClubInfo(data:any){\r\n        this.clubName.string = data.clubName;\r\n        let Sprite_coinFrame = cc.find(\"Sprite_topFrame/Sprite_coinFrame\", this.Node_top);\r\n        let Label_coin = Sprite_coinFrame.getChildByName('Label_coin').getComponent(cc.Label);\r\n        let userData = UserDataManager.instance.getUserData();\r\n        Label_coin.string = Utility.instance.formateNumb(userData.coin).toString();\r\n    }\r\n\r\n    enterClubAction(gameMode:number) {\r\n        if (gameMode == 0) {\r\n            TextureManager.instance.getLocalSprite('club_111',(spriteFrame:cc.SpriteFrame)=>{\r\n                this.Sprite_modeIcon.spriteFrame = spriteFrame;\r\n            });\r\n        } else {\r\n            TextureManager.instance.getLocalSprite('club_118',(spriteFrame:cc.SpriteFrame)=>{\r\n                this.Sprite_modeIcon.spriteFrame = spriteFrame;\r\n            });\r\n        }\r\n\r\n        if (gameMode == 0) {\r\n            // 进入金币厅\r\n            let Sprite_scoreFrame = cc.find(\"Sprite_topFrame/Sprite_scoreFrame\", this.Node_top);\r\n            let Sprite_coinFrame = cc.find(\"Sprite_topFrame/Sprite_coinFrame\", this.Node_top);\r\n            Sprite_scoreFrame.active = false;\r\n            Sprite_coinFrame.active = true;\r\n            let Sprite_butomFrame = this.node.getChildByName('Sprite_butomFrame');\r\n            let Node_vector = Sprite_butomFrame.getChildByName('Node_vector');\r\n            let vector = Node_vector.children;\r\n            for (let i = 0; i < vector.length; i++) {\r\n                const node = vector[i];\r\n                node.active = false;\r\n            }\r\n            this.Node_tips.active = false;\r\n            let Button_rank = Node_vector.getChildByName('Button_rank');\r\n            let Button_personCard = Node_vector.getChildByName('Button_personCard');\r\n            let Button_partner = Node_vector.getChildByName('Button_partner');\r\n            Button_rank.active = true;\r\n            Button_personCard.active = true;\r\n            Button_partner.active = true;\r\n            Button_partner.x = 346;\r\n\r\n        } else {\r\n            // 进入积分厅\r\n            let Sprite_scoreFrame = cc.find(\"Sprite_topFrame/Sprite_scoreFrame\", this.Node_top);\r\n            let Sprite_coinFrame = cc.find(\"Sprite_topFrame/Sprite_coinFrame\", this.Node_top);\r\n            Sprite_scoreFrame.active = true;\r\n            Sprite_coinFrame.active = false;\r\n            let Sprite_butomFrame = this.node.getChildByName('Sprite_butomFrame');\r\n            let Node_vector = Sprite_butomFrame.getChildByName('Node_vector');\r\n            let vector = Node_vector.children;\r\n            for (let i = 0; i < vector.length; i++) {\r\n                const node = vector[i];\r\n                node.active = true;\r\n            }\r\n            this.Node_tips.active = true;\r\n            let Button_rank = Node_vector.getChildByName('Button_rank');\r\n            Button_rank.active = false;\r\n            let Button_partner = Node_vector.getChildByName('Button_partner');\r\n            Button_partner.x = 116;\r\n\r\n        }\r\n        this.Node_top.active = true;\r\n        this.Node_top.stopAllActions();\r\n        this.Node_top.y = 80;\r\n        this.Node_top.runAction(cc.moveTo(0.3, this.Node_top.x, 0));\r\n        this.Sprite_leftFrame.active = true;\r\n        this.Sprite_leftFrame.stopAllActions();\r\n        this.Sprite_leftFrame.x = -767;\r\n        this.Sprite_leftFrame.runAction(cc.moveTo(0.3, -667, this.Sprite_leftFrame.y));\r\n    }\r\n\r\n    clearTableList(){\r\n        this.m_tablelist.set_data([]);\r\n    }\r\n\r\n    update_table_list_item(item: cc.Node, data: any, index: number,item_intact ?:any): void {\r\n        if (data) {\r\n            let tableInfo = item.getComponent(TableInfo);\r\n            tableInfo.clickFunc = this.clickTableItem.bind(this);\r\n            tableInfo.setData(data,index); \r\n        }\r\n    }\r\n\r\n    checkIsCanMoney(data:any) {\r\n\t\tlet isCan = false;\r\n\t\tif (data.gameMode == 0) {\r\n            // 金币厅\r\n            let userData = UserDataManager.instance.getUserData();\r\n\t\t\tlet coin = userData.coin;\r\n\t\t\tlet lowerLimit = data.lowerLimit;\r\n\t\t\tlet upperLimit = data.upperLimit;\r\n\t\t\tif (upperLimit == 0) {\r\n\t\t\t\tif (coin >= lowerLimit) {\r\n\t\t\t\t\tisCan = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (coin >= lowerLimit && coin <= upperLimit) {\r\n\t\t\t\t\tisCan = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// 积分厅\r\n\t\t}\r\n\t\treturn isCan;\r\n    }\r\n\r\n    clickTableItem(data:Club.ITableInfo){\r\n        cc.log('data',data)\r\n        SceneManager.lastEntranceOpenModuleName = 'ClubModule'\r\n        if (data.tbType == Club.TableType.PWTable) {\r\n            if (!this.checkIsCanMoney(data.playWay)) {\r\n                ModuleManager.instance.showModule(Toast,'您金币不足, 当前桌子限制{0}.'.format(data.playWay.lowerLimit));\r\n                return;\r\n            }\r\n            let pwInfo = data.playWay;\r\n            HallServer.instance.createGame(pwInfo.gameId,pwInfo.clubId,pwInfo.id.toString())\r\n        }else if (data.tbType == Club.TableType.GameTable) {\r\n            if (data.gameInfo.players.length >= data.gameInfo.chairCount) {\r\n                ModuleManager.instance.showModule(Toast,'当前桌子人数已满.');\r\n                return;\r\n            }\r\n\r\n            if (!this.checkIsCanMoney(data.gameInfo)) {\r\n                ModuleManager.instance.showModule(Toast,'您金币不足, 当前桌子限制{0}.'.format(data.gameInfo.lowerLimit));\r\n                return;\r\n            }\r\n            let gamInfo = data.gameInfo;\r\n            HallServer.instance.enterGame(gamInfo);\r\n        }\r\n    }\r\n\r\n    onDisable(){\r\n        // this.hideAction();\r\n    }\r\n\r\n    on_destroy(){\r\n        // this.hideAction();\r\n    }\r\n}\r\n","\r\nimport TextureManager from \"../../manager/texture_manager\";\r\nimport { Club } from \"./club_data\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class ClubInfo extends cc.Component {\r\n    @property(cc.Sprite)\r\n    avatar:cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    clubName:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    member:cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    clickBtn:cc.Node = null;\r\n\r\n    clubData:Club.IClubData = null;\r\n\r\n    clubInfCall:Function = null;\r\n\r\n    onLoad(){\r\n        this.clickBtn.on('click',this.clickItem,this)\r\n    }\r\n\r\n    clickItem(){    \r\n        if (this.clubData) {\r\n            cc.log('----------->>>>选择俱乐部')\r\n            if (this.clubInfCall) {\r\n                this.clubInfCall(this.clubData,this);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClubName(name:string){\r\n        this.clubName.string = name;\r\n    }\r\n\r\n    setBgOpacity(p:number){\r\n        this.clickBtn.opacity = p\r\n    }\r\n\r\n    setAvatar(url:string){\r\n        TextureManager.instance.getSprite(url,(spriteFrame:cc.SpriteFrame)=>{\r\n            if (this.node && !this.node.isValid) {\r\n                this.avatar.spriteFrame = spriteFrame;\r\n            }\r\n        });\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n// import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\n// import { start } from \"repl\";\r\nimport CustomUIStateSwitcher from \"../public/ui/custom_ui_state_switcher\";\r\nimport EventManager from \"../../manager/event_manager\";\r\n@ccclass\r\nexport default class MarqueeComponent extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    root: cc.Node = null\r\n    @property(cc.RichText)\r\n    labelPrefab: cc.RichText = null\r\n\r\n    @property(cc.Mask)\r\n    mask: cc.Mask = null\r\n\r\n    @property(cc.Float)\r\n    offset: number = 0\r\n\r\n    @property(cc.Float)\r\n    startOffset: number = 0\r\n\r\n    @property(cc.Float)\r\n    endOffset: number = 0\r\n\r\n    @property(cc.Float)\r\n    speed: number = 100\r\n    // @property({ type: [cc.String] })\r\n    // tag:string[] = [];\r\n    @property(cc.String)\r\n    tag:string=\"\";\r\n    protected m_availableLabelQueue: cc.RichText[] = []\r\n    protected m_playingLabelQueue: cc.RichText[] = []\r\n    protected m_isEmpty = false\r\n    protected m_max_count = 10\r\n    protected m_index: number = 0\r\n    protected m_message_queue: any[] = []\r\n    protected m_playing_queue: any[] = []\r\n    onload()\r\n    {\r\n    }\r\n    start()\r\n    {\r\n        this.m_isEmpty = true;\r\n        this.bindEvent();\r\n\r\n        //test\r\n        // let str = {\r\n        //     content:\"恭喜<color=#ffff00>我</color>在<color=#00ffff>跑的都快</color><color=#00ffff>初级场</color>赢得<color=#fff100>2</color>金币\",\r\n        //     tag:'',\r\n        //     showCount:1000,\r\n        // }\r\n        // this.on_msg_coming(str);\r\n        \r\n    }\r\n    reset(){\r\n        for (let index = 0; index < this.m_playingLabelQueue.length; index++) {\r\n            const element = this.m_playingLabelQueue[index];\r\n            element.node.active = false\r\n            this.m_availableLabelQueue.push(element)\r\n        }\r\n        this.m_playingLabelQueue = []\r\n    }\r\n\r\n    showMarquee(show: boolean){\r\n        this.root.active = show\r\n    }\r\n    play(msg){\r\n        let self = this\r\n        self.m_playing_queue.push(msg)\r\n        self.showMarquee(true)\r\n        let text = msg.content\r\n        let message = msg;\r\n        self.playMessage(text, self.on_next_play.bind(self), function(){\r\n            if(self&&self.root.active){\r\n                self.m_playing_queue.shift()\r\n                var data = message.content\r\n                var count = message.showCount\r\n                if(count>1)\r\n                {\r\n                    message.showCount--;\r\n                    self.play(message);\r\n                }\r\n            if(self.m_playing_queue.length == 0){\r\n                self.showMarquee(false)\r\n            }\r\n            }            \r\n        })\r\n    }\r\n    protected on_next_play(){\r\n        let self = this      \r\n        if(self&&self.root.active){\r\n            let msg = self.m_message_queue.shift()\r\n            if(msg){\r\n                self.play(msg)\r\n                self.m_isEmpty = false\r\n            }else{\r\n                self.m_isEmpty = true\r\n            }\r\n        }  \r\n    }\r\n    playMessage(text: string, next: Function, onFinish: Function){\r\n        let self = this\r\n        let maskWidth = self.mask.node.width\r\n        let label = self.getAvailableLabel()      \r\n        label.string = text\r\n        let startPosX = maskWidth * 0.5 + self.startOffset\r\n        label.node.position = cc.v2(startPosX, label.node.position.y)\r\n        label.node.active = true;\r\n        this.scheduleOnce(function(){\r\n            let labelWidth = self.calcLabelWidth(label)\r\n            let totalDis = labelWidth + maskWidth + self.startOffset - self.endOffset\r\n            let dis1 = labelWidth + self.offset\r\n            let duration1 = self.calcDuration(dis1)\r\n            let duration2 = self.calcDuration(totalDis - dis1)    \r\n            let targetPos1 = startPosX - dis1\r\n            let targetPos2 = -totalDis + startPosX\r\n            let callFun1 = cc.callFunc(function(){\r\n                next && next()\r\n            }.bind(self))\r\n            let callFun2 = cc.callFunc(function(){\r\n                label.node.active = false\r\n                self.addToAvailableLabel(label)\r\n                onFinish && onFinish()\r\n            }.bind(self))\r\n            var move1 = cc.moveTo(duration1, targetPos1, 0)\r\n            var move2 = cc.moveTo(duration2, targetPos2, 0)\r\n            var seq = cc.sequence([move1, callFun1, move2, callFun2]);\r\n            label.node.runAction(seq);\r\n        })\r\n\r\n    }\r\n    //消息过滤 只针对当前模块注册的对应标签\r\n    messageFilter(msg)\r\n    {\r\n        // cc.log('目标标签:',msg.tag);\r\n        // cc.log(\"筛选 msg.tag[1],this.tag\",msg.tag[1],this.tag);\r\n        //cc.log(\"555555\",msg.tag);\r\n        // cc.log(\"msg.tag.length:\",msg.tag.length);\r\n        return msg.tag == this.tag?true:false;\r\n    }\r\n    // changeStyle(styleName: string){\r\n    //     //cc.log(\"styleName:\"+styleName);\r\n    //     styleName = styleName? styleName: 'hall'\r\n    //     this.uiStateSwitcher.SwitchState(styleName)\r\n    //     //cc.log(\"switchPosition(styleName)\")\r\n    //     //this.switchPosition(styleName);\r\n    // }\r\n    protected getAvailableLabel(): cc.RichText{\r\n        let label = this.m_availableLabelQueue.shift()\r\n        if(!label){\r\n            label = this.cloneLabel()\r\n        }\r\n        return label\r\n    }\r\n\r\n    protected cloneLabel(){\r\n        let node = cc.instantiate(this.labelPrefab.node)\r\n        node.parent = this.labelPrefab.node.parent\r\n        node.position = this.labelPrefab.node.position\r\n        node.scale = this.labelPrefab.node.scale\r\n        return node.getComponent(cc.RichText)\r\n    }\r\n\r\n    protected addToAvailableLabel(label: cc.RichText){\r\n        this.m_availableLabelQueue.push(label)\r\n    }\r\n\r\n    protected calcLabelWidth(label: cc.RichText): number{\r\n        return label.node.width\r\n    }\r\n\r\n    protected calcDuration(dis: number){\r\n        return dis / this.speed\r\n    }\r\n    protected on_msg_coming(msg){\r\n        if(this.m_isEmpty){\r\n            this.m_isEmpty = false\r\n            cc.log(\"paly__msg\");\r\n            this.play(msg)\r\n        }else{\r\n            this.m_index++\r\n            msg._index = this.m_index\r\n            cc.log(\"push__msg\");\r\n            this.m_message_queue.push(msg)\r\n            this.sortQueue()    \r\n            this.cutQueue()        \r\n        }\r\n    }\r\n\r\n    protected cutQueue(){\r\n        if(this.m_message_queue.length > this.m_max_count){\r\n            this.m_message_queue.splice(this.m_max_count, this.m_message_queue.length - this.m_max_count)\r\n        }\r\n    }\r\n\r\n    protected sortQueue(){\r\n        this.m_message_queue.sort(function(a, b){\r\n            if(a.level == b.level){\r\n                return a._index - b._index\r\n            }\r\n            return a.level - b.level\r\n        })\r\n    }\r\n    private bindEvent() {\r\n        EventManager.instance.on('Event_Notify_Data', this.on_msg_coming, this,true)\r\n    }\r\n\r\n    private unbindEvent() {\r\n        EventManager.instance.off('Event_Notify_Data', this.on_msg_coming,this)\r\n    }\r\n\r\n    onDisable(){\r\n        this.unbindEvent();\r\n    }\r\n\r\n    //销毁\r\n    onDestroy()\r\n    {\r\n        this.unbindEvent();\r\n    }\r\n\r\n}\r\n","import TextureManager from \"../../manager/texture_manager\";\r\nimport CustomUIStateSwitcher from \"../public/ui/custom_ui_state_switcher\";\r\nimport { GameCfg } from \"../public/const/game_cfg\";\r\nimport { Club } from \"./club_data\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n//牌桌信息\r\n@ccclass\r\nexport class TableInfo extends cc.Component {\r\n   \r\n    @property(CustomUIStateSwitcher)\r\n    seatStyle:CustomUIStateSwitcher = null;\r\n\r\n    @property([cc.Node])\r\n    seatNode:cc.Node[] = [];\r\n\r\n    @property([cc.Node])\r\n    avatar:cc.Node[] = [];\r\n\r\n    @property(cc.Label)\r\n    playWayName:cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    spriteJuShu:cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lab_JuShu:cc.Label = null;\r\n\r\n    tableData:Club.ITableInfo = null;\r\n\r\n    @property(cc.Node)\r\n    clickBtn:cc.Node = null;\r\n\r\n    clickFunc:Function = null;\r\n\r\n    onLoad(){\r\n        this.clickBtn.on('click',this.clickItem,this)\r\n    }\r\n\r\n    clickItem(){    \r\n        cc.log('----------->>>>item',this.node.name)\r\n        if (this.tableData) {\r\n            cc.log('----------->>>>进入游戏了')\r\n            if (this.clickFunc) {\r\n                this.clickFunc(this.tableData);\r\n            }\r\n        }\r\n    }\r\n\r\n    setData(data:Club.ITableInfo,idx:number){\r\n        this.tableData = data;\r\n        if (data.tbType == Club.TableType.GameTable) {//游戏牌桌\r\n            this.setPlayWayName(data.gameInfo.playwayName)\r\n            this.setStyle(data.gameInfo.players.length);\r\n            this.updatePlayerAvatar(data);\r\n            this.setPlayCount(data.gameInfo.gameCount,data.gameInfo.currentCount);\r\n            //更新头像\r\n        }else if (data.tbType == Club.TableType.PWTable) {\r\n            this.setStyle(5);\r\n            this.setPlayWayName(data.playWay.playwayName);\r\n            this.setPlayCount(0,0);\r\n        }\r\n        // this.setPlayerIndex(idx+1);\r\n    }\r\n\r\n    setPlayCount(gameCount:number,countCount:number){\r\n        this.spriteJuShu.active = countCount > 0;\r\n        if (countCount > 0) {\r\n            this.lab_JuShu.string = '{0} {1}/{2}'.format('已开局',countCount,gameCount);\r\n        }\r\n    }\r\n\r\n    setPlayWayName(name:string){\r\n        this.playWayName.string = name;\r\n    }\r\n\r\n    updatePlayerAvatar(data:Club.ITableInfo){\r\n        let activeAvatar = [];\r\n        for (let i = 0; i < this.avatar.length; i++) {\r\n            let node = this.avatar[i];\r\n            if (node.active) {\r\n                let sp = node.getChildByName('SpriteAvatar');\r\n                activeAvatar.push(sp.getComponent(cc.Sprite));\r\n            }\r\n        }\r\n\r\n        for (let idx = 0; idx < data.gameInfo.players.length; idx++) {\r\n            let player = data.gameInfo.players[idx];  \r\n            let avatar = activeAvatar[idx];\r\n            if (avatar) {\r\n                this.setAvatar(player.avatarUrl,avatar);\r\n            }\r\n        }\r\n    }\r\n\r\n    setAvatar(url:string,avatar:cc.Sprite){\r\n        TextureManager.instance.getSprite(url,(spriteFrame:cc.SpriteFrame)=>{\r\n            if (this.node && this.node.isValid) {\r\n                avatar.spriteFrame = spriteFrame;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    setStyle(style:number){\r\n        let st = 'two';\r\n        switch (style) {\r\n            case 1:\r\n                st = 'one';\r\n                break;\r\n            case 2:\r\n                st = 'two';\r\n                break;\r\n            case 3:\r\n                st = 'three';\r\n                break;\r\n            case 4:\r\n                st = 'four';\r\n                break;\r\n            case 5:\r\n                st = 'none';\r\n            default:\r\n                break;\r\n        }\r\n        this.seatStyle.SwitchState(st);\r\n    }\r\n}\r\n","\r\nexport module ServerCode{\r\n    export enum ClubCode{\r\n        OK=0,\r\n    }\r\n\r\n    export enum GameStatus {\r\n\t\tGAME_FREE = 0,  //没在游戏中\r\n\t\tGAME_PLAYING = 1, //游戏中\r\n    }\r\n    \r\n    export enum ServerAdrCode {\r\n\t\tOK = 0,\r\n\t\tGAME_SERVER_NO_OPEN=1, //游戏服未开启\r\n\t\tGAME_SERVER_NO_EXIST= 2, //游戏服不存在\r\n    }\r\n    \r\n    export enum EnterTableCode {\r\n        OK = 0,\r\n\t\tNO_EXIST_ROOM=1, //房间不存在\r\n\t\tFULL_PLAYER_ROOM=2, //房间人数已满\r\n\t\tGAME_MAINTAIN=3, //游戏维护中\r\n\t\tGAME_RELAY=4, //不在同一个游戏服进程，告诉客户端重连\r\n\t\tOTHER_FAIL=5, // 其它错误\r\n\t}\r\n\r\n}","\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// playground: stackblitz.com/edit/countup-typescript\r\nvar CountUp = /** @class */ (function () {\r\n    function CountUp(target, endVal, options) {\r\n        var _this = this;\r\n        this.target = target;\r\n        this.endVal = endVal;\r\n        this.options = options;\r\n        this.version = '2.0.3';\r\n        this.defaults = {\r\n            startVal: 0,\r\n            decimalPlaces: 0,\r\n            duration: 2,\r\n            useEasing: true,\r\n            useGrouping: true,\r\n            smartEasingThreshold: 999,\r\n            smartEasingAmount: 333,\r\n            separator: ',',\r\n            decimal: '.',\r\n            prefix: '',\r\n            suffix: ''\r\n        };\r\n        this.finalEndVal = null; // for smart easing\r\n        this.useEasing = true;\r\n        this.countDown = false;\r\n        this.error = '';\r\n        this.startVal = 0;\r\n        this.paused = true;\r\n        this.count = function (timestamp) {\r\n            if (!_this.startTime) {\r\n                _this.startTime = timestamp;\r\n            }\r\n            var progress = timestamp - _this.startTime;\r\n            _this.remaining = _this.duration - progress;\r\n            // to ease or not to ease\r\n            if (_this.useEasing) {\r\n                if (_this.countDown) {\r\n                    _this.frameVal = _this.startVal - _this.easingFn(progress, 0, _this.startVal - _this.endVal, _this.duration);\r\n                }\r\n                else {\r\n                    _this.frameVal = _this.easingFn(progress, _this.startVal, _this.endVal - _this.startVal, _this.duration);\r\n                }\r\n            }\r\n            else {\r\n                if (_this.countDown) {\r\n                    _this.frameVal = _this.startVal - ((_this.startVal - _this.endVal) * (progress / _this.duration));\r\n                }\r\n                else {\r\n                    _this.frameVal = _this.startVal + (_this.endVal - _this.startVal) * (progress / _this.duration);\r\n                }\r\n            }\r\n            // don't go past endVal since progress can exceed duration in the last frame\r\n            if (_this.countDown) {\r\n                _this.frameVal = (_this.frameVal < _this.endVal) ? _this.endVal : _this.frameVal;\r\n            }\r\n            else {\r\n                _this.frameVal = (_this.frameVal > _this.endVal) ? _this.endVal : _this.frameVal;\r\n            }\r\n            // decimal\r\n            _this.frameVal = Math.round(_this.frameVal * _this.decimalMult) / _this.decimalMult;\r\n            // format and print value\r\n            _this.printValue(_this.frameVal);\r\n            // whether to continue\r\n            if (progress < _this.duration) {\r\n                _this.rAF = requestAnimationFrame(_this.count);\r\n            }\r\n            else if (_this.finalEndVal !== null) {\r\n                // smart easing\r\n                _this.update(_this.finalEndVal);\r\n            }\r\n            else {\r\n                if (_this.callback) {\r\n                    _this.callback();\r\n                }\r\n            }\r\n        };\r\n        // default format and easing functions\r\n        this.formatNumber = function (num) {\r\n            var neg = (num < 0) ? '-' : '';\r\n            var result, x, x1, x2, x3;\r\n            result = Math.abs(num).toFixed(_this.options.decimalPlaces);\r\n            result += '';\r\n            x = result.split('.');\r\n            x1 = x[0];\r\n            x2 = x.length > 1 ? _this.options.decimal + x[1] : '';\r\n            if (_this.options.useGrouping) {\r\n                x3 = '';\r\n                for (var i = 0, len = x1.length; i < len; ++i) {\r\n                    if (i !== 0 && (i % 3) === 0) {\r\n                        x3 = _this.options.separator + x3;\r\n                    }\r\n                    x3 = x1[len - i - 1] + x3;\r\n                }\r\n                x1 = x3;\r\n            }\r\n            // optional numeral substitution\r\n            if (_this.options.numerals && _this.options.numerals.length) {\r\n                x1 = x1.replace(/[0-9]/g, function (w) { return _this.options.numerals[+w]; });\r\n                x2 = x2.replace(/[0-9]/g, function (w) { return _this.options.numerals[+w]; });\r\n            }\r\n            return neg + _this.options.prefix + x1 + x2 + _this.options.suffix;\r\n        };\r\n        this.easeOutExpo = function (t, b, c, d) {\r\n            return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\r\n        };\r\n        this.options = __assign({}, this.defaults, options);\r\n        this.formattingFn = (this.options.formattingFn) ?\r\n            this.options.formattingFn : this.formatNumber;\r\n        this.easingFn = (this.options.easingFn) ?\r\n            this.options.easingFn : this.easeOutExpo;\r\n        this.startVal = this.validateValue(this.options.startVal);\r\n        this.frameVal = this.startVal;\r\n        this.endVal = this.validateValue(endVal);\r\n        this.options.decimalPlaces = Math.max(0 || this.options.decimalPlaces);\r\n        this.decimalMult = Math.pow(10, this.options.decimalPlaces);\r\n        this.resetDuration();\r\n        this.options.separator = String(this.options.separator);\r\n        this.useEasing = this.options.useEasing;\r\n        if (this.options.separator === '') {\r\n            this.options.useGrouping = false;\r\n        }\r\n        // this.el = (typeof target === 'string') ? document.getElementById(target) : target;\r\n        this.el = target;\r\n        this.printValue(this.startVal);\r\n        // if (this.el) {\r\n        //     this.printValue(this.startVal);\r\n        // }\r\n        // else {\r\n        //     this.error = '[CountUp] target is null or undefined';\r\n        // }\r\n    }\r\n    // determines where easing starts and whether to count down or up\r\n    CountUp.prototype.determineDirectionAndSmartEasing = function () {\r\n        var end = (this.finalEndVal) ? this.finalEndVal : this.endVal;\r\n        this.countDown = (this.startVal > end);\r\n        var animateAmount = end - this.startVal;\r\n        if (Math.abs(animateAmount) > this.options.smartEasingThreshold) {\r\n            this.finalEndVal = end;\r\n            var up = (this.countDown) ? 1 : -1;\r\n            this.endVal = end + (up * this.options.smartEasingAmount);\r\n            this.duration = this.duration / 2;\r\n        }\r\n        else {\r\n            this.endVal = end;\r\n            this.finalEndVal = null;\r\n        }\r\n        if (this.finalEndVal) {\r\n            this.useEasing = false;\r\n        }\r\n        else {\r\n            this.useEasing = this.options.useEasing;\r\n        }\r\n    };\r\n    // start animation\r\n    CountUp.prototype.start = function (updateCallback, callback) {\r\n        if (this.error) {\r\n            return;\r\n        }\r\n        this.callback = callback;\r\n        this.updateCallback = updateCallback\r\n        if (this.duration > 0) {\r\n            this.determineDirectionAndSmartEasing();\r\n            this.paused = false;\r\n            this.rAF = requestAnimationFrame(this.count);\r\n        }\r\n        else {\r\n            this.printValue(this.endVal);\r\n        }\r\n    };\r\n    // pause/resume animation\r\n    CountUp.prototype.pauseResume = function () {\r\n        if (!this.paused) {\r\n            cancelAnimationFrame(this.rAF);\r\n        }\r\n        else {\r\n            this.startTime = null;\r\n            this.duration = this.remaining;\r\n            this.startVal = this.frameVal;\r\n            this.determineDirectionAndSmartEasing();\r\n            this.rAF = requestAnimationFrame(this.count);\r\n        }\r\n        this.paused = !this.paused;\r\n    };\r\n    // reset to startVal so animation can be run again\r\n    CountUp.prototype.reset = function () {\r\n        cancelAnimationFrame(this.rAF);\r\n        this.paused = true;\r\n        this.resetDuration();\r\n        this.startVal = this.validateValue(this.options.startVal);\r\n        this.frameVal = this.startVal;\r\n        this.printValue(this.startVal);\r\n    };\r\n    // pass a new endVal and start animation\r\n    CountUp.prototype.update = function (newEndVal) {\r\n        cancelAnimationFrame(this.rAF);\r\n        this.startTime = null;\r\n        this.endVal = this.validateValue(newEndVal);\r\n        if (this.endVal === this.frameVal) {\r\n            return;\r\n        }\r\n        this.startVal = this.frameVal;\r\n        if (!this.finalEndVal) {\r\n            this.resetDuration();\r\n        }\r\n        this.determineDirectionAndSmartEasing();\r\n        this.rAF = requestAnimationFrame(this.count);\r\n    };\r\n    CountUp.prototype.printValue = function (val) {\r\n        var result = this.formattingFn(val);\r\n        if (this.updateCallback) {\r\n            this.updateCallback(result)\r\n        }\r\n        if (this.el && this.el.isValid) {\r\n            this.el.string = result\r\n        }\r\n\r\n\r\n        // if (this.el.tagName === 'INPUT') {\r\n        //     var input = this.el;\r\n        //     input.value = result;\r\n        // }\r\n        // else if (this.el.tagName === 'text' || this.el.tagName === 'tspan') {\r\n        //     this.el.textContent = result;\r\n        // }\r\n        // else {\r\n        //     this.el.innerHTML = result;\r\n        // }\r\n    };\r\n    CountUp.prototype.ensureNumber = function (n) {\r\n        return (typeof n === 'number' && !isNaN(n));\r\n    };\r\n    CountUp.prototype.validateValue = function (value) {\r\n        var newValue = Number(value);\r\n        if (!this.ensureNumber(newValue)) {\r\n            this.error = \"[CountUp] invalid start or end value: \" + value;\r\n            return null;\r\n        }\r\n        else {\r\n            return newValue;\r\n        }\r\n    };\r\n    CountUp.prototype.resetDuration = function () {\r\n        this.startTime = null;\r\n        this.duration = Number(this.options.duration) * 1000;\r\n        this.remaining = this.duration;\r\n    };\r\n    return CountUp;\r\n}());\r\nexports.CountUp = CountUp;\r\n","import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport { GameManager } from '../../../../manager/game_manager';\r\nimport ModelBase from \"../../../../framework/core/mvvm/model_base\";\r\n\r\nconst { ccclass, property, menu} = cc._decorator;\r\n\r\n@ccclass\r\nexport class CreateRoomModel extends ModelBase {\r\n\r\n\r\n}\r\n","import Module, { bindButtonClickEvent, moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\nimport Utility from \"../../../../utility/Utility\";\r\nimport LoaclStorage from \"../../../../manager/local_storage\";\r\nimport { CreateRoomModel } from \"./createroom_model\";\r\nimport { CreateRoomView } from \"./createroom_view\";\r\nimport { PdkRoomConfig } from \"../../../pdk/module/room_config\";\r\nimport { RuleFactory } from \"./data/rule_factory\";\r\n\r\n\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"CreateRoomModule\")\r\nexport class CreateRoomModule extends Module<CreateRoomView, CreateRoomModel> {\r\n\r\n    private lineHeight = 1\r\n\r\n    constructor() {\r\n        super();\r\n        this.windowPrefabResPath = \"package/public/public_createroom\";\r\n        this.viewType = CreateRoomView;\r\n        this.modelType = CreateRoomModel;\r\n        this.needAnim = true\r\n        this.clickAnywhereClose = false;\r\n        this.needViewMask = true\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        switch (pName) {\r\n            case 'closeview':\r\n                ModuleManager.instance.destroyModule('CreateRoomModule')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onInit() {\r\n        let d = RuleFactory.instance.getConfig(PdkRoomConfig.config);\r\n        // let c = d;\r\n        // let d = 0;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport { GameManager } from '../../../../manager/game_manager';\r\n\r\nconst { ccclass, property, menu} = cc._decorator;\r\n\r\n@ccclass\r\nexport class CreateRoomView extends ViewBase {\r\n\r\n    @property(cc.Float)\r\n    startPos:number = 0;\r\n}\r\n","import ModuleManager from \"../../../framework/core/module_manager\";\r\nconst { ccclass, property,  executeInEditMode, menu, inspector} = cc._decorator;\r\nenum SelectState{\r\n    UnSelect = 0,\r\n    Select = 1,    \r\n}\r\nenum SaveState{\r\n    None = 0,\r\n    Save = 1,\r\n}\r\n@ccclass('CustomStyleClass')\r\nclass CustomStyle{\r\n    @property(cc.String)\r\n    name: string = ''\r\n    @property({type:cc.Enum(SaveState), displayName:'保存'})\r\n    value: number = 0\r\n    @property({type:cc.Enum(SelectState), displayName:'选择'})\r\n    select: number = 0\r\n    \r\n    lastSelectState: SelectState = SelectState.UnSelect\r\n}\r\n@ccclass\r\n@executeInEditMode\r\n@menu('custom/CustomUIStateSwitcher')\r\nexport default class CustomUIStateSwitcher extends cc.Component {\r\n    @property([CustomStyle])\r\n    styleList: CustomStyle[] = []\r\n    @property([cc.Node])//玩家座位信息父节点\r\n    nodeList: cc.Node[] = []\r\n    update(){\r\n        if(cc.sys.platform == cc.sys.EDITOR_PAGE){\r\n            this._updateEditor()\r\n        }        \r\n    }\r\n    //用于更新label的显示状态\r\n    private _updateEditor() {\r\n        this._checkSave()\r\n        this._checkSelect()\r\n    }\r\n    private _checkSelect(){\r\n        let styleName = null\r\n        for (let index = 0; index < this.styleList.length; index++) {\r\n            const element = this.styleList[index];\r\n            if(element.select == SelectState.Select && element.lastSelectState == SelectState.UnSelect){\r\n                styleName = element.name                \r\n                element.lastSelectState = SelectState.Select\r\n                break\r\n            }\r\n        }\r\n        if(styleName == null || styleName == ''){\r\n            return\r\n        }\r\n        for (let index = 0; index < this.styleList.length; index++) {\r\n            const element = this.styleList[index];\r\n            if(element.name != styleName){\r\n                element.lastSelectState = SelectState.UnSelect\r\n                element.select = SelectState.UnSelect\r\n            }\r\n        }      \r\n        this.SwitchState(styleName)  \r\n    }\r\n    private _checkSave(){\r\n        let styleName = null\r\n        for (let index = 0; index < this.styleList.length; index++) {\r\n            const element = this.styleList[index];\r\n            if(element.value == SaveState.Save){\r\n                styleName = element.name\r\n                element.value = SaveState.None\r\n            }\r\n        }\r\n        if(styleName == null || styleName == ''){\r\n            return\r\n        }\r\n        let nodeList = this.nodeList\r\n        for (let index = 0; index < nodeList.length; index++) {\r\n            const element = nodeList[index];\r\n            if(element != null){\r\n                this._refreshBrother(element, styleName)\r\n            }\r\n        }\r\n    }\r\n    private _refreshBrother(node, uiStyleName){\r\n        let brother = this._findBrother(node, uiStyleName)\r\n        if(brother == null){\r\n            brother = this._instantiateBrother(node.parent)\r\n            brother.name = this._getBrotherName(node, uiStyleName)\r\n        }\r\n        this._cloneBrotherTransform(brother, node)\r\n        this._cloneBrotherActive(brother, node)\r\n    }\r\n    private _findBrother(node, uiStyleName){\r\n        let brother = node.parent.getChildByName(this._getBrotherName(node, uiStyleName))\r\n        return brother\r\n    }\r\n    private _getBrotherName(node, uiStyleName){\r\n        return '_' + uiStyleName + '_' + node.name\r\n    }\r\n    private _instantiateBrother(parent){\r\n        var node = new cc.Node()\r\n        node.position = cc.v2(0, 0)\r\n        node.scale = 1\r\n        node.parent = parent\r\n        return node\r\n    }\r\n    private _cloneBrotherTransform(node: cc.Node, brother: cc.Node){\r\n        node.setPosition(brother.position)\r\n        node.setScale(brother.scaleX, brother.scaleY)\r\n        node.angle = brother.angle\r\n        node.setAnchorPoint(brother.getAnchorPoint())\r\n        node.setContentSize(brother.getContentSize())        \r\n        node.color = brother.color        \r\n        node.opacity = brother.opacity\r\n        node.skewX = brother.skewX        \r\n        node.skewY = brother.skewY        \r\n        node.group = brother.group\r\n    }\r\n    private _cloneBrotherActive(node, brother){\r\n        node.active = brother.active\r\n    }\r\n    SwitchState(styleName){\r\n        if(styleName == null || styleName == ''){\r\n            return\r\n        }\r\n        let nodeList = this.nodeList\r\n        for (let index = 0; index < nodeList.length; index++) {\r\n            let node = nodeList[index];\r\n            if(node){\r\n                let brother = this._findBrother(node, styleName)\r\n                // Editor.log(styleName, brother.name)\r\n                if(brother != null){\r\n                    this._cloneBrotherTransform(node, brother)\r\n                    this._cloneBrotherActive(node, brother)\r\n                }\r\n            }            \r\n        }\r\n    }\r\n}","const { ccclass } = cc._decorator;\r\n\r\nexport enum LogType {\r\n    GoldTable,\r\n    MatchTable,\r\n    Table,\r\n    Hall,\r\n    Recharge,\r\n}\r\n\r\n@ccclass\r\nexport default class Debug {\r\n\r\n    static _curIndex = 0 //当前上传列表\r\n    static _isUploading = false\r\n    static _uploadArray = [] //等待上传列表\r\n    static logOpen: boolean = true\r\n\r\n    static getLogStr(values?: any[]) {\r\n        let result = Date.now() + \": \"\r\n        if (values) {\r\n            let length = values.length\r\n            for (let i = 0; i < length; i++) {\r\n                if (values[i]) {\r\n                    if (typeof (values[i]) == \"object\") {//如果是对象\r\n                        result = result + \" \" + i + \": \" + JSON.stringify(values[i])\r\n                    } else {\r\n                        result = result + \" \" + i + \": \" + values[i].toString()\r\n                    }\r\n                } else {\r\n                    result = result + \": null \"\r\n                }\r\n            }\r\n        } else {\r\n            result = result + \": null \"\r\n        }\r\n        return result\r\n    }\r\n\r\n    static log(...values) {\r\n        if (!this.logOpen) {\r\n            return\r\n        }\r\n        if (!values || values.length == 0) {\r\n            return\r\n        }\r\n        let length = values.length\r\n        if (length == 1) {\r\n            console.log(values[0])\r\n        } else if (length == 2) {\r\n            console.log(values[0], values[1])\r\n        } else if (length == 3) {\r\n            console.log(values[0], values[1], values[2])\r\n        } else if (length == 4) {\r\n            console.log(values[0], values[1], values[2], values[3])\r\n        } else if (length == 5) {\r\n            console.log(values[0], values[1], values[2], values[3], values[4])\r\n        } else if (length == 6) {\r\n            console.log(values[0], values[1], values[2], values[3], values[4], values[5])\r\n        } else if (length == 7) {\r\n            console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6])\r\n        } else if (length == 8) {\r\n            console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7])\r\n        } else if (length == 9) {\r\n            console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8])\r\n        } else {\r\n            console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8], values[9])\r\n        }\r\n    }\r\n\r\n    static warn(...values) {\r\n        if (!this.logOpen) {\r\n            return\r\n        }\r\n        if (!values || values.length == 0) {\r\n            return\r\n        }\r\n        let length = values.length\r\n        if (length == 1) {\r\n            console.warn(values[0])\r\n        } else if (length == 2) {\r\n            console.warn(values[0], values[1])\r\n        } else if (length == 3) {\r\n            console.warn(values[0], values[1], values[2])\r\n        } else if (length == 4) {\r\n            console.warn(values[0], values[1], values[2], values[3])\r\n        } else if (length == 5) {\r\n            console.warn(values[0], values[1], values[2], values[3], values[4])\r\n        } else if (length == 6) {\r\n            console.warn(values[0], values[1], values[2], values[3], values[4], values[5])\r\n        } else if (length == 7) {\r\n            console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6])\r\n        } else if (length == 8) {\r\n            console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7])\r\n        } else if (length == 9) {\r\n            console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8])\r\n        } else {\r\n            console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8], values[9])\r\n        }\r\n    }\r\n\r\n    static error(...values) {\r\n        if (!this.logOpen) {\r\n            return\r\n        }\r\n        if (!values || values.length == 0) {\r\n            return\r\n        }\r\n        let length = values.length\r\n        if (length == 1) {\r\n            console.error(values)\r\n        } else if (length == 2) {\r\n            console.error(values[0], values[1])\r\n        } else if (length == 3) {\r\n            console.error(values[0], values[1], values[2])\r\n        } else if (length == 4) {\r\n            console.error(values[0], values[1], values[2], values[3])\r\n        } else if (length == 5) {\r\n            console.error(values[0], values[1], values[2], values[3], values[4])\r\n        } else if (length == 6) {\r\n            console.error(values[0], values[1], values[2], values[3], values[4], values[5])\r\n        } else if (length == 7) {\r\n            console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6])\r\n        } else if (length == 8) {\r\n            console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7])\r\n        } else if (length == 9) {\r\n            console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8])\r\n        } else {\r\n            console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8], values[9])\r\n        }\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\nimport ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\n\r\n@ccclass\r\nexport default class NetPromptView extends ViewBase {\r\n    @property(cc.Label)\r\n    tipsLab: cc.Label = null\r\n\r\n\r\n    showTips(str:string){\r\n        this.tipsLab.string = str\r\n\r\n    }\r\n\r\n\r\n}","//默认导入\r\nconst { ccclass, property } = cc._decorator;\r\nimport ModuleBase, { ViewLayer, moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport DialogTipsView from \"./dialog_tips_view\";\r\n\r\n@ccclass\r\n@moduleInit(\"dialogtips\")\r\nexport default class DialogTips extends ModuleBase<DialogTipsView, null> {\r\n\r\n    enterCallback: Function\r\n    closeCallback: Function\r\n    constructor() {\r\n        super();\r\n        this.package = \"public\";\r\n        this.layer = ViewLayer.High;\r\n        this.windowPrefabResPath = \"package/public/dialog_tips\";\r\n        this.viewType = DialogTipsView;\r\n        this.needAnim = true\r\n        this.needViewMask = true\r\n    }\r\n\r\n    onShow(intentData) {\r\n        if (intentData.Content != null){\r\n            this.view.showTips(intentData.Content)\r\n        }\r\n        if (intentData.EnterCallBack != null){\r\n            this.enterCallback = intentData.EnterCallBack\r\n        }\r\n\r\n        if (intentData.CloseCallBack != null){\r\n            this.closeCallback = intentData.EnterCallBack\r\n        }\r\n    }\r\n\r\n    protected onButtonClickName(name : string) {\r\n        switch (name) {\r\n            case \"CloseBtn\":\r\n                this.hide()\r\n                if (this.closeCallback != null) { this.closeCallback() }\r\n                break\r\n            case \"EnterBtn\":\r\n                this.hide()\r\n                if (this.enterCallback != null) { this.enterCallback() }\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n\r\n    onHide() {\r\n        super.onHide()\r\n    }\r\n\r\n    onDisable() {\r\n        this.unscheduleAllCallbacks()\r\n    }\r\n\r\n    onDestroy() {\r\n        this.unscheduleAllCallbacks()\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\nimport ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\n\r\n@ccclass\r\nexport default class NetPromptView extends ViewBase {\r\n\r\n    @property(cc.Label)\r\n    label_title: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    label_content: cc.Label = null\r\n\r\n    @property(cc.Button)\r\n    button_center: cc.Button = null\r\n\r\n    @property(cc.Button)\r\n    button_left: cc.Button = null\r\n\r\n    @property(cc.Button)\r\n    button_right: cc.Button = null\r\n\r\n    show() {\r\n        ModuleManager.instance.playAnim(true, this.node)\r\n    }\r\n\r\n    hide() {\r\n        ModuleManager.instance.playAnim(false, this.node)\r\n    }\r\n}","//默认导入\r\nconst { ccclass, property } = cc._decorator;\r\nimport ModuleBase, { ViewLayer, moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\n\r\nimport DialogView from \"./dialog_view\";\r\nimport Utility from \"../../../../utility/Utility\";\r\n\r\n@ccclass\r\n@moduleInit(\"Dialog\")\r\nexport default class Dialog extends ModuleBase<DialogView, null> {\r\n\r\n    scheduleCallback: Function\r\n\r\n    constructor() {\r\n        super();\r\n        this.package = \"public\";\r\n        this.layer = ViewLayer.High;\r\n        this.windowPrefabResPath = \"package/public/public_dialog\";\r\n        this.viewType = DialogView;\r\n    }\r\n\r\n    _leftBtnCallback: Function\r\n    _rightBtnCallback: Function\r\n    _centerBtnCallback: Function\r\n\r\n    _clickLeftBtnNotHideView: any\r\n    _clickRightBtnNotHideView: any\r\n    _clickCenterBtnNotHideView: any\r\n\r\n    onInit(arg) {\r\n        super.onInit(arg)\r\n        let self = this\r\n        this.view.button_left.node.on('click', function (event) {\r\n            Utility.instance.playButtonSound()\r\n            if (!self._clickLeftBtnNotHideView) {\r\n                self.view.hide()\r\n            }\r\n            if (self._leftBtnCallback) {\r\n                self._leftBtnCallback()\r\n            }\r\n        })\r\n        this.view.button_right.node.on('click', function (event) {\r\n            Utility.instance.playButtonSound()\r\n            if (!self._clickRightBtnNotHideView) {\r\n                self.view.hide()\r\n            }\r\n            if (self._rightBtnCallback) {\r\n                self._rightBtnCallback()\r\n            }\r\n        })\r\n        this.view.button_center.node.on('click', function (event) {\r\n            Utility.instance.playButtonSound()\r\n            if (!self._clickCenterBtnNotHideView) {\r\n                self.view.hide()\r\n            }\r\n            if (self._centerBtnCallback) {\r\n                self._centerBtnCallback()\r\n            }\r\n        })\r\n    }\r\n\r\n    show_center_button(title: string, text: string, callback?: Function, clickButtonConfirmNotHideView?) {\r\n        callback = callback || function () { }\r\n        this.show_custom_dialog(title, text, null, null, callback, null, null, clickButtonConfirmNotHideView)\r\n    }\r\n\r\n    //默认显示两个按钮，左边为取消，右边为确定\r\n    show_common(title: string, text: string, confirmCallback?: Function, cancelCallback?: Function, clickButtonConfirmNotHideView?) {\r\n        confirmCallback = confirmCallback || function () { }\r\n        cancelCallback = cancelCallback || function () { }\r\n        this.show_custom_dialog(title, text, cancelCallback, confirmCallback, null, null, clickButtonConfirmNotHideView)\r\n    }\r\n\r\n    show_custom_dialog(title: string, text: string, leftBtnCallback: Function, rightBtnCallback: Function, centerBtnCallback: Function, clickLeftBtnNotHideView?, clickRightBtnNotHideView?, clickCenterBtnNotHideView?) {\r\n        if (!this.view) {\r\n            let data = {\r\n                title: title,\r\n                text: text,\r\n                leftBtnCallback: leftBtnCallback,\r\n                rightBtnCallback: rightBtnCallback,\r\n                centerBtnCallback: centerBtnCallback,\r\n                clickLeftBtnNotHideView: clickLeftBtnNotHideView,\r\n                clickRightBtnNotHideView: clickRightBtnNotHideView,\r\n                clickCenterBtnNotHideView: clickCenterBtnNotHideView,\r\n            }\r\n            this.AddHandleToWaitDealQueue(this.show_custom, data, this)\r\n            return\r\n        }\r\n        if (!title) {\r\n            this.view.label_title.node.active = false\r\n            title = ''\r\n        } else {\r\n            this.view.label_title.node.active = true\r\n        }\r\n        if (!text) {\r\n            text = ''\r\n        }\r\n        this.view.label_title.string = title\r\n        this.view.label_content.string = text\r\n        if (!leftBtnCallback) {\r\n            this.view.button_left.node.active = false\r\n            this._leftBtnCallback = null\r\n            this._clickLeftBtnNotHideView = null\r\n        } else {\r\n            this.view.button_left.node.active = true\r\n            this._leftBtnCallback = leftBtnCallback\r\n            this._clickLeftBtnNotHideView = clickLeftBtnNotHideView\r\n        }\r\n\r\n        if (!rightBtnCallback) {\r\n            this.view.button_right.node.active = false\r\n            this._rightBtnCallback = null\r\n            this._clickRightBtnNotHideView = null\r\n        } else {\r\n            this.view.button_right.node.active = true\r\n            this._rightBtnCallback = rightBtnCallback\r\n            this._clickRightBtnNotHideView = clickRightBtnNotHideView\r\n        }\r\n\r\n        if (!centerBtnCallback) {\r\n            this.view.button_center.node.active = false\r\n            this._centerBtnCallback = null\r\n            this._clickCenterBtnNotHideView = null\r\n        } else {\r\n            this.view.button_center.node.active = true\r\n            this._centerBtnCallback = centerBtnCallback\r\n            this._clickCenterBtnNotHideView = clickCenterBtnNotHideView\r\n        }\r\n\r\n        this.view.show()\r\n    }\r\n\r\n    show_custom(data) {\r\n        this.show_custom_dialog(data.title, data.text, data.leftBtnCallback, data.rightBtnCallback, data.centerBtnCallback, data.clickLeftBtnNotHideView, data.clickRightBtnNotHideView, data.clickCenterBtnNotHideView)\r\n    }\r\n\r\n}","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Dissolve')\r\nexport default class DissolveShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Dissolve\"\r\n    protected _needUpdate = true\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    uniform float time;\r\n    varying vec2 uv0;\r\n    \r\n    void main()\r\n    {\r\n        vec4 c = color * texture2D(texture,uv0);\r\n        float height = c.r;\r\n        if(height < time)\r\n        {\r\n            discard;\r\n        }\r\n        if(height < time+0.04)\r\n        {\r\n            // 溶解颜色，可以自定义\r\n            c = vec4(.9,.6,0.3,c.a);\r\n        }\r\n        gl_FragColor = c;\r\n    }\r\n    `\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class EditorBoxCenter extends cc.Component {\r\n\r\n    @property(cc.EditBox)\r\n    editorBox: cc.EditBox = null\r\n\r\n    @property()\r\n    charWidth: number = 25\r\n\r\n    @property()\r\n    bgWidth: number = 319\r\n\r\n    @property()\r\n    resetX: number = 0//用于默认提示文字的宽度\r\n\r\n    setString(str: string) {\r\n        this.editorBox.string = str\r\n        this.onTextChange()\r\n    }\r\n\r\n    private onTextChange() {\r\n        let size: cc.Size = this.editorBox.node.getContentSize()\r\n        if (this.editorBox.string.length == 0) {\r\n            size.width = this.bgWidth\r\n            if (this.resetX > 0) {\r\n                size.width = this.resetX\r\n            }\r\n        } else {\r\n            size.width = this.charWidth * this.editorBox.string.length\r\n        }\r\n        this.editorBox.node.setContentSize(size)\r\n    }\r\n\r\n\r\n}","import Debug from \"./debug\";\r\n\r\n\r\nexport default class EventManager {\r\n\r\n    public static readonly instance: EventManager = new EventManager();\r\n    private handles = {};\r\n\r\n    dispatch(eventName: string, ...data) {\r\n        var returns = [] //返回值\r\n        for (var findEvenName in this.handles) {\r\n            if (findEvenName == eventName) {\r\n                for (var i = 0; i < this.handles[findEvenName].length; i++) {\r\n                    var returnValue = null\r\n                    let length = 0\r\n                    let eventData = this.handles[findEvenName][i]\r\n                    let callback = eventData.callback\r\n                    let target = eventData.target\r\n                    let once = eventData.once\r\n                    if (data) {\r\n                        length = data.length\r\n                    }\r\n                    if (length == 0) {\r\n                        returnValue = callback.call(target)\r\n                    } else if (length == 1) {\r\n                        returnValue = callback.call(target, data[0])\r\n                    }\r\n                    else if (length == 2) {\r\n                        returnValue = callback.call(target, data[0], data[1])\r\n                    }\r\n                    else if (length == 3) {\r\n                        returnValue = callback.call(target, data[0], data[1], data[2])\r\n                    }\r\n                    else if (length == 4) {\r\n                        returnValue = callback.call(target, data[0], data[1], data[2], data[3])\r\n                    }\r\n                    else if (length == 5) {\r\n                        returnValue = callback.call(target, data[0], data[1], data[2], data[3], data[4])\r\n                    }\r\n                    else if (length == 6) {\r\n                        returnValue = callback.call(target, data[0], data[1], data[2], data[3], data[4], data[5])\r\n                    }\r\n                    else if (length == 7) {\r\n                        returnValue = callback.call(target, data[0], data[1], data[2], data[3], data[4], data[5], data[6])\r\n                    }\r\n                    else {\r\n                        returnValue = callback.call(target, data)\r\n                    }\r\n                    returns.push(returnValue)\r\n                    if (once) {\r\n                        this.off(eventName, callback, target)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return returns\r\n    }\r\n\r\n    has(eventName: string, callback: Function, target): boolean {\r\n        if (this.handles[eventName] == null) {\r\n            return false\r\n        }\r\n\r\n        let length = this.handles[eventName].length\r\n        for (let i = 0; i < length; i++) {\r\n            if (this.handles[eventName][i].callback == callback && (this.handles[eventName][i].target == target)) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    //如果是同一个回调函数多次调用会过滤后面的函数\r\n    on(eventName: string, callback: Function, target, directCall : boolean, onceCall = false) {\r\n        if (!directCall) {\r\n            Debug.error(\"禁止直接调用EventManager.instance.on事件绑定方法，请使用基类的事件绑定方法\")\r\n            return\r\n        }\r\n        if (this.handles[eventName] == null) {\r\n            this.handles[eventName] = [];\r\n        }\r\n        let data = {\r\n            \"callback\": callback,\r\n            \"target\": target,\r\n            \"once\" : onceCall\r\n        }\r\n        if (!this.has(eventName, callback, target)) {\r\n            this.handles[eventName].push(data)\r\n        }\r\n        else {\r\n            Debug.warn(\"重复注册事件:\", eventName, target)\r\n            let length = this.handles[eventName].length\r\n            for (let i = 0; i < length; i++) {\r\n                if (this.handles[eventName][i].callback == callback && this.handles[eventName][i].target == target) {\r\n                    this.handles[eventName][i] = data\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    off(eventName: string, callback: Function, target) {\r\n        if (this.handles[eventName] == null) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < this.handles[eventName].length; i++) {\r\n            if (this.handles[eventName][i].callback === callback && this.handles[eventName][i].target === target) {\r\n                this.handles[eventName].splice(i, 1)\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.handles = {};\r\n    }\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Frozen')\r\nexport default class FrozenShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Frozen\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 c = color * texture2D(texture, uv0);\r\n        c *= vec4(0.8, 1, 0.8, 1);\r\n        c.b += c.a * 0.2;\r\n        gl_FragColor = c;\r\n    }\r\n    `\r\n}\r\n","\r\nexport let GameCfg = {\r\n    [15] : {\r\n        gName:'10m跑得快',\r\n        module:'PdkModule',\r\n    },\r\n    [16]:{\r\n        gName:'未知',\r\n        module:'',\r\n    }\r\n}\r\n\r\n","import AppData from '../pacakge/public/const/app_data';\r\nimport GameServer from '../pacakge/server/gameserver/game_server';\r\n\r\nexport class GameManager {\r\n    static loginServer: string\r\n    static gameServer: string\r\n    static hallServer:string\r\n\r\n    static setGameServer(ip:string,port:number){\r\n        GameManager.gameServer = \"ws://{0}:{1}\".format(ip,port);\r\n    }\r\n\r\n    static setHallServer(ip:string,port:string){\r\n        GameManager.hallServer = \"ws://{0}:{1}\".format(ip,port);\r\n    }\r\n\r\n\r\n\r\n}","//路由\r\nexport class GameServerRoute{\r\n    static readonly enter = 'table.entryHandler.enter';//游戏服登录 \r\n}","import ServerBase from \"../server_base\";\r\nimport AppData from \"../../public/const/app_data\";\r\nimport ModuleData from \"../../public/const/module_data\";\r\nimport SceneManager from \"../../../manager/scene_manager\";\r\nimport NetPrompt from \"../../public/module/netprompt/netprompt\";\r\nimport ModuleManager from \"../../../framework/core/module_manager\";\r\nimport { GameServerRoute } from \"./game_net_route\";\r\nimport { ServerCode } from \"../../public/const/const_code\";\r\nimport UserDataManager from \"../../../manager/user_manager\";\r\nimport ModelData from \"../../public/model_data\";\r\nimport { GameCfg } from \"../../public/const/game_cfg\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameServer extends ServerBase {\r\n\r\n    public static instance: GameServer;\r\n    onLoad() {\r\n        GameServer.instance = this\r\n        this.init(\"GameServer\")\r\n    }\r\n\r\n\r\n    _init(){\r\n        let self = this;\r\n        this.model.registerNetMsg(GameServerRoute.enter,function(data){\r\n            self.loginRsp(data);\r\n        },true);\r\n    }\r\n\r\n    loginRsp(data){\r\n        if (data.code == ServerCode.EnterTableCode.OK ) {\r\n            \r\n        }else{\r\n            SceneManager.gotoHall();\r\n        }\r\n    }\r\n\r\n    connectServer(url) {\r\n        ModuleManager.instance.showModule(NetPrompt, { showImmediately: true})\r\n        this.connect(url, function (state) {\r\n            if (state == 'handshake') {\r\n                this.startCheckPing();\r\n            }\r\n            cc.log(\"connect server state:\", state)\r\n        })\r\n    }\r\n\r\n    protected onConnected() {\r\n        ModuleManager.instance.hideModule('NetPrompt');\r\n        this._init();\r\n        let self = this\r\n        let cf = GameCfg[AppData.gameid].gName\r\n        cc.log(`连接游戏服成功 ${cf}：`, ModuleData.instance.isTableModuleActive())\r\n\r\n        SceneManager.gotoSubGame(null, () => {\r\n            self.login()\r\n        })\r\n    }\r\n\r\n    protected connectTimes(times:number){\r\n        if (this._reconTimes >= 1) {\r\n            ModuleManager.instance.showModule(NetPrompt, { showImmediately: true, reconnect: true })\r\n        }\r\n\r\n        if (this._reconTimes > this._maxReconTimes) {\r\n            cc.warn(\"登陆服重连次数用完，提示登陆失败\")\r\n            SceneManager.gotoHall();\r\n        }\r\n    }\r\n\r\n    private login() {\r\n        let data = {\r\n            openid:UserDataManager.instance.getUserData().openid,\r\n            clubId:ModelData.instance.clubID,\r\n            playwayId:ModelData.instance.playwayId,\r\n            tableId:ModelData.instance.tableId,\r\n        }\r\n        this.model.send(GameServerRoute.enter,data)\r\n    }\r\n\r\n    protected reconnectServerFail() {\r\n        SceneManager.gotoHall()\r\n    }\r\n\r\n    protected onReconnectServer() {\r\n        ModuleManager.instance.showModule(NetPrompt, { \"showImmediately\": true, \"reconnect\": true })\r\n    }\r\n}\r\n","// import WXGameManager from \"../manager/wxgame_manager\";\r\nimport { Long, util } from \"protobufjs\";\r\nimport { GameManager } from \"../manager/game_manager\";\r\nimport AppData from \"../pacakge/public/const/app_data\";\r\nimport MD5 from \"./md5\";\r\nimport Debug from \"../manager/debug\";\r\nimport MemoryStorage from \"../manager/memory_storage\";\r\nimport ModelData from '../pacakge/public/model_data';\r\n\r\n\r\nexport interface IUrlRequestData {\r\n    baseUrl: string\r\n    url ?: string\r\n    showNetprompt?: boolean\r\n    notRequiredToken?: boolean\r\n    params?: object\r\n    module?: object  //属于那个模块\r\n    requestCount?: number  //请求次数，一般是用来统计在http请求失败\r\n    useCache?: boolean      //是否使用cache数据\r\n    cacheKey?: string\r\n}\r\n\r\n\r\nexport default class GameUtil {\r\n\r\n    private static _http_get(requestData: IUrlRequestData, responeSuccessCallback: any, responeErrorCallback: any) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status == 200) {\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    if (!response) {\r\n                        Debug.error(\"http返回数据格式错误：\", xhr.responseURL, xhr.responseText)\r\n                        return\r\n                    }\r\n \r\n                    if(requestData.useCache){\r\n                        MemoryStorage.setJson(requestData.cacheKey, response)\r\n                    }\r\n                    responeSuccessCallback && responeSuccessCallback(response)\r\n                } else {\r\n                    if (xhr.responseText && xhr.responseText != \"\") {\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        responeErrorCallback(response)\r\n                    } else {\r\n                        responeErrorCallback(null)\r\n                    }\r\n                    Debug.warn(\"http request error:\", xhr.responseText)\r\n                }\r\n            }\r\n        };\r\n        //ontimeout 现在暂时只在web上生效，webchat需要使用onerror\r\n        xhr.onerror = function(err : any) {\r\n            //需要确认在超时的时候是否也会同时回调onreadystatechange\r\n            cc.log(err)\r\n            if (err && typeof(err) =='string' && err.indexOf('timeout') !== -1) {\r\n                if (requestData.requestCount < 6) {\r\n                    GameUtil._http_get(requestData, responeSuccessCallback, responeErrorCallback)\r\n                }\r\n                requestData.requestCount += 1\r\n            }\r\n        }\r\n        //z\r\n        xhr.ontimeout = function(err : any) {\r\n            cc.log(\"ontimeout\")\r\n            if (requestData.requestCount < 6) {\r\n                GameUtil._http_get(requestData, responeSuccessCallback, responeErrorCallback)\r\n            }\r\n            requestData.requestCount += 1\r\n        }\r\n        xhr.timeout = 5000\r\n        xhr.open(\"GET\", requestData.url, true);\r\n        xhr.send();\r\n    }\r\n\r\n    static signature(params : object) {\r\n        let sortedObjKeys = Object.keys(params).sort();\r\n        let text = params[\"token\"]\r\n        for (let key of sortedObjKeys) {\r\n            if (key != \"token\") {\r\n                text += key + params[key]\r\n            }\r\n        }\r\n        text += \"LGCSBnMznC8IO5L1\"\r\n        let md5 = new MD5()\r\n        return md5.hex_md5(text)\r\n    }\r\n\r\n    static loadTexture(url: string, callback) {\r\n        if (url.length <= 0) {\r\n            return;\r\n        }\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status == 200) {\r\n                    var blob = new Uint8Array(this.response);\r\n                    var img = new Image();\r\n                    let strinsdf = util.base64.encode(blob, 0, blob.length)\r\n                    var base = \"data:image/png;base64,\" + strinsdf;\r\n                    img.src = base;\r\n                    img.onload = function () {\r\n                        var texture = new cc.Texture2D();\r\n                        texture.initWithElement(img);\r\n                        texture.handleLoadedTexture();\r\n                        callback(null, texture)\r\n                    }\r\n                } else {\r\n                    callback(xhr.statusText, null)\r\n                    Debug.warn(\"load texture error:\", xhr.statusText)\r\n                }\r\n            }\r\n        };\r\n        xhr.open(\"get\", url);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n    }\r\n\r\n    static formatParamsForHttp(data: IUrlRequestData): string {\r\n        let url: string = \"\"\r\n        let baseUrl = data.baseUrl\r\n        let index: number = 0\r\n        for (const key in data.params) {\r\n            if (!data.params[key]) {\r\n                Debug.warn(\"key not in params:\", key, data.params)\r\n            }\r\n            if (index == 0) {\r\n                url = baseUrl + key + \"=\" + this.encodeURL(data.params[key].toString())\r\n            } else {\r\n                url = url + \"&\" + key + \"=\" + this.encodeURL(data.params[key].toString())\r\n            }\r\n            index += 1\r\n        }\r\n        return url\r\n    }\r\n    //seach是指url从'?'后面的部分，包含?\r\n    static getQueryString(seach: string, keyName: string) {\r\n        //匹配指定name的QueryString\r\n        var reg = new RegExp('(^|&)' + keyName + '=([^&]*)(&|$)', 'i');\r\n        var r = seach.substr(1).match(reg);\r\n        if (r != null) {\r\n            return unescape(r[2]); //用于解码\"=\"后的值,即$2\r\n        }\r\n        return null;\r\n    };\r\n    \r\n\r\n\r\n    static encodeURL(s: string): string {\r\n        return encodeURIComponent(s)\r\n    }\r\n\r\n    static string2point(s): string {\r\n        let l = s.charCodeAt(0)\r\n        let e = l.toString(16)\r\n        return (\"%\" + e)\r\n    }\r\n\r\n    static get_now_timestamp() {\r\n        let d = new Date()\r\n        let timestamp = Date.parse(d.toString());\r\n        return timestamp / 1000\r\n    }\r\n\r\n    static get_md5(timestamp: number | Long, userId: number | Long, salt_a: string, salt_b: string) {\r\n        let md5 = new MD5()\r\n        let s1 = md5.hex_md5(salt_a + userId.toString())\r\n        let s2 = s1.replace(\"-\", \"\").toLowerCase()\r\n        let s3 = md5.hex_md5(timestamp.toString() + s2 + salt_b)\r\n        let s4 = s3.replace(\"-\", \"\").toLowerCase()\r\n        return s4\r\n    }\r\n\r\n    //获取字符串的字节长度\r\n    static stringBytesLength(str: string) {\r\n        let length: number = 0\r\n        for (let i = 0; i < str.length; i++) {\r\n            let iCode = str.charCodeAt(i);\r\n            if ((iCode >= 0 && iCode <= 255) || (iCode >= 0xff61 && iCode <= 0xff9f)) {\r\n                length += 1;\r\n            } else {\r\n                length += 2;\r\n            }\r\n        }\r\n        return length\r\n    }\r\n    //字符串转utf8字节\r\n    static str2UTF8Byte(str) {\r\n        var bytes = new Array();\r\n        var len, c;\r\n        len = str.length;\r\n        for (var i = 0; i < len; i++) {\r\n            c = str.charCodeAt(i);\r\n            if (c >= 0x010000 && c <= 0x10FFFF) {\r\n                bytes.push(((c >> 18) & 0x07) | 0xF0);\r\n                bytes.push(((c >> 12) & 0x3F) | 0x80);\r\n                bytes.push(((c >> 6) & 0x3F) | 0x80);\r\n                bytes.push((c & 0x3F) | 0x80);\r\n            } else if (c >= 0x000800 && c <= 0x00FFFF) {\r\n                bytes.push(((c >> 12) & 0x0F) | 0xE0);\r\n                bytes.push(((c >> 6) & 0x3F) | 0x80);\r\n                bytes.push((c & 0x3F) | 0x80);\r\n            } else if (c >= 0x000080 && c <= 0x0007FF) {\r\n                bytes.push(((c >> 6) & 0x1F) | 0xC0);\r\n                bytes.push((c & 0x3F) | 0x80);\r\n            } else {\r\n                bytes.push(c & 0xFF);\r\n            }\r\n        }\r\n        return bytes;\r\n    }\r\n\r\n    static _ResCaches = {}\r\n\r\n    static loadRes(url: string, completeCallback: (error: Error, resource: any) => void, type ?: typeof cc.Asset, connect?: number): void {\r\n        let res = GameUtil._ResCaches[url]\r\n        if (res) {\r\n            completeCallback(null, res)\r\n            return\r\n        }\r\n\r\n        if (!connect) {\r\n            connect = 1\r\n        }\r\n\r\n        cc.loader.loadRes(url, type, function (error: Error, resource: any) {\r\n            if (error) {\r\n                connect += 1\r\n                if (connect < 10) {\r\n                    GameUtil.loadRes(url, completeCallback, type, connect)\r\n                    Debug.warn(\"loadRes失败，重试：\", url, error)\r\n                } else {\r\n                    completeCallback(error, resource)\r\n                }\r\n            } else {\r\n                GameUtil._ResCaches[url] = resource\r\n                completeCallback(error, resource)\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    static loadResArray(url: string[], completeCallback: (error: Error, resource: any[]) => void, connect?: number): void {\r\n        // let res = GameUtil._ResCaches[url]\r\n        // if (res) {\r\n        //     completeCallback(null, res)\r\n        //     return\r\n        // }\r\n\r\n        if (!connect) {\r\n            connect = 1\r\n        }\r\n        cc.loader.loadResArray(url, function (error: Error, resource: any[]) {\r\n            if (error) {\r\n                connect += 1\r\n                if (connect < 10) {\r\n                    GameUtil.loadResArray(url, completeCallback, connect)\r\n                    Debug.warn(\"loadRes失败，重试：\", url, error)\r\n                } else {\r\n                    completeCallback(error, resource)\r\n                }\r\n            } else {\r\n                // GameUtil._ResCaches[url] = resource\r\n                completeCallback(error, resource)\r\n            }\r\n        })\r\n    }\r\n\r\n    /** \r\n   * @param str：需要截取的字符串 \r\n   * @param len: 需要截取的长度 默认五个汉字的 \r\n   */\r\n    static cutStr(str, len = 7){\r\n        var str_length = 0;\r\n        var str_len = 0;\r\n        let str_cut = new String();\r\n        str_len = str.length;\r\n        for (var i = 0; i < str_len; i++) {\r\n            let a = str.charAt(i);\r\n            str_length++;\r\n            if (escape(a).length > 4) {\r\n                //中文字符的长度经编码之后大于4 \r\n                str_length++;\r\n            }\r\n            str_cut = str_cut.concat(a);\r\n            if (str_length >= len) {\r\n                str_cut = str_cut.concat(\"...\");\r\n                return str_cut;\r\n            }\r\n        }\r\n        //如果给定字符串小于指定长度，则返回源字符串； \r\n        if (str_length <= len) {\r\n            return str;\r\n        }\r\n\r\n    }\r\n\r\n    // 货币格式 fixedNumb:保留小数\r\n    static currencyFormatting(money: number,fixedNumb:number = 2):string {\r\n        if (money == null) {\r\n            return '';\r\n        }\r\n        if (money <= 0.001) {\r\n            return '0';\r\n        }\r\n        let unit = ['','K','M','B','T'];\r\n        let unitIndex = 0;\r\n        let i = money;\r\n        for (;i >= 1e3;) {\r\n            i /= 1e3;\r\n            unitIndex++;\r\n        }\r\n        if (unitIndex < unit.length) {\r\n            let num = Math.floor(i * 1000 / 10) / 100;//这样做为了处理一个误差77.1*100\r\n            return num.toFixed(fixedNumb) + unit[unitIndex];\r\n        }else{//超过T\r\n            return (money / 1e12).toFixed(fixedNumb) + 'T';\r\n        }\r\n    }\r\n\r\n    //保留两位小数\r\n    static getRightMount(mount:number):number{\r\n        if (mount == undefined) {\r\n            cc.warn('mount 异常',mount)\r\n            return 0;\r\n        }\r\n        let r   =   /^[0-9]*[1-9][0-9]*$/\r\n        let m = mount\r\n        if (!r.test(mount.toString()) ) {\r\n            m = parseFloat(mount.toFixed(2));\r\n        }\r\n        return m;\r\n    }\r\n\r\n    //千分位显示\r\n    static addThousands(number) {\r\n        if (number == undefined) {\r\n            return '0';\r\n        }\r\n        if(number==0){\r\n            return number;\r\n        }else if(number==0.0){\r\n            return number;\r\n        }\r\n        var num = number + \"\";\r\n        num = num.replace(new RegExp(\",\",\"g\"),\"\");\r\n        // 正负号处理\r\n        var symble = \"\";\r\n        if(/^([-+]).*$/.test(num)) {\r\n            symble = num.replace(/^([-+]).*$/,\"$1\");\r\n            num = num.replace(/^([-+])(.*)$/,\"$2\");\r\n        }\r\n        if(/^[0-9]+(\\.[0-9]+)?$/.test(num)) {\r\n            var num = num.replace(new RegExp(\"^[0]+\",\"g\"),\"\");\r\n            if(/^\\./.test(num)) {\r\n                num = \"0\" + num;\r\n            }\r\n            var decimal = num.replace(/^[0-9]+(\\.[0-9]+)?$/,\"$1\");\r\n            var integer= num.replace(/^([0-9]+)(\\.[0-9]+)?$/,\"$1\");\r\n            var re=/(\\d+)(\\d{3})/;\r\n            while(re.test(integer)){\r\n                integer = integer.replace(re,\"$1,$2\");\r\n            }\r\n            return symble + integer + decimal;\r\n        } else {\r\n            return number;\r\n        }\r\n    }\r\n\r\n    static AddChild(prefab:cc.Node,parent:cc.Node):cc.Node{\r\n        if (parent === null || prefab === null) {\r\n            cc.log('prefab or parent is null');\r\n            return null;\r\n        }\r\n        let node = cc.instantiate(prefab);\r\n        node.position = cc.Vec2.ZERO;\r\n        node.angle = 0;\r\n        node.scale = 1;\r\n        node.active = true;\r\n        parent.addChild(node);\r\n        return node;\r\n    }\r\n\r\n    static setNodeString(item:cc.Node,str:string){\r\n        let richComp = item.getComponent(cc.RichText)\r\n        if(richComp)\r\n        {\r\n            richComp.string = str;\r\n        }else{\r\n            let labelComp = item.getComponent(cc.Label)\r\n            if(labelComp)\r\n            {\r\n                labelComp.string = str;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/GaussBlur')\r\nexport default class GaussBlurShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"GaussBlur\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    #define repeats 5.\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    uniform float num;\r\n    varying vec2 uv0;\r\n    \r\n    vec4 draw(vec2 uv) {\r\n        return color * texture2D(texture,uv).rgba; \r\n    }\r\n    float grid(float var, float size) {\r\n        return floor(var*size)/size;\r\n    }\r\n    float rand(vec2 co){\r\n        return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n    }\r\n    void main()\r\n    {\r\n        vec4 blurred_image = vec4(0.);\r\n        for (float i = 0.; i < repeats; i++) { \r\n            vec2 q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i,uv0.x+uv0.y))+num); \r\n            vec2 uv2 = uv0+(q*num);\r\n            blurred_image += draw(uv2)/2.;\r\n            q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i+2.,uv0.x+uv0.y+24.))+num); \r\n            uv2 = uv0+(q*num);\r\n            blurred_image += draw(uv2)/2.;\r\n        }\r\n        blurred_image /= repeats;\r\n        gl_FragColor = vec4(blurred_image);\r\n    }\r\n    `\r\n\r\n    protected setParamValue(material: ShaderMaterial) {\r\n        material.setNum(0.03);\r\n    }\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\n\r\nconst renderEngine = cc.renderer.renderEngine;\r\nconst renderer = renderEngine.renderer;\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Glowing')\r\nexport default class GlowingShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Glowing\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `uniform sampler2D texture;\r\n    uniform vec3 iResolution;\r\n    uniform float time;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n\r\n    const float radius = 6.0;\r\n    // const vec3 color = vec3(0.9, 0.9, 0.0);\r\n\r\n    float coefficient()\r\n    {\r\n        float v = mod(time, 3.0);\r\n        if(v > 1.5)\r\n            v = 3.0 - v;\r\n        return v;\r\n    }\r\n\r\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n    {\r\n        vec2 uv = fragCoord.xy;\r\n        vec2 unit = 1.0 / iResolution.xy;\r\n        vec4 texel = texture2D(texture, uv);\r\n        vec4 finalColor = vec4(0.0);\r\n        float density = 0.0;\r\n\r\n        if(texel.a >= 1.0)\r\n        {\r\n            finalColor = texel;\r\n        }\r\n        else\r\n        {\r\n            for(int i = 0; i < int(radius); ++i)\r\n            {\r\n                density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y + unit.y * float(i))).a;\r\n                density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y + unit.y * float(i))).a;\r\n                density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y - unit.y * float(i))).a;\r\n                density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y - unit.y * float(i))).a;\r\n            }\r\n            density = density / radius;\r\n            finalColor = vec4(color.rgb * density, density);\r\n            finalColor += vec4(texel.rgb * texel.a, texel.a);\r\n        }\r\n        fragColor = finalColor;\r\n    }\r\n\r\n    void main()\r\n    {\r\n        mainImage(gl_FragColor, uv0.xy);\r\n    }`\r\n\r\n    protected _defines = []\r\n\r\n    protected _params = [{ name: 'iResolution', type: renderer.PARAM_FLOAT3 }]\r\n\r\n    protected setParamValue(material: ShaderMaterial) {\r\n        this.node.color = new cc.Color().fromHEX(\"#1A7ADC\")\r\n        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);\r\n        material.setParamValue(\"iResolution\", iResolution)\r\n    }\r\n\r\n}\r\n","import ModelBase from \"../../framework/core/mvvm/model_base\";\r\nimport { HallNetRoute } from \"./hall_route\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class HllModel extends ModelBase {\r\n    \r\n    send_enterClub(clubid:number){\r\n        let data = {\r\n            clubId:clubid\r\n        }\r\n        this.send(HallNetRoute.enterClub,data)\r\n    }\r\n\r\n    send_getclubList(){\r\n        this.send(HallNetRoute.getClubList);\r\n    }\r\n\r\n}\r\n","import HallView from \"./hall_view\";\r\nimport Module, { moduleInit } from \"../../framework/core/mvvm/module_base\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport GameServer from \"../server/gameserver/game_server\";\r\nimport HallServer from \"../server/hallserver/hall_server\";\r\nimport AppData from \"../public/const/app_data\";\r\nimport LoaclStorage from \"../../manager/local_storage\";\r\nimport ModelData from \"../public/model_data\";\r\nimport { HllModel } from \"./hall_model\";\r\nimport { HallServerRoute } from \"../server/hallserver/hall_net_route\";\r\nimport { HallNetRoute } from \"./hall_route\";\r\nimport { GameManager } from \"../../manager/game_manager\";\r\nimport { ClubModule } from \"../club/club_module\";\r\nimport { ServerCode } from \"../public/const/const_code\";\r\nimport GameUtil from \"../../utility/game_util\";\r\nimport Toast from \"../public/module/toast/toast\";\r\nimport JoinClubModule from \"../joinClub/joinClub_module\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"HallModule\")\r\nexport default class HallModule extends Module<HallView,HllModel> {\r\n    constructor(){\r\n        super()\r\n        this.windowPrefabResPath = 'package/hall/hall';\r\n        this.viewType = HallView;\r\n        this.modelType = HllModel;\r\n    }\r\n\r\n    onLoad(){\r\n    }\r\n\r\n    onShow(){\r\n        this.model.netClient = HallServer.instance.netClient;\r\n        this.model.clearMsgEvent();\r\n        this.registerMsg();\r\n        this.view.updateUserInfo();\r\n        this.model.send_getclubList();\r\n    }\r\n\r\n    registerMsg(){\r\n        this.model.registerNetMsg(HallNetRoute.getClubList, this.retGetClubList.bind(this));\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        let clubId = LoaclStorage.getNumber('_select_club_id')\r\n        switch (pName) {\r\n            case 'Button_createClub':\r\n                ModuleManager.instance.showModule(Toast,'您未获得创建联盟权限!');\r\n                break;\r\n            case 'Button_joinClub':\r\n                ModuleManager.instance.showModule(JoinClubModule, null);\r\n                break;\r\n            case 'game_15':\r\n                LoaclStorage.setNumber('_club_gameId', 15);\r\n                ModuleManager.instance.showModule(ClubModule, clubId);\r\n                break;\r\n            case 'game_16':\r\n            case 'game_20':\r\n            case 'game_21':\r\n            case 'game_22':\r\n            case 'game_30':\r\n            case 'game_31':\r\n                LoaclStorage.setNumber('_club_gameId', 0);\r\n                ModuleManager.instance.showModule(ClubModule, clubId);\r\n                break;\r\n            case 'game_23':\r\n                ModuleManager.instance.showModule(Toast,'敬请期待!');\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //暂定为跑得快\r\n    private gotoPdk(){\r\n        HallServer.instance.close();\r\n        GameServer.instance.connectServer(GameManager.hallServer)\r\n    }\r\n\r\n    retGetClubList(data:any){\r\n        if (data.code != 0) {\r\n            this.view.showClubList(null);\r\n        } else{\r\n            if (data.clubList.length <= 0) {\r\n                this.view.showClubList(null);\r\n            } else {\r\n                this.view.showClubList(data);\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n//路由\r\nexport class HallServerRoute{\r\n    static readonly enter = 'connector.entryHandler.enter';//游戏服登录 \r\n\r\n    static readonly joinRoom = 'connector.lobbyHandler.joinRoom';\r\n\r\n    static readonly getGameServerInfo = 'connector.lobbyHandler.getGameServerInfo';\r\n}","\r\n//亲友圈 大厅\r\nexport class HallNetRoute{\r\n    static readonly enterClub = 'connector.clubHandler.enterClub';\r\n\r\n    static readonly getClubList = 'connector.clubHandler.getClubList';\r\n\r\n    static readonly onRefreshClub = 'connector.clubHandler.onRefreshClub';\r\n}","import ModelBase from \"../../../framework/core/mvvm/model_base\";\r\nimport NetClient from \"../../../framework/net/net_client\";\r\nimport TimeManager from \"../../../manager/time_manager\";\r\nimport { GameManager } from \"../../../manager/game_manager\";\r\nimport ModuleManager from \"../../../framework/core/module_manager\";\r\nimport NetPrompt from \"../../public/module/netprompt/netprompt\";\r\nimport GameServer from \"../gameserver/game_server\";\r\nimport ModelData from \"../../public/model_data\";\r\nimport AppData from \"../../public/const/app_data\";\r\nimport HallModule from \"../../hall/hall_module\";\r\nimport ServerBase from \"../server_base\";\r\nimport SceneManager from \"../../../manager/scene_manager\";\r\nimport LoginServer from \"../loginserver/login_server\";\r\nimport { HallServerRoute } from \"./hall_net_route\";\r\nimport { HallNetRoute } from \"../../hall/hall_route\";\r\nimport { ServerCode } from \"../../public/const/const_code\";\r\nimport UserDataManager from \"../../../manager/user_manager\";\r\nimport ModuleData from \"../../public/const/module_data\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HallServer extends ServerBase {\r\n\r\n    public static instance: HallServer;\r\n\r\n    isNeedCheck:boolean = true;//游戏中返回大厅\r\n\r\n    onLoad() {\r\n        HallServer.instance = this\r\n        this.init('HallServer');\r\n    }\r\n\r\n    _init() {\r\n        let self = this;\r\n        this.model.registerNetMsg(HallServerRoute.enter,function(data){\r\n            self.loginRsp(data);\r\n        },true);\r\n        this.model.registerNetMsg(HallServerRoute.joinRoom,function(data){\r\n            self.joinRoom(data);\r\n        },true)\r\n\r\n        this.model.registerNetMsg(HallServerRoute.getGameServerInfo,function(data){\r\n            self.enterTable(data);\r\n        },true)\r\n    }\r\n\r\n\r\n    //登录成功断开登录服\r\n    loginRsp(data:any){\r\n        if (data.code == 200) {//登陆成功\r\n            UserDataManager.instance.setUserData(data.info);\r\n            let info = data.info.gameInfo;\r\n            if (info && this.isNeedCheck) {\r\n                if (info.code == ServerCode.GameStatus.GAME_PLAYING) {\r\n                    ModelData.instance.tableId = info.gameInfo.tableId || 0;\r\n                    ModelData.instance.clubID = info.gameInfo.clubId || 0;\r\n                    ModelData.instance.playwayId = info.gameInfo.playwayId || '0';\r\n                    this._enterGameServer(info.gameInfo.host,info.gameInfo.port)\r\n                }else{\r\n                    SceneManager.showHallUI();\r\n                }\r\n            }else{\r\n                SceneManager.showHallUI();\r\n            }\r\n            this.isNeedCheck = true;//默认需要进行检测，仅仅返回大厅时不需\r\n        }\r\n    }\r\n\r\n    enterTable(data:any){\r\n        if (data.code == ServerCode.ServerAdrCode.OK) {\r\n            this._enterGameServer(data.host,data.port)\r\n        }else{\r\n            SceneManager.showHallUI();\r\n        }\r\n    }\r\n\r\n    private _enterGameServer(ip:string,port:number){\r\n        ModuleManager.instance.showModule(NetPrompt)\r\n        this.close();\r\n        GameManager.setGameServer(ip,port);\r\n        GameServer.instance.connectServer(GameManager.gameServer);\r\n    }\r\n\r\n    checkIsPlaying(data:any){\r\n        ModuleManager.instance.showModule(NetPrompt)\r\n        if (data.code == ServerCode.GameStatus.GAME_PLAYING) {\r\n            this.close();\r\n            let info = data.gameInfo;\r\n            GameManager.setGameServer(info.ip,info.port);\r\n            GameServer.instance.connectServer(GameManager.gameServer);\r\n        }else{\r\n            SceneManager.showHallUI();\r\n        }\r\n    }\r\n\r\n    //创建游戏\r\n    createGame(gameid:number,clubid:number,playwayid:string){\r\n        this._joinGame(gameid,0,clubid,playwayid);\r\n    }\r\n\r\n    //加入游戏\r\n    enterGame(gameInfo:any){\r\n        ModuleManager.instance.showModule(NetPrompt)\r\n        AppData.gameid = gameInfo.gameId;\r\n        ModelData.instance.tableId = gameInfo.tableId;\r\n        ModelData.instance.clubID = 0;\r\n        ModelData.instance.playwayId = '';\r\n        this._enterGameServer(gameInfo.host,gameInfo.port)\r\n    }\r\n\r\n    private _joinGame(gameid:number,tableid:number,clubid:number,playwayid:string){\r\n        ModuleManager.instance.showModule(NetPrompt)\r\n        AppData.gameid = gameid;\r\n        ModelData.instance.tableId = tableid;\r\n        ModelData.instance.clubID = clubid;\r\n        ModelData.instance.playwayId = playwayid;\r\n        this.model.send(HallServerRoute.getGameServerInfo,{gameId:gameid});\r\n    }\r\n\r\n    private joinRoom(data:any){\r\n        if (data.code == 0) {\r\n            this.close();\r\n            ModuleManager.instance.showModule(NetPrompt, { showImmediately:true})\r\n            GameServer.instance.connectServer(GameManager.hallServer);\r\n        }\r\n    }\r\n\r\n    //账号登陆\r\n    loginHallServer(){\r\n        ModuleManager.instance.showModule(NetPrompt)\r\n        this.connectServer(GameManager.hallServer,(state:string)=>{\r\n            if (state == 'handshake') {\r\n                let data = {\r\n                    code:AppData.code,\r\n                    userInfo:{\r\n                        name:AppData.code,\r\n                        avatarUrl:'http://sincebest-bull-test.oss-cn-hangzhou.aliyuncs.com/20180723_e852c0d11edf47529de8e7c69c848ca8.jpg',\r\n                        gender:1,\r\n                    },    \r\n                    platform:'win',\r\n                }\r\n                \r\n                this.model.send(HallServerRoute.enter,data);\r\n                this.startCheckPing();\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    //连接登录\r\n    connectServer(url, callback?: (state: string) => void) {\r\n        this.connect(url,callback);\r\n        cc.log(\"大厅服连接时间：\", TimeManager.instance.getServerTime())\r\n\r\n    }\r\n\r\n    protected connectTimes(times:number){\r\n        if (this._reconTimes >= 1) {\r\n            ModuleManager.instance.showModule(NetPrompt, { showImmediately: true, reconnect: true })\r\n        }\r\n\r\n        if (this._reconTimes > this._maxReconTimes) {\r\n            cc.warn(\"登陆服重连次数用完，提示登陆失败\")\r\n            SceneManager.gotoLogin();\r\n        }\r\n    }\r\n\r\n    onConnected(){\r\n        this._init();\r\n        ModuleManager.instance.hideModule('NetPrompt');\r\n    }\r\n}\r\n","import ViewBase from \"../../framework/core/mvvm/view_base\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport UserDataManager, { IUserData } from \"../../manager/user_manager\";\r\nimport Utility from \"../../utility/Utility\";\r\nimport GameUtil from \"../../utility/game_util\";\r\nimport SceneManager from \"../../manager/scene_manager\";\r\nimport TextureManager from \"../../manager/texture_manager\";\r\nimport { ClubListItem } from \"./component/clubList_item\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HallView extends ViewBase {\r\n    @property(cc.Node)\r\n    userIDLab:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    userNameLab:cc.Node = null;\r\n\r\n    @property(cc.Sprite)\r\n    avatar:cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    Sprite_noClubFlag:cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    Label_noClubFlag:cc.Label = null;\r\n\r\n    @property(cc.PageView)\r\n    PageView_clubList:cc.PageView = null;\r\n\r\n    @property(cc.Node)\r\n    Sprite_clubFrame:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    Node_gameItem:cc.Node = null;\r\n\r\n    onShow(){\r\n        SceneManager.lastEntranceOpenModuleName = ''\r\n    }\r\n    onLoad(){\r\n        ModuleManager.instance.hideModule(\"NetPrompt\")\r\n    }\r\n\r\n    updateUserInfo(){\r\n        let data = UserDataManager.instance.getUserData();\r\n        GameUtil.setNodeString(this.userIDLab,\"ID:\"+data.uid);\r\n        let subName = Utility.instance.playerNameClamp(data.name,5,'...');\r\n        GameUtil.setNodeString(this.userNameLab,subName);\r\n        TextureManager.instance.getSprite(data.avatarUrl,(sp:cc.SpriteFrame)=>{\r\n            this.avatar.spriteFrame = sp;\r\n        })\r\n    }\r\n\r\n    showClubList(data:any) {\r\n        if (data) {\r\n            this.Sprite_noClubFlag.node.active = false;\r\n            this.Label_noClubFlag.node.active = false;\r\n            this.Node_gameItem.active = true;\r\n            this.PageView_clubList.removeAllPages();\r\n            for (let i = 0; i < data.clubList.length; i++) {\r\n                const clubData = data.clubList[i];\r\n                let Sprite_clubFrame = cc.instantiate(this.Sprite_clubFrame);\r\n                Sprite_clubFrame.active = true;\r\n                this.PageView_clubList.addPage(Sprite_clubFrame);\r\n                let item = Sprite_clubFrame.getComponent(ClubListItem);\r\n                item.initUI(clubData);\r\n            }\r\n            \r\n        } else {\r\n            this.Sprite_noClubFlag.node.active = true;\r\n            this.Label_noClubFlag.node.active = true;\r\n            this.Node_gameItem.active = false;\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Ice')\r\nexport default class IceShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Ice\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 clrx = color * texture2D(texture, uv0);\r\n        float brightness = (clrx.r + clrx.g + clrx.b) * (1. / 3.);\r\n        float gray = (1.5)*brightness;\r\n        clrx = vec4(gray, gray, gray, clrx.a)*vec4(0.8,1.2,1.5,1);\r\n        gl_FragColor =clrx;\r\n    }\r\n    `\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ImageFont extends cc.Component {\r\n\r\n    @property([cc.SpriteFrame])\r\n    sourceSprites: cc.SpriteFrame[] = []\r\n\r\n    @property([cc.Sprite])\r\n    numSprites: cc.Sprite[] = []\r\n\r\n    setNum(num) {\r\n        if (num < 10) {\r\n            this.showCount(1)\r\n            this.numSprites[0].spriteFrame = this.sourceSprites[num]\r\n        } else if (num < 99) {\r\n            this.showCount(2)\r\n            let ge = Math.floor(num % 10)\r\n            let shi = Math.floor(num / 10)\r\n            this.numSprites[0].spriteFrame = this.sourceSprites[shi]\r\n            this.numSprites[1].spriteFrame = this.sourceSprites[ge]\r\n        } else if (num < 999) {\r\n            this.showCount(3)\r\n            let bai = Math.floor(num / 100)\r\n            let shi = Math.floor(num / 10 % 10)\r\n            let ge = Math.floor(num % 10)\r\n            this.numSprites[0].spriteFrame = this.sourceSprites[bai]\r\n            this.numSprites[1].spriteFrame = this.sourceSprites[shi]\r\n            this.numSprites[2].spriteFrame = this.sourceSprites[ge]\r\n        }\r\n    }\r\n\r\n    private showCount(count) {\r\n        let length = this.numSprites.length\r\n        for (let i = 0; i < length; i++) {\r\n            this.numSprites[i].node.active = i < count\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import ModuleManager from \"../framework/core/module_manager\";\r\nimport AppData from \"../pacakge/public/const/app_data\";\r\n\r\nimport AuthModule from \"../pacakge/hall/module/auth/auth_module\";\r\nimport SceneManager from \"../manager/scene_manager\";\r\nimport CustomUIStateSwitcher from \"../pacakge/public/ui/custom_ui_state_switcher\";\r\nimport { PdkRoomConfig } from \"../pacakge/pdk/module/room_config\";\r\nimport { CreateRoomModule } from \"../pacakge/hall/module/createroom/createroom_module\";\r\nimport LoadingModule from \"../pacakge/public/loading/loading\";\r\nimport GameUtil from \"../utility/game_util\";\r\nimport EventManager from \"../manager/event_manager\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Init extends cc.Component {\r\n    @property(cc.Canvas)\r\n    canvas: cc.Canvas = null;\r\n\r\n    curDR : cc.Size\r\n\r\n    onLoad() {\r\n\r\n        this.resize()\r\n\r\n        cc.view.setResizeCallback(() => {\r\n            cc.log(\"setResizeCallback\", cc.view.getFrameSize())\r\n            EventManager.instance.dispatch('_resize_');\r\n            this.resize()\r\n        })\r\n\r\n        SceneManager.init();\r\n        \r\n        AppData.setServerByData()\r\n        \r\n        if (cc.sys.isNative) {\r\n            \r\n            ModuleManager.instance.showModule(LoadingModule)\r\n        }else{\r\n            GameUtil.loadResArray([\"package/hall/module/auth/AuthModule\",], function (error: Error, resource: any[]) {\r\n                if (error) {\r\n                    //TODO:需要处理的异常\r\n                } else {\r\n                    ModuleManager.instance.showModule(AuthModule)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    resize() {\r\n         // var cvs = cc.find('Canvas').getComponent(cc.Canvas);\r\n         let canvas = this.canvas\r\n         //保存原始设计分辨率，供屏幕大小变化时使用\r\n         if (!this.curDR) {\r\n             this.curDR = canvas.designResolution;\r\n         }\r\n         var dr = this.curDR;\r\n         var s = cc.view.getFrameSize();\r\n         var rw = s.width;\r\n         var rh = s.height;\r\n         var finalW = rw;\r\n         var finalH = rh;\r\n \r\n         if ((rw / rh) > (dr.width / dr.height)) {\r\n             //!#zh: 是否优先将设计分辨率高度撑满视图高度。 */\r\n             //cvs.fitHeight = true;\r\n \r\n             //如果更长，则用定高\r\n             finalH = dr.height;\r\n             finalW = finalH * rw / rh;\r\n         }\r\n         else {\r\n             /*!#zh: 是否优先将设计分辨率宽度撑满视图宽度。 */\r\n             //cvs.fitWidth = true;\r\n             //如果更短，则用定宽\r\n             finalW = dr.width;\r\n             finalH = rh / rw * finalW;\r\n         }\r\n         canvas.designResolution = cc.size(finalW, finalH);\r\n         canvas.node.width = finalW;\r\n         canvas.node.height = finalH;\r\n         // canvas.node.emit('resize');\r\n \r\n         if (true) {\r\n             let frameSize = s;\r\n             AppData.isIphoneX = frameSize.width / frameSize.height >= 2\r\n             // AppData.isIphoneX = false\r\n             AppData.designResolution = canvas.designResolution\r\n             AppData.iphonexOffset = AppData.designResolution.width * (44 / 812)//偏移齐刘海宽度\r\n         }\r\n         cc.log(\"canvas\", canvas.designResolution, AppData.iphonexOffset)\r\n    }\r\n\r\n    loadiPhoneX(){\r\n        if (CC_PREVIEW && AppData.iphonexOffset) {\r\n            GameUtil.loadRes(\"package/public/iPhoneX\", function (err, prefab: cc.Prefab) {\r\n                let newNode = cc.instantiate(prefab)\r\n                ModuleManager.instance.highest.addChild(newNode);\r\n            })\r\n        }\r\n    }\r\n}\r\n","import ModelBase from \"../../framework/core/mvvm/model_base\";\r\nimport { JoinClubNetRoute } from \"./joinClub_route\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class JoinClubModel extends ModelBase {\r\n    // 邀请码加入俱乐部\r\n    send_joinClubByCode(invateCode:number) {\r\n        let data = {\r\n            invateCode:invateCode\r\n        }\r\n        this.send(JoinClubNetRoute.joinClubByCode, data)\r\n    }\r\n}\r\n","import JoinClubView from \"./joinClub_view\";\r\nimport { JoinClubModel } from \"./joinClub_model\";\r\nimport Module, { moduleInit } from \"../../framework/core/mvvm/module_base\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport Toast from \"../public/module/toast/toast\";\r\nimport { JoinClubNetRoute } from \"./joinClub_route\";\r\nimport HallServer from \"../server/hallserver/hall_server\";\r\nimport { ClubModule } from \"../club/club_module\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"JoinClubModule\")\r\nexport default class JoinClubModule extends Module<JoinClubView,JoinClubModel> {\r\n    constructor(){\r\n        super()\r\n        this.windowPrefabResPath = 'package/joinClub/joinClub';\r\n        this.viewType = JoinClubView;\r\n        this.modelType = JoinClubModel;\r\n        this.needAnim = true;\r\n        this.clickAnywhereClose = false;\r\n        this.needViewMask = true;\r\n    }\r\n\r\n    onLoad(){\r\n    }\r\n\r\n    onShow(){\r\n        this.model.netClient = HallServer.instance.netClient;\r\n        this.model.clearMsgEvent();\r\n        this.registerMsg();\r\n        this.view.emitBindFunc(this.joinClubByCode.bind(this));\r\n    }\r\n\r\n    registerMsg() {\r\n        this.model.registerNetMsg(JoinClubNetRoute.joinClubByCode, this.retJoinClubByCode.bind(this));\r\n        this.model.registerNetMsg(JoinClubNetRoute.onjoinClub, this.retOnJoinClub.bind(this));\r\n    }\r\n\r\n    joinClubByCode(invateCode:number) {\r\n        this.model.send_joinClubByCode(invateCode);\r\n    }\r\n\r\n    retJoinClubByCode(data:any) {\r\n        if (data.code != 0) {\r\n            ModuleManager.instance.showModule(Toast,'亲友圈不存在');\r\n        }\r\n    }\r\n\r\n    retOnJoinClub(data:any) {\r\n        let clubId = data.clubId;\r\n        ModuleManager.instance.showModule(ClubModule, clubId);\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        cc.log(pName)\r\n        switch (pName) {\r\n            case 'Button_close':\r\n                ModuleManager.instance.destroyModule('JoinClubModule');\r\n                break;\r\n            case 'Button_copy':\r\n                ModuleManager.instance.showModule(Toast,'粘贴板中暂无正确的邀请码!');\r\n                break;\r\n            case 'Button_0':\r\n                this.view.inputNumber(0);\r\n                break;\r\n            case 'Button_1':\r\n                this.view.inputNumber(1);\r\n                break;\r\n            case 'Button_2':\r\n                this.view.inputNumber(2);\r\n                break;\r\n            case 'Button_3':\r\n                this.view.inputNumber(3);\r\n                break;\r\n            case 'Button_4':\r\n                this.view.inputNumber(4);\r\n                break;\r\n            case 'Button_5':\r\n                this.view.inputNumber(5);\r\n                break;\r\n            case 'Button_6':\r\n                this.view.inputNumber(6);\r\n                break;\r\n            case 'Button_7':\r\n                this.view.inputNumber(7);\r\n                break;\r\n            case 'Button_8':\r\n                this.view.inputNumber(8);\r\n                break;\r\n            case 'Button_9':\r\n                this.view.inputNumber(9);\r\n                break;\r\n            case 'Button_10':\r\n                this.view.resetNumber();\r\n                break;\r\n            case 'Button_11':\r\n                this.view.deleteNumber();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nexport class JoinClubNetRoute{\r\n    static readonly joinClubByCode = 'connector.clubHandler.joinClubByCode';\r\n    static readonly onjoinClub = 'onjoinClub';\r\n}","import ViewBase from \"../../framework/core/mvvm/view_base\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport Toast from \"../public/module/toast/toast\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class JoinClubView extends ViewBase {\r\n    @property(cc.Label)\r\n    Label_input:cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    Node_num:cc.Node = null;\r\n\r\n    sendJoinClubCallBack:Function = null;\r\n\r\n    onShow(){\r\n    }\r\n\r\n    onLoad(){\r\n    }\r\n\r\n    emitBindFunc(cb) {\r\n        this.sendJoinClubCallBack = cb;\r\n    }\r\n\r\n    inputNumber(num:number) {\r\n        let subStr = \"\";\r\n        let items = this.Node_num.getComponentsInChildren(cc.Label);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            if (item.string == \"\") {\r\n                item.string = num.toString();\r\n                subStr = subStr + item.string;\r\n                if (i == 7) {\r\n                    if (this.sendJoinClubCallBack) {\r\n                        this.sendJoinClubCallBack(parseInt(subStr));\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                subStr = subStr + item.string;\r\n            }\r\n        }\r\n        this.Label_input.node.active = false;\r\n    }\r\n\r\n    deleteNumber() {\r\n        let items = this.Node_num.getComponentsInChildren(cc.Label);\r\n        for (let i = items.length-1; i >= 0; i--) {\r\n            const item = items[i];\r\n            if (item.string != \"\") {\r\n                item.string = \"\";\r\n                if (i == 0) {\r\n                    this.Label_input.node.active = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    resetNumber() {\r\n        let items = this.Node_num.getComponentsInChildren(cc.Label);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            item.string = \"\";\r\n        }\r\n        this.Label_input.node.active = true;\r\n    }\r\n\r\n}\r\n","import ModuleManager from \"../framework/core/module_manager\";\r\n\r\nimport EventManager from \"./event_manager\";\r\n// import { Polyglot } from \"../lib/polyglot\";\r\nimport GameUtil from '../utility/game_util';\r\n\r\n\r\n\r\nexport default class LanguageManager {\r\n\r\n    private static _textChineseData\r\n\r\n    private static _curLang = \"zh-cn\"\r\n\r\n    private static _polyInst\r\n\r\n    static init (language) {\r\n        if (language === LanguageManager._curLang) {\r\n            return;\r\n        }\r\n        LanguageManager._curLang = language\r\n        LanguageManager.loadLanguageData(language)\r\n    }\r\n\r\n    static change() {\r\n        let ch = LanguageManager._curLang == \"zh-cn\" ? \"en\" : \"zh-cn\"\r\n        this.init(ch)\r\n    }\r\n\r\n    static loadLanguageData (language) {\r\n        GameUtil.loadRes(\"i18n/\" + language, (error: Error, asset: cc.JsonAsset) => {\r\n            if (error) {\r\n                cc.log(error)\r\n                return\r\n            }\r\n            LanguageManager._polyInst = asset.json;\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    static t (key : string, opt ?: any) {\r\n        // if (LanguageManager._polyInst) {\r\n        //     return LanguageManager._polyInst.t(key, opt);\r\n        // }\r\n        return LanguageManager._polyInst[key] || \"\"\r\n    }\r\n}","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class LayoutGrid extends cc.Component {\r\n\r\n    @property(cc.Vec2)\r\n    cellSize: cc.Vec2 = cc.Vec2.ZERO\r\n    @property(Number)//8列\r\n    colNum: number = 8\r\n    @property(Number)\r\n    spacingX: number = 0\r\n    @property(Number)\r\n    spacingY: number = 0\r\n    @property(cc.Node)\r\n    prefabNode: cc.Node = null\r\n\r\n    @property({ type: cc.Enum(cc.Layout.HorizontalDirection), displayName: \"水平方向\", serializable: true })\r\n    horizontalDirection: cc.Layout.HorizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT\r\n\r\n    getChilds(count: number, defaultActive = true) {\r\n        let childs: cc.Node[] = []\r\n        for (let i = 0; i < count; i++) {\r\n            let node = this._getNode(i, this.node)\r\n            node.name = i.toString()\r\n            childs.push(node)\r\n        }\r\n        if (count < this.node.childrenCount) {\r\n            for (let i = count; i < this.node.childrenCount; i++) {\r\n                this.node.children[i].active = false\r\n            }\r\n        }\r\n        for (let i = 0; i < count; i++) {\r\n            this._setPosByIndex(i, defaultActive)\r\n        }\r\n        this.node.sortAllChildren()\r\n        return childs\r\n    }\r\n\r\n    _setPosByIndex(index: number, defaultActive: boolean) {\r\n        if (this.horizontalDirection == cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {\r\n            let xIndex = Math.floor(index % this.colNum)//第几列\r\n            let yIndex = Math.floor(index / this.colNum)//第几行\r\n            let xPos = -this.cellSize.x / 2 - Math.abs(this.spacingX * xIndex)\r\n            let yPos = -Math.abs(this.spacingY * yIndex)\r\n            let child = this.node.children[index]\r\n            child.position = cc.v2(xPos, yPos)\r\n            child.zIndex = (this.colNum - xIndex) + yIndex * this.colNum\r\n            child.active = defaultActive\r\n        } else {\r\n            let xIndex = Math.floor(index % this.colNum)//第几列\r\n            let yIndex = Math.floor(index / this.colNum)//第几行\r\n            let xPos = this.cellSize.x / 2 + Math.abs(this.spacingX * xIndex)\r\n            let yPos = -Math.abs(this.spacingY * yIndex)\r\n            let child = this.node.children[index]\r\n            child.position = cc.v2(xPos, yPos)\r\n            child.zIndex = index\r\n            child.active = defaultActive\r\n        }\r\n    }\r\n\r\n    _getNode(index: number, parent: cc.Node): cc.Node {\r\n        if (parent.childrenCount <= index) {\r\n            var node = cc.instantiate(this.prefabNode)\r\n            node.position = cc.v2(0, 0)\r\n            node.scale = 1\r\n            node.parent = parent\r\n            return this._getNode(index, parent)\r\n        }\r\n        else {\r\n            return parent.children[index]\r\n        }\r\n    }\r\n\r\n}","import { ListView, ListViewDir } from \"./listview\"\r\nimport Debug from \"../../../manager/debug\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ListView_Demo extends cc.Component {\r\n\r\n    @property(cc.ScrollView)\r\n    scrollview: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    view: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    prefab: cc.Node = null;\r\n\r\n    m_list: ListView = null\r\n\r\n    onLoad() {\r\n        let list: ListView = new ListView({\r\n            scrollview: this.scrollview,\r\n            view: this.view,\r\n            content: this.content,\r\n            item_prefab: this.prefab,\r\n            cb_host: this,\r\n            item_update_func: this.update_list_item,\r\n            select_cb: this.on_item_select,\r\n            column: 2,\r\n            row: 5,\r\n            gap_y: 2,\r\n            direction: ListViewDir.Vertical,\r\n        });\r\n\r\n        let length = 100\r\n        let datas = []\r\n        for (let i = 0; i < length; i++) {\r\n            datas.push(\"我是第\" + i + \"条数据！\")\r\n        }\r\n        this.m_list = list\r\n        list.set_data(datas);\r\n        list.select_item(55)\r\n        list.scroll_to(55)\r\n\r\n    }\r\n\r\n    on_item_select(data: any, index: number) {\r\n        Debug.log(data, index);\r\n    }\r\n\r\n    update_list_item(item: cc.Node, data: any, index: number): void {\r\n        item.getComponent(cc.Label).string = data.toString();\r\n        if (index == this.m_list.selected_index) {\r\n            item.color = cc.Color.RED\r\n        } else {\r\n            item.color = cc.Color.WHITE\r\n        }\r\n    }\r\n}\r\n","import EventManager from \"../../../manager/event_manager\";\r\n\r\n//多行多列无限循环列表(只能使用item大小固定的时候) 使用方法请看listview_demo.ts\r\nexport class ListView {\r\n    private m_scrollview: cc.ScrollView;\r\n    private m_view: cc.Node;\r\n    private m_content: cc.Node;\r\n    private m_item_prefab: cc.Node;\r\n    private m_node_pool: cc.Node[];\r\n\r\n    private m_dir: number;\r\n    private m_width: number;\r\n    private m_height: number;\r\n    private m_gap_x: number;\r\n    private m_gap_y: number;\r\n    private m_row: number;\r\n    private m_col: number;\r\n    private m_item_width: number;\r\n    private m_item_height: number;\r\n    private m_cb_host: any;\r\n    private item_update_func: (item: cc.Node, data: any, index: number,item_intact ?:any) => void;\r\n    private recycle_cb: (item: cc.Node) => void;\r\n    private select_cb: (data: any, index: number) => void;\r\n    private item_select_func: (item: cc.Node, is_select: boolean, index: number) => void;\r\n    private scroll_to_end_cb: () => void;\r\n    private item_click_func: (item: cc.Node) => void\r\n    private item_click_ex_func: (item: any) => void\r\n    private m_auto_scrolling: boolean;\r\n    m_items: ListItem[];\r\n    private m_start_index: number;\r\n    private m_stop_index: number;\r\n    private m_datas: any[];\r\n    private m_selected_index: number = -1;\r\n\r\n    constructor(params: ListViewParams) {\r\n        this.m_scrollview = params.scrollview;\r\n        this.m_view = params.view;\r\n        this.m_content = params.content;\r\n        this.m_item_prefab = params.item_prefab;\r\n        this.m_item_prefab.active = false;\r\n        this.m_item_width = this.m_item_prefab.width;\r\n        this.m_item_height = this.m_item_prefab.height;\r\n        this.m_dir = params.direction || ListViewDir.Vertical;\r\n        this.m_width = params.width || this.m_view.width;\r\n        this.m_height = params.height || this.m_view.height;\r\n        this.m_gap_x = params.gap_x || 0;\r\n        this.m_gap_y = params.gap_y || 0;\r\n        this.m_row = params.row || 1;\r\n        this.m_col = params.column || 1;\r\n        this.m_cb_host = params.cb_host;\r\n        this.item_update_func = params.item_update_func;\r\n        this.recycle_cb = params.recycle_cb;\r\n        this.select_cb = params.select_cb;\r\n        this.item_select_func = params.item_select_func;\r\n        this.scroll_to_end_cb = params.scroll_to_end_cb;\r\n        this.item_click_func = params.item_click_func;\r\n        this.item_click_ex_func = params.item_click_ex_func;\r\n        this.m_auto_scrolling = params.auto_scrolling || false;\r\n        this.m_node_pool = [];\r\n\r\n        if (this.m_dir == ListViewDir.Vertical) {\r\n            let real_width: number = (this.m_item_width + this.m_gap_x) * this.m_col - this.m_gap_x;\r\n            if (real_width > this.m_width) {\r\n                cc.log(\"real width > width, resize scrollview to realwidth,\", this.m_width, \"->\", real_width);\r\n                this.m_width = real_width;\r\n            }\r\n            this.m_content.width = this.m_width;\r\n        }\r\n        else {\r\n            let real_height: number = (this.m_item_height + this.m_gap_y) * this.m_row - this.m_gap_y;\r\n            if (real_height > this.m_height) {\r\n                cc.log(\"real height > height, resize scrollview to realheight,\", this.m_height, \"->\", real_height);\r\n                this.m_height = real_height;\r\n            }\r\n            this.m_content.height = this.m_height;\r\n        }\r\n        this.m_view.setContentSize(this.m_width, this.m_height);\r\n        this.m_scrollview.vertical = this.m_dir == ListViewDir.Vertical;\r\n        this.m_scrollview.horizontal = this.m_dir == ListViewDir.Horizontal;\r\n        this.m_scrollview.inertia = true;\r\n        this.m_scrollview.node.on(\"scrolling\", this.on_scrolling, this);\r\n        this.m_scrollview.node.on(\"scroll-to-bottom\", this.on_scroll_to_end, this);\r\n        this.m_scrollview.node.on(\"scroll-to-right\", this.on_scroll_to_end, this);\r\n\r\n        //@ts-ignore\r\n        let beforDestroy = this.m_scrollview._onPreDestroy.bind(this.m_scrollview);\r\n        //@ts-ignore\r\n        this.m_scrollview._onPreDestroy = ()=>{\r\n            if (beforDestroy) {\r\n                beforDestroy();\r\n            }\r\n            this.destroy();\r\n        }\r\n\r\n        //网页布局变化时需要重置item 位置\r\n        EventManager.instance.on('_resize_',this.resize,this,true);\r\n    }\r\n\r\n    resize(){\r\n        if (this.m_scrollview.node && this.m_scrollview.node.isValid) {\r\n            //下一帧刷新布局\r\n            let node = this.m_scrollview.node;\r\n            let sequence = cc.sequence(cc.delayTime(0) , cc.callFunc(()=>{\r\n                this.resize_content();\r\n                this.on_scrolling();\r\n            }));\r\n            node.stopAllActions();\r\n            node.runAction(sequence);\r\n        } \r\n    }\r\n\r\n    get datas(): any[] {\r\n        return this.m_datas;\r\n    }\r\n\r\n    get selected_index(): number {\r\n        return this.m_selected_index;\r\n    }\r\n\r\n    get selectd_data(): any {\r\n        let item: ListItem = this.m_items[this.m_selected_index];\r\n        if (item) {\r\n            return item.data;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    set_data(datas: any[]) {\r\n        this.clear_items();\r\n        this.m_items = [];\r\n        this.m_datas = datas;\r\n        this.m_selected_index = -1\r\n        datas.forEach((data) => {\r\n            let item: ListItem = this.pack_item(data);\r\n            this.m_items.push(item);\r\n        });\r\n        this.layout_items(0);\r\n        this.resize_content();\r\n        this.m_start_index = -1;\r\n        this.m_stop_index = -1;\r\n        if (this.m_dir == ListViewDir.Vertical) {\r\n            this.m_content.y = 0;\r\n        }\r\n        else {\r\n            this.m_content.x = 0;\r\n        }\r\n        if (this.m_items.length > 0) {\r\n            this.on_scrolling();\r\n        }\r\n    }\r\n\r\n    insert_data(index: number, ...datas: any[]) {\r\n        if (datas.length == 0) {\r\n            cc.log(\"nothing to insert\");\r\n            return;\r\n        }\r\n        if (!this.m_items) {\r\n            this.m_items = [];\r\n        }\r\n        if (!this.m_datas) {\r\n            this.m_datas = [];\r\n        }\r\n        if (index < 0 || index > this.m_items.length) {\r\n            cc.warn(\"invalid index\", index);\r\n            return;\r\n        }\r\n        let is_append: boolean = index == this.m_items.length;\r\n        let items: ListItem[] = [];\r\n        datas.forEach((data) => {\r\n            let item: ListItem = this.pack_item(data);\r\n            items.push(item);\r\n        });\r\n        this.m_datas.splice(index, 0, ...datas);\r\n        this.m_items.splice(index, 0, ...items);\r\n        this.layout_items(index);\r\n        this.resize_content();\r\n        this.m_start_index = -1;\r\n        this.m_stop_index = -1;\r\n\r\n        if (this.m_auto_scrolling && is_append) {\r\n            this.scroll_to_end();\r\n        }\r\n        this.on_scrolling();\r\n    }\r\n\r\n    remove_data(index: number, count: number = 1) {\r\n        if (!this.m_items) {\r\n            cc.log(\"call set_data before call this method\");\r\n            return;\r\n        }\r\n        if (index < 0 || index >= this.m_items.length) {\r\n            cc.warn(\"invalid index\", index);\r\n            return;\r\n        }\r\n        if (count < 1) {\r\n            cc.log(\"nothing to remove\");\r\n            return;\r\n        }\r\n        let old_length: number = this.m_items.length;\r\n        let del_items: ListItem[] = this.m_items.splice(index, count);\r\n        this.m_datas.splice(index, count);\r\n        //回收node\r\n        del_items.forEach((item) => {\r\n            this.recycle_item(item);\r\n        });\r\n\r\n        //重新排序index后面的\r\n        if (index + count < old_length) {\r\n            this.layout_items(index);\r\n        }\r\n        this.resize_content();\r\n        if (this.m_items.length > 0) {\r\n            this.m_start_index = -1;\r\n            this.m_stop_index = -1;\r\n            this.on_scrolling();\r\n        }\r\n    }\r\n\r\n    append_data(...datas: any[]) {\r\n        if (!this.m_items) {\r\n            this.m_items = [];\r\n        }\r\n        this.insert_data(this.m_items.length, ...datas);\r\n    }\r\n\r\n    scroll_to(index: number) {\r\n        if (this.m_dir == ListViewDir.Vertical) {\r\n            const min_y = this.m_height - this.m_content.height;\r\n            if (min_y >= 0) {\r\n                cc.log(\"no need to scroll\");\r\n                return;\r\n            }\r\n            let [_, y] = this.vertical_layout(index, this.m_item_width, this.m_item_height, this.m_col, this.m_gap_x, this.m_gap_y, false);\r\n            if (y < min_y) {\r\n                y = min_y;\r\n                cc.log(\"content reach bottom\");\r\n            }\r\n            if (y > 0) {\r\n                y = 0;\r\n                cc.log(\"content reach top\");\r\n            }\r\n            this.m_scrollview.setContentPosition(cc.v2(this.m_content.x, -y));\r\n            this.on_scrolling();\r\n        }\r\n        else {\r\n            const max_x = this.m_content.width - this.m_width;\r\n            if (max_x <= 0) {\r\n                cc.log(\"no need to scroll\");\r\n                return;\r\n            }\r\n            let [x, _] = this.horizontal_layout(index, this.m_item_width, this.m_item_height, this.m_row, this.m_gap_x, this.m_gap_y, false);\r\n            if (x > max_x) {\r\n                x = max_x;\r\n                cc.log(\"content reach right\");\r\n            }\r\n            if (x < 0) {\r\n                x = 0;\r\n                cc.log(\"content reach left\");\r\n            }\r\n            this.m_scrollview.setContentPosition(cc.v2(-x, this.m_content.y));\r\n            this.on_scrolling();\r\n        }\r\n    }\r\n\r\n    scroll_to_end() {\r\n        if (this.m_dir == ListViewDir.Vertical) {\r\n            this.m_scrollview.scrollToBottom();\r\n        }\r\n        else {\r\n            this.m_scrollview.scrollToRight();\r\n        }\r\n    }\r\n\r\n    refresh_item(index: number, data: any) {\r\n        if (!this.m_items) {\r\n            cc.log(\"call set_data before call this method\");\r\n            return;\r\n        }\r\n        if (index < 0 || index >= this.m_items.length) {\r\n            cc.warn(\"invalid index\", index);\r\n            return;\r\n        }\r\n        let item: ListItem = this.m_items[index];\r\n        item.data = data;\r\n        this.m_datas[index] = data;\r\n        if (item.node) {\r\n            if (this.recycle_cb) {\r\n                this.recycle_cb.call(this.m_cb_host, item.node);\r\n            }\r\n            this.item_update_func.call(this.m_cb_host, item.node, item.data, index,item);\r\n        }\r\n    }\r\n\r\n    select_item(index) {\r\n        if (index == this.m_selected_index) {\r\n            return;\r\n        }\r\n        if (this.m_selected_index != -1) {\r\n            this.inner_select_item(this.m_selected_index, false);\r\n        }\r\n        this.inner_select_item(index, true);\r\n    }\r\n\r\n    private destroy() {\r\n        this.clear_items();\r\n        this.m_node_pool.forEach((node) => {\r\n            node.destroy();\r\n        });\r\n        this.m_node_pool = null;\r\n        this.m_items = null;\r\n        this.m_datas = null;\r\n\r\n        if (cc.isValid(this.m_scrollview.node)) {\r\n            this.m_scrollview.node.off(\"scrolling\", this.on_scrolling, this);\r\n            this.m_scrollview.node.off(\"scroll-to-bottom\", this.on_scroll_to_end, this);\r\n            this.m_scrollview.node.off(\"scroll-to-right\", this.on_scroll_to_end, this);\r\n        }\r\n        EventManager.instance.off('_resize_',this.resize,this);\r\n    }\r\n\r\n    private on_scroll_to_end() {\r\n        if (this.scroll_to_end_cb) {\r\n            this.scroll_to_end_cb.call(this.m_cb_host);\r\n        }\r\n    }\r\n\r\n    private on_scrolling() {\r\n        if (!this.m_items || !this.m_items.length) {\r\n            return;\r\n        }\r\n        if (this.m_dir == ListViewDir.Vertical) {\r\n            let posy: number = this.m_content.y;\r\n            if (posy < 0) {\r\n                posy = 0;\r\n            }\r\n            if (posy > this.m_content.height - this.m_height) {\r\n                posy = this.m_content.height - this.m_height;\r\n            }\r\n            let start: number = 0;\r\n            let stop: number = this.m_items.length - 1;\r\n            let viewport_start: number = -posy;\r\n            let viewport_stop: number = viewport_start - this.m_height * 1.5;//修改：this.m_height->this.m_height*1.5防止显示不全\r\n\r\n            while (this.m_items[start].y - this.m_item_height > viewport_start) {\r\n                start++;\r\n            }\r\n\r\n            while (this.m_items[stop].y + this.m_item_height < viewport_stop) {\r\n                stop--;\r\n            }\r\n            if (start != this.m_start_index && stop != this.m_stop_index) {\r\n                this.m_start_index = start;\r\n                this.m_stop_index = stop;\r\n                this.render_items();\r\n            }\r\n        }\r\n        else {\r\n            let posx: number = this.m_content.x;\r\n            if (posx > 0) {\r\n                posx = 0;\r\n            }\r\n            if (posx < this.m_width - this.m_content.width) {\r\n                posx = this.m_width - this.m_content.width;\r\n            }\r\n            let start: number = 0;\r\n            let stop: number = this.m_items.length - 1;\r\n            let viewport_start: number = -posx;\r\n            let viewport_stop: number = viewport_start + this.m_width;\r\n            while (this.m_items[start].x + this.m_item_width < viewport_start) {\r\n                start++;\r\n            }\r\n            while (this.m_items[stop].x - this.m_item_width > viewport_stop) {\r\n                stop--;\r\n            }\r\n            if (start != this.m_start_index && stop != this.m_stop_index) {\r\n                this.m_start_index = start;\r\n                this.m_stop_index = stop;\r\n                this.render_items();\r\n            }\r\n        }\r\n    }\r\n\r\n    private inner_select_item(index: number, is_select: boolean) {\r\n        let item: ListItem = this.m_items[index];\r\n        if (!item) {\r\n            cc.warn(\"inner_select_item index is out of range{\", 0, this.m_items.length - 1, \"}\", index);\r\n            return;\r\n        }\r\n        item.is_select = is_select;\r\n        if (item.node && this.item_select_func) {\r\n            this.item_select_func.call(this.m_cb_host, item.node, is_select, index);\r\n        }\r\n        if (is_select) {\r\n            this.m_selected_index = index;\r\n            if (this.select_cb) {\r\n                this.select_cb.call(this.m_cb_host, item.data, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    private spawn_node(index: number): cc.Node {\r\n        let node: cc.Node = this.m_node_pool.pop();\r\n        if (!node) {\r\n            node = cc.instantiate(this.m_item_prefab);\r\n            node.active = true;\r\n        }\r\n        node.parent = this.m_content;\r\n        if (this.item_click_func || this.item_click_ex_func) {\r\n            node.off(\"click\", this.item_click, this)\r\n            node.on(\"click\", this.item_click, this)\r\n        }\r\n        return node;\r\n    }\r\n\r\n    private item_click(event: cc.Button) {\r\n        let node: cc.Node = event.node\r\n        if(this.item_click_func)\r\n        {\r\n            this.item_click_func.call(this.m_cb_host, node)\r\n        }\r\n        if(this.item_click_ex_func != null)\r\n        {\r\n            let item: ListItem;\r\n            for(let i=0,len=this.m_items.length;i < len; i++)\r\n            {\r\n                if(this.m_items[i].node == node)\r\n                {\r\n                    item = this.m_items[i];\r\n                    break;\r\n                }\r\n            }\r\n            if(item != null)\r\n            {\r\n                this.item_click_ex_func.call(this.m_cb_host, item.data)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private recycle_item(item: ListItem) {\r\n        if (item.node && cc.isValid(item.node)) {\r\n            if (this.recycle_cb) {\r\n                this.recycle_cb.call(this.m_cb_host, item.node);\r\n            }\r\n            item.node.removeFromParent();\r\n            this.m_node_pool.push(item.node);\r\n            item.node = null;\r\n        }\r\n    }\r\n\r\n    private clear_items() {\r\n        if (this.m_items) {\r\n            this.m_items.forEach((item) => {\r\n                this.recycle_item(item);\r\n            });\r\n        }\r\n    }\r\n\r\n    private render_items() {\r\n        let item: ListItem;\r\n        for (let i: number = 0; i < this.m_start_index; i++) {\r\n            item = this.m_items[i];\r\n            if (item.node) {\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for (let i: number = this.m_items.length - 1; i > this.m_stop_index; i--) {\r\n            item = this.m_items[i];\r\n            if (item.node) {\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for (let i: number = this.m_start_index; i <= this.m_stop_index; i++) {\r\n            item = this.m_items[i];\r\n            if (!item.node) {\r\n                item.node = this.spawn_node(i);\r\n                this.item_update_func.call(this.m_cb_host, item.node, item.data, i, item);\r\n                if (this.item_select_func) {\r\n                    this.item_select_func.call(this.m_cb_host, item.node, item.is_select, i);\r\n                }\r\n            }\r\n            item.node.setPosition(item.x, item.y);\r\n        }\r\n    }\r\n\r\n    private pack_item(data: any): ListItem {\r\n        return { x: 0, y: 0, data: data, node: null, is_select: false };\r\n    }\r\n\r\n    private layout_items(start: number) {\r\n        for (let index: number = start, stop: number = this.m_items.length; index < stop; index++) {\r\n            let item: ListItem = this.m_items[index];\r\n            if (this.m_dir == ListViewDir.Vertical) {\r\n                [item.x, item.y] = this.vertical_layout(index, this.m_item_width, this.m_item_height, this.m_col, this.m_gap_x, this.m_gap_y);\r\n            }\r\n            else {\r\n                [item.x, item.y] = this.horizontal_layout(index, this.m_item_width, this.m_item_height, this.m_row, this.m_gap_x, this.m_gap_y);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resize_content() {\r\n        if (!this.m_items || !this.m_items.length) {\r\n            return;\r\n        }\r\n        if (this.m_items.length <= 0) {\r\n            this.m_content.width = 0;\r\n            this.m_content.height = 0;\r\n            return;\r\n        }\r\n        let last_item: ListItem = this.m_items[this.m_items.length - 1];\r\n        if (this.m_dir == ListViewDir.Vertical) {\r\n            this.m_content.height = Math.max(this.m_height, this.m_item_height / 2 - last_item.y);\r\n        }\r\n        else {\r\n            this.m_content.width = Math.max(this.m_width, last_item.x + this.m_item_width / 2);\r\n        }\r\n    }\r\n\r\n    private vertical_layout(index: number, item_width: number, item_height: number, column: number = 1, gap_x: number = 0, gap_y: number = 0, halfOffset: boolean = true): [number, number] {\r\n        let x: number = (index % column) * (item_width + gap_x);\r\n        let y: number = -Math.floor(index / column) * (item_height + gap_y);\r\n        if (halfOffset) {\r\n            return [x + item_width / 2, y - item_height / 2];\r\n        } else {\r\n            return [x, y];\r\n        }\r\n    }\r\n\r\n    private horizontal_layout(index: number, item_width: number, item_height: number, row: number = 1, gap_x: number = 0, gap_y: number = 0, halfOffset: boolean = true): [number, number] {\r\n        let x: number = Math.floor(index / row) * (item_width + gap_x);\r\n        let y: number = -(index % row) * (item_height + gap_y);\r\n\r\n        if (halfOffset) {\r\n            return [x + item_width / 2, y - item_height / 2];\r\n        } else {\r\n            return [x, y];\r\n        }\r\n    }\r\n}\r\n\r\nexport enum ListViewDir {\r\n    Vertical = 1,\r\n    Horizontal = 2,\r\n}\r\n\r\ntype ListViewParams = {\r\n    scrollview: cc.ScrollView;\r\n    view: cc.Node;\r\n    content: cc.Node;\r\n    item_prefab: cc.Node;                                                           //item预制\r\n    direction?: ListViewDir;                                                        //滚动方向\r\n    width?: number;                                                                 //显示区域宽 默认取view的宽\r\n    height?: number;                                                                //显示区域高 默认取view的高\r\n    gap_x?: number;                                                                 //item横向间隔\r\n    gap_y?: number;                                                                 //item竖向间隔\r\n    row?: number;                                                                   //水平方向排版时，垂直方向上的行数\r\n    column?: number;                                                                //垂直方向排版时，水平方向上的列数\r\n    cb_host?: any;                                                                  //回调函数host this\r\n    item_update_func: (item: cc.Node, data: any, index: number,item_intact ?:any) => void;            //item更新func\r\n    recycle_cb?: (item: cc.Node) => void;                                           //回收时的回调\r\n    select_cb?: (data: any, index: number) => void;                                 //item选中回调\r\n    item_select_func?: (item: cc.Node, is_select: boolean, index: number) => void;  //item选中效果func\r\n    scroll_to_end_cb?: () => void;                                                  //滚动到尽头的回调\r\n    auto_scrolling?: boolean;                                                       //append时自动滚动到尽头\r\n    item_click_func?: (item: cc.Node) => void                                       //点击事件,参数是点击的node\r\n    item_click_ex_func?: (data: any) => void                                        //点击事件2,参数是点击的ListItem的data(这是新加的,旧的依旧保留)\r\n}\r\n\r\ntype ListItem = {\r\n    x: number;\r\n    y: number;\r\n    data: any;\r\n    node: cc.Node;\r\n    is_select: boolean;\r\n}","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nlet canRelease = function(key, caches){\r\n    for (var tmpId in caches){\r\n        if (caches.hasOwnProperty(tmpId)) {\r\n            const element = caches[tmpId];\r\n            let deps = element.dependKeys\r\n            if(deps){\r\n                for (let i = 0; i < deps.length; i++) {\r\n                    const d = deps[i];\r\n                    if(d == key){\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return true\r\n  }\r\n\r\n  \r\n\r\n@ccclass\r\nexport default class LoaderWrap{\r\n    static init(){\r\n        let release = cc.loader.release\r\n        cc.loader.release = function(asset){\r\n            let dependKeys = null\r\n            if (Array.isArray(asset)){\r\n            }else if (asset) {\r\n                var id = this._getReferenceKey(asset);\r\n                var item = this.getItem(id);\r\n                if(item){\r\n                    dependKeys = item.dependKeys\r\n                }\r\n            }\r\n            release.call(this, asset)\r\n            if (Array.isArray(asset)){\r\n            }else if (asset) {\r\n                if(dependKeys){\r\n                    for (let i = 0; i < dependKeys.length; i++) {\r\n                        const element = dependKeys[i];\r\n                        if(canRelease(element, this._cache)){\r\n                            this.release(element)\r\n                        }\r\n                    }\r\n                }                \r\n            }           \r\n        }\r\n    }\r\n}\r\n","import ViewBase from \"../../../framework/core/mvvm/view_base\";\r\nimport AppData from \"../const/app_data\";\r\nimport VersionManager from \"../../../manager/version_manager\";\r\nimport LanguageManager from \"../../../manager/language_manager\";\r\nimport LoaclStorage from \"../../../manager/local_storage\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingView extends ViewBase {\r\n\r\n\r\n    @property(cc.ProgressBar)\r\n    public progressBar : cc.ProgressBar = null;\r\n\r\n    @property(cc.Node)\r\n    public barRightNode : cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    public textLabel : cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public versionLabel : cc.Label = null;\r\n\r\n    onLoad()\r\n    {\r\n        //this.startProgress();\r\n        //this.barRightNode.active = false;\r\n\r\n    }\r\n    onShow()\r\n    {\r\n        super.onShow();        \r\n\r\n        if (cc.sys.isNative) {\r\n            this.showTextLabel( \"版本检测中,请稍后...\");     \r\n        } else {\r\n            //版本检测中...请稍后\r\n            this.showTextLabel( \"版本检测中,请稍后...\");  \r\n        }\r\n\r\n      \r\n\r\n        this.updateVersion(LoaclStorage.getNumber(\"version\"));\r\n\r\n        VersionManager.instance.checkVersion();\r\n\r\n    }\r\n\r\n    public updateVersion(version : string){\r\n\r\n        if (version) {         \r\n            this.versionLabel.string = \"v:\" + version;\r\n        }        \r\n    }\r\n\r\n    private showTextLabel(content : string){\r\n\r\n        this.textLabel.string = content;\r\n    }\r\n\r\n    public updatePercent(value : number){\r\n\r\n        this.progressBar.node.active = true;\r\n\r\n        this.progressBar.progress = value;        \r\n        \r\n        let bar = this.progressBar.node.getChildByName(\"SpriteBar\");\r\n        let barSprite = bar.getComponent(cc.Sprite);\r\n        let width = barSprite.spriteFrame.getRect().width;\r\n        this.barRightNode.position = new cc.Vec2(bar.position.x + width * value,this.barRightNode.position.y);        \r\n        this.barRightNode.active = value > 0 ? true : false;        \r\n\r\n        this.showTextLabel('资源加载中' + \": \" +  (value * 100).toFixed(0) + \"%\");\r\n    }\r\n}\r\n","import Module, { bindButtonClickEvent, moduleInit, ViewLayer } from \"../../../framework/core/mvvm/module_base\";\r\nimport LoadingView from \"./loading_view\";\r\nimport ModuleManager from \"../../../framework/core/module_manager\";\r\nimport Debug from \"../../../manager/debug\";\r\nimport GameUtil from \"../../../utility/game_util\";\r\nimport AuthModule from \"../../hall/module/auth/auth_module\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"LoadingModule\")\r\nexport default class LoadingModule extends Module<LoadingView,null> {\r\n\r\n    constructor() {\r\n        super();\r\n        this.layer = ViewLayer.Highest;\r\n        this.windowPrefabResPath = \"package/public/public_loading\";\r\n        this.viewType = LoadingView;\r\n        this.modelType = null;\r\n        this.bindEvent();\r\n    }\r\n\r\n    bindEvent(){\r\n\r\n        this.eventBind(\"already_up_to_date\",this.already_up_to_date);        \r\n        this.eventBind(\"new_version_found\",this.on_new_version_found);\r\n        this.eventBind(\"update_progress\",this.on_update_progress);\r\n        this.eventBind(\"update_finished\",this.on_update_finished);\r\n        this.eventBind(\"get_app_version\",this.on_get_app_version);\r\n        this.eventBind(\"error_no_local_manifest\",this.on_update_finished)\r\n        this.eventBind(\"error_download_manifest_file.\",this.on_update_finished)\r\n        \r\n    }\r\n\r\n    show(){\r\n        super.show();\r\n\r\n        //判断是否为第一次loading\r\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\r\n            let className = \"org/cocos2dx/javascript/AppActivity\";\r\n            let methodName = \"removeSplashImage\";               \r\n            let methodSignature = \"()V\";\r\n            jsb.reflection.callStaticMethod(className, methodName,methodSignature);\r\n        }        \r\n    }\r\n\r\n    already_up_to_date(){\r\n\r\n        if (!this.view) {\r\n            \r\n            this.AddHandleToWaitDealQueue(this.already_up_to_date,null,this);\r\n            return;\r\n        }\r\n\r\n        this.loadAuth();\r\n    }\r\n\r\n    on_new_version_found(){\r\n\r\n        if (!this.view) {\r\n            \r\n            this.AddHandleToWaitDealQueue(this.on_new_version_found,null,this);\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    on_update_progress(data){\r\n\r\n        if (!this.view) {\r\n            this.AddHandleToWaitDealQueue(this.on_update_progress,data,this);\r\n            return;\r\n        }\r\n\r\n        this.updatePercent(data)\r\n    }\r\n\r\n    \r\n\r\n    on_update_finished(){\r\n\r\n        this.loadAuth();\r\n    }\r\n\r\n    on_get_app_version(version : string){\r\n\r\n        this.view.updateVersion(version);\r\n    }\r\n\r\n    loadAuth(){\r\n\r\n        let self = this;\r\n                \r\n        GameUtil.loadResArray([\"package/hall/module/auth/AuthModule\", \"package/hall/module/hall/hall_base\"], function (error: Error, resource: any[]) {\r\n            if (error) {\r\n                //TODO:需要处理的异常\r\n            } else {\r\n                Debug.log(\"加载完成\")\r\n                ModuleManager.instance.showModule(AuthModule,null,()=>{\r\n                    self.hide();\r\n                })               \r\n                \r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    onInit()\r\n    {\r\n        \r\n    }\r\n\r\n    updatePercent(percent : number){\r\n        \r\n        this.view.updatePercent(percent);\r\n    }\r\n\r\n}\r\n","import Debug from \"./debug\";\r\n\r\n// import WXGameManager from \"./wxgame_manager\";\r\n\r\n\r\nexport default class LoaclStorage {\r\n\r\n    //异步存储 微信专用 注意需要实时读取的不要用\r\n    static setStorageNumber(key: string, data: number) {\r\n        if (CC_WECHATGAME) {\r\n            // WXGameManager.setStorage(key, data)\r\n        } else {\r\n            LoaclStorage.setNumber(key, data)\r\n        }\r\n    }\r\n\r\n    static setStorageString(key: string, data: string) {\r\n        if (CC_WECHATGAME) {\r\n            // WXGameManager.setStorage(key, data)\r\n        } else {\r\n            LoaclStorage.setString(key, data)\r\n        }\r\n    }\r\n\r\n    static setStorage(key: string, data: any) {\r\n        if (CC_WECHATGAME) {\r\n            // WXGameManager.setStorage(key, data)\r\n        } else {\r\n            LoaclStorage.setItem(key, data)\r\n        }\r\n    }\r\n\r\n    static setNumber(key: string, data: number) {\r\n        try {\r\n            cc.sys.localStorage.setItem(key, data.toString());\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static getNumber(key: string, defaultValue?: number) {\r\n        try {\r\n            var value = cc.sys.localStorage.getItem(key);\r\n            //这里有一个坑 key不存在时返回的是 字符串“null”\r\n            if (value == null || value == \"null\") {\r\n                if (defaultValue != null) {\r\n                    return defaultValue;\r\n                }\r\n                return null;\r\n            }\r\n            return value;\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static setJson(key: string, data: JSON) {\r\n        try {\r\n            cc.sys.localStorage.setItem(key, JSON.stringify(data));\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static getJson(key: string) {\r\n        try {\r\n            var str = cc.sys.localStorage.getItem(key);\r\n            if (str == null || str == \"\" || str == \"null\") {\r\n                return null;\r\n            }\r\n            var data = JSON.parse(str);\r\n            return data;\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static setString(key: string, data: String) {\r\n        try {\r\n            cc.sys.localStorage.setItem(key, data.toString());\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static getString(key: string, defaultValue?: string): string {\r\n        try {\r\n            var str = cc.sys.localStorage.getItem(key);\r\n            if (str == null || str == \"\"|| str == \"null\") {\r\n                if (defaultValue != null) {\r\n                    return defaultValue;\r\n                }\r\n                return null;\r\n            }\r\n            return str;\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static setItem(key: string, data: any) {\r\n        try {\r\n            cc.sys.localStorage.setItem(key, data);\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static getItem(key: string): any {\r\n        try {\r\n            var str = cc.sys.localStorage.getItem(key);\r\n            if (str == null || str == \"null\") {\r\n                return null;\r\n            }\r\n            return str;\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static hasItem(key: string) {\r\n        var str = cc.sys.localStorage.getItem(key);\r\n        return str != null;\r\n    }\r\n\r\n    static delete(key: string) {\r\n        var str = cc.sys.localStorage.setItem(key, null);\r\n    }\r\n}\r\n","import GameUtil, { IUrlRequestData } from \"../utility/game_util\";\r\nimport LoaclStorage from './local_storage';\r\nimport AppData from \"../pacakge/public/const/app_data\";\r\nimport Debug from \"./debug\";\r\n\r\n\r\n\r\n\r\n\r\nexport default class LogReportManager {\r\n\r\n    static _uid : Number\r\n\r\n    static _baseHttpUrl = \"https://dhqp-h5-log.cn-hangzhou.log.aliyuncs.com/logstores/h5log/track?APIVersion=0.6.0\"\r\n\r\n    static _httpUrl : string\r\n\r\n    static _serialNumber : number = 0\r\n\r\n    static _reportFailureHttpUrls = []\r\n\r\n    static init(uid : number) {\r\n        if (uid == null) {\r\n            uid = 0\r\n        } \r\n        // if (AppData.remoteVersionConfig && AppData.remoteVersionConfig.log && AppData.remoteVersionConfig.logReportHttpUrl) {\r\n        //     LogReportManager._baseHttpUrl = AppData.remoteVersionConfig.logReportHttpUrl\r\n        // }\r\n\r\n        LogReportManager._httpUrl = LogReportManager._baseHttpUrl + \"&appinit_time=\" + Math.ceil(new Date().getTime() / 1000) +  \"&uid=\" + uid +\"&os=\" + cc.sys.os + \"&\"\r\n    }\r\n\r\n    static report(text : string) {\r\n        let requestData = {\r\n            baseUrl: LogReportManager._httpUrl,\r\n            params: {\r\n                text : text\r\n            },\r\n        }\r\n        LogReportManager.http(requestData)\r\n    }\r\n\r\n    static report_cmd(cmd : string, text : string) {\r\n        let requestData = {\r\n            baseUrl: LogReportManager._httpUrl,\r\n            params: {\r\n            cmd : cmd,\r\n                text : text\r\n            },\r\n        }\r\n        LogReportManager.http(requestData)\r\n    }\r\n\r\n    static report_data(cmd : string, data : object) {\r\n        let requestData = {\r\n            baseUrl: LogReportManager._httpUrl,\r\n            params: {\r\n                cmd : cmd,\r\n                text : JSON.stringify(data)\r\n            },\r\n        }\r\n        LogReportManager.http(requestData)\r\n    }\r\n\r\n    static report_msg_cmd(cmd : string, msg : string, isRequest ?: boolean) {\r\n        // if (!AppData.remoteVersionConfig) {\r\n        //     return\r\n        // }\r\n\r\n        // if (AppData.remoteVersionConfig.log && AppData.remoteVersionConfig.log.disableWebsocketMsgLog) {\r\n        //     // cc.log(\"不上报report_msg_cmd\")\r\n        //     return\r\n        // }\r\n\r\n        let requestData = {\r\n            baseUrl: LogReportManager._httpUrl,\r\n            params: {\r\n                msg : msg\r\n            },\r\n        }\r\n        if (isRequest) {\r\n            requestData.params[\"request_cmd\"] = cmd\r\n        } else {\r\n            requestData.params[\"response_cmd\"] = cmd\r\n        }\r\n        LogReportManager.http(requestData)\r\n    }\r\n    \r\n\r\n    static http(data: IUrlRequestData) {\r\n        // if (!AppData.remoteVersionConfig) {\r\n        //     return\r\n        // }\r\n\r\n        // if (AppData.remoteVersionConfig.log && AppData.remoteVersionConfig.log.disableAllLog) {\r\n        //     return\r\n        // }\r\n\r\n        LogReportManager._serialNumber = LogReportManager._serialNumber + 1\r\n        data.params[\"sn\"] = LogReportManager._serialNumber\r\n        data.params[\"time\"] = new Date().getTime()\r\n        //data.params['gameName'] = AppData.gameName\r\n        let requestUrl = GameUtil.formatParamsForHttp(data)\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status == 200) {\r\n                    // var response = JSON.parse(xhr.responseText);\r\n                    // if (!response) {\r\n                    //     cc.error(\"http返回数据格式错误：\", xhr.responseURL, xhr.responseText)\r\n                    //     return\r\n                    // }\r\n                    Debug.log(requestUrl)\r\n                } else {\r\n                    //上传失败的\r\n                    if (data.requestCount < 2) {\r\n                        LogReportManager.http(data)\r\n                    }\r\n                    Debug.log(\"http request error:\", xhr.status)\r\n                }\r\n            }\r\n        };\r\n        if (data.requestCount == null) {\r\n            data.requestCount = 0\r\n        }\r\n        ++data.requestCount\r\n        xhr.timeout = 10000\r\n        xhr.open(\"GET\", requestUrl, true);\r\n        xhr.send();\r\n    }\r\n}\r\n","\r\n//路由\r\nexport class LoginNetRoute{\r\n    static readonly queryEntry = \"gate.gateHandler.queryEntry\";\r\n}","import ModelBase from \"../../../framework/core/mvvm/model_base\";\r\nimport NetClient from \"../../../framework/net/net_client\";\r\nimport TimeManager from \"../../../manager/time_manager\";\r\nimport { GameManager } from \"../../../manager/game_manager\";\r\nimport ModuleManager from \"../../../framework/core/module_manager\";\r\nimport NetPrompt from \"../../public/module/netprompt/netprompt\";\r\nimport GameServer from \"../gameserver/game_server\";\r\nimport ModelData from \"../../public/model_data\";\r\nimport AppData from \"../../public/const/app_data\";\r\nimport { LoginNetRoute } from \"./login_net_route\";\r\nimport HallServer from \"../hallserver/hall_server\";\r\nimport ServerBase from \"../server_base\";\r\nimport SceneManager from \"../../../manager/scene_manager\";\r\nimport UserDataManager from \"../../../manager/user_manager\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoginServer extends ServerBase {\r\n\r\n    public static instance: LoginServer;\r\n\r\n    onLoad() {\r\n        LoginServer.instance = this\r\n        this.init('LoginServer');\r\n    }\r\n\r\n    _init() {\r\n        let self = this;\r\n        this.model.registerNetMsg(LoginNetRoute.queryEntry,function(data){\r\n            self.loginRsp(data);\r\n        },true);\r\n    }\r\n\r\n    //登录成功断开登录服\r\n    loginRsp(data:any){\r\n        cc.log('------------->>>',data);\r\n        this.close();\r\n        GameManager.setHallServer(data.host,data.port);\r\n        HallServer.instance.loginHallServer()\r\n    }\r\n\r\n    //账号登陆\r\n    accountLogin(account:string){\r\n        this.connectServer(GameManager.loginServer,(state:string)=>{\r\n            if (state == 'handshake') {\r\n                this.startCheckPing();//登陆成功\r\n                let data = {code:account};\r\n                AppData.code = account;\r\n                this.model.send(LoginNetRoute.queryEntry,data);\r\n            }\r\n        })\r\n    }\r\n\r\n    //连接登录\r\n    connectServer(url, callback?: (state: string) => void) {\r\n        this.connect(url,callback);\r\n        cc.log(\"登陆服连接时间：\", TimeManager.instance.getServerTime())\r\n    }\r\n\r\n    protected onConnected(){\r\n        this._init();\r\n    }\r\n\r\n    protected connectTimes(times:number){\r\n        if (this._reconTimes >= 1) {\r\n            ModuleManager.instance.showModule(NetPrompt, { showImmediately: true, reconnect: true })\r\n        }\r\n\r\n        if (this._reconTimes > this._maxReconTimes) {\r\n            cc.warn(\"登陆服重连次数用完，提示登陆失败\")\r\n            SceneManager.gotoLogin();\r\n        }\r\n    }\r\n}\r\n","\r\nimport Debug from \"../manager/debug\";\r\nimport AppData from \"../pacakge/public/const/app_data\";\r\nimport ModelData from \"../pacakge/public/model_data\";\r\nimport GameUtil, { IUrlRequestData } from \"../utility/game_util\";\r\n\r\nexport enum MakePointType {\r\n    // SHARE_ACCOUNT_GOLD = 1001,//金币场结算分享数量\r\n    // SHARE_ACCOUNT_MATCH = 1002,//比赛场结算分享\r\n    SHARE_GIFT = 1003,//邀请有礼分享\r\n    //SHARE_FISSION = 1004,//裂变红包数\r\n    SHARE_SELF = 1005,//主动分享\r\n    SHARE_SIGN_MATCH = 1006,//比赛场报名分享\r\n    SHARE_FRIEND_INVITE = 1007,//好友场邀请分享\r\n    SHARE_FRIEND_BIG_ACCOUNT = 1008,//好友场大结算\r\n    SHARE_MATCH_GIFT = 1009,//比赛场邀请有礼\r\n\r\n    SHARE_GOLD_WIN = 1010,//金币场胜利结算\r\n    SHARE_GOLD_LOSE = 1011,//金币场失败结算\r\n    SHARE_MATCH_WIN = 1012,//比赛场胜利有奖励结算\r\n    SHARE_MATCH_LOSE = 1013,//比赛场失败结算\r\n    SHARE_OTHER = 1014,//其他分享 暂未统计\r\n    SHARE_ACTIVE_SIGN = 1015,//签到活动分享\r\n    SHARE_FREE_COIN = 1016,//免费金币分享\r\n    SHARE_RELIEF = 1017,//救济金分享\r\n    SHARE_PAYFOR = 1018,//代充分享\r\n    SHARE_RANKING_MATCH_WIN = 1019,//排位赛升星分享\r\n    SHARE_RANKING_MATCH_LOSE = 1020,//排位赛保星分享\r\n    SHARE_RANKING_MATCH_WINS = 1021,//排位赛连胜分享\r\n    SHARE_RANKING_MATCH_SCREEN_SHOOT = 1022,//排位赛段位截图分享\r\n    SHARE_GOLD_SHOW_CARDS = 1023,//斗地主结算分享看底牌\r\n    SHARE_GOLD_GAME_TASK = 1024,//对局任务\r\n\r\n    BANKRUP_OTHER = 2000,//其他类型破产数\r\n    BANKRUP_GOLD = 2001,//金币场破产数\r\n    BANKRUP_MATCH = 2002,//比赛场破产数\r\n    BANKRUP_RANKING_MATCH_WIN = 2003,//排位赛升星破产\r\n    BANKRUP_RANKING_MATCH_LOSE = 2004,//排位赛保星破产\r\n\r\n    ORDER_SHOP = 3000,//商城充值\r\n    ORDER_FIRST = 3001,//首充\r\n    ORDER_BANKRUP_FIRST = 3002,//破产打开首充\r\n    ORDER_BANKRUP_EVERY_DAY = 3003,//破产打开每日优惠\r\n    ORDER_EVERY_DAY = 3004,//每日优惠\r\n    ORDER_LIMIT = 3005,//限时优惠\r\n    ORDER_BANKRUP_LIMIT = 3006,//破产限时优惠\r\n    ORDER_BANKRUP_FAST = 3007//破产快速充值\r\n}\r\n\r\nclass AppBuriedDataBankruptcyVo {\r\n    bankruptcyCount: number = 0//破产次数\r\n    bankruptcyGiveGold: number = 0//破产领取金币数\r\n    buriedDataEnum: number = 0//破产类型\r\n    goldId: number = 0\r\n    matchId: number = 0\r\n    constructor() { }\r\n}\r\n\r\nclass AppBuriedDataOrderVo {\r\n    createCount: number = 0//创建订单次数\r\n    orderDataType: number = 0//枚举类型\r\n    orderSourceType: number = 0//0其他 1金币场 2比赛场\r\n    payOutOrderId: string = \"\"//成功支付订单号\r\n    showCount: number = 0//展示界面次数\r\n    constructor() { }\r\n}\r\n\r\nclass AppBuriedDataShareVo {\r\n    backCount: number = 0//回流次数\r\n    buriedDataEnum: number = 0//枚举\r\n    shareCount: number = 0//分享次数\r\n    goldId: number = 0\r\n    matchId: number = 0\r\n    shareSmallId: number = 0\r\n    channelId: number = 0//渠道号\r\n    constructor() { }\r\n}\r\n\r\nexport default class MakePointsManager {\r\n\r\n    static AppBuriedDataComplexVo = { \"bankruptcyList\": [], \"orderList\": [], \"shareList\": [] }\r\n    static maxLength = 30\r\n    static isUploading = false\r\n    static tempData = { \"bankruptcyList\": [], \"orderList\": [], \"shareList\": [] }\r\n\r\n    static getUrl() {\r\n        let requestData: IUrlRequestData = {\r\n            baseUrl: AppData.httpCurApiUrl + \"data/buried?\",\r\n            params: {\r\n                uid: ModelData.instance.roleData.id,\r\n                gameId: AppData.apiGameName,\r\n            }\r\n        }\r\n       // GameUtil.addPublicParams(requestData)\r\n        let t = GameUtil.get_tokenAndTimestamp(requestData.params[\"uid\"])\r\n        if (t) {\r\n            requestData.params[\"token\"] = t[0]\r\n            requestData.params[\"timestamp\"] = t[1]\r\n        }\r\n        return GameUtil.formatParamsForHttp(requestData)\r\n    }\r\n\r\n    //记录分享\r\n    static shareRecord(type: MakePointType, id: number = 0, backCount = 0, shareSmallId = 0, channelId = 0) {\r\n        let data = {}\r\n        data[\"buriedDataEnum\"] = type\r\n        if (backCount > 0) {\r\n            data[\"backCount\"] = backCount\r\n        } else {\r\n            data[\"shareCount\"] = 1\r\n        }\r\n        if (type == MakePointType.SHARE_MATCH_LOSE || type == MakePointType.SHARE_SIGN_MATCH || type == MakePointType.SHARE_MATCH_WIN) {\r\n            data[\"matchId\"] = id\r\n        } else if (type == MakePointType.SHARE_GOLD_WIN || type == MakePointType.SHARE_GOLD_LOSE || type == MakePointType.SHARE_RANKING_MATCH_WIN\r\n            || type == MakePointType.SHARE_RANKING_MATCH_LOSE || type == MakePointType.SHARE_GOLD_SHOW_CARDS) {\r\n            data[\"goldId\"] = id\r\n        }\r\n        if (shareSmallId) {\r\n            data[\"shareSmallId\"] = shareSmallId\r\n        }\r\n        if (channelId) {\r\n            data[\"channelId\"] = channelId\r\n        }\r\n        if (this.AppBuriedDataComplexVo.shareList.length >= this.maxLength) {\r\n            Debug.warn(\"分享存满了，先上传吧\")\r\n            this.tempData.shareList.push(data)\r\n            this.uploadAll()\r\n            return\r\n        }\r\n\r\n        if (this.isUploading) {\r\n            this.tempData.shareList.push(data)\r\n        } else {\r\n            if (this.tempData.shareList.length > 0) {\r\n                let length = this.tempData.shareList.length\r\n                for (let i = 0; i < length; i++) {\r\n                    this.AppBuriedDataComplexVo.shareList.push(this.tempData.shareList[i])\r\n                }\r\n                this.tempData.shareList = []\r\n            }\r\n            this.AppBuriedDataComplexVo.shareList.push(data)\r\n        }\r\n        Debug.warn(\"分享记录：\", this.AppBuriedDataComplexVo.shareList)\r\n        this.checkLength()\r\n    }\r\n\r\n    //破产记录\r\n    static bankrupRecord(type: MakePointType, count: number, id: number = 0, bankruptcyGiveGold: number = 0) {\r\n        let data = {}\r\n        data[\"buriedDataEnum\"] = type\r\n        if (count) {\r\n            data[\"bankruptcyCount\"] = count\r\n        }\r\n        if (bankruptcyGiveGold) {\r\n            data[\"bankruptcyGiveGold\"] = bankruptcyGiveGold\r\n        }\r\n        if (type == MakePointType.BANKRUP_MATCH) {\r\n            data[\"matchId\"] = id\r\n        } else if (type == MakePointType.BANKRUP_GOLD || type == MakePointType.BANKRUP_RANKING_MATCH_LOSE || type == MakePointType.BANKRUP_RANKING_MATCH_WIN) {\r\n            data[\"goldId\"] = id\r\n        }\r\n\r\n        if (this.AppBuriedDataComplexVo.bankruptcyList.length >= this.maxLength) {\r\n            Debug.warn(\"破产存满了，先上传吧\")\r\n            this.tempData.bankruptcyList.push(data)\r\n            this.uploadAll()\r\n            return\r\n        }\r\n\r\n        if (this.isUploading) {\r\n            this.tempData.bankruptcyList.push(data)\r\n        } else {\r\n            if (this.tempData.bankruptcyList.length > 0) {\r\n                let length = this.tempData.bankruptcyList.length\r\n                for (let i = 0; i < length; i++) {\r\n                    this.AppBuriedDataComplexVo.bankruptcyList.push(this.tempData.bankruptcyList[i])\r\n                }\r\n                this.tempData.bankruptcyList = []\r\n            }\r\n            this.AppBuriedDataComplexVo.bankruptcyList.push(data)\r\n        }\r\n        Debug.warn(\"破产记录：\", this.AppBuriedDataComplexVo.bankruptcyList)\r\n        this.checkLength()\r\n    }\r\n\r\n    //订单记录\r\n    static orderRecord(type: MakePointType, showCount = 0, orderSourceType = 0, createCount = 0, payOutOrderId: string = \"\") {\r\n        let data = {}\r\n        if (createCount) {\r\n            data[\"createCount\"] = createCount\r\n        }\r\n        if (showCount) {\r\n            data[\"showCount\"] = showCount\r\n        }\r\n        data[\"orderSourceType\"] = orderSourceType\r\n        if (payOutOrderId != \"\") {\r\n            data[\"payOutOrderId\"] = payOutOrderId\r\n        }\r\n        data[\"orderDataType\"] = type\r\n\r\n        if (this.AppBuriedDataComplexVo.orderList.length >= this.maxLength) {\r\n            Debug.warn(\"订单存满了，先上传吧\")\r\n            this.tempData.orderList.push(data)\r\n            this.uploadAll()\r\n            return\r\n        }\r\n\r\n        if (this.isUploading) {\r\n            this.tempData.orderList.push(data)\r\n        } else {\r\n            if (this.tempData.orderList.length > 0) {\r\n                let length = this.tempData.orderList.length\r\n                for (let i = 0; i < length; i++) {\r\n                    this.AppBuriedDataComplexVo.orderList.push(this.tempData.orderList[i])\r\n                }\r\n                this.tempData.orderList = []\r\n            }\r\n            this.AppBuriedDataComplexVo.orderList.push(data)\r\n        }\r\n        Debug.warn(\"订单记录：\", this.AppBuriedDataComplexVo.orderList)\r\n        this.checkLength()\r\n    }\r\n\r\n    static checkLength() {\r\n        let length = this.AppBuriedDataComplexVo.shareList.length + this.AppBuriedDataComplexVo.bankruptcyList.length + this.AppBuriedDataComplexVo.orderList.length\r\n        if (length >= this.maxLength) {\r\n            this.uploadAll()\r\n        }\r\n    }\r\n\r\n\r\n    //上传所有的打点\r\n    static uploadAll() {\r\n        if (!ModelData.instance.roleData.id) {\r\n            return\r\n        }\r\n        if (this.isUploading) {\r\n            return\r\n        }\r\n        if (this.AppBuriedDataComplexVo.bankruptcyList.length == 0 && this.AppBuriedDataComplexVo.shareList.length == 0 && this.AppBuriedDataComplexVo.orderList.length == 0) {\r\n            return\r\n        }\r\n        this.isUploading = true\r\n        let self = this\r\n        let url = this.getUrl()\r\n        let data = JSON.stringify(this.AppBuriedDataComplexVo)\r\n        self.http(url, data, (res) => {\r\n            self.isUploading = false\r\n            self.AppBuriedDataComplexVo.bankruptcyList = []\r\n            self.AppBuriedDataComplexVo.orderList = []\r\n            self.AppBuriedDataComplexVo.shareList = []\r\n            Debug.warn(\"上传全部打点成功！\")\r\n        }, () => {\r\n            self.isUploading = false\r\n            Debug.warn(\"上传全部打点失败！\")\r\n        })\r\n    }\r\n\r\n\r\n    static http(url, data: any, success: Function, fail: Function) {\r\n        Debug.warn(url, data)\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", url, true);//先OPEN才能调setRequestHeader  但是小萌广告的可以！！！！\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status == 200) {\r\n                    if (xhr.responseText && xhr.responseText != \"\") {\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        Debug.log(\"打点上传返回：\", response)\r\n                        if (!response) {\r\n                            fail()\r\n                            Debug.error(\"http返回数据格式错误：\", xhr.responseURL, xhr.responseText)\r\n                            return\r\n                        }\r\n                        success(response)\r\n                    } else {\r\n                        success()\r\n                    }\r\n                } else {\r\n                    fail()\r\n                    Debug.log(\"http request error:\", xhr.status)\r\n                }\r\n            }\r\n        };\r\n        xhr.send(data);\r\n    }\r\n\r\n\r\n}","const { ccclass, property } = cc._decorator;\r\n// import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\n// import { start } from \"repl\";\r\nimport CustomUIStateSwitcher from \"../../../public/ui/custom_ui_state_switcher\";\r\nimport EventManager from \"../../../../manager/event_manager\";\r\n@ccclass\r\nexport default class MarqueeComponent extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    root: cc.Node = null\r\n    @property(cc.RichText)\r\n    labelPrefab: cc.RichText = null\r\n\r\n    @property(cc.Mask)\r\n    mask: cc.Mask = null\r\n\r\n    @property(cc.Float)\r\n    offset: number = 0\r\n\r\n    @property(cc.Float)\r\n    startOffset: number = 0\r\n\r\n    @property(cc.Float)\r\n    endOffset: number = 0\r\n\r\n    @property(cc.Float)\r\n    speed: number = 100\r\n    // @property({ type: [cc.String] })\r\n    // tag:string[] = [];\r\n    @property(cc.String)\r\n    tag:string=\"\";\r\n    protected m_availableLabelQueue: cc.RichText[] = []\r\n    protected m_playingLabelQueue: cc.RichText[] = []\r\n    protected m_isEmpty = false\r\n    protected m_max_count = 10\r\n    protected m_index: number = 0\r\n    protected m_message_queue: any[] = []\r\n    protected m_playing_queue: any[] = []\r\n    onload()\r\n    {\r\n    }\r\n    start()\r\n    {\r\n        this.m_isEmpty = true;\r\n        this.bindEvent();\r\n\r\n        //test\r\n        // let str = {\r\n        //     content:\"恭喜<color=#ffff00>我</color>在<color=#00ffff>跑的都快</color><color=#00ffff>初级场</color>赢得<color=#fff100>2</color>金币\",\r\n        //     tag:'',\r\n        //     showCount:1000,\r\n        // }\r\n        // this.on_msg_coming(str);\r\n        \r\n    }\r\n    reset(){\r\n        for (let index = 0; index < this.m_playingLabelQueue.length; index++) {\r\n            const element = this.m_playingLabelQueue[index];\r\n            element.node.active = false\r\n            this.m_availableLabelQueue.push(element)\r\n        }\r\n        this.m_playingLabelQueue = []\r\n    }\r\n\r\n    showMarquee(show: boolean){\r\n        this.root.active = show\r\n    }\r\n    play(msg){\r\n        let self = this\r\n        self.m_playing_queue.push(msg)\r\n        self.showMarquee(true)\r\n        let text = msg.content\r\n        let message = msg;\r\n        self.playMessage(text, self.on_next_play.bind(self), function(){\r\n            if(self&&self.root.active){\r\n                self.m_playing_queue.shift()\r\n                var data = message.content\r\n                var count = message.showCount\r\n                if(count>1)\r\n                {\r\n                    message.showCount--;\r\n                    self.play(message);\r\n                }\r\n            if(self.m_playing_queue.length == 0){\r\n                self.showMarquee(false)\r\n            }\r\n            }            \r\n        })\r\n    }\r\n    protected on_next_play(){\r\n        let self = this      \r\n        if(self&&self.root.active){\r\n            let msg = self.m_message_queue.shift()\r\n            if(msg){\r\n                self.play(msg)\r\n                self.m_isEmpty = false\r\n            }else{\r\n                self.m_isEmpty = true\r\n            }\r\n        }  \r\n    }\r\n    playMessage(text: string, next: Function, onFinish: Function){\r\n        let self = this\r\n        let maskWidth = self.mask.node.width\r\n        let label = self.getAvailableLabel()      \r\n        label.string = text\r\n        let startPosX = maskWidth * 0.5 + self.startOffset\r\n        label.node.position = cc.v2(startPosX, label.node.position.y)\r\n        label.node.active = true;\r\n        this.scheduleOnce(function(){\r\n            let labelWidth = self.calcLabelWidth(label)\r\n            let totalDis = labelWidth + maskWidth + self.startOffset - self.endOffset\r\n            let dis1 = labelWidth + self.offset\r\n            let duration1 = self.calcDuration(dis1)\r\n            let duration2 = self.calcDuration(totalDis - dis1)    \r\n            let targetPos1 = startPosX - dis1\r\n            let targetPos2 = -totalDis + startPosX\r\n            let callFun1 = cc.callFunc(function(){\r\n                next && next()\r\n            }.bind(self))\r\n            let callFun2 = cc.callFunc(function(){\r\n                label.node.active = false\r\n                self.addToAvailableLabel(label)\r\n                onFinish && onFinish()\r\n            }.bind(self))\r\n            var move1 = cc.moveTo(duration1, targetPos1, 0)\r\n            var move2 = cc.moveTo(duration2, targetPos2, 0)\r\n            var seq = cc.sequence([move1, callFun1, move2, callFun2]);\r\n            label.node.runAction(seq);\r\n        })\r\n\r\n    }\r\n    //消息过滤 只针对当前模块注册的对应标签\r\n    messageFilter(msg)\r\n    {\r\n        // cc.log('目标标签:',msg.tag);\r\n        // cc.log(\"筛选 msg.tag[1],this.tag\",msg.tag[1],this.tag);\r\n        //cc.log(\"555555\",msg.tag);\r\n        // cc.log(\"msg.tag.length:\",msg.tag.length);\r\n        return msg.tag == this.tag?true:false;\r\n    }\r\n    // changeStyle(styleName: string){\r\n    //     //cc.log(\"styleName:\"+styleName);\r\n    //     styleName = styleName? styleName: 'hall'\r\n    //     this.uiStateSwitcher.SwitchState(styleName)\r\n    //     //cc.log(\"switchPosition(styleName)\")\r\n    //     //this.switchPosition(styleName);\r\n    // }\r\n    protected getAvailableLabel(): cc.RichText{\r\n        let label = this.m_availableLabelQueue.shift()\r\n        if(!label){\r\n            label = this.cloneLabel()\r\n        }\r\n        return label\r\n    }\r\n\r\n    protected cloneLabel(){\r\n        let node = cc.instantiate(this.labelPrefab.node)\r\n        node.parent = this.labelPrefab.node.parent\r\n        node.position = this.labelPrefab.node.position\r\n        node.scale = this.labelPrefab.node.scale\r\n        return node.getComponent(cc.RichText)\r\n    }\r\n\r\n    protected addToAvailableLabel(label: cc.RichText){\r\n        this.m_availableLabelQueue.push(label)\r\n    }\r\n\r\n    protected calcLabelWidth(label: cc.RichText): number{\r\n        return label.node.width\r\n    }\r\n\r\n    protected calcDuration(dis: number){\r\n        return dis / this.speed\r\n    }\r\n    protected on_msg_coming(msg){\r\n        if(this.m_isEmpty){\r\n            this.m_isEmpty = false\r\n            cc.log(\"paly__msg\");\r\n            this.play(msg)\r\n        }else{\r\n            this.m_index++\r\n            msg._index = this.m_index\r\n            cc.log(\"push__msg\");\r\n            this.m_message_queue.push(msg)\r\n            this.sortQueue()    \r\n            this.cutQueue()        \r\n        }\r\n    }\r\n\r\n    protected cutQueue(){\r\n        if(this.m_message_queue.length > this.m_max_count){\r\n            this.m_message_queue.splice(this.m_max_count, this.m_message_queue.length - this.m_max_count)\r\n        }\r\n    }\r\n\r\n    protected sortQueue(){\r\n        this.m_message_queue.sort(function(a, b){\r\n            if(a.level == b.level){\r\n                return a._index - b._index\r\n            }\r\n            return a.level - b.level\r\n        })\r\n    }\r\n    private bindEvent() {\r\n        EventManager.instance.on('Event_Notify_Data', this.on_msg_coming, this,true)\r\n    }\r\n\r\n    private unbindEvent() {\r\n        EventManager.instance.off('Event_Notify_Data', this.on_msg_coming,this)\r\n    }\r\n\r\n    onDisable(){\r\n        this.unbindEvent();\r\n    }\r\n\r\n    //销毁\r\n    onDestroy()\r\n    {\r\n        this.unbindEvent();\r\n    }\r\n\r\n}\r\n","/**  \r\n *  \r\n * @author   \r\n *  \r\n */\r\n'use strict';\r\nexport default class MD5 {\r\n\r\n    public constructor() {\r\n\r\n    }\r\n    private hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */\r\n    private b64pad = \"\";  /* base-64 pad character. \"=\" for strict RFC compliance   */\r\n\r\n    /*  \r\n    * These are the privates you'll usually want to call  \r\n    * They take string arguments and return either hex or base-64 encoded strings  \r\n    */\r\n    public hex_md5(s) { return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(s))); }//这个函数就行了，  \r\n    public b64_md5(s) { return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(s))); }\r\n    public any_md5(s, e) { return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(s)), e); }\r\n    public hex_hmac_md5(k, d) { return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d))); }\r\n    private b64_hmac_md5(k, d) { return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d))); }\r\n    private any_hmac_md5(k, d, e) { return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)), e); }\r\n\r\n    /*  \r\n    * Perform a simple self-test to see if the VM is working  \r\n    */\r\n    public md5_vm_test() {\r\n        return this.hex_md5(\"abc\").toLowerCase() == \"900150983cd24fb0d6963f7d28e17f72\";\r\n    }\r\n\r\n    /*  \r\n    * Calculate the MD5 of a raw string  \r\n    */\r\n    public rstr_md5(s) {\r\n\r\n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\r\n    }\r\n\r\n    /*  \r\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)  \r\n    */\r\n    public rstr_hmac_md5(key, data) {\r\n        var bkey = this.rstr2binl(key);\r\n        if (bkey.length > 16) bkey = this.binl_md5(bkey, key.length * 8);\r\n\r\n        var ipad = Array(16), opad = Array(16);\r\n        for (var i = 0; i < 16; i++) {\r\n            ipad[i] = bkey[i] ^ 0x36363636;\r\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n        }\r\n\r\n        var hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\r\n        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\r\n    }\r\n\r\n    /*  \r\n    * Convert a raw string to a hex string  \r\n    */\r\n    public rstr2hex(input) {\r\n        try { this.hexcase } catch (e) { this.hexcase = 0; }\r\n        var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n        var output = \"\";\r\n        var x;\r\n        for (var i = 0; i < input.length; i++) {\r\n            x = input.charCodeAt(i);\r\n            output += hex_tab.charAt((x >>> 4) & 0x0F)\r\n                + hex_tab.charAt(x & 0x0F);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /*  \r\n    * Convert a raw string to a base-64 string  \r\n    */\r\n    public rstr2b64(input) {\r\n        try { this.b64pad } catch (e) { this.b64pad = ''; }\r\n        var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n        var output = \"\";\r\n        var len = input.length;\r\n        for (var i = 0; i < len; i += 3) {\r\n            var triplet = (input.charCodeAt(i) << 16)\r\n                | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0)\r\n                | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\r\n            for (var j = 0; j < 4; j++) {\r\n                if (i * 8 + j * 6 > input.length * 8) output += this.b64pad;\r\n                else output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /*  \r\n    * Convert a raw string to an arbitrary string encoding  \r\n    */\r\n    public rstr2any(input, encoding) {\r\n        var divisor = encoding.length;\r\n        var i, j, q, x, quotient;\r\n\r\n        /* Convert to an array of 16-bit big-endian values, forming the dividend */\r\n        var dividend = Array(Math.ceil(input.length / 2));\r\n        for (i = 0; i < dividend.length; i++) {\r\n            dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n        }\r\n\r\n        /*  \r\n        * Repeatedly perform a long division. The binary array forms the dividend,  \r\n        * the length of the encoding is the divisor. Once computed, the quotient  \r\n        * forms the dividend for the next step. All remainders are stored for later  \r\n        * use.  \r\n        */\r\n        var full_length = Math.ceil(input.length * 8 /\r\n            (Math.log(encoding.length) / Math.log(2)));\r\n        var remainders = Array(full_length);\r\n        for (j = 0; j < full_length; j++) {\r\n            quotient = Array();\r\n            x = 0;\r\n            for (i = 0; i < dividend.length; i++) {\r\n                x = (x << 16) + dividend[i];\r\n                q = Math.floor(x / divisor);\r\n                x -= q * divisor;\r\n                if (quotient.length > 0 || q > 0)\r\n                    quotient[quotient.length] = q;\r\n            }\r\n            remainders[j] = x;\r\n            dividend = quotient;\r\n        }\r\n\r\n        /* Convert the remainders to the output string */\r\n        var output = \"\";\r\n        for (i = remainders.length - 1; i >= 0; i--)\r\n            output += encoding.charAt(remainders[i]);\r\n\r\n        return output;\r\n    }\r\n\r\n    /*  \r\n    * Encode a string as utf-8.  \r\n    * For efficiency, this assumes the input is valid utf-16.  \r\n    */\r\n    public str2rstr_utf8(input) {\r\n        var output = \"\";\r\n        var i = -1;\r\n        var x, y;\r\n\r\n        while (++i < input.length) {\r\n            /* Decode utf-16 surrogate pairs */\r\n            x = input.charCodeAt(i);\r\n            y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\r\n            if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\r\n                x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n                i++;\r\n            }\r\n\r\n            /* Encode output as utf-8 */\r\n            if (x <= 0x7F)\r\n                output += String.fromCharCode(x);\r\n            else if (x <= 0x7FF)\r\n                output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\r\n                    0x80 | (x & 0x3F));\r\n            else if (x <= 0xFFFF)\r\n                output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\r\n                    0x80 | ((x >>> 6) & 0x3F),\r\n                    0x80 | (x & 0x3F));\r\n            else if (x <= 0x1FFFFF)\r\n                output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\r\n                    0x80 | ((x >>> 12) & 0x3F),\r\n                    0x80 | ((x >>> 6) & 0x3F),\r\n                    0x80 | (x & 0x3F));\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /*  \r\n    * Encode a string as utf-16  \r\n    */\r\n    public str2rstr_utf16le(input) {\r\n        var output = \"\";\r\n        for (var i = 0; i < input.length; i++)\r\n            output += String.fromCharCode(input.charCodeAt(i) & 0xFF,\r\n                (input.charCodeAt(i) >>> 8) & 0xFF);\r\n        return output;\r\n    }\r\n\r\n    public str2rstr_utf16be(input) {\r\n        var output = \"\";\r\n        for (var i = 0; i < input.length; i++)\r\n            output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\r\n                input.charCodeAt(i) & 0xFF);\r\n        return output;\r\n    }\r\n\r\n    /*  \r\n    * Convert a raw string to an array of little-endian words  \r\n    * Characters >255 have their high-byte silently ignored.  \r\n    */\r\n    public rstr2binl(input) {\r\n        var output = Array(input.length >> 2);\r\n        for (var i = 0; i < output.length; i++)\r\n            output[i] = 0;\r\n        for (var i = 0; i < input.length * 8; i += 8)\r\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\r\n        return output;\r\n    }\r\n\r\n    /*  \r\n    * Convert an array of little-endian words to a string  \r\n    */\r\n    public binl2rstr(input) {\r\n        var output = \"\";\r\n        for (var i = 0; i < input.length * 32; i += 8)\r\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\r\n        return output;\r\n    }\r\n\r\n    /*  \r\n    * Calculate the MD5 of an array of little-endian words, and a bit length.  \r\n    */\r\n    public binl_md5(x, len) {\r\n        /* append padding */\r\n        x[len >> 5] |= 0x80 << ((len) % 32);\r\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n\r\n        var a = 1732584193;\r\n        var b = -271733879;\r\n        var c = -1732584194;\r\n        var d = 271733878;\r\n\r\n        for (var i = 0; i < x.length; i += 16) {\r\n            var olda = a;\r\n            var oldb = b;\r\n            var oldc = c;\r\n            var oldd = d;\r\n\r\n            a = this.md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\r\n            d = this.md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n            c = this.md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n            b = this.md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n            a = this.md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n            d = this.md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n            c = this.md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n            b = this.md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n            a = this.md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n            d = this.md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\r\n            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n            a = this.md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n            b = this.md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n\r\n            a = this.md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n            d = this.md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n            c = this.md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n            b = this.md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\r\n            a = this.md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n            d = this.md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n            b = this.md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n            a = this.md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n            d = this.md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n            c = this.md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n            b = this.md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n            a = this.md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n            d = this.md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n            c = this.md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n\r\n            a = this.md5_hh(a, b, c, d, x[i + 5], 4, -378558);\r\n            d = this.md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n            c = this.md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n            a = this.md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n            d = this.md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n            c = this.md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n            a = this.md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n            d = this.md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\r\n            c = this.md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n            b = this.md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n            a = this.md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n            c = this.md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n            b = this.md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n\r\n            a = this.md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\r\n            d = this.md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n            b = this.md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n            a = this.md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n            d = this.md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n            b = this.md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n            a = this.md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n            c = this.md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n            b = this.md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n            a = this.md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n            c = this.md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n            b = this.md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n\r\n            a = this.safe_add(a, olda);\r\n            b = this.safe_add(b, oldb);\r\n            c = this.safe_add(c, oldc);\r\n            d = this.safe_add(d, oldd);\r\n        }\r\n        return [a, b, c, d];\r\n    }\r\n\r\n    /*  \r\n    * These privates implement the four basic operations the algorithm uses.  \r\n    */\r\n    public md5_cmn(q, a, b, x, s, t) {\r\n        return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\r\n    }\r\n    public md5_ff(a, b, c, d, x, s, t) {\r\n        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    }\r\n    public md5_gg(a, b, c, d, x, s, t) {\r\n        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    }\r\n    public md5_hh(a, b, c, d, x, s, t) {\r\n        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\r\n    }\r\n    public md5_ii(a, b, c, d, x, s, t) {\r\n        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    }\r\n\r\n    /*  \r\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally  \r\n    * to work around bugs in some JS interpreters.  \r\n    */\r\n    public safe_add(x, y) {\r\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n\r\n    /*  \r\n    * Bitwise rotate a 32-bit number to the left.  \r\n    */\r\n    public bit_rol(num, cnt) {\r\n        return (num << cnt) | (num >>> (32 - cnt));\r\n    }\r\n}  ","import Debug from \"./debug\";\r\n\r\n\r\nexport default class MemoryStorage {\r\n\r\n    private static m_map: any = {}\r\n\r\n    static setKeyValue(key: string, data: any){\r\n        this.m_map[key] = data\r\n    }\r\n\r\n    static getValue(key: string){\r\n        return this.m_map[key]\r\n    }\r\n\r\n    //异步存储 微信专用 注意需要实时读取的不要用\r\n    static setStorageNumber(key: string, data: number) {\r\n        this.m_map[key] = data\r\n    }\r\n\r\n    static setStorageString(key: string, data: string) {\r\n        this.setKeyValue(key, data)\r\n    }\r\n\r\n    static setStorage(key: string, data: any) {\r\n        this.setKeyValue(key, data)\r\n    }\r\n\r\n    static setNumber(key: string, data: number) {\r\n        this.setKeyValue(key, data)\r\n    }\r\n\r\n    static getNumber(key: string, defaultValue?: number) {\r\n        try {\r\n            var value = this.getValue(key) as Number\r\n            return value || defaultValue\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static setJson(key: string, data: JSON) {\r\n        try {\r\n            this.setKeyValue(key, JSON.stringify(data));\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static getJson(key: string) {\r\n        try {\r\n            var str = this.getString(key)\r\n            if (str == null || str == \"\") {\r\n                return null;\r\n            }\r\n            var data = JSON.parse(str);\r\n            return data;\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static setString(key: string, data: String) {\r\n        try {\r\n            this.setKeyValue(key, data)\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static getString(key: string, defaultValue?: string): string {\r\n        try {\r\n            var str = this.getValue(key) as string\r\n            if (str == null || str == \"\") {\r\n                if (defaultValue != null) {\r\n                    return defaultValue;\r\n                }\r\n                return null;\r\n            }\r\n            return str;\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    static setItem(key: string, data: any) {\r\n        try {\r\n            this.setKeyValue(key, data)\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static getItem(key: string): any {\r\n        try {\r\n            var str = this.getValue(key)            \r\n            return str;\r\n        } catch (error) {\r\n            Debug.warn(key, error)\r\n        }\r\n    }\r\n\r\n    static hasItem(key: string) {\r\n        var str = this.getValue(key)\r\n        if(str){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n}\r\n","import AppData from \"../const/app_data\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuScrollWidget extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    moduleNode: cc.Node = null\r\n\r\n    @property(cc.Widget)\r\n    leftWidget: cc.Widget = null\r\n\r\n    @property(cc.Widget)\r\n    scrollWidget: cc.Widget = null\r\n\r\n    _leftWidget_left = 0\r\n    _scrollWidget_left = 0\r\n    _scrollWidget_right = 0\r\n\r\n    onLoad() {\r\n        this._leftWidget_left = this.leftWidget.left\r\n        this._scrollWidget_left = this.scrollWidget.left\r\n        this._scrollWidget_right = this.scrollWidget.right\r\n    }\r\n\r\n    refreshUI() {\r\n        if (!AppData.isIphoneX) {\r\n            return\r\n        }\r\n        let widget = this.moduleNode.getComponent(cc.Widget)\r\n        if (widget) {\r\n            widget.updateAlignment()\r\n        }\r\n        this.leftWidget.left = this._leftWidget_left + AppData.iphonexOffset\r\n        this.scrollWidget.left = this._scrollWidget_left + AppData.iphonexOffset\r\n        this.scrollWidget.right = this._scrollWidget_right + AppData.iphonexOffset\r\n\r\n        this.leftWidget.updateAlignment()\r\n        this.scrollWidget.updateAlignment()\r\n    }\r\n\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Mirror')\r\nexport default class MirrorShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Mirror\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 c = color * texture2D(texture, uv0);\r\n        c.r *= 0.5;\r\n        c.g *= 0.8;\r\n        c.b += c.a * 0.2;\r\n        gl_FragColor = c;\r\n    }\r\n    `\r\n}\r\n","import Module from \"./module_base\";\r\nimport GameUtil from \"../../../utility/game_util\";\r\nimport { GameManager } from \"../../../manager/game_manager\";\r\nimport LogReportManager from '../../../manager/log_report_manager';\r\nimport Debug from \"../../../manager/debug\";\r\nimport ModuleManager from \"../module_manager\";\r\nimport NetClient from \"../../net/net_client\";\r\n\r\n//处理网络数据\r\nexport default class ModelBase {\r\n\r\n    module: Module<any, any>\r\n    netClient: NetClient;\r\n    private _msgEventMap = {}\r\n    public isDestroyed = false\r\n    send(route:string, message?:any) {\r\n        \r\n        let time = new Date();\r\n        cc.log(`${time.getHours()}:${time.getMinutes()}:${time.getSeconds()} [pomelo]:发送消息:`,route,message);\r\n\r\n        this.netClient.send(route,message || {});\r\n    }\r\n\r\n    registerNetMsg(route:string,callback: Function,ignoreModuleActive: boolean = true){\r\n        let self = this;\r\n        let eventDataList = this._msgEventMap[route];\r\n        if (!eventDataList) {\r\n            eventDataList= []\r\n            this._msgEventMap[route] = eventDataList\r\n        }\r\n\r\n        let cb = function(receiveMessageData){\r\n            if (callback) {\r\n                if (ignoreModuleActive) {\r\n                    callback(receiveMessageData)\r\n                }else{\r\n                    if (!self.isDestroyed) {\r\n                        callback(receiveMessageData)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let eventData = {\r\n            msgName: route,\r\n            callback: cb,\r\n        }\r\n        eventDataList.push(eventData)\r\n        this.netClient.on(route,cb)\r\n    }\r\n\r\n    clearMsgEvent() {\r\n        for (const key in this._msgEventMap) {\r\n            if (this._msgEventMap.hasOwnProperty(key)) {\r\n                const element = this._msgEventMap[key];\r\n                for (let index = 0; index < element.length; index++) {\r\n                    const e = element[index];\r\n                    this.netClient.off(e.msgName, e.callback);\r\n                }\r\n            }\r\n        }\r\n        this._msgEventMap = {}\r\n    }\r\n\r\n    destroyModel() {\r\n        this.clearMsgEvent()\r\n    }\r\n\r\n    showNetPrompt(show: boolean) {\r\n        if (show) {\r\n            ModuleManager.instance.showModuleName(\"NetPrompt\")\r\n        } else {\r\n            ModuleManager.instance.hideModule(\"NetPrompt\")\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nexport default class ModelData {\r\n\r\n    public static instance: ModelData = new ModelData();\r\n\r\n\r\n    clubID:number = null;\r\n    playwayId:string = null;\r\n    tableId:number = null;\r\n}","import ViewBase from \"./view_base\";\r\nimport ModelBase from \"./model_base\";\r\nimport GameUtil from \"../../../utility/game_util\";\r\nimport ModuleManager from \"../module_manager\";\r\nimport Debug from '../../../manager/debug';\r\nimport AppData from '../../../pacakge/public/const/app_data';\r\nimport MVVMBase from './mvvm_base';\r\nimport Utility from \"../../../utility/Utility\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\nexport enum ViewLayer {\r\n    Low,\r\n    Mid,\r\n    High,\r\n    Highest,\r\n}\r\n\r\ndeclare interface IWaitDealData {\r\n    key?: string;\r\n    data: any;\r\n    handle?: Function;\r\n    target?: any;\r\n}\r\n\r\nexport let moduleTypeNames = {};\r\n\r\n//预加载的资源\r\nexport let preloadResUrls = [];\r\n\r\nexport function bindButtonClickEvent(nodeName : string,closeSound ?: boolean) {\r\n    return function bind(target: any, propertyName: string, descriptor: PropertyDescriptor) {\r\n        target.onButtonClickEventFunctions = target.onButtonClickEventFunctions ? target.onButtonClickEventFunctions : {}\r\n        target.onButtonClickEventFunctions[nodeName] = {}\r\n        target.onButtonClickEventFunctions[nodeName].func = propertyName\r\n        target.onButtonClickEventFunctions[nodeName].closeSound = closeSound\r\n    }\r\n}\r\n\r\nexport function moduleInit(moduleClassName : string, packageName ?: string, preloadResUrls ?: string[]) {\r\n    return function bind(target: any) {\r\n        target.moduleClassName = moduleClassName\r\n        target.packageName = packageName\r\n        moduleTypeNames[moduleClassName] = target\r\n        // ModuleManager.instance.registModule(moduleClassName, target)\r\n    }\r\n}\r\n\r\n\r\ndeclare interface ISubscribeData{\r\n\r\n    propertyName? : string;\r\n    mapData? : any[];\r\n    ignoreModuleActive?: boolean;\r\n\r\n}\r\n\r\nexport function subscribeMsg(msgData : any[], ignoreModuleActive : boolean = false){\r\n    return function (target: any, propertyName: string, descriptor: PropertyDescriptor){  \r\n\r\n        let data : ISubscribeData = {};\r\n        data.ignoreModuleActive = ignoreModuleActive;\r\n        data.mapData = msgData;\r\n        data.propertyName = propertyName;\r\n\r\n        target.subscribeMsgList = target.subscribeMsgList ? target.subscribeMsgList : [];\r\n        target.subscribeMsgList.push(data);    \r\n    }\r\n}\r\n\r\nfunction propertyEvent(eventName : string) {\r\n    return function (target: any, propertyName: string) {\r\n        target.string = eventName\r\n    }\r\n}\r\n\r\nexport function implementFunction(funName: string){\r\n    return function(target: any, propertyName: string){\r\n        target[funName] = target[propertyName]\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class Module<V extends ViewBase, M extends ModelBase> extends MVVMBase {\r\n    public package: string\r\n    public moduleName: string\r\n\r\n    //显示ID，会依次累加\r\n    private static _showId = 0\r\n\r\n    protected windowPrefabResPath: string;\r\n    protected viewType;\r\n    protected modelType;\r\n    public moduleType\r\n\r\n    clickAnywhereClose = true//是否点击任何地方关闭\r\n    needAnim: boolean = false//是否需要打开关闭动画\r\n    needViewMask: boolean = false\r\n    _viewMask: cc.Node = null//view 界面遮罩\r\n\r\n    needViewBaseBg: boolean = false\r\n    _viewBaseBg: cc.Node = null\r\n\r\n    needViewBaseCloseBtn: boolean = false\r\n    _viewBaseCloseBtn: cc.Node = null\r\n\r\n    needViewBaseTitleBg: boolean = false\r\n    _viewBaseTitleBg: cc.Node = null\r\n\r\n    layer: ViewLayer = ViewLayer.Low;\r\n    protected view: V;\r\n    protected model: M;\r\n    protected intentData: any\r\n    protected waitDealQueue: IWaitDealData[] = []\r\n    private isShowState: boolean\r\n    protected completeCallback: (module : Module<V, M>, state : boolean) => void\r\n    //自定义\r\n    protected customCompleteCallback: (module : Module<V, M>, state : boolean) => void\r\n    protected mPrefab: cc.Prefab = null\r\n    protected autoShowAnim: boolean = true\r\n\r\n    public onButtonClickEventFunctions\r\n\r\n    public subscribeMsgList : ISubscribeData[] ;\r\n\r\n    get showId(): number {\r\n        return this.moduleType._showId\r\n    }\r\n\r\n\r\n    onShow(intentData: any) {\r\n        this.DealAllWaitDealQueue();             \r\n    }\r\n\r\n    onHide() {\r\n\r\n    }\r\n\r\n    //重置module 所有事件注销\r\n    resetModule() { }\r\n\r\n    onInit(intentData: any) { }\r\n\r\n    //模块初始化完成，但是View还没初始化完成\r\n    onModuleInit(intentData: any) { }\r\n\r\n    on_destroy(): any { }\r\n\r\n    resetInit(viewNode: cc.Node, intentData?: any, completeCallback?: (state: boolean) => void) {\r\n        let self = this;\r\n        this.intentData = intentData;\r\n        if (this.modelType != null) {\r\n            this.model = new this.modelType();\r\n            this.model.module = this;\r\n        }\r\n        let viewBase = viewNode.getComponent<V>(self.viewType);\r\n        self.view = viewBase\r\n        viewBase._moduleBase = self\r\n        self.isInited = true\r\n        self.onInit(self.intentData);\r\n        self.show(self.intentData, completeCallback)\r\n    }\r\n\r\n    init(intentData?: any, completeCallback?: (module, state: boolean) => void) {\r\n        let self = this;\r\n        this.setShowState(true)\r\n        this.intentData = intentData;\r\n        //TODO: 怎么才能获取V的类型呢\r\n\r\n        if (this.modelType != null) {\r\n            this.model = new this.modelType();\r\n            this.model.module = this;\r\n        }\r\n\r\n        this.onModuleInit(intentData)\r\n\r\n        this.loadViewMask()        \r\n\r\n        let loadTimestamp = new Date().getTime();\r\n        cc.log(\"请求加载模块prefab:\", this.windowPrefabResPath)\r\n        let netPromptsActive = false\r\n        //if (!CC_JSB) {\r\n            netPromptsActive = ModuleManager.instance.moduleHasActive(\"NetPrompt\")\r\n            if (!netPromptsActive && this.moduleName != \"NetPrompt\") {\r\n                ModuleManager.instance.showModuleName(\"NetPrompt\", { \"showImmediately\": true})\r\n            }\r\n        //}\r\n        this.loadRes(this.windowPrefabResPath, function (err, prefab: cc.Prefab) {\r\n            cc.log(\"加载模块prefab返回：\", self.windowPrefabResPath, (new Date().getTime() - loadTimestamp) / 1000 + \"S\")\r\n            if (!netPromptsActive && self.moduleName != \"NetPrompt\") {\r\n                ModuleManager.instance.hideModule(\"NetPrompt\")\r\n            }\r\n            if (err) {\r\n                Debug.warn(\"load module prefab error:\", self.windowPrefabResPath)\r\n                //TODO:加载失败怎么办\r\n                // if (completeCallback) {\r\n                //     completeCallback(false)\r\n                // }\r\n                return\r\n            }\r\n\r\n            //TODO:防止在网络很差的情况下，过了很久才回包，打乱当前的模块打开逻辑\r\n            if (new Date().getTime() - loadTimestamp > 15000) {\r\n                cc.log(\"加载模块prefab超时：\", self.windowPrefabResPath)\r\n                return\r\n            }\r\n\r\n            if (self.isDestroyed || !self.node) {\r\n                Debug.log(self.moduleName, \" 模块已经被销毁\")\r\n                return\r\n            }\r\n\r\n            if (self.view && self.view.node) {\r\n                Debug.log(self.moduleName, \" 模块已经加载过了\")\r\n                if (!self.isShowState && self.isHide) {\r\n                    self.node.active = false\r\n                    Debug.warn(self.moduleName, \"最后的状态是隐藏！！！！\")\r\n                    return\r\n                } else {\r\n                    self.show(self.intentData, completeCallback)\r\n                }\r\n                return\r\n            }\r\n\r\n            let newNode = cc.instantiate(prefab)\r\n            self.mPrefab = prefab\r\n            cc.loader.setAutoReleaseRecursively(prefab, true)//释放掉不用的\r\n            self.node.addChild(newNode);\r\n            let viewBase = newNode.getComponent<V>(self.viewType);\r\n            self.view = viewBase    \r\n            self.loadBaseBg()        \r\n            viewBase._moduleBase = self\r\n            let widget = newNode.addComponent(cc.Widget)\r\n            widget.isAlignTop = true;\r\n            widget.isAlignBottom = true;\r\n            widget.isAlignLeft = true;\r\n            widget.isAlignRight = true;\r\n            widget.target = self.node.parent;\r\n            widget.alignMode = cc.Widget.AlignMode.ON_WINDOW_RESIZE;            \r\n            if (!self.isInited) {\r\n                self.onInit(self.intentData);\r\n            }\r\n            self.isInited = true;\r\n            if (!self.isShowState && self.isHide) {\r\n                self.node.active = false\r\n                Debug.error(self.moduleName, \"最后的状态是隐藏！！！！\")\r\n                return\r\n            } else {\r\n                self.show(self.intentData, completeCallback)\r\n            }\r\n        })\r\n    }\r\n\r\n    private loadViewMask() {\r\n        if (this.needViewMask && this._viewMask == null) {\r\n            let mask = new cc.Node()\r\n            mask.name = \"mask\"\r\n            mask.parent = this.node\r\n            mask.scale = 1\r\n            let sprite = mask.addComponent(cc.Sprite)\r\n            let button = mask.addComponent(cc.Button)\r\n            button.node.on('click', () => {\r\n                if(this.clickAnywhereClose) this.hide()\r\n            }, this)\r\n            sprite.type = cc.Sprite.Type.SLICED\r\n            mask.opacity = 190\r\n            this._viewMask = mask\r\n            mask.active = false\r\n            GameUtil.loadRes(\"image/mask\", function (err, spriteFrame: cc.SpriteFrame) {\r\n                if (err) {\r\n                    Debug.warn(\"load mask error:\", err)\r\n                    return\r\n                }\r\n                if (sprite && sprite.isValid) {\r\n                    sprite.spriteFrame = spriteFrame\r\n                }\r\n                if (mask && mask.isValid) {\r\n                    // mask.setContentSize(4000, 2500)\r\n                    let widget = mask.addComponent(cc.Widget)\r\n                    widget.isAlignTop = true;\r\n                    widget.isAlignBottom = true;\r\n                    widget.isAlignLeft = true;\r\n                    widget.isAlignRight = true;\r\n                    widget.target = mask.parent.parent;\r\n                    widget.alignMode = cc.Widget.AlignMode.ON_WINDOW_RESIZE;\r\n                }\r\n            }, cc.SpriteFrame)\r\n        }\r\n    }\r\n\r\n    private loadBaseBg(onFinish?: Function){\r\n        let self = this\r\n        let checkCloseBtn = function(nodeCloseBtn, show){\r\n            if(show){\r\n                nodeCloseBtn.active = true\r\n                nodeCloseBtn.on('click', self.on_click_base_close_btn, self)\r\n            }else{\r\n                nodeCloseBtn.active = false\r\n                nodeCloseBtn.off('click', self.on_click_base_close_btn, self)\r\n            }\r\n        }        \r\n        if (self.needViewBaseBg) {\r\n            if(!self._viewBaseBg){\r\n                GameUtil.loadRes(\"package/hall/module/base_bg/base_bg\", function (err, prefab: cc.Prefab) {\r\n                    if (err) {\r\n                        Debug.warn(\"load mask error:\", err)\r\n                        return\r\n                    }\r\n                    if (prefab && prefab.isValid) {\r\n                        let node = cc.instantiate(prefab)\r\n                        self._viewBaseBg = node\r\n                        node.parent = self.view.node\r\n                        node.zIndex = -1\r\n                        node.position = cc.Vec2.ZERO\r\n                        node.active = true\r\n                        let nodeCloseBtn = cc.find('_baseCloseBtn', node)\r\n                        let nodeTitleBg = cc.find('title_bg', node)\r\n                        self._viewBaseCloseBtn = nodeCloseBtn\r\n                        self._viewBaseTitleBg = nodeTitleBg\r\n                        self._viewBaseTitleBg.active = !!self.needViewBaseTitleBg\r\n                        checkCloseBtn(nodeCloseBtn, self.needViewBaseCloseBtn)\r\n                        onFinish && onFinish()\r\n                    }                \r\n                }, cc.Prefab)\r\n            }else{\r\n                self._viewBaseBg.active = true\r\n                self._viewBaseTitleBg.active = !!self.needViewBaseTitleBg\r\n                checkCloseBtn(self._viewBaseCloseBtn, self.needViewBaseCloseBtn)\r\n                onFinish && onFinish()\r\n            }            \r\n        }else{\r\n            if(self._viewBaseBg){\r\n                self._viewBaseBg.active = false\r\n                self._viewBaseTitleBg.active = !!self.needViewBaseTitleBg\r\n                checkCloseBtn(self._viewBaseCloseBtn, false)\r\n            }\r\n            onFinish && onFinish()\r\n        }\r\n    }\r\n\r\n    protected on_click_base_close_btn(node: cc.Node){\r\n        Utility.instance.playButtonSound();\r\n        this.hide()\r\n    }\r\n\r\n    show(intentData?: any, completeCallback?: (module, state: boolean) => void) {\r\n        ++(this.moduleType._showId)\r\n        Debug.warn(\"Module ShowId：\", this.moduleName, this.moduleType._showId)\r\n        if (!this.isInited) {\r\n            this.init(intentData, completeCallback)\r\n            cc.error(\"打开模块(上次打开资源未加载成功)：\", this.moduleName, this.windowPrefabResPath)\r\n            return\r\n        }\r\n        this.setShowState(true)\r\n        // if (this.isHide) {\r\n        //     this.node.active = false;\r\n        //     return\r\n        // }\r\n\r\n        this.intentData = intentData;\r\n        this.completeCallback = completeCallback;\r\n        if (this.isDestroyed) {//destroy在这一帧结束调用！\r\n            cc.error(\"打开模块(view已经销毁)：\", this.moduleName, this.windowPrefabResPath)\r\n            return\r\n        }\r\n        if (!this.node.active) {\r\n            this.node.active = true;\r\n        }\r\n        this.isHide = false\r\n        this.onShow(intentData)\r\n        this.view.onShow(intentData);        \r\n        if (intentData && typeof (intentData) == \"string\" && intentData == \"tips\") {\r\n            this.view.node.active = false\r\n            if (this._viewMask) {\r\n                this._viewMask.active = false\r\n            }\r\n        } else {\r\n            if (this.autoShowAnim) {//自动播放动画，否则等待module完成请求后自己调用动画方法\r\n                this.showAnim(true)\r\n            }\r\n        }\r\n        if (this.completeCallback) {\r\n            this.completeCallback(this, true)\r\n        }\r\n    }\r\n\r\n    showLayerTop() {\r\n        this.node.setSiblingIndex(this.node.parent.childrenCount - 1)\r\n    }\r\n\r\n    showAnim(open = true) {\r\n        if (!this.view) {\r\n            return\r\n        }\r\n        if (this._viewMask && this._viewMask.active == false) {\r\n            this._viewMask.active = true\r\n        }\r\n        if (this.needAnim) {\r\n            if (open) {\r\n                ModuleManager.instance.playAnim(true, this.view.node, this._viewMask, this.scheduleShow.bind(this))\r\n            } else {\r\n                ModuleManager.instance.playAnim(false, this.view.node, this._viewMask, this.scheduleHide.bind(this))\r\n            }\r\n        } else {\r\n            if (open) {\r\n                this.scheduleShow()\r\n            } else {\r\n                this.scheduleHide()\r\n            }\r\n        }\r\n    }\r\n\r\n    showNetPrompt(show: boolean) {\r\n        if (show) {\r\n            ModuleManager.instance.showModuleName(\"NetPrompt\")\r\n        } else {\r\n            ModuleManager.instance.hideModule(\"NetPrompt\")\r\n        }\r\n    }\r\n\r\n    private scheduleShow() {\r\n        if (this.view) {\r\n            this.view.node.scale = 1\r\n            //this.view.node.active = true\r\n        }\r\n    }\r\n\r\n    private scheduleHide() {\r\n        if (!this.node) {\r\n            return\r\n        }\r\n        if (this.node.active) {\r\n            this.node.active = false;\r\n        }\r\n        this.onHide()\r\n    }\r\n\r\n    hide() {\r\n        this.isHide = true\r\n        this.setShowState(false)\r\n        this.CleanWaitDealQueue();\r\n        if (this.node.active) {\r\n            Debug.warn(\"hidePrefab\", this.node.name)\r\n            this.node.active = false;\r\n        }\r\n        // this.showAnim(false)\r\n        this.onHide()\r\n    }\r\n\r\n    setShowState(isShow: boolean){\r\n        this.isShowState = isShow\r\n    }\r\n\r\n    destroyModule(release?: boolean) {\r\n        this.node.destroy()\r\n        this.node.active = false\r\n        this.isHide = true\r\n        //TODO:直接Destroy是否会暂停所有事件\r\n        // this.node.stopAllActions()\r\n\r\n        this.on_destroy()\r\n        if (this.view) {\r\n            Debug.warn(\"destroyView\", this.view.node.name)\r\n            this.view.destroyView();\r\n            this.view.unscheduleAllCallbacks()\r\n            this.view.on_destroy()\r\n            this.view = null;\r\n        }\r\n        if (this.model) {\r\n            this.model.destroyModel()\r\n        }\r\n        this.unscheduleAllCallbacks()\r\n        this.setShowState(false)\r\n        this._baseDestroy()\r\n        this.isDestroyed = true\r\n        if (release && this.mPrefab) {\r\n            //cc.loader.release(this.mPrefab)\r\n            //resLoader.releaseRes(this.windowPrefabResPath);\r\n            \r\n        }\r\n    }\r\n\r\n    AddToWaitDealQueue(data: IWaitDealData) {\r\n        this.waitDealQueue.push(data)\r\n    }\r\n\r\n    AddHandleToWaitDealQueue(handle: Function, data: any, target?: any) {\r\n        let waitDealData = {\r\n            handle: handle,\r\n            target: target,\r\n            data: data,\r\n        }\r\n        this.AddToWaitDealQueue(waitDealData);\r\n    }\r\n\r\n    GetWaitDealQueueHead(): IWaitDealData {\r\n        if (this.waitDealQueue.length > 0) {\r\n            return this.waitDealQueue.shift();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    DealAllWaitDealQueue() {\r\n        for (const key in this.waitDealQueue) {\r\n            if (this.waitDealQueue.hasOwnProperty(key)) {\r\n                const element = this.waitDealQueue[key];\r\n                if (element.handle) {\r\n                    let handle = element.handle\r\n                    if (element.target) {\r\n                        handle = handle.bind(element.target);\r\n                    }\r\n                    handle(element.data);\r\n                }\r\n            }\r\n        }\r\n        this.CleanWaitDealQueue();\r\n    }\r\n\r\n    CleanWaitDealQueue() {\r\n        this.waitDealQueue = [];\r\n    }\r\n\r\n    _ButtonClick(node: cc.Node, customEventData) {\r\n        let nodeName = node.name\r\n        let funcName = this.onButtonClickEventFunctions ? this.onButtonClickEventFunctions[nodeName] : null\r\n        \r\n        if(!(funcName && funcName.closeSound)){\r\n            Utility.instance.playButtonSound();//在这里统一播声音吧\r\n        }\r\n        \r\n        if (funcName) {\r\n            this[funcName.func](node, customEventData)\r\n        }\r\n        \r\n        this.onButtonClick(node, customEventData)\r\n        this.onButtonClickName(nodeName, customEventData, node)\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n\r\n    }\r\n\r\n    protected onButtonClickName(name : string, customEventData,_node:cc.Node){\r\n\r\n    }\r\n\r\n}\r\n","import ModuleManager from '../../../framework/core/module_manager';\r\nimport SceneManager from '../../../manager/scene_manager';\r\nimport AppData from './app_data';\r\n\r\nexport default class ModuleData {\r\n\r\n    public static instance: ModuleData = new ModuleData();\r\n\r\n    protected backFromTable: boolean = true;\r\n    protected curMatchId = 0;\r\n    protected curGoldId = 0;\r\n    protected curMatchStageNum = 0;\r\n    protected curMatchData = null//本局比赛场配置数据\r\n    protected curGoldData = null//本局金币场配置数据\r\n\r\n    setCurGoldId(goldId) {\r\n        this.curGoldId = goldId;\r\n    }\r\n\r\n    getCurGoldId() {\r\n        return this.curGoldId\r\n    }\r\n\r\n    getCurMatchId() {\r\n        return this.curMatchId\r\n    }\r\n\r\n    isBackFromTable() {\r\n        return this.backFromTable;\r\n    }\r\n\r\n    setBackFromTable(backFromTable) {\r\n        this.backFromTable = backFromTable\r\n    }\r\n\r\n\r\n    //比赛场\r\n    gotoMatch() {\r\n\r\n        this.setBackFromTable(true);\r\n        if (this.curMatchData) {\r\n            // ModuleManager.instance.showModule(Match, \"Match\", { type: type })\r\n        } else {\r\n            // ModuleManager.instance.showModule(Match, \"Match\")\r\n        }\r\n    }\r\n\r\n    isTableModuleActive() {\r\n        // return ModuleManager.instance.moduleHasActive(this.tableModuleName);\r\n    }\r\n\r\n\r\n\r\n    gotoMatchingTableModule(data, onFinish?: () => void) {        \r\n        this.beginEnterTableModule()        \r\n\r\n        ModuleManager.instance.showModuleName(\"TableMatchModule\");\r\n\r\n        // ModuleManager.instance.showModuleName(this.matchModuleName, data, onFinish, this.tableModuleName)\r\n        // ModuleManager.instance.showModule(MarqueeModule, 'MarqueeModule', { style: 'table' })\r\n    }\r\n\r\n    //准备进入牌桌模块，包括匹配模块\r\n    protected beginEnterTableModule() {\r\n        // ModuleManager.instance.destroyAllModule([\"AuthModule\", \"Hall\", this.tableModuleName, \"GoldEntranceModule\"])\r\n        //ModuleManager.instance.showModuleName(\"TableMatchModule\");\r\n\r\n    }\r\n\r\n    //真正进入了牌桌模块后删除大厅预制\r\n    destoryHallModule() {\r\n        // ModuleManager.instance.hideModule(\"Hall\")\r\n        // ModuleManager.instance.hideModule(\"Match\")\r\n        // ModuleManager.instance.hideModule(\"GoldEntranceModule\")\r\n        // ModuleManager.instance.hideModule(\"CreatRoom\")\r\n        // ModuleManager.instance.destroyAllModule([\"Hall\", this.tableModuleName, this.matchModuleName, \"Match\", \"GoldEntranceModule\", \"TimeLimitGiftModule\", 'MarqueeModule'])\r\n    }\r\n\r\n}","import ModuleBase, { ViewLayer, moduleTypeNames } from \"./mvvm/module_base\";\r\nimport ViewBase from \"./mvvm/view_base\";\r\nimport ModelBase from './mvvm/model_base';\r\nimport Debug from \"../../manager/debug\";\r\nimport GameUtil from \"../../utility/game_util\";\r\nimport LanguageManager from \"../../manager/language_manager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n\r\n@ccclass\r\nexport default class ModuleManager extends cc.Component {\r\n\r\n    //预加载的资源，一个一个加载\r\n    _asynPath: string[] = [\r\n        \"package/public/public_netprompt\",\r\n        \"package/public/public_toast\",\r\n        \"package/hall/hall\",\r\n    ]\r\n    _asynLoadResCount : number = 0\r\n\r\n    // private _preloadResUrls : Queue<String> = new Queue<String>()\r\n \r\n    // destroyAllModuleExceptList = [\r\n    //     'NetPrompt',\r\n    //     'Dialog',\r\n    //     'Toast',\r\n    // ]\r\n\r\n    readonly allwaysInMemory = [   \r\n        'NetPrompt',\r\n        'Toast',\r\n        'Hall',] \r\n\r\n    static instance: ModuleManager;\r\n\r\n    private _modules: any = {}\r\n\r\n    private _removeModules: any = {}\r\n\r\n    @property(cc.Node)\r\n    low: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    middle: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    high: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    highest: cc.Node = null;\r\n\r\n    onLoad() {\r\n        ModuleManager.instance = this;\r\n    }\r\n\r\n    registModule(name: string, T) {\r\n        moduleTypeNames[name] = T\r\n    }\r\n\r\n    public addModule<T extends ModuleBase<ViewBase, ModelBase>>(T, moduleName: string, intentData?: any, onFinishLoad?: (module : ModuleBase<ViewBase, ModelBase>, state : boolean) => void): T {\r\n        let tName = moduleName;\r\n        let module : T = this._modules[tName];\r\n        if (module == null) {\r\n            let newNode = new cc.Node()\r\n            newNode.name = tName\r\n            let widget = newNode.addComponent(cc.Widget)\r\n            widget.isAlignTop = true;\r\n            widget.isAlignBottom = true;\r\n            widget.isAlignLeft = true;\r\n            widget.isAlignRight = true;\r\n            widget.alignMode = cc.Widget.AlignMode.ONCE\r\n\r\n            module = newNode.addComponent(T)\r\n            if (module == null) {\r\n                Debug.warn(\"addModule失败：\" + tName)\r\n                return null\r\n            }\r\n            module.moduleType = T\r\n            module.moduleName = tName\r\n            switch (module.layer) {\r\n                case ViewLayer.Low:\r\n                    newNode.width = this.low.width\r\n                    this.low.addChild(newNode)\r\n                    break;\r\n                case ViewLayer.Mid:\r\n                    newNode.width = this.middle.width\r\n                    this.middle.addChild(newNode)\r\n                    break;\r\n                case ViewLayer.High:\r\n                    newNode.width = this.high.width\r\n                    this.high.addChild(newNode)\r\n                    break;\r\n                case ViewLayer.Highest:\r\n                    newNode.width = this.highest.width;\r\n                    this.highest.addChild(newNode);\r\n                    break;\r\n                default:\r\n                    newNode.width = this.low.width\r\n                    this.low.addChild(newNode)\r\n                    break;\r\n            }\r\n            this._modules[tName] = module;\r\n            module.node.setSiblingIndex(module.node.parent.childrenCount - 1)\r\n            module.init(intentData, onFinishLoad);\r\n        }\r\n        return module\r\n    }\r\n\r\n    //跳转到某个模块，会把其他模块都隐藏\r\n    goToModule<T>(T, intentData?: any, completeCallback?: Function, replaceModuleName?: string) {\r\n        let self = this\r\n        let moduleName = T.moduleClassName\r\n        this.showModule(T, intentData, function () {\r\n            self.hideAllModuleS(moduleName, true)\r\n            if (completeCallback) {\r\n                completeCallback()\r\n            }\r\n        }, replaceModuleName)\r\n    }\r\n\r\n    //replaceModuleName  替换模块名字 如：需要打开牌桌模块 我用匹配模块去转换\r\n    showModule<T extends ModuleBase<ViewBase, ModelBase>>(T, intentData?: any, completeCallback?: (module : ModuleBase<ViewBase, ModelBase>, state : boolean) => void, replaceModuleName?: string): T {\r\n        let moduleName = T.moduleClassName\r\n        if (!moduleName) {\r\n            console.error(\"请在模块Module类中添加@moduleClassName('模块的类名')装饰器\", T)\r\n            return\r\n        }\r\n        Debug.warn(\"showModule: \" + moduleName)\r\n        if (moduleName == \"GamePlayerInfoModule\") {\r\n            return\r\n        }\r\n        if (replaceModuleName != null && replaceModuleName != \"\") {\r\n            let module : T = this._modules[replaceModuleName];\r\n            if (module != null) {\r\n                module.resetModule()\r\n                let node: cc.Node = module.node\r\n                //TODO:这是什么逻辑呢？用处？\r\n                if (node.childrenCount > 0) {//有可能View已经被销毁或者加载失败\r\n                    // let T1 = this._moudleType[moduleName]\r\n                    // let T2 = this._moudleType[replaceModuleName]\r\n                    // node.removeComponent(T1)\r\n                    // node.removeComponent(T2)\r\n                    // this._modules[replaceModuleName] = null\r\n                    // node.name = moduleName\r\n                    // let newModule: any = node.addComponent(T1)\r\n                    // this._modules[moduleName] = newModule\r\n                    // newModule.moduleName = moduleName\r\n                    // Debug.log(\"showModule: \" + moduleName, replaceModuleName)\r\n                    // newModule.node.setSiblingIndex(newModule.node.parent.childrenCount - 1)\r\n                    // newModule.resetInit(node.children[0], intentData, completeCallback)\r\n                    // module = null\r\n                    // return newModule\r\n                } else {\r\n                    this._modules[moduleName] = null\r\n                }\r\n            }\r\n        }\r\n\r\n        let tName = moduleName;\r\n        let module : T = this._modules[tName];\r\n        if (module == null) {\r\n            module = this.addModule(T, moduleName, intentData, completeCallback)\r\n        } else { \r\n            module.node.setSiblingIndex(module.node.parent.childrenCount - 1)\r\n            module.show(intentData, completeCallback)\r\n        }\r\n        return module\r\n    }\r\n\r\n    showModuleName(moduleName: string, intentData?: any, completeCallback?: (module : ModuleBase<ViewBase, ModelBase>, state : boolean) => void, replaceModuleName?: string) {\r\n        Debug.warn(\"showModuleName：\" + moduleName)\r\n        let module : ModuleBase<ViewBase, ModelBase> = null\r\n        if (replaceModuleName != null && replaceModuleName != \"\") {\r\n            let module : ModuleBase<ViewBase, ModelBase> = this._modules[replaceModuleName];\r\n            if (module != null) {\r\n                module.resetModule()\r\n                let node: cc.Node = module.node\r\n                if (node.childrenCount > 0) {//有可能View已经被销毁或者加载失败\r\n                } else {\r\n                    this._modules[moduleName] = null\r\n                }\r\n            }\r\n        }\r\n        module = this._modules[moduleName];\r\n        if (module == null) {\r\n            if (moduleTypeNames[moduleName]) {\r\n                let T = moduleTypeNames[moduleName]\r\n                module = this.addModule(T, moduleName, intentData, completeCallback)\r\n            } else {\r\n                cc.error(\"showModuleName没找到对应的class：\", moduleName)\r\n            }\r\n        } else {\r\n            module.node.setSiblingIndex(module.node.parent.childrenCount- 1)\r\n            module.show(intentData, completeCallback)\r\n        }\r\n        return module\r\n    }\r\n\r\n\r\n    toastLong(text: string) {\r\n        let data = { text: text, long: true }\r\n        this.showModuleName(\"Toast\", data)\r\n        return module\r\n    }\r\n\r\n    toast(text: string) {\r\n        this.showModuleName(\"Toast\", text)\r\n        return module\r\n    }\r\n\r\n    toastKey(key: string) {\r\n        this.showModuleName(\"Toast\", LanguageManager.t(key, true))\r\n        return module\r\n    }\r\n\r\n    showDialog_Confirm(text: string, confirmBtnCallback: Function, title?: string, clickButtonConfirmNotHideView?) {\r\n       // ModuleManager.instance.showModule<Dialog>(Dialog).show_center_button(title, text, confirmBtnCallback, clickButtonConfirmNotHideView)\r\n    }\r\n\r\n    showDialog_CancelConfirm(text: string, confirmBtnCallback: Function, cancelBtnCallback: Function, title?: string, clickButtonConfirmNotHideView?) {\r\n        //ModuleManager.instance.showModule<Dialog>(Dialog).show_common(title, text, confirmBtnCallback, cancelBtnCallback, clickButtonConfirmNotHideView)\r\n    }\r\n\r\n    \r\n\r\n    moduleHasActive(moduleName: string) {\r\n        let module : ModuleBase<ViewBase, ModelBase> = this._modules[moduleName];\r\n        if (module) {\r\n            return module.nodeIsActive\r\n        }\r\n    }\r\n\r\n    moduleLayerType(moduleName: string) {\r\n        let module : ModuleBase<ViewBase, ModelBase> = this._modules[moduleName];\r\n        if (module) {\r\n            return module.layer\r\n        }\r\n    }\r\n\r\n\r\n    setModuleActive(moduleName: string, needAdd) {\r\n        let module : ModuleBase<ViewBase, ModelBase> = this._modules[moduleName];\r\n        if (module) {\r\n            module.setActive()\r\n        } else {\r\n            if (needAdd) {\r\n                this.showModuleName(moduleName)\r\n            }\r\n        }\r\n    }\r\n\r\n    getModule(moduleName: string) {\r\n        let module = this._modules[moduleName]\r\n        return module\r\n    }\r\n\r\n    getModuleFromType<T extends ModuleBase<ViewBase, ModelBase>>(T) : T{\r\n        let moduleName = T.moduleClassName;\r\n        if (!moduleName) {\r\n            Debug.error(\"请在模块Module类中添加@moduleClassName('模块的类名')装饰器\", T)\r\n            return;\r\n        }\r\n\r\n        return this.getModule(moduleName) as T;\r\n    }\r\n\r\n    hideModule(moduleName: string) {\r\n        let module : ModuleBase<ViewBase, ModelBase> = this._modules[moduleName];\r\n        if (module) {\r\n            Debug.warn(\"hideModule：\", moduleName)\r\n            module.hide()\r\n        }\r\n    }\r\n\r\n    hideAllModuleS(exclusiveMoudleName?: string, incluePublicPackage?: boolean) {\r\n        for (let key in this._modules) {\r\n            let module : ModuleBase<ViewBase, ModelBase> = this._modules[key]\r\n            if (module == null || (exclusiveMoudleName && module.moduleName && exclusiveMoudleName == module.moduleName)) {\r\n                continue;\r\n            }\r\n            if (!incluePublicPackage) {\r\n                if (module.package != \"public\") {\r\n                    module.hide()\r\n                }\r\n            } else {\r\n                Debug.warn(\"hideModule：\", module.moduleName)\r\n                module.hide()\r\n            }\r\n        }\r\n    }\r\n\r\n    hideAllModule(except?: any) {\r\n        let exceptList = ['Toast', 'NetPrompt']\r\n        if (except) {\r\n            if (except instanceof Array) {\r\n                for (let i = 0; i < except.length; i++) {\r\n                    exceptList.push(except[i]);\r\n                }\r\n            } else if (typeof (except) == 'string') {\r\n                exceptList.push(except);\r\n            }\r\n        }\r\n        for (const name in this._modules) {\r\n            let needHide = true\r\n            for (let i = 0; i < exceptList.length; i++) {\r\n                if (name == exceptList[i]) {\r\n                    needHide = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (needHide) {\r\n                this.hideModule(name);\r\n            }\r\n        }\r\n    }\r\n\r\n    //移除module，但是不销毁\r\n    removeModule(moduleName: string, release?: boolean) {\r\n        let module : ModuleBase<ViewBase, ModelBase> = this._modules[moduleName];\r\n        if (module) {\r\n            Debug.warn(\"removeModule：\", moduleName)\r\n            this._modules[moduleName] = null\r\n            this._removeModules[moduleName] = module\r\n        }\r\n        return module\r\n    }\r\n\r\n    destroyRemoveModule(moduleName: string, release: boolean = false) {\r\n        let module : ModuleBase<ViewBase, ModelBase> = this._removeModules[moduleName];\r\n        if (module) {\r\n            Debug.warn(\"destroyRemoveModule：\", moduleName)\r\n            module.destroyModule(release)\r\n            this._removeModules[moduleName] = null\r\n        }\r\n        return module\r\n    }\r\n\r\n    destroyModule(moduleName: string, release: boolean = true) {\r\n        let module : ModuleBase<ViewBase, ModelBase> = this._modules[moduleName];\r\n        if (module) {\r\n            Debug.warn(\"destroyModule：\", moduleName)\r\n            module.destroyModule(release)\r\n            this._modules[moduleName] = null\r\n        }\r\n    }\r\n    \r\n\r\n    destroyAllModule(except?: any,release : boolean = true) {\r\n\r\n        let exceptList = except ? this.allwaysInMemory.concat(except) : this.allwaysInMemory;\r\n        // if (except) {\r\n        //     if (except instanceof Array) {\r\n        //         for (let i = 0; i < except.length; i++) {\r\n        //             this.destroyAllModuleExceptList.add(except[i]);\r\n        //         }\r\n        //     } else if (typeof (except) == 'string') {\r\n        //         this.destroyAllModuleExceptList.add(except);\r\n        //     }\r\n        // }\r\n\r\n        for (const name in this._modules) {\r\n            let needDestory = true;\r\n            for (let index = 0; index < exceptList.length; index++) {\r\n                const element = exceptList[index];\r\n                if (element == name) {\r\n                    needDestory = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (needDestory) {\r\n                this.destroyModule(name,release);\r\n            }\r\n            \r\n        }\r\n        //this.hideModule(\"NetPrompt\")\r\n        this.hideModule(\"Dialog\")\r\n    }\r\n\r\n    //销毁整个package\r\n    destroyPackage(packageName : string) {\r\n        let needDestroyModuleName\r\n        for (const key in this._modules) {\r\n            let module  = this._modules[key]\r\n            if (module.packageName == packageName) {\r\n                needDestroyModuleName = needDestroyModuleName ? needDestroyModuleName : []\r\n                needDestroyModuleName.push(key)\r\n            }\r\n        }\r\n\r\n        if (needDestroyModuleName) {\r\n            for (const moduleName in needDestroyModuleName) {\r\n                this.destroyModule(moduleName)\r\n            }\r\n        }\r\n    }\r\n\r\n    //隐藏package下的所有模块\r\n    hidePackage(packageName : string) {\r\n        for (const key in this._modules) {\r\n            let module  = this._modules[key]\r\n            if (module.packageName == packageName) {\r\n                module.hide()\r\n            }\r\n        }\r\n    }\r\n\r\n    playAnim(open: boolean, target: cc.Node, mask?: cc.Node, callback?: Function) {\r\n        if (open) {\r\n            target.active = true\r\n            target.scale = 0.9\r\n            let action1 = cc.scaleTo(0.2, 1)\r\n            action1.easing(cc.easeBackOut())\r\n            target.runAction(action1)\r\n            if (mask) {\r\n                mask.active = true\r\n                let action2 = cc.fadeTo(0.3, 190)\r\n                mask.runAction(action2)\r\n            }\r\n\r\n            // let widgets = []\r\n            // if (target && target.isValid) {\r\n            //     widgets = target.getComponentsInChildren(cc.Widget)\r\n            // }\r\n            // let length = widgets.length\r\n            // for (let i = 0; i < length; i++) {\r\n            //     widgets[i].enabled = false\r\n            // }\r\n\r\n            this.scheduleOnce(() => {\r\n                // if (target && target.isValid) {\r\n                //     target.scale = 1\r\n                //     if (widgets) {\r\n                //         let length = widgets.length\r\n                //         for (let i = 0; i < length; i++) {\r\n                //             widgets[i].enabled = true\r\n                //             widgets[i].updateAlignment()\r\n                //         }\r\n                //     }\r\n                // }\r\n                if (callback) {\r\n                    callback()\r\n                }\r\n            }, 0.1)\r\n        } else {\r\n            //关闭缩放动画\r\n            // target.scale = 1\r\n            // let action1 = cc.scaleTo(0.3, 0.01)\r\n            // action1.easing(cc.easeBackIn())\r\n            // target.runAction(action1)\r\n            // if (mask) {\r\n            //     mask.active = true\r\n            //     let action2 = cc.fadeTo(0.3, 0)\r\n            //     mask.runAction(action2)\r\n            // }\r\n            // this.scheduleOnce(() => {\r\n            //     if (callback) {\r\n            //         callback()\r\n            //     } else {\r\n            //         if (target && target.isValid) {\r\n            //             target.active = false\r\n            //         }\r\n            //     }\r\n            // }, 0.3)\r\n\r\n            //直接关闭，不播放缩放动画\r\n            if (target && target.isValid) {\r\n                target.active = false\r\n            }\r\n\r\n            if (mask) {\r\n                mask.active = false\r\n            }\r\n\r\n            if (callback) {\r\n                callback()\r\n            }\r\n        }\r\n    }\r\n\r\n    addPreloadResUrl(resUrl) {\r\n\r\n    }\r\n\r\n\r\n\r\n    preLoadRes(completeCallback?: Function, progressCallback?: Function) {\r\n        let self = this\r\n        if (self._asynLoadResCount < self._asynPath.length) {\r\n            let path = self._asynPath[self._asynLoadResCount]\r\n            GameUtil.loadRes(path, (error: Error, resource: any) => {\r\n                ++self._asynLoadResCount;\r\n                if (error) {\r\n                    Debug.error(error)\r\n                } else {\r\n                    Debug.log(\"预加载资源成功：\", path)\r\n                }\r\n                self.preLoadRes(completeCallback, progressCallback)\r\n                if(progressCallback)\r\n                {\r\n                    progressCallback(self._asynLoadResCount, self._asynPath.length)\r\n                }\r\n            })\r\n        }else\r\n        {\r\n            if(completeCallback)\r\n            {\r\n                completeCallback();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\n\r\nconst renderEngine = cc.renderer.renderEngine;\r\nconst renderer = renderEngine.renderer;\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Mosaic')\r\nexport default class MosaicShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Mosaic\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `uniform sampler2D texture;\r\n    uniform vec3 iResolution;\r\n    uniform float mosaicSize;\r\n    varying vec2 uv0;\r\n     \r\n    void main(void)\r\n    {\r\n        vec4 color;\r\n        vec2 xy = vec2(uv0.x * iResolution.x, uv0.y * iResolution.y);\r\n        vec2 xyMosaic = vec2(floor(xy.x / mosaicSize) * mosaicSize, floor(xy.y / mosaicSize) * mosaicSize);\r\n        vec2 xyFloor = vec2(floor(mod(xy.x, mosaicSize)), floor(mod(xy.y, mosaicSize)));\r\n        vec2 uvMosaic = vec2(xyMosaic.x / iResolution.x, xyMosaic.y / iResolution.y);\r\n        color = texture2D( texture, uvMosaic);\r\n        gl_FragColor = color; \r\n    }`\r\n\r\n    protected _defines = []\r\n\r\n    protected _params = [{ name: 'iResolution', type: renderer.PARAM_FLOAT3 }, { name: 'mosaicSize', type: renderer.PARAM_FLOAT }]\r\n\r\n    protected _needUpdate = true\r\n\r\n    protected setParamValue(material: ShaderMaterial) {\r\n        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);\r\n        material.setParamValue(\"iResolution\", iResolution)\r\n        material.setParamValue(\"mosaicSize\", 16);\r\n    }\r\n\r\n}\r\n","import ModuleManager from \"../module_manager\";\r\nimport GameUtil from \"../../../utility/game_util\";\r\nimport EventManager from \"../../../manager/event_manager\";\r\nimport ModelData from \"../../../pacakge/public/model_data\";\r\nimport AudioManager from \"../../../manager/audio_manager\";\r\nimport NetPrompt from \"../../../pacakge/public/module/netprompt/netprompt\";\r\nimport PromiseUtility from \"../../../utility/promiseUtility\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MVVMBase extends cc.Component {\r\n\r\n    protected isDestroyed = false\r\n\r\n    //隐藏模块，会同样停止http的返回事件\r\n    protected isHide: boolean\r\n\r\n    protected isInited: boolean\r\n\r\n    private m_maxId = 0\r\n\r\n    private m_callbackMap \r\n    private mEventCallback : object\r\n\r\n    get nodeIsActive(): boolean {\r\n        if (this.isInited && this.node != null && cc.isValid(this.node, true)) {\r\n            return this.node.active;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get nodeIsValid():boolean{\r\n        if (this.node != null && cc.isValid(this.node, true)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setActive() {\r\n        if (this.node != null && cc.isValid(this.node, true)) {\r\n            this.node.active = true\r\n        }\r\n    }\r\n\r\n    //是否正常显示\r\n    get normalShow():boolean{\r\n        return !this.isDestroyed && !this.isHide\r\n    }\r\n \r\n    /**\r\n     * 加载动态资源\r\n     * @param url \r\n     * @param completeCallback \r\n     * @param type \r\n     * @param connect \r\n     */\r\n    loadRes(url: string, completeCallback: (error: Error, resource: any) => void, type?: typeof cc.Asset, connect?: number){\r\n        let self = this;                \r\n        GameUtil.loadRes(url,(error,resource)=>{\r\n            if (!self.isDestroyed && !error && completeCallback) {                \r\n                completeCallback(error,resource);\r\n            }\r\n\r\n        },type,connect);\r\n    };\r\n \r\n    /**\r\n     * 播放音效\r\n     * @param url \r\n     * @param loop \r\n     * @param onFinish \r\n     */\r\n    playSound(url: string, loop: boolean = false, onFinish?: Function){\r\n\r\n        let self = this;\r\n        AudioManager.instance.playSound(url,loop,()=>{ \r\n            if (self.normalShow) {\r\n                if (onFinish) {\r\n                    onFinish();    \r\n                }\r\n            }\r\n        });        \r\n    }\r\n    \r\n\r\n    doSchedule(callback: Function, interval?: number, repeat?: number, delay?: number) {\r\n        this.m_callbackMap = this.m_callbackMap ? this.m_callbackMap : {}\r\n        let self = this\r\n        let id = ++this.m_maxId\r\n        let tmpFun = function () {\r\n            if (!repeat) {\r\n                self.cancelSchedule(id)\r\n            }\r\n            callback()\r\n        }\r\n        this.m_callbackMap[Number(id)] = tmpFun\r\n        this.schedule(tmpFun, interval, repeat, delay)\r\n        return id\r\n    }\r\n\r\n    doScheduleOnce(callback: Function, delay: number) {\r\n        this.m_callbackMap = this.m_callbackMap ? this.m_callbackMap : {}\r\n        let id = ++this.m_maxId\r\n        let tmpFun = function () {\r\n            this.m_callbackMap[id.toString()] = null\r\n            callback()\r\n        }\r\n        this.m_callbackMap[Number(id)] = tmpFun\r\n        this.scheduleOnce(tmpFun, delay)\r\n        return id\r\n    }\r\n\r\n    cancelSchedule(id: number) {\r\n        if (this.m_callbackMap) {\r\n            let key = id.toString()\r\n            let callback = this.m_callbackMap[key]\r\n            if (callback) {\r\n                this.unschedule(callback)\r\n                this.m_callbackMap[key] = null\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    eventDispatch(eventName: string, ...data) {\r\n        return EventManager.instance.dispatch(eventName, ...data)\r\n    }\r\n\r\n    eventBind(eventName : string, callback: Function) {\r\n        this.mEventCallback = this.mEventCallback ? this.mEventCallback: {}\r\n        this.mEventCallback[eventName] = callback\r\n        EventManager.instance.on(eventName, callback, this, true)\r\n    }\r\n\r\n    //新增了绑定事件，只会触发调用一次就会自动回收\r\n    eventBindOnce(eventName : string, callback: Function) {\r\n        this.mEventCallback = this.mEventCallback ? this.mEventCallback: {}\r\n        this.mEventCallback[eventName] = callback\r\n        EventManager.instance.on(eventName, callback, this, true, true)\r\n    }\r\n\r\n    eventUnBind(eventName : string, callback: Function) {\r\n        this.mEventCallback = this.mEventCallback ? this.mEventCallback: {}\r\n        this.mEventCallback[eventName] = null\r\n        EventManager.instance.off(eventName, callback, this)\r\n    }\r\n\r\n    protected _baseDestroy() {\r\n        for (const key in this.mEventCallback) {\r\n            if (this.mEventCallback.hasOwnProperty(key)) {\r\n                const callback = this.mEventCallback[key];\r\n                EventManager.instance.off(key, callback, this)\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n}","const {ccclass} = cc._decorator;\r\n\r\nexport enum NetClientProtoType {\r\n    LoginServer = 1,\r\n    GameServer,\r\n    HallServer,\r\n}\r\n\r\n//@ts-ignore\r\nrequire('pomelo')\r\n//网络客户端\r\n@ccclass\r\nexport default class NetClient{\r\n\r\n    pomelo:any;//cc.Pomelo\r\n\r\n    netClientProtoType:NetClientProtoType;\r\n\r\n    netState: boolean\r\n\r\n    name:string;\r\n\r\n    lastReceivePingTime: number = 0\r\n\r\n    heartbeatInterval:number = 0;//心跳间隔\r\n\r\n    heartbeatTimeout:number = 0;//心跳超时\r\n\r\n    private msgMap = {};\r\n\r\n    onConnectStateEvent:(state: string, info?: string) => void;\r\n\r\n    heartbeatEvent:()=>void;\r\n\r\n    constructor(){\r\n        //@ts-ignore\r\n        this.pomelo = new cc.Pomelo();\r\n    }\r\n\r\n    connect(url:string,protoType?: NetClientProtoType){\r\n        if (this.pomelo != null) {\r\n            this.pomelo.clear();\r\n        }\r\n        this.registerNetMsg();\r\n        this.pomelo.connect(url,null);\r\n        if (protoType == null) {\r\n            this.netClientProtoType = NetClientProtoType.LoginServer;\r\n        }\r\n        else {\r\n            this.netClientProtoType = protoType\r\n        }\r\n    }\r\n\r\n    private registerNetMsg(){\r\n        this.clearSysNetMsg();\r\n        this.sysNetMsg('onOpen',this.onOpen.bind(this))\r\n        this.sysNetMsg('onclose',this.onclose.bind(this))\r\n        this.sysNetMsg('onerror',this.onerror.bind(this))\r\n        this.sysNetMsg('handshake',this.handshake.bind(this));\r\n        this.sysNetMsg('heartbeat',this.heartbeatFunc.bind(this));\r\n    }\r\n\r\n    //监听网络\r\n    on(route:string,callback: Function) {\r\n        this.pomelo.on(route,callback);\r\n    }\r\n\r\n    //移除网络监听\r\n    off(route:string, callback: Function) {\r\n        this.pomelo.off(route,callback);\r\n    }\r\n\r\n    //发送网络请求,func \r\n    send(route:string,message:any){\r\n        this.pomelo.request(route,message || {},(msg:any)=>{\r\n            this.emit(route,msg);\r\n        });\r\n    }\r\n\r\n    private emit(event:string,msg:any){\r\n        this.pomelo.emit(event,msg);\r\n    }\r\n\r\n    heartbeat(){\r\n        this.pomelo.heartbeat();\r\n    }\r\n\r\n    //移除所有网络监听\r\n    removeAllNetListeners(){\r\n        // @ts-ignore\r\n        this.pomelo.off();\r\n    }\r\n\r\n    sysNetMsg(route:string,callback:Function){\r\n        this.on(route,callback);\r\n        this.msgMap[route] = callback;\r\n    }\r\n\r\n    clearSysNetMsg(){\r\n        for (let key in this.msgMap) {\r\n            let callback = this.msgMap[key];\r\n            if (this.msgMap.hasOwnProperty(key)) {\r\n                this.off(key,callback);\r\n            }\r\n        }   \r\n        this.msgMap = {};\r\n    }\r\n\r\n    private onOpen(event){\r\n        cc.log('onPen');\r\n        this.lastReceivePingTime = Date.now();\r\n        this.netState = true;\r\n        if (this.onConnectStateEvent) {\r\n            this.onConnectStateEvent(\"OPEN\")\r\n        }\r\n    }\r\n\r\n    private onclose(event){\r\n        cc.log('onclose',event);\r\n        this.netState = false;\r\n        if (this.onConnectStateEvent) {\r\n            this.onConnectStateEvent(\"CLOSE\")\r\n        }\r\n    }\r\n\r\n    private onerror(event){\r\n        cc.error('onerror',event);\r\n        this.netState = false;\r\n        if (this.onConnectStateEvent) {\r\n            this.onConnectStateEvent(\"error\")\r\n        }\r\n    }\r\n\r\n    //连接成功\r\n    private handshake(data){\r\n        this.netState = true;\r\n        this.heartbeatTimeout = 7 * 1000;//7-秒\r\n        this.heartbeatInterval = 2;\r\n        if (this.onConnectStateEvent) {\r\n            this.onConnectStateEvent(\"handshake\")\r\n        }\r\n    }\r\n\r\n    private heartbeatFunc(){\r\n        this.lastReceivePingTime = Date.now();\r\n        //cc.log('-->>>receive ping',this.lastReceivePingTime);\r\n        if (this.heartbeatEvent) {\r\n            this.heartbeatEvent();\r\n        }\r\n    }\r\n\r\n    //检查是否心跳超时 已连接状态超时\r\n    checkHeartBeatTimeOut(time: number = 12000) {\r\n        if ((Date.now() > this.lastReceivePingTime + time) && this.netState) {\r\n            cc.log(\"超时，重连！\")\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //主动断开网络\r\n    activeClose(){\r\n        this.netState = false;\r\n        if (this.pomelo != null) {\r\n            this.pomelo.clear();\r\n            let socket = this.pomelo.websocket();\r\n            if (socket) {\r\n                socket.close(1000, \"activeClose\");\r\n            }\r\n        }\r\n        this.pomelo.socket = null;\r\n        if (this.onConnectStateEvent) {\r\n            this.onConnectStateEvent(\"ActiveClose\")\r\n            this.onConnectStateEvent = null\r\n        }\r\n    }\r\n\r\n    disconnect(){\r\n        this.netState = false;\r\n        if (this.pomelo != null) {\r\n            this.pomelo.clear();\r\n            let socket = this.pomelo.websocket();\r\n            if (socket) {\r\n                socket.close(1000, \"disconnect\");\r\n            }\r\n        }\r\n        if (this.onConnectStateEvent) {\r\n            this.onConnectStateEvent(\"CLOSE\")\r\n            this.onConnectStateEvent = null\r\n        }\r\n    }\r\n}\r\n","//亲友圈\r\nexport class ClubRoute{\r\n    static readonly enterClub = 'connector.clubHandler.enterClub'\r\n    static readonly createClub = 'connector.clubHandler.createClub'\r\n    static readonly joinClub = 'connector.clubHandler.joinClub'\r\n    static readonly getClubTable = 'connector.clubHandler.getClubTable'\r\n    static readonly getClubPlayway = 'connector.clubHandler.getClubPlayway'\r\n    static readonly setClubPlayway = 'connector.clubHandler.setClubPlayway'\r\n    static readonly getClubMember = 'connector.clubHandler.getClubMember'\r\n    static readonly getRankList = 'connector.lobbyHandler.getRankList'  // 全服排行榜\r\n\r\n    static readonly onRefreshClubTable = 'onRefreshClubTable';\r\n    static readonly onRemoveClubTable = 'onRemoveClubTable';\r\n}","const { ccclass, property } = cc._decorator;\r\nimport ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\n\r\n@ccclass\r\nexport default class NetPromptView extends ViewBase {\r\n    @property(cc.Node)\r\n    mainNode: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    reconnectNode: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    loadingProgress: cc.Label = null;\r\n\r\n    showTime: number = 0;\r\n    isProgress: boolean = false;\r\n\r\n    riseTo80Second: number = 2;//从0增加到80%用时\r\n    riseTo100Second: number = 10;//0增加到100%用时\r\n\r\n    refreshProgress(progress: number)\r\n    {\r\n        if(this.loadingProgress != null)\r\n        {\r\n            this.loadingProgress.string = Math.ceil(progress * 100) + \"%\";\r\n        }\r\n    }\r\n\r\n    startProgress()\r\n    {\r\n        this.showTime = 0;\r\n        this.isProgress = true;\r\n    }\r\n    update(dt)\r\n    {\r\n        if(this.isProgress)\r\n        {\r\n            let progress = 0;\r\n            this.showTime = this.showTime + dt;\r\n            //console.log(\"this.onShowTime:\" + this.showTime)\r\n            if(this.showTime < this.riseTo80Second)\r\n            {\r\n                progress = (this.showTime / this.riseTo80Second * 0.8)\r\n                this.refreshProgress(progress)\r\n            }else if(this.showTime < this.riseTo100Second){\r\n                progress = 0.8 + ((this.showTime - this.riseTo80Second) / (this.riseTo100Second - this.riseTo80Second) * 0.2)\r\n                this.refreshProgress(progress)\r\n                if(Math.ceil(progress*100) == 100)\r\n                {\r\n                    this.isProgress = false;\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n}","//默认导入\r\nconst { ccclass, property } = cc._decorator;\r\nimport ModuleBase, { ViewLayer, moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport NetPromptView from \"./netprompt_view\";\r\n\r\n@ccclass\r\n@moduleInit(\"NetPrompt\")\r\nexport default class NetPrompt extends ModuleBase<NetPromptView, null> {\r\n\r\n    scheduleCallback: Function\r\n\r\n    constructor() {\r\n        super();\r\n        this.package = \"public\";\r\n        this.layer = ViewLayer.High;\r\n        this.windowPrefabResPath = \"package/public/public_netprompt\";\r\n        this.viewType = NetPromptView;\r\n    }\r\n\r\n    onShow(intentData) {\r\n        // this.view.reconnectNode.active = false\r\n        // this.view.mainNode.active = false\r\n        if (this.scheduleCallback != null) {\r\n            this.unschedule(this.scheduleCallback);\r\n            this.scheduleCallback = null;\r\n        }\r\n        if (intentData && intentData.autoClose) {\r\n            return\r\n        }\r\n        let self = this\r\n        this.scheduleCallback = function () { self.hide() }\r\n        this.scheduleOnce(this.scheduleCallback, 15)\r\n        this.unschedule(this.laterShow)\r\n        if (intentData && intentData.showImmediately) {\r\n            this.view.mainNode.active = true\r\n        } else {\r\n            if (!this.view.mainNode.active) {\r\n                this.view.mainNode.active = false\r\n                this.scheduleOnce(this.laterShow, 0.3)\r\n            }\r\n        }\r\n        // this.view.reconnectNode.active = intentData && intentData.reconnect\r\n        this.view.startProgress()\r\n    }\r\n\r\n    private laterShow() {\r\n        cc.log(\"lateShow\")\r\n        this.view.mainNode.active = true\r\n    }\r\n\r\n    onHide() {\r\n        if (this.view && this.view.mainNode) {\r\n            this.view.mainNode.active = false\r\n        }\r\n        super.onHide()\r\n    }\r\n\r\n    onDisable() {\r\n        if (this.view && this.view.mainNode) {\r\n            this.view.mainNode.active = false\r\n        }\r\n        this.unscheduleAllCallbacks()\r\n    }\r\n\r\n    onDestroy() {\r\n        this.unscheduleAllCallbacks()\r\n    }\r\n}","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\n\r\nconst renderEngine = cc.renderer.renderEngine;\r\nconst renderer = renderEngine.renderer;\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Outline')\r\nexport default class OutlineShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Outline\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    varying vec2 uv0;\r\n    uniform vec3 iResolution;\r\n\r\n    void main()\r\n    {\r\n        vec2 onePixel = vec2(1.0 / iResolution.x, 1.0 / iResolution.y);\r\n\r\n        vec4 color = texture2D(texture, uv0.xy);\r\n        vec4 colorRight = texture2D(texture, uv0.xy + vec2(0,onePixel.t));\r\n        vec4 colorBottom = texture2D(texture, uv0.xy + vec2(onePixel.s,0));\r\n\r\n        color.r = 3.0* sqrt( (color.r - colorRight.r) * (color.r - colorRight.r) + (color.r - colorBottom.r) * (color.r - colorBottom.r) );\r\n        color.g = 3.0* sqrt( (color.g - colorRight.g) * (color.g - colorRight.g) + (color.g - colorBottom.g) * (color.g - colorBottom.g) );\r\n        color.b = 3.0* sqrt( (color.b - colorRight.b) * (color.b - colorRight.b) + (color.b - colorBottom.b) * (color.b - colorBottom.b) );\r\n\r\n        color.r >1.0 ? 1.0 : color.r;\r\n        color.g >1.0 ? 1.0 : color.g;\r\n        color.b >1.0 ? 1.0 : color.b;\r\n        gl_FragColor = vec4(color.rgb, 1);\r\n    }\r\n    `\r\n    protected _defines = []\r\n\r\n    protected _params = [{ name: 'iResolution', type: renderer.PARAM_FLOAT3 }]\r\n\r\n    protected setParamValue(material: ShaderMaterial) {\r\n        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);\r\n        material.setParamValue(\"iResolution\", iResolution)\r\n    }\r\n\r\n}\r\n","import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport { PdkMySeatPokers } from \"../component/pdk_myseat_pokers\";\r\nimport PokerTableMySeatPokers from \"../../../public/poker_table/poker_myseat_pokers\";\r\nimport PokerTableSeatBaseView from \"../../../public/poker_table/poker_table_seat_base_view\";\r\nimport { PdkHelp } from \"../help/pdk_help\";\r\nimport PdkSeatPokers from \"../component/pdk_seat_pokers\";\r\nimport { Card, CardNameIndex, CardColor } from \"./poker/poker_data\";\r\nimport GameUtil from \"../../../../utility/game_util\";\r\nimport { PConst } from \"./data/pdk_const\";\r\nimport AudioManager from \"../../../../manager/audio_manager\";\r\nimport TextureManager from \"../../../../manager/texture_manager\";\r\nimport { PdkData, SeatExtendHolder } from \"./data/pdk_data\";\r\nimport UIStateSwitcher from \"../../../public/ui/ui_state_switcher\";\r\nimport CustomUIStateSwitcher from \"../../../public/ui/custom_ui_state_switcher\";\r\nimport { PdkSound } from \"../component/pdk_table_sound\";\r\nimport SceneManager from \"../../../../manager/scene_manager\";\r\nimport Utility from \"../../../../utility/Utility\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class PdkBaseView extends ViewBase {\r\n    readonly effect_offset_pos = cc.v2(0, -30)\r\n    @property(PokerTableMySeatPokers)\r\n    myhandPokers: PdkMySeatPokers = null\r\n\r\n    @property(PokerTableSeatBaseView)//玩家座位信息预制\r\n    prefabSeatView: PokerTableSeatBaseView = null\r\n\r\n    @property([cc.Node])//玩家座位信息父节点\r\n    nodeSeatParentList: cc.Node[] = []\r\n\r\n    @property([PdkSeatPokers])\r\n    seatHandPokersList: PdkSeatPokers[] = []\r\n\r\n    @property([PdkSeatPokers])\r\n    seatPokersList: PdkSeatPokers[] = []\r\n\r\n    @property(cc.Node)\r\n    nodechunTianAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    hinitBtn:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    OutButton:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeClock:cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    labelClock: cc.Label = null\r\n    \r\n    @property(CustomUIStateSwitcher)\r\n    btnSwitchui:CustomUIStateSwitcher = null;\r\n\r\n    @property(SeatExtendHolder)\r\n    seatExtendViewList: SeatExtendHolder[] = []\r\n\r\n    protected m_clockScheduleId: number = 0\r\n\r\n    private m_allSeatViewList: PokerTableSeatBaseView[] = []\r\n    protected mPosExtendSeatMap: SeatExtendHolder[] = []\r\n    onLoad(){\r\n        cc.log('pdkbaseviewonloaded');\r\n        this.initAllSeatView();\r\n        this.btnSwitchui.SwitchState('none');\r\n        this.myhandPokers.setCustomGetSpriteFrameKeyByCodeFunc(this.getPokerSpriteKeyByCode.bind(this))\r\n        for (let handPokers of this.seatHandPokersList) {\r\n            handPokers.setCustomGetSpriteFrameKeyByCodeFunc(this.getPokerSpriteKeyByCode.bind(this));\r\n        }\r\n    }\r\n\r\n    onShow(){\r\n        SceneManager.lastEntranceOpenModuleName = 'ClubModule'\r\n        // let codeList = [1, 2, 3, 4, 5, 6, 27, 8, 9, 10, 11, 12, 13, 14]\r\n        // this.myhandPokers.showPokers(true, codeList, { hidePoker: true })\r\n        // this.myhandPokers.playFaPaiAnim(function (index, totalCount) {\r\n        //     if (index < totalCount) {\r\n        //         PdkSound.playFaPaiSound()\r\n        //     }\r\n\r\n        // }, function () {\r\n\r\n        // })\r\n\r\n        // let viewid = 0;\r\n        // this.showHandCards(viewid,true,[ 27, 8, 9])\r\n        // // //this.showHandCards(0,true,[ 27, 8, 9])\r\n        // // this.showHandCards(2,true,[ 27, 8, 9])\r\n        // this.userEnter(viewid,{\r\n        //     id:1,\r\n        //     name:'saf',\r\n        //     gender:1,\r\n        //     avatarUrl:'http://sincebest-bull-test.oss-cn-hangzhou.aliyuncs.com/20180723_e852c0d11edf47529de8e7c69c848ca8.jpg',\r\n        //     coins:3,\r\n        //     gems:3,\r\n        //     chairID:3,\r\n        //     dissolveState:3,\r\n        //     readyState:1,\r\n        // })\r\n\r\n        // this.showSeatClock(viewid,true,4);\r\n        // this.showSingle(viewid,true);\r\n    }\r\n\r\n    initAllSeatView(){\r\n        let self = this\r\n        let seatPosNodeList = self.nodeSeatParentList\r\n        for (let index = 0; index < seatPosNodeList.length; index++) {\r\n            const element = seatPosNodeList[index];\r\n            let nodeSeat = GameUtil.AddChild(this.prefabSeatView.node, element)\r\n            let seatView = nodeSeat.getComponent<PokerTableSeatBaseView>(PokerTableSeatBaseView)\r\n            seatView.resetSeatStyle(index)\r\n            seatView.node.active = false;\r\n            self.m_allSeatViewList.push(seatView)\r\n            this.mPosExtendSeatMap.push(this.seatExtendViewList[index]);\r\n        }\r\n    }\r\n\r\n    resetSeatViewPos(){\r\n        for (let seatview of this.m_allSeatViewList) {\r\n            seatview.reset();\r\n        }\r\n    }\r\n\r\n    //隐藏某一类型的标记 0-all\r\n    hidePlayerTag(tag:number){\r\n        for (let seat of this.m_allSeatViewList) {\r\n            this.operatorPlayerTag(seat,tag);\r\n        }\r\n    }\r\n\r\n    playerTagVisible(viewid:number,tag:number){\r\n        let seat = this.m_allSeatViewList[viewid];\r\n        if (!seat) {\r\n            return;\r\n        }\r\n        this.operatorPlayerTag(seat,tag);\r\n    }\r\n\r\n    private operatorPlayerTag(seat:PokerTableSeatBaseView,tag:number){\r\n        if (!seat) {\r\n            return;\r\n        }\r\n        if (tag == 1 || tag == 0) {\r\n            seat.showReadyTag(false);\r\n        }\r\n        if (tag == 2 || tag == 0) {\r\n            seat.showSelect(false);\r\n        }\r\n        if (tag == 3 || tag == 0) {\r\n            seat.showSingle(false);\r\n        }\r\n        if (tag == 4 || tag == 0) {\r\n            seat.showClock(false);\r\n        }\r\n    }\r\n\r\n    //用户进入，刷新信息\r\n    userEnter(viewid:number,data:PdkData.IUserInfo,roomInfo:PdkData.RoomInfoData){\r\n        let seatView = this.m_allSeatViewList[viewid];\r\n        if (seatView) {\r\n            seatView.node.active = true;\r\n            TextureManager.instance.getSprite(data.avatarUrl,(frame:cc.SpriteFrame)=>{\r\n                if (seatView && seatView.isValid) {\r\n                    seatView.showAvatar(true,frame);\r\n                }\r\n            })\r\n            seatView.showName(true,data.name);\r\n            seatView.showCoin(true,data.coin);\r\n            seatView.showReadyTag(data.readyState == PConst.ReadyState.Ready_Yes && roomInfo.gameState != PConst.GameStatus.START);\r\n            if (viewid == 0) {//我方\r\n                if (roomInfo.gameState != PConst.GameStatus.START) {//未开始游戏\r\n                    if (data.readyState == PConst.ReadyState.Ready_Yes) {\r\n                        this.btnSwitchui.SwitchState('none');\r\n                    }else{\r\n                        this.btnSwitchui.SwitchState('ready');\r\n                    } \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //用户离开\r\n    userLeave(viewid:number){\r\n        let seatView = this.m_allSeatViewList[viewid];\r\n        if (seatView) {\r\n            seatView.node.active = false;\r\n            this.playerTagVisible(viewid,0);\r\n        }\r\n    }\r\n\r\n    changeBtnState(state:string){\r\n        this.btnSwitchui.SwitchState(state);\r\n    }\r\n\r\n    isForbidOutBtn(isgray:boolean){\r\n        Utility.instance.setBtnGray(this.OutButton.getComponent(cc.Button),isgray);\r\n    }\r\n\r\n    dealCards(card:number[]){\r\n        this.myhandPokers.showPokers(true, card, { hidePoker: true })\r\n        this.myhandPokers.playFaPaiAnim(function (index, totalCount) {\r\n            if (index < totalCount) {\r\n                PdkSound.playFaPaiSound()\r\n            }\r\n        }, function () {\r\n\r\n        })\r\n    }\r\n\r\n    showReadyTag(viewid:number,show:boolean){\r\n        let seatView = this.m_allSeatViewList[viewid];\r\n        seatView.showReadyTag(show);\r\n    }\r\n\r\n    showSelect(viewid:number,show:boolean){\r\n        let seatView = this.m_allSeatViewList[viewid];\r\n        seatView.showSelect(show);\r\n    }\r\n\r\n    showSeatClock(viewid: number, show: boolean, secs?: number, needShake?: boolean, onFinish?: Function) {\r\n        let seatView = this.m_allSeatViewList[viewid]\r\n        if (viewid == 0) {\r\n            this.nodeClock.active = show;\r\n            if (show) {\r\n                this.refreshClockLable(secs,needShake,onFinish);\r\n            }\r\n            return;\r\n        }\r\n        seatView.showClock(show, secs, needShake, onFinish)\r\n    }\r\n\r\n    showSingle(viewid:number,show:boolean){\r\n        let seatView = this.m_allSeatViewList[viewid];\r\n        seatView.showSingle(show);\r\n    }\r\n\r\n    protected refreshClockLable(secs: number, needShake?: boolean, onFinish?: Function){\r\n        let self = this\r\n        this.labelClock.string = secs.toString()\r\n        if(secs <= 0){\r\n            if(needShake){\r\n                AudioManager.instance.vibrate()\r\n            }\r\n            if(onFinish){\r\n                onFinish()\r\n            }\r\n            return\r\n        }\r\n        this.m_clockScheduleId = this.doScheduleOnce(function(){\r\n            self.m_clockScheduleId = 0\r\n            secs--\r\n            self.refreshClockLable(secs, needShake, onFinish)\r\n        }, 1)\r\n    }\r\n\r\n\r\n    showHandCards(viewid: number, show: boolean, codeList?: number[], withAnim?: boolean, onFinish?: Function){\r\n        //let index = this.convertLocalPosToIndex(localPos)\r\n        let seatPokers = this.seatHandPokersList[viewid]\r\n        seatPokers.showPokers(show, codeList, {withAnim:true, onFinish:onFinish})\r\n    }\r\n\r\n    //刷新我方手牌\r\n    updateMyHandCards(codeList: number[],){\r\n        this.myhandPokers.showPokers(true, codeList, { hidePoker: false })\r\n    }\r\n\r\n    \r\n    playFeiJiEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeFeiJiAnim, centerWorldPos, onFinish, 2.33, false, this.effect_offset_pos)\r\n    }\r\n\r\n    playShunZiEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeShunZiAnim, centerWorldPos, onFinish, 1.5, false, this.effect_offset_pos)\r\n    }\r\n\r\n    playLianDuiEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeLianDuiAnim, centerWorldPos, onFinish, 1.5, false, this.effect_offset_pos)\r\n    }\r\n\r\n    playZhaDanEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeZhaDanAim, centerWorldPos, onFinish, 2.1, false, this.effect_offset_pos)\r\n    }\r\n\r\n    playWangZhaEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish1?: Function, onFinish2?: Function){\r\n        let self = this\r\n        let offsetPos = self.effect_offset_pos\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        let anim = extendSeat.nodeWangZhaAim.getComponent(cc.Animation)\r\n        let anim1 = extendSeat.nodeWangZhaAim1.getComponent(cc.Animation)\r\n        anim.node.active = false\r\n        anim1.node.active = false\r\n        if(centerWorldPos){\r\n            let pos = null;\r\n            anim.node.parent.convertToNodeSpaceAR(centerWorldPos,pos)\r\n            if(offsetPos){\r\n                pos.x += offsetPos.x\r\n                pos.y += offsetPos.y\r\n            }\r\n            anim.node.position = pos            \r\n        }\r\n        anim.on('finished', function(){\r\n            anim.targetOff(self)\r\n            anim.node.active = false\r\n            anim1.node.active = true\r\n            if(onFinish1){\r\n                onFinish1()\r\n            }\r\n        }, self)\r\n        anim1.on('finished', function(){\r\n            anim1.targetOff(self)\r\n            anim1.node.active = false\r\n            if(onFinish2){\r\n                onFinish2()\r\n            }\r\n        }, self)\r\n        \r\n        anim.node.active = true\r\n    }\r\n\r\n    playChunTianEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        this.playCommonEffect(this.nodechunTianAnim, centerWorldPos, onFinish, 3)\r\n    }\r\n\r\n    \r\n    playSanDaiYiEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeSanDaiYiAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos)\r\n    }\r\n\r\n    playSanDaiErEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeSanDaiErAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos)\r\n    }\r\n\r\n    playSiDaiErEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeSiDaiErAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos)\r\n    }\r\n\r\n    playSiDaiLiangDuiEffect(localPos: number, centerWorldPos: cc.Vec2, onFinish?: Function){\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        this.playCommonEffect(extendSeat.nodeSiDaiLiangDuiAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos)\r\n    }\r\n\r\n    showDispatchCards(localPos: number, show: boolean, codeList?: number[], withAnim?: boolean, onFinish?: Function){\r\n        let seatPokers = this.seatPokersList[localPos]\r\n        let centerWorldPos = seatPokers.showPokers(true,codeList);\r\n        return centerWorldPos\r\n    }\r\n\r\n\r\n    showSeatPassAnim(localPos:number, show: boolean, withAnim?: boolean, onFinish?: Function){\r\n        let self = this\r\n        let extendSeat = this.getExtendSeatViewByPos(localPos)\r\n        let node = extendSeat.nodePass\r\n        node.active = show              \r\n        if(show){\r\n            self.playCommonEffect(node, null, onFinish, 0.8, false);\r\n        }else{\r\n            if(onFinish){\r\n                onFinish()\r\n            }\r\n        }\r\n    }\r\n\r\n    getExtendSeatViewByPos(localPos:number): SeatExtendHolder{\r\n        return this.mPosExtendSeatMap[localPos]\r\n    }\r\n\r\n    protected playCommonEffect(node: cc.Node, centerWorldPos: cc.Vec2, onFinish?: Function, duration?: number, notHide?: boolean, offsetPos?: cc.Vec2){\r\n        let originalPos = null\r\n        if(centerWorldPos){\r\n            originalPos = node.position\r\n            let pos;\r\n            node.parent.convertToNodeSpaceAR(centerWorldPos,pos)\r\n            if(offsetPos){\r\n                pos.x += offsetPos.x\r\n                pos.y += offsetPos.y\r\n            }\r\n            node.position = pos            \r\n        }\r\n        \r\n        node.active = true\r\n        if(duration == null){\r\n            duration = 1.7\r\n        }                \r\n        this.scheduleOnce(function(){   \r\n            if(originalPos){\r\n                node.position = originalPos\r\n            }  \r\n            if(notHide){\r\n\r\n            }else{\r\n                node.active = false \r\n            }              \r\n            if(onFinish){\r\n                onFinish()\r\n            }\r\n        }, duration)\r\n    }\r\n\r\n    \r\n    protected getPokerSpriteKeyByCode(code: number){\r\n        let card = Card.makeCardByCode(code)\r\n        if(card.index == CardNameIndex.card_big_king){\r\n            return 'Public_大王'\r\n        }\r\n        if(card.index == CardNameIndex.card_small_king){\r\n            return 'Public_小王'\r\n        }\r\n        let key = 'Public_'        \r\n        switch(card.color){\r\n            case CardColor.color_black_heart:\r\n                key += 'heitao_'\r\n                break\r\n            case CardColor.color_red_heart:\r\n                key += 'hongtao_'\r\n                break\r\n            case CardColor.color_plum:\r\n                key += 'meihua_'\r\n                break\r\n            case CardColor.color_square:\r\n                key += 'fangkuai_'\r\n                break\r\n        }\r\n        return key + card.index\r\n    }\r\n}\r\n","export module PConst{\r\n    export enum GameStatus {\r\n\t\t\tFREE = 0,  //初始化\r\n\t\t\tREADY = 1, //准备界面\r\n\t\t\tSTART = 2,//游戏开始\r\n    }\r\n    \r\n    export enum ReadyState {\r\n\t\tReady_No=0,    \t//没有准备\r\n\t\tReady_Yes= 1,  \t\t//已经准备\r\n\t}\r\n}","import { PConst } from \"./pdk_const\";\r\nimport { PokerSet } from \"../poker/poker_logic_set\";\r\nimport { CardPattern } from \"../poker/poker_pattern\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nexport module PdkData{\r\n    //一个座位信息\r\n    export class SeatInfoData{\r\n        user:IUserInfo;\r\n        viewID:number;\r\n        handcode?:number[];\r\n        handSet?:PokerSet;\r\n    }\r\n\r\n    export interface IUserInfo{\r\n        id:number;\r\n        name:string;\r\n        gender:number;\r\n        avatarUrl:string;\r\n        coin:number;\r\n        gems:number;\r\n        chairID:number;\r\n        dissolveState:number;\r\n        readyState:number;\r\n    }\r\n\r\n    export interface ICommonData{\r\n        outCards?:number[]\r\n        chairID?:number;\r\n        lastPattern?:CardPattern;\r\n    }\r\n\r\n    //房间信息\r\n    export class RoomInfoData{\r\n        roomId:number;\r\n        playerCount:number;\r\n        gameState:PConst.GameStatus;\r\n    }\r\n}\r\n\r\n\r\n@ccclass(\"DouDiZhuTable.SeatExtendView\")\r\nexport class SeatExtendHolder{\r\n    @property(cc.Node)\r\n    nodePass: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeFeiJiAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeShunZiAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeLianDuiAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeZhaDanAim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeWangZhaAim: cc.Node = null\r\n    @property(cc.Node)\r\n    nodeWangZhaAim1: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeSanDaiYiAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeSanDaiErAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeSiDaiErAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeSiDaiLiangDuiAnim: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeMingPaiAnim: cc.Node = null\r\n    \r\n}","\r\nexport class PdkHelp{\r\n\r\n}","import ModelBase from \"../../../../framework/core/mvvm/model_base\";\r\nimport { PdkNetRoute } from \"../../net/pdk_route\";\r\nimport UserDataManager from \"../../../../manager/user_manager\";\r\nimport { PdkData } from \"./data/pdk_data\";\r\nimport { PdkUtils } from \"../help/PdkUtils\";\r\nimport { PokerSet } from \"./poker/poker_logic_set\";\r\nimport { CardPattern } from \"./poker/poker_pattern\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class PdkModel extends ModelBase {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    users:PdkData.SeatInfoData[] = [];\r\n\r\n    mySeatInfo:PdkData.SeatInfoData = null;\r\n\r\n    mChair:number;\r\n\r\n    mCommonData:PdkData.ICommonData = null;\r\n\r\n    //初始化牌局\r\n    initModel(msg:any){\r\n        this.users = [];\r\n        if (!this.roomInfo) {\r\n            this.roomInfo = new PdkData.RoomInfoData();\r\n        }\r\n        if (!this.mCommonData) {\r\n            this.mCommonData = {};\r\n        }\r\n        this.roomInfo.gameState = msg.gameStatus;\r\n        //设置mChairID\r\n        for (let i = 0; i < msg.players.length; i++) {\r\n            let player = msg.players[i];\r\n            if (this.isRoleById(player.id)) {\r\n                this.mChair = player.chairID;\r\n                break;\r\n            }\r\n        }\r\n        for (let idx = 0; idx < msg.players.length; idx++) {\r\n            let player = msg.players[idx];\r\n            let _user = this.enterUser(player);\r\n            if (this.isRoleById(_user.user.id)) {\r\n                this.mySeatInfo = _user;\r\n                this.mySeatInfo.handSet = new PokerSet();\r\n            }\r\n        }\r\n    }\r\n\r\n    setPokerList(handcard:number[],len?:number){\r\n        if (this.mySeatInfo) {\r\n            this.mySeatInfo.handSet.setCodeList(handcard,len);\r\n        }\r\n    }\r\n\r\n    isRoleById(id:number):boolean{\r\n        return  id == Number(UserDataManager.instance.getUserData().uid)\r\n    }\r\n\r\n    getUser(id:number):PdkData.SeatInfoData{\r\n        for (let idx = 0; idx < this.users.length; idx++) {\r\n                let user = this.users[idx];\r\n                if (user.user.id == id) {\r\n                    return user;\r\n                }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getUserLocalID(chairid:number){\r\n        for (let idx = 0; idx < this.users.length; idx++) {\r\n            let user = this.users[idx];\r\n            if (user.user.chairID == chairid) {\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //进入\r\n    enterUser(msg:any):PdkData.SeatInfoData{\r\n        let _user = this.getUser(msg.id)\r\n        if (!_user) {\r\n            _user = new PdkData.SeatInfoData();\r\n            this.users.push(_user);\r\n        }\r\n        _user.user = msg;\r\n        _user.viewID = this.viewLocation(_user.user.chairID);\r\n        return _user;\r\n    }\r\n    \r\n    //退出\r\n    exitUser(id:number){\r\n        for (let idx = 0; idx < this.users.length; idx++) {\r\n            let user = this.users[idx];\r\n            if (user.user.id == id) {\r\n                this.users.splice(idx,1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isRole(chairid:number){\r\n        return chairid == this.mChair;\r\n    }\r\n\r\n    isMyOutCard(){\r\n        return this.mCommonData.chairID == this.mChair;\r\n    }\r\n\r\n    viewLocation(chairid:number){\r\n        let wPlayerCount = this.roomInfo.playerCount;\r\n        let meChairID = this.mChair;\r\n        let viewID = (chairid + wPlayerCount - meChairID)%wPlayerCount\r\n        return viewID;\r\n    }\r\n\r\n    roomInfo:PdkData.RoomInfoData = null;\r\n\r\n    //进入游戏或者重连执行\r\n    initRoomInfo(msg:any){\r\n        if (!this.roomInfo) {\r\n            this.roomInfo = new PdkData.RoomInfoData();\r\n        }\r\n        this.roomInfo.playerCount = msg.gameParameter.bPlayerCount;\r\n    }\r\n\r\n    send_readyGame(){\r\n        this.send(PdkNetRoute.readyGame,{});\r\n    }\r\n\r\n    send_playCard(bCardData:number[],count:number){\r\n        let data = {\r\n            bCardData:bCardData,\r\n            bCardCount:count,\r\n        }\r\n        this.send(PdkNetRoute.playCard,data);\r\n    }\r\n\r\n    send_dissolveRoom(msg:any){\r\n        this.send(PdkNetRoute.dissolveGame,msg);\r\n    }\r\n\r\n    send_leaveRoom(){\r\n        this.send(PdkNetRoute.leaveRoom,{});\r\n    }\r\n}\r\n","import Module, { moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport { PdkModel } from \"./pdk_model\";\r\nimport GameServer from \"../../../server/gameserver/game_server\";\r\nimport { PdkNetRoute } from \"../../net/pdk_route\";\r\nimport { PdkView } from \"./pdk_view\";\r\nimport SceneManager from \"../../../../manager/scene_manager\";\r\nimport { PConst } from \"./data/pdk_const\";\r\nimport { CardPattern } from \"./poker/poker_pattern\";\r\nimport ModelData from \"../../../public/model_data\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\nimport { PdkSound } from \"../component/pdk_table_sound\";\r\nimport UserDataManager from \"../../../../manager/user_manager\";\r\nimport { PokerRecommend } from \"./poker/poker_recommend\";\r\nimport { PokerSet } from \"./poker/poker_logic_set\";\r\nimport PublicRule from \"../rule/public_rule\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class PdkModuleBase extends Module<PdkView,PdkModel> {\r\n    constructor(){\r\n        super()\r\n        this.viewType = PdkView;\r\n        this.modelType = PdkModel;\r\n        this.windowPrefabResPath = 'package/pdk/module/table/pdk';\r\n    }\r\n\r\n    onInit(){\r\n        this.view.menueMask.on('click',this.clickMenueMask,this);\r\n        let self = this;\r\n        this.view.myhandPokers.setCustomOnFinishDragPokerReselectFunc(function () {\r\n            self.on_finish_drag_pokers_reselect_fun()\r\n        })\r\n        this.view.myhandPokers.setCustomOnSelectPokersChanged(()=>{\r\n            self.on_select_pokers_changed();\r\n        })\r\n    }\r\n\r\n    onShow(){\r\n        this.model.netClient = GameServer.instance.netClient\r\n        this.model.clearMsgEvent()\r\n        this.registerNetMsg();\r\n    }\r\n\r\n    registerNetMsg(){\r\n        let self = this;\r\n        self.model.registerNetMsg(PdkNetRoute.onSendParameter,function(msg:any){\r\n            self.onSendParameter(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onSendGameScene,function(msg:any){\r\n            self.onSendGameScene(msg)\r\n        });\r\n        \r\n        self.model.registerNetMsg(PdkNetRoute.onUserEntryRoom,function(msg:any){\r\n            self.onUserEntryRoom(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onStartGame,function(msg:any){\r\n            self.onStartGame(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.readyGame,function(msg:any){\r\n            self.readyGame(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onReadyGame,function(msg:any){\r\n            self.onReadyGame(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.playCard,function(msg:any){\r\n            self.playCard(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onOutCard,function(msg:any){\r\n            self.onOutCard(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onPassCard,function(msg:any){\r\n            self.onPassCard(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onDissolveRoom,function(msg:any){\r\n            self.onDissolveRoom(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onSettlement,function(msg:any){\r\n            self.onSettlement(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onHandCardUser,function(msg:any){\r\n            self.onHandCardUser(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onOutCardNotify,function(msg:any){\r\n            self.onOutCardNotify(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onWarnUser,function(msg:any){\r\n            self.onWarnUser(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.onLeaveRoom,function(msg:any){\r\n            self.onLeaveRoom(msg)\r\n        });\r\n\r\n        self.model.registerNetMsg(PdkNetRoute.leaveRoom,function(msg:any){\r\n            self.leaveRoom(msg)\r\n        });\r\n    }\r\n\r\n    onWarnUser(msg:any){\r\n\r\n    }\r\n\r\n    onSendGameScene(msg:any){\r\n        this.initTable(msg);\r\n        this.recommendFunc = null;\r\n        this.model.mCommonData.lastPattern = null;\r\n    }\r\n\r\n    //初始化牌桌\r\n    initTable(msg:any){\r\n        this.model.initModel(msg);\r\n    }\r\n\r\n    playCard(msg:any){\r\n        if (msg.code == 1) {\r\n            ModuleManager.instance.toast('没有轮到自己出牌');\r\n        }else if (msg.code == 2) {\r\n            ModuleManager.instance.toast('出牌类型错误');\r\n        }\r\n    }\r\n\r\n    //刷新打出牌\r\n    onOutCard(msg:any){\r\n        this.view.hidePlayerTag(4);\r\n        let viewid = this.model.viewLocation(msg.outcardUser);\r\n        this.view.showHandCards(viewid,true,msg.cardData,true);\r\n        if (this.model.isRole(msg.outcardUser)) {\r\n            this.view.changeBtnState('none');   \r\n        }\r\n        this.view.showSeatClock(viewid,false);\r\n        //牌型 检测\r\n        this.model.mCommonData.chairID = msg.outcardUser;\r\n        this.model.mCommonData.outCards = msg.cardData;\r\n    }\r\n\r\n    onPassCard(msg:any){\r\n        this.view.hidePlayerTag(4);\r\n        let viewid = this.model.viewLocation(msg.wPassUser);\r\n        this.view.showSeatPassAnim(viewid,true);\r\n        this.view.showHandCards(viewid,false);\r\n        PdkSound.playPassSound(UserDataManager.instance.isMale());\r\n    }\r\n\r\n    onDissolveRoom(msg:any){\r\n        \r\n    }\r\n\r\n    onSettlement(msg:any){\r\n\r\n    }\r\n\r\n    //刷新手牌\r\n    onHandCardUser(msg:any){\r\n        let viewid = this.model.viewLocation(msg.wChairID);\r\n        if (viewid == 0) {\r\n            this.view.myhandPokers.showPokers(true,msg.handCardData);\r\n            this.model.setPokerList(msg.handCardData);\r\n        }\r\n    }\r\n\r\n    onLeaveRoom(msg:any){\r\n\r\n    }\r\n\r\n    leaveRoom(msg:any){\r\n        if (msg.code == 0\r\n            || msg.code == 3) {\r\n            SceneManager.gotoHall();\r\n        }else if (msg.code == 2) {\r\n            ModuleManager.instance.toast('游戏已经开始不能离开牌桌');\r\n        }\r\n    }\r\n\r\n    //刷新打出牌\r\n    onOutCardNotify(msg:any){\r\n        \r\n    }\r\n\r\n    onUserEntryRoom(msg:any){\r\n        this.model.enterUser(msg);\r\n    }\r\n\r\n    onSendParameter(msg:any){\r\n        this.model.initRoomInfo(msg);\r\n\r\n    }\r\n\r\n    onStartGame(msg:any){\r\n    }\r\n\r\n    readyGame(msg:any){\r\n\r\n    }\r\n\r\n    onReadyGame(msg:any){\r\n        \r\n    }\r\n\r\n    on_select_pokers_changed(){\r\n        cc.log('-->>>>>>>>>>poker changed')\r\n        let selectedData = this.view.myhandPokers.getSelectedPokers()\r\n        let selected_codeList = selectedData.selected_codeList\r\n        let result = this.checkCanChuPai(this.model.mCommonData.lastPattern,selected_codeList);\r\n        this.view.isForbidOutBtn(!result.canChuPai || !result.pattern);\r\n    }\r\n\r\n    on_finish_drag_pokers_reselect_fun(){\r\n        cc.log('0000--');\r\n \r\n        let self = this\r\n        let selectedData = self.view.myhandPokers.getSelectedPokers()\r\n        let selected_codeList = selectedData.selected_codeList\r\n        if (selected_codeList.length > 0) {\r\n            let lastPattern = null//this.model.mCommonData.lastPattern || null\r\n            let pattern = this.model.mySeatInfo.handSet.choose_hintIterator(selected_codeList, lastPattern)\r\n            if (pattern) {\r\n                self.view.myhandPokers.selectPokers(pattern.cards, null)\r\n                //self.isPlayingSelectPokerAnim = true\r\n                self.view.myhandPokers.refreshPokerSelectState(true, function () {\r\n                    //self.isPlayingSelectPokerAnim = false\r\n                })\r\n                //检测牌型\r\n                let result = this.checkCanChuPai(this.model.mCommonData.lastPattern,pattern.cards);\r\n                this.view.isForbidOutBtn(!result.canChuPai || !result.pattern);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected clickMenueMask(){\r\n        this.view.menueRoot.active = false;\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        switch (pName) {\r\n            case 'BtnLeave':\r\n                this.view.showMenue()\r\n                break;\r\n            case 'LeavelButton':\r\n                SceneManager.gotoHall(false);\r\n                break;\r\n            case 'ChuPaiMask':\r\n                this.resetPokers();\r\n                break;\r\n            case 'BtnReady':\r\n                this.model.send_readyGame();\r\n                break;\r\n            case 'FreeButton':\r\n                this.model.send_leaveRoom();\r\n                break;\r\n            case 'HintButton'://提示\r\n                this.onClickRemindCard(false);\r\n                break;\r\n            case 'OutButton'://出牌\r\n                this.onClickSendCard();\r\n                break;\r\n            case 'RuleButton':\r\n                ModuleManager.instance.showModule(PublicRule) \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //出牌\r\n    protected onClickSendCard(){\r\n        let selectedData = this.view.myhandPokers.getSelectedPokers();\r\n\r\n        if (!selectedData.real_selected_codeList || selectedData.real_selected_codeList.length == 0) {\r\n            ModuleManager.instance.toast('请选择要出的牌')\r\n            return\r\n        }\r\n\r\n        this.recommendFunc = null;\r\n        let codes = selectedData.selected_codeList;\r\n        this.model.send_playCard(selectedData.selected_codeList,codes.length)\r\n\r\n    }\r\n\r\n    recommendFunc:Function = null;\r\n    //提示出牌\r\n    protected onClickRemindCard(isHaveMask:boolean){\r\n        let self = this;\r\n        if (!this.recommendFunc) {\r\n            let tishiData = this.model.mySeatInfo.handSet.hintIterator(this.model.mCommonData.lastPattern);\r\n            if (!tishiData.tishiFun ) {\r\n                return;\r\n            }\r\n            this.recommendFunc = tishiData.tishiFun;\r\n        }\r\n\r\n        let pattern = this.recommendFunc();\r\n        if (!pattern) {\r\n            return;\r\n        }\r\n       \r\n        self.view.myhandPokers.selectPokers(pattern.cards, null)\r\n\r\n        self.view.myhandPokers.refreshPokerSelectState(true)\r\n\r\n        //检测牌型\r\n        let result = this.checkCanChuPai(this.model.mCommonData.lastPattern,pattern.cards);\r\n        this.view.isForbidOutBtn(!result.canChuPai || !result.pattern);\r\n\r\n        //自动出牌服务器支持 即可\r\n        // if (this.model.mySeatInfo.handSet.card_cnt == pattern.cards.length) {//执行自动出牌\r\n        //     this.model.send_playCard(pattern.cards,pattern.cards.length)\r\n        // }\r\n    }\r\n\r\n    //检测牌型是否正确\r\n\r\n    protected checkCanChuPai(srcPattern, codeList) {\r\n        let result = {\r\n            canChuPai: false,\r\n            pattern: null,\r\n        }\r\n        let selectedPattern = CardPattern.newPattern(codeList)\r\n        if (!selectedPattern) {\r\n            return result\r\n        }\r\n        if (!srcPattern) {\r\n            result.canChuPai = true\r\n            result.pattern = selectedPattern\r\n            return result\r\n        } else {\r\n            let pattern = selectedPattern\r\n            let compable = pattern.compable(srcPattern)\r\n            if (!compable) {\r\n                return result\r\n            } else {\r\n                let le = pattern.le(srcPattern)\r\n                if (le) {\r\n                    return result\r\n                } else {\r\n                    result.canChuPai = true\r\n                    result.pattern = pattern\r\n                    return result\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected resetPokers(){\r\n        this.view.myhandPokers.resetPokers(true);\r\n        this.view.isForbidOutBtn(true);\r\n    }\r\n\r\n    protected playPokerTypeSound(){\r\n        \r\n    }\r\n}\r\n","import Module, { moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport { PdkModel } from \"./pdk_model\";\r\nimport GameServer from \"../../../server/gameserver/game_server\";\r\nimport { PdkNetRoute } from \"../../net/pdk_route\";\r\nimport { PdkView } from \"./pdk_view\";\r\nimport SceneManager from \"../../../../manager/scene_manager\";\r\nimport { PConst } from \"./data/pdk_const\";\r\nimport { PdkModuleBase } from \"./pdk_module_base\";\r\nimport { PdkSound } from \"../component/pdk_table_sound\";\r\nimport { PatternType, CardPattern } from \"./poker/poker_pattern\";\r\nimport AudioManager from \"../../../../manager/audio_manager\";\r\nimport { PdkData } from \"./data/pdk_data\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\nimport { ResultModule } from \"../result/result_module\";\r\nimport UserDataManager from \"../../../../manager/user_manager\";\r\nimport { PdkUtils } from \"../help/PdkUtils\";\r\nimport Toast from \"../../../public/module/toast/toast\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit('PdkModule')\r\nexport class PdkModule extends PdkModuleBase {\r\n    //动画处理\r\n    onOutCard(msg:any){\r\n        super.onOutCard(msg);\r\n        this.showOutCard(msg.outcardUser,msg.cardData)\r\n    }\r\n\r\n    onUserEntryRoom(msg:any){\r\n        super.onUserEntryRoom(msg);\r\n        let user = this.model.getUser(msg.id);\r\n        if (user) {\r\n            let viewid = this.model.viewLocation(user.user.chairID)\r\n            this.view.userEnter(viewid,user.user,this.model.roomInfo);\r\n        }\r\n    }\r\n\r\n    onHandCardUser(msg:any){\r\n        super.onHandCardUser(msg);\r\n        this.view.updateMyHandCards(msg.handCardData);\r\n        this.model.setPokerList(msg.handCardData);\r\n    }\r\n\r\n    //刷新打出牌\r\n    onOutCardNotify(msg:any){\r\n        super.onOutCardNotify(msg);\r\n        this.view.hidePlayerTag(0);\r\n        let viewid = this.model.viewLocation(msg.currentUser);\r\n        this.view.showSeatClock(viewid,true,10);//倒计时需要修改\r\n        this.view.showHandCards(viewid,false);\r\n        this.view.showSelect(viewid,true);\r\n        if (this.model.isRole(msg.currentUser)) {\r\n            this.view.changeBtnState('playing');\r\n            this.view.showSeatPassAnim(viewid,false);\r\n            if ( this.model.isMyOutCard()) {\r\n                this.model.mCommonData.outCards = [];                \r\n            }\r\n            this.onClickRemindCard(true);\r\n        }else{\r\n            this.view.changeBtnState('none');\r\n        }\r\n    }\r\n\r\n    onLeaveRoom(msg:any){\r\n       super.onLeaveRoom(msg);\r\n       let viewid = this.model.viewLocation(msg.wChairID);\r\n       this.view.userLeave(viewid);\r\n    }\r\n\r\n    onReadyGame(msg:any){\r\n        super.onReadyGame(msg)\r\n        this._readyGame(msg.wChairID)\r\n    }\r\n\r\n    private showOutCard(chairID:number,cards:number[]){\r\n        let viewid = this.model.viewLocation(chairID);\r\n        this.view.showHandCards(viewid,true,cards,true);\r\n        if (viewid == 0) {\r\n            this.model.mCommonData.lastPattern = null;\r\n        }else{\r\n            this.model.mCommonData.lastPattern = CardPattern.newPattern(cards);\r\n        }\r\n       this.dispatchPoker(this.model.getUserLocalID(chairID),cards);\r\n    }\r\n\r\n    private _readyGame(wChairID:number){\r\n        let viewid = this.model.viewLocation(wChairID)\r\n        this.view.showReadyTag(viewid,true);\r\n        if (this.model.isRole(wChairID)) {\r\n            this.view.changeBtnState('none');\r\n        }\r\n    }\r\n\r\n    readyGame(msg:any){\r\n        super.readyGame(msg);\r\n        if (msg.code == 0) {\r\n            let myself = this.model.mySeatInfo;\r\n            this._readyGame(myself.user.chairID)\r\n        }else if (msg.code == 4) {\r\n            ModuleManager.instance.showModule(Toast, '余额不足,请尽快充值！'); \r\n        }else if (msg.code == 3) {\r\n            SceneManager.gotoHall(false);\r\n        }\r\n    }\r\n\r\n    onSettlement(msg:any){\r\n        super.onSettlement(msg);\r\n        let func = ()=>{\r\n            this.model.send_readyGame();\r\n        }\r\n        let data = {\r\n            func:func,\r\n            data:{msg:msg,roleid:this.model.mChair},\r\n        }\r\n        //弹框\r\n        ModuleManager.instance.showModule(ResultModule,data)\r\n        //亮牌\r\n        this.settlementcards(msg);\r\n    }\r\n\r\n    //亮牌\r\n    private settlementcards(msg:any){\r\n        let handCardData = msg.handCardData;\r\n        for (let i = 0; i < handCardData.length; i++) {\r\n            let cards = handCardData[i];\r\n            let viewid = this.model.viewLocation(i);\r\n            if (viewid != 0) {//自己无需亮牌\r\n                this.view.showHandCards(viewid,true,cards,true);\r\n            }\r\n        }\r\n    }\r\n\r\n    //重连消息\r\n    onSendGameScene(msg:any){\r\n        super.onSendGameScene(msg);\r\n        this.view.updateAllUser(this.model.users,this.model.roomInfo);\r\n        this.clearTable();\r\n        this.view.changeBtnState('ready');        \r\n        if (msg.gameStatus == PConst.GameStatus.START) {//游戏中，直接显示手牌\r\n            this.view.updateMyHandCards(msg.handCardData);\r\n            this.model.setPokerList(msg.handCardData);\r\n\r\n            //上家出牌\r\n            if (msg.turnUser != undefined \r\n                && !this.model.isRole(msg.turnUser) \r\n                && msg.turnUser != 65535\r\n                && msg.turnUser != -1) {\r\n                this.showOutCard(msg.turnUser,msg.turnCardData)\r\n                this.model.mCommonData.chairID = msg.turnUser;\r\n                this.model.mCommonData.outCards = msg.turnCardData;\r\n            }else{\r\n                this.model.mCommonData.outCards = [];\r\n            }\r\n\r\n            if (msg.currentUser == this.model.mChair) {//我出牌\r\n                let viewid = this.model.viewLocation(this.model.mChair)\r\n                this.view.showSeatClock(viewid,true,10);\r\n                this.view.showHandCards(viewid,false);\r\n                this.view.changeBtnState('playing');\r\n                this.view.showSeatPassAnim(viewid,false);\r\n                this.onClickRemindCard(true);\r\n            }else{\r\n                this.view.changeBtnState('none');\r\n            }\r\n            //更新警报\r\n            for (let idx = 0; idx < msg.bUserWarn.length; idx++) {\r\n                let cid = msg.bUserWarn[idx];\r\n                if (cid && !this.model.isRole(idx)) {\r\n                    this.showWarn(idx);\r\n                }\r\n            }\r\n            let outCardUser = this.model.viewLocation(msg.currentUser);\r\n            this.view.showSelect(outCardUser,true);\r\n            //闹钟\r\n            this.view.showSeatClock(outCardUser,true,10);\r\n        }else{\r\n            \r\n        }\r\n    }\r\n\r\n    //开始游戏\r\n    onStartGame(msg:any){\r\n        super.onStartGame(msg);\r\n        this.clearTable();\r\n        let viewid = this.model.viewLocation(msg.wCurrentUser)\r\n        this.view.showSelect(viewid,true);\r\n        //发牌\r\n        this.view.dealCards(msg.cbCardData);\r\n        this.model.setPokerList(msg.cbCardData)\r\n        if (this.model.isRole(msg.wCurrentUser)) {\r\n            this.view.changeBtnState('playing');\r\n            this.view.showHandCards(viewid,false);\r\n            this.view.showSeatPassAnim(viewid,false);\r\n        }else{\r\n            this.view.changeBtnState('none');\r\n        }\r\n        this.view.showSeatClock(viewid,true,10);\r\n    }\r\n\r\n    onWarnUser(msg:any){\r\n        super.onWarnUser(msg);\r\n        this.showWarn(msg.wWarnUser);\r\n        PdkSound.playWarningSound(UserDataManager.instance.isMale(),true);\r\n    }\r\n\r\n    private showWarn(chairid:number){\r\n        let viewid = this.model.viewLocation(chairid)\r\n        this.view.showSingle(viewid,true);\r\n    }\r\n\r\n    //清理牌桌\r\n    protected clearTable(){\r\n        this.view.isForbidOutBtn(false);\r\n        for (let index = 0; index < this.model.roomInfo.playerCount; index++) {\r\n            this.view.showHandCards(index,false)\r\n        }\r\n        this.view.myhandPokers.removeAllPokers();\r\n        this.view.hidePlayerTag(0)\r\n        this.recommendFunc = null;\r\n        this.model.mCommonData.lastPattern = null;        \r\n    }\r\n\r\n    playCard(msg:any){\r\n        super.playCard(msg);\r\n        if (msg.code == 0) {\r\n            this.view.updateMyHandCards(msg.handCardData);\r\n            this.model.setPokerList(msg.handCardData);\r\n        }\r\n    }\r\n\r\n    protected dispatchPoker(seatInfo: PdkData.SeatInfoData,outCards:number[]) {\r\n        let cards = outCards\r\n        let centerWorldPos = this.view.showDispatchCards(seatInfo.viewID, true, cards, true)\r\n        this.playCardPatternSoundAndEffect(seatInfo,CardPattern.newPattern(outCards),centerWorldPos);\r\n    }\r\n\r\n    //动画展示\r\n    protected playCardPatternSoundAndEffect(seatInfo: PdkData.SeatInfoData, cardPatter: CardPattern, centerWorldPos: cc.Vec2) {\r\n        let self = this\r\n\r\n        PdkSound.playPokerTypeSound(true, cardPatter)\r\n\r\n        let type = cardPatter.type\r\n        if (!type) {\r\n            return;\r\n        }\r\n        let disp_type = cardPatter.disp_type\r\n        switch (type) {\r\n            case PatternType.type_zhadan:\r\n                this.view.playZhaDanEffect(seatInfo.viewID, centerWorldPos)\r\n                AudioManager.instance.vibrate()\r\n                break;\r\n            case PatternType.type_huojian:\r\n                this.view.playWangZhaEffect(seatInfo.viewID, centerWorldPos, function () {\r\n                    self.view.scheduleOnce(function () {\r\n                        PdkSound.playPokerTypeEffectSound(cardPatter)\r\n                    }, 0.3)\r\n                    AudioManager.instance.vibrate()\r\n                })\r\n                return\r\n            case PatternType.type_liandui:\r\n                this.view.playLianDuiEffect(seatInfo.viewID, centerWorldPos)\r\n                break;\r\n            case PatternType.type_feiji:\r\n                this.view.playFeiJiEffect(seatInfo.viewID, centerWorldPos)\r\n                break;\r\n            case PatternType.type_shunzi:\r\n                this.view.playShunZiEffect(seatInfo.viewID, centerWorldPos)\r\n                break;\r\n            case PatternType.type_sandaiyi:\r\n                if (disp_type == 'sandaiyi') {\r\n                    this.view.playSanDaiYiEffect(seatInfo.viewID, centerWorldPos)\r\n                } else if (disp_type == 'sandaier') {\r\n                    this.view.playSanDaiErEffect(seatInfo.viewID, centerWorldPos)\r\n                }\r\n                break;\r\n            case PatternType.type_sidaier:\r\n                if (disp_type == 'sidaisi') {\r\n                    this.view.playSiDaiLiangDuiEffect(seatInfo.viewID, centerWorldPos)\r\n                }\r\n                else {\r\n                    this.view.playSiDaiErEffect(seatInfo.viewID, centerWorldPos)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        PdkSound.playPokerTypeEffectSound(cardPatter)\r\n    }\r\n\r\n}\r\n","import PokerTableMySeatPokers from \"../../../public/poker_table/poker_myseat_pokers\";\r\nimport CustomUIStateSwitcher from \"../../../public/ui/custom_ui_state_switcher\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class PdkMySeatPokers extends PokerTableMySeatPokers {\r\n\r\n    @property(cc.Integer)\r\n    rightStyleMinCardsCount: number = 20\r\n    \r\n    @property(CustomUIStateSwitcher)\r\n    uiSwitcher: CustomUIStateSwitcher = null    \r\n\r\n    playFaPaiAnim(onFinishSingle: Function, onFinish: Function){\r\n        let self = this\r\n        let pokers = this.pokers\r\n        let duration = 0.1      \r\n        let totalCount = pokers.length  \r\n        let doNextPokerMove  \r\n        self.isPlayingSelectPokerAnim = true\r\n        doNextPokerMove = function(index: number, onFinish: Function, startPos?: cc.Vec2){\r\n            if(onFinishSingle){\r\n                onFinishSingle(index, totalCount)\r\n            }\r\n            if(index == totalCount){\r\n                self.isPlayingSelectPokerAnim = false\r\n                if(onFinish){\r\n                    onFinish()\r\n                    return\r\n                }\r\n            }\r\n            let poker = pokers[index]\r\n            let targetPos = poker.node.position\r\n            poker.show()\r\n            if(startPos){\r\n                poker.node.position = startPos\r\n            }            \r\n            let callFun = cc.callFunc(function(){\r\n                doNextPokerMove(++index, onFinish, targetPos)\r\n            }.bind(self))\r\n            var move = cc.moveTo(duration, targetPos)\r\n            var seq = cc.sequence([move, callFun]);\r\n            poker.node.runAction(seq);\r\n        }        \r\n\r\n        doNextPokerMove(0, onFinish)\r\n    }\r\n\r\n    showPokers(show: boolean, codeList?: number[], params?: any){\r\n        let centerLocalPos = super.showPokers(show, codeList, params)\r\n        this.resetHandCardsRootPos()\r\n        return centerLocalPos\r\n    }\r\n\r\n    showRecommends(selectCards:number[],isHaveMask:boolean = true){\r\n        this.resetHandCardsRootPos()\r\n        let selectIndex = 0;\r\n        let codes = selectCards.concat([])\r\n        for (let idx = 0; idx < this.pokers.length; idx++)\r\n         {\r\n            let poker = this.pokers[idx];\r\n            poker.marked = isHaveMask;\r\n            for (let i = selectIndex; i < codes.length; idx++) {\r\n                let target = selectCards[idx];\r\n                if (poker.code == target) {\r\n                    codes.splice(i,1);\r\n                    poker.selected = true;\r\n                    poker.marked = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.refreshPokersMarkState();\r\n        this.refreshPokerSelectState(false);\r\n    }\r\n\r\n    resetHandCardsRootPos(){\r\n        let len = this.pokers.length\r\n        if(len < this.rightStyleMinCardsCount){\r\n            this.uiSwitcher.SwitchState('Center')\r\n        }else{\r\n            this.uiSwitcher.SwitchState('None')\r\n        }\r\n    }\r\n}\r\n","\r\n//路由\r\nexport class PdkNetRoute{\r\n    static readonly leaveRoom = 'table.tableHandler.leaveRoom';\r\n    static readonly readyGame = 'table.tableHandler.readyGame';\r\n    static readonly onReadyGame = 'onReadyGame';\r\n    static readonly onStartGame = 'onStartGame';\r\n    static readonly dissolveGame = 'table.tableHandler.dissolveGame';\r\n    static readonly onDissolveRoom = 'onDissolveRoom';\r\n    static readonly playCard = 'table.tableHandler.playCard';\r\n    static readonly onWarnUser = 'onWarnUser';\r\n    static readonly onHandCardUser = 'onHandCardUser';\r\n    static readonly onOutCard = 'onOutCard';\r\n    static readonly onPassCard = 'onPassCard';\r\n    static readonly onSettlement = 'onSettlement';\r\n    static readonly onUserEntryRoom = 'onUserEntryRoom';\r\n    static readonly onOutCardNotify = 'onOutCardNotify';\r\n    static readonly onSendParameter = 'onSendParameter';\r\n    static readonly onSendGameScene = 'onSendGameScene';\r\n    static readonly onLeaveRoom = 'onLeaveRoom';\r\n}","import PokerTableSeatPokers from \"../../../public/poker_table/poker_seat_pokers_base\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"custom/doudizhu/DouDiZhuTableSeatPokers\")\r\nexport default class PdkSeatPokers extends PokerTableSeatPokers{\r\n    \r\n    showPokers(show: boolean, codeList?: number[], params?: any){\r\n        let centerLocalPos = super.showPokers(show, codeList, params)\r\n        if(show){\r\n            if(params){\r\n                if(params.withAnim){\r\n                    if(params.onFinish){\r\n                        params.onFinish()\r\n                    }\r\n                }else{\r\n                    if(params.onFinish){\r\n                        params.onFinish()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return centerLocalPos\r\n    }\r\n    \r\n}\r\n","import PokerTableSeatBaseView from \"../../../public/poker_table/poker_table_seat_base_view\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PokerTableSeatView extends PokerTableSeatBaseView {\r\n\r\n    getSeatStyleName(index: number):string{\r\n        switch (index) {\r\n            case 0:\r\n                return 'Bottom'\r\n            case 1:\r\n                return 'Right'\r\n            case 2:\r\n                return 'Left'\r\n        \r\n            default:\r\n                break;\r\n        }\r\n        return ''\r\n    }\r\n}\r\n","import AudioManager from \"../../../../manager/audio_manager\"\r\nimport Utility from \"../../../../utility/Utility\"\r\nimport { CardPattern, PatternType } from \"../table/poker/poker_pattern\"\r\nimport { Card, CardNameIndex } from \"../table/poker/poker_data\"\r\n\r\nconst const_malePath: string = 'package/pdk/sound/man/'\r\nconst const_femalePath: string = 'package/pdk/sound/woman/'\r\nconst const_effectPath: string = 'package/pdk/sound/effect/'\r\nconst const_musicPath: string = 'sound/bgm/'\r\n\r\n\r\nexport  class PdkSound{\r\n    static playPokerTypeSound(male:boolean, pattern?: CardPattern, onFinish?: Function){\r\n\r\n        let path = const_femalePath\r\n        if(male){\r\n            path = const_malePath\r\n        }\r\n        let type = pattern.type\r\n        let disp_type = pattern.disp_type\r\n\r\n\r\n        let soundName = ''\r\n        switch (type) {\r\n            case PatternType.type_danpai:\r\n                soundName = 'single_'\r\n                break;\r\n            case PatternType.type_shunzi:\r\n                soundName = 'shunzi'\r\n                this.playSound(path + soundName, soundName, onFinish)\r\n                return\r\n            case PatternType.type_duizi:\r\n                soundName = 'dui'\r\n                break;\r\n            case PatternType.type_liandui:\r\n                soundName = 'liandui'\r\n                this.playSound(path + soundName, soundName, onFinish)\r\n                return\r\n            case PatternType.type_sandaiyi:\r\n                soundName = 'tuple'\r\n                if(disp_type == 'sanzhang'){\r\n                    soundName = 'tuple'\r\n                }else if(disp_type == 'sandaiyi'){\r\n                    soundName = 'sandaiyi'\r\n                    this.playSound(path + soundName, soundName, onFinish)\r\n                    return\r\n                }else if(disp_type == 'sandaier'){\r\n                    soundName = 'sandaiyidui'\r\n                    this.playSound(path + soundName, soundName, onFinish)\r\n                    return\r\n                }else{\r\n                    return\r\n                }\r\n                break;\r\n            case PatternType.type_feiji:\r\n                soundName = 'feiji'\r\n                if(pattern.feijinum > 0){\r\n                    if(Math.floor(pattern.card_cnt / pattern.feijinum) > 0){\r\n                        soundName = 'feijidaichibang'\r\n                    }\r\n                }\r\n                \r\n                this.playSound(path + soundName, soundName, onFinish)\r\n                return\r\n            case PatternType.type_zhadan:\r\n                soundName = 'zhadan'\r\n                this.playSound(path + soundName, soundName, onFinish)\r\n                return         \r\n            case PatternType.type_sidaier:\r\n                soundName = 'sidaier'\r\n                if(disp_type == 'sidaisi'){\r\n                    soundName = 'sidailiangdui'\r\n                }\r\n                this.playSound(path + soundName, soundName, onFinish)\r\n                return              \r\n            case PatternType.type_huojian:\r\n                soundName = 'wangzha'\r\n                this.playSound(path + soundName, soundName, onFinish)\r\n                return                \r\n            default:\r\n                break;\r\n        }\r\n\r\n        let name = Card.valueToIndex(pattern.value)\r\n        if(!name || name == CardNameIndex.card_unknow){\r\n            onFinish && onFinish('unknow pattern')\r\n            return\r\n        }\r\n        soundName = soundName + name\r\n        this.playSound(path + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playPokerTypeEffectSound(pattern: CardPattern, onFinish?: Function){\r\n        let type = pattern.type\r\n        if(type == PatternType.type_shunzi){\r\n            this.playShunZiEffectSound(onFinish)\r\n            return\r\n        }\r\n        if(type == PatternType.type_liandui){\r\n            this.playCommonEffectSound(onFinish)\r\n            return\r\n        }\r\n        if(type == PatternType.type_feiji){\r\n            this.playFeiJiEffectSound(onFinish)\r\n            return\r\n        }\r\n        if(type == PatternType.type_zhadan){\r\n            this.playZhaDanEffectSound(onFinish)\r\n            return\r\n        }\r\n        if(type == PatternType.type_huojian){\r\n            this.playHuoJianEffectSound(onFinish)\r\n            return\r\n        }\r\n        if(type != PatternType.type_unknow){\r\n            // this.playPiaEffectSound(onFinish)\r\n        }\r\n    }\r\n\r\n    static playPiaEffectSound(onFinish?: Function){\r\n        let soundName = 'special_give'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playPassSound(male:boolean, onFinish?: Function){\r\n        let path = const_femalePath + 'action/'\r\n        if(male){\r\n            path = const_malePath + 'action/'\r\n        }\r\n        let list = ['buyao1', 'buyao2', 'buyao3', 'buyao4']\r\n        let randomIndex = this.getRandomIndex(0, list.length - 1)       \r\n        let soundName = list[randomIndex]\r\n        PdkSound.playSound(path + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playDaNiSound(male: boolean, onFinish?: Function){\r\n        let path = const_femalePath + 'action/'\r\n        if(male){\r\n            path = const_malePath + 'action/'\r\n        }\r\n        let list = ['dani1', 'dani2', 'dani3']\r\n        let soundName = list[this.getRandomIndex(0, list.length - 1)]\r\n        PdkSound.playSound(path + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playFaPaiSound(onFinish?: Function){\r\n        let soundName = 'fapai'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playWarningSound(male: boolean, single: boolean, onFinish?: Function){\r\n        let path = const_femalePath + 'action/'\r\n        if(male){\r\n            path = const_malePath + 'action/'\r\n        }\r\n        let list = ['baojing1', 'baojing1_1']\r\n        if(!single){\r\n            list = ['baojing2', 'baojing2_1']\r\n        }\r\n        let soundName = list[this.getRandomIndex(0, list.length - 1)]\r\n        PdkSound.playSound(path + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playMingPaiSound(male: boolean, onFinish?: Function){\r\n        let path = const_femalePath + 'action/'\r\n        if(male){\r\n            path = const_malePath + 'action/'\r\n        }\r\n        let soundName = 'share'\r\n        PdkSound.playSound(path + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playGrabLordSound(male: boolean, score: number, onFinish?: Function){\r\n        let path = const_femalePath + 'action/'\r\n        if(male){\r\n            path = const_malePath + 'action/'\r\n        }\r\n        let soundName = 'score_order_'\r\n        if(score == 0){\r\n            soundName = 'score_no_order'\r\n        }else{\r\n            soundName = soundName + score\r\n        }\r\n        PdkSound.playSound(path + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playSetLordEffectSound(onFinish?: Function){\r\n        let soundName = 'dztxbh'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playRemind(onFinish?: Function){\r\n        let soundName = 'remind'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playFeiJiEffectSound(onFinish?: Function){\r\n        let soundName = 'feiji'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playShunZiEffectSound(onFinish?: Function){\r\n        this.playCommonEffectSound(onFinish)\r\n    }\r\n\r\n    static playZhaDanEffectSound(onFinish?: Function){\r\n        let soundName = 'bomb_new'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playHuoJianEffectSound(onFinish?: Function){\r\n        let soundName = 'bomb'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playCommonEffectSound(onFinish?: Function){\r\n        let soundName = 'common'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playGameLoseSound(onFinish?: Function){\r\n        let soundName = 'gamelose'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playGameWinSound(onFinish?: Function){\r\n        let soundName = 'gamewin'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playMathWinSound(onFinish?: Function){\r\n        let soundName = 'gamewin'\r\n        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static playSound(fullPath:string, soundName: string, onFinish: Function){\r\n        AudioManager.instance.playSound(fullPath, false, onFinish)\r\n    }\r\n\r\n    static playMusic(fullPath: string, soundName: string){\r\n        AudioManager.instance.playMusic(fullPath, false)\r\n    }\r\n\r\n    static playBgm(resum: boolean){\r\n        // let list = ['bg_zhandou1']\r\n        // let soundName = list[this.getRandomIndex(0, list.length - 1)]\r\n        // this.playMusic(const_musicPath + soundName, soundName)\r\n        let list = [AudioManager.instance.playFightMusic.bind(AudioManager.instance), AudioManager.instance.playFightMusic2.bind(AudioManager.instance)]\r\n        let play = list[ PdkSound.getRandomIndex(0, list.length - 1)]\r\n        if(resum){            \r\n            play(true)\r\n        }else{\r\n            let tmp = list[AudioManager.instance._curMusicIndex - 2]\r\n            if(tmp){\r\n                tmp(false)\r\n            }else{\r\n                play(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    static stopBgm(){\r\n        AudioManager.instance.stopAllMusic()\r\n    }\r\n\r\n    static playChatShortMsgSound(male: boolean, key: string, onFinish?: Function){\r\n        let path = const_femalePath + 'chat/'\r\n        if(male){\r\n            path = const_malePath + 'chat/'\r\n        }\r\n        let soundName = 'chat_' + key\r\n        PdkSound.playSound(path + soundName, soundName, onFinish)\r\n    }\r\n\r\n    static getRandomIndex(under: number = 0, over: number = 0){\r\n        return Utility.instance.getIntRandom(under, over)\r\n    }\r\n}","import ModelBase from \"../../../../framework/core/mvvm/model_base\";\r\nimport { PdkNetRoute } from \"../../net/pdk_route\";\r\nimport { PdkBaseView } from \"./pdk_base_view\";\r\nimport CustomUIStateSwitcher from \"../../../public/ui/custom_ui_state_switcher\";\r\nimport { PdkData } from \"./data/pdk_data\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class PdkView extends PdkBaseView {\r\n\r\n    @property(cc.Node)\r\n    menueRoot:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    menueMask:cc.Node = null;\r\n\r\n    @property(CustomUIStateSwitcher)\r\n    chupaiBtnSwither: CustomUIStateSwitcher = null\r\n\r\n    onLoad(){\r\n        super.onLoad();\r\n        this.menueRoot.active = false;\r\n    }\r\n\r\n    showMenue(){\r\n        this.menueRoot.active = !this.menueRoot.active;\r\n    }\r\n\r\n    //更新玩家状态\r\n    updateAllUser(data:PdkData.SeatInfoData[],roomInfo:PdkData.RoomInfoData){\r\n        this.resetSeatViewPos();\r\n        for (let idx = 0; idx < data.length; idx++) {\r\n            this.userEnter(data[idx].viewID,data[idx].user,roomInfo);\r\n        }\r\n    }\r\n\r\n}\r\n","import HallServer from \"../server/hallserver/hall_server\";\r\nimport GameServer from \"../server/gameserver/game_server\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PingComponent extends cc.Component {\r\n\r\n    @property\r\n    isHallUse:boolean = true\r\n\r\n    @property(cc.SpriteFrame)\r\n    wifiSprites:cc.SpriteFrame[] = []\r\n\r\n    @property(cc.Sprite)\r\n    wifiIcon :cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    pingTex : cc.Label = null\r\n\r\n    pingColor = [new cc.Color(255, 0, 0, 255), new cc.Color(255, 255, 0, 255), new cc.Color(195, 184, 0, 255), new cc.Color(123, 185, 59, 255), new cc.Color(43, 237, 80, 255)]\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n        if(this.isHallUse){\r\n            HallServer.instance.onNotifyPing = (ping: number) => {\r\n                this.showPing(ping)\r\n            }\r\n        }else{\r\n            GameServer.instance.onNotifyPing = (ping:number)=>{\r\n                this.showPing(ping);\r\n            }\r\n        }       \r\n    }\r\n\r\n    // update (dt) {}\r\n\r\n    showPing(ping){\r\n       \r\n        let idx = 0\r\n        if(ping >= 901){\r\n            idx = 0\r\n        }else if(ping >= 501){\r\n            idx = 1\r\n        }else if(ping >= 301){\r\n            idx = 2\r\n        }else if(ping >= 151){\r\n            idx = 3\r\n        }else{\r\n            idx = 4\r\n        }\r\n        \r\n        this.wifiIcon.spriteFrame = this.wifiSprites[idx]\r\n        this.pingTex.string = \"延迟\" + ping + \"ms\"\r\n        this.pingTex.node.color = this.pingColor[idx]\r\n    }\r\n\r\n    onDestroy() {\r\n        if(this.isHallUse){\r\n            HallServer.instance.onNotifyPing = null\r\n        }else{\r\n            GameServer.instance.onNotifyPing = null\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/PlayAnim')\r\nexport default class PlayAnim extends cc.Component {\r\n    @property(cc.Animation)\r\n    animation: cc.Animation = null\r\n\r\n    particles: cc.ParticleSystem[] = null\r\n\r\n    _isFindParticleSystem = false\r\n\r\n\r\n    onEnable() {\r\n        let clip = this.animation.getClips()\r\n        this.animation.play(clip[0].name);\r\n        if (!this._isFindParticleSystem) {\r\n            this.particles = this.animation.node.getComponentsInChildren(cc.ParticleSystem)\r\n            this._isFindParticleSystem = true\r\n        }\r\n        let length = this.particles.length\r\n        for (let i = 0; i < length; i++) {\r\n            this.particles[i].resetSystem()\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        this.animation.stop()\r\n    }\r\n\r\n\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Poison')\r\nexport default class PoisonShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Poison\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 c = color * texture2D(texture, uv0);\r\n        c.r *= 0.8;\r\n        c.r += 0.08 * c.a;\r\n        c.g *= 0.8;\r\n        c.g += 0.2 * c.a;\r\n        c.b *= 0.8;\r\n        gl_FragColor = c;\r\n    }\r\n    `\r\n}\r\n","//old value 对应的值\r\n//3： 9,10,11,12\r\n//4： 13,14,15,16\r\n//5： 17,18,19,20\r\n//6:  21,22,23,24\r\n//7:  25,26,27,28\r\n//8:  29,30,31,32\r\n//9:  33,34,35,36\r\n//10: 37,38,39,40\r\n//J:  41,42,43,44\r\n//Q:  45,46,47,48\r\n//K:  49,50,51,52\r\n//A:  1,2,3,4\r\n//2:  5,6,7,8\r\n//SK: 53\r\n//BK: 54\r\n\r\n//新的对应关系\r\n\r\n\r\nexport enum CardNameIndex{\r\n    card_unknow = 0,\r\n    card_A = 1,\r\n    card_2 = 2,\r\n    card_3 = 3,\r\n    card_4 = 4,\r\n    card_5 = 5,\r\n    card_6 = 6,\r\n    card_7 = 7,\r\n    card_8 = 8,\r\n    card_9 = 9,\r\n    card_10 = 10,\r\n    card_J = 11,\r\n    card_Q = 12,\r\n    card_K = 13,\r\n    card_small_king = 14,\r\n    card_big_king = 15,\r\n    end,\r\n}\r\n\r\nexport enum CardColor{\r\n    color_unknow = 0,\r\n    color_black_heart = 1,\r\n    color_red_heart = 2,\r\n    color_plum = 3,\r\n    color_square = 4,\r\n}\r\n//一张扑克\r\nexport class Card\r\n{\r\n    static cardValueMap: number[] = [0, 14, 15, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18]\r\n    static max_card_value: number = 15\r\n    code: number = 0\r\n    index: CardNameIndex = CardNameIndex.card_unknow//点数\r\n    color: CardColor = CardColor.color_unknow//颜色\r\n\r\n    static makeCardByCode(code: number): Card{\r\n        let card = new Card()\r\n        card.code = code\r\n        card.index = Card.codeToIndex(code)\r\n        card.color = ((code & 0xF0) >> 4) + 1;\r\n        return card\r\n    }\r\n\r\n\r\n    //code 值 转换成 point\r\n    static codeToIndex(code: number): number{\r\n        return code & 0x0F;\r\n    }    \r\n\r\n    //牌值转换成可比较大小的值\r\n    static codeToValue(cbCardData:number){\r\n        let cbCardValue = cbCardData & 0x0F;\r\n        let cbCardColor = cbCardData & 0xF0;\r\n        if (cbCardColor == 0x40) return cbCardValue + 2;\r\n    \treturn (cbCardValue<=2)?(cbCardValue+13):cbCardValue;\r\n    }\r\n\r\n    static indexToValue(index: number): number{\r\n        return Card.cardValueMap[index]\r\n    }\r\n\r\n    static valueToIndex(value: number): number{\r\n        for (let i = 0; i < Card.cardValueMap.length; i++) {\r\n            const element = Card.cardValueMap[i];\r\n            if(element == value){\r\n                return i\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class DouDiZhuCardCommon{\r\n    static tishi = [3,4,5,8,6,7,2,1,0]  //飞机>连对>顺子>三张>对子>单牌>炸弹》火箭\r\n\r\n    //初始牌型分析，仅统计单牌、对牌、三张及王炸的个数\r\n    static InitParse(cards: number[]){\r\n        DouDiZhuCardCommon.SortAsc(cards)\r\n        //牌型数量统计\r\n        let card_type_stat=[[],[],[],[],[]]\r\n        let card_name_info={}\r\n        //针对各张牌名的数量统计\r\n        let card_name_stat={}\r\n        for (let index = 0; index < CardNameIndex.end; index++) {\r\n            card_name_stat[index] = 0\r\n            card_name_info[index] = []\r\n        }\r\n        let last_card = CardNameIndex.card_unknow\r\n        let card_repeat_cnt = 0\r\n        for (let i = 0; i < cards.length; i++) {\r\n            const card = cards[i];\r\n            let name = Card.makeCardByCode(card).index\r\n            card_name_stat[name] = card_name_stat[name] + 1\r\n            card_name_info[name].push(card)\r\n            if(last_card == CardNameIndex.card_unknow){\r\n                last_card = name\r\n                card_repeat_cnt = 1\r\n            }else if(name != last_card){\r\n                if(card_repeat_cnt == 4){\r\n                    card_type_stat[4].push(last_card)\r\n                }else{\r\n                    for (let j = 0; j < card_repeat_cnt; j++) {\r\n                        card_type_stat[j + 1].push(last_card)\r\n                    }\r\n                }\r\n                last_card = name\r\n                card_repeat_cnt = 1\r\n            }else{\r\n                card_repeat_cnt++\r\n            }\r\n        }\r\n        if(card_repeat_cnt == 4){\r\n            card_type_stat[4].push(last_card)\r\n        }else{\r\n            for (let j = 0; j < card_repeat_cnt; j++) {\r\n                card_type_stat[j + 1].push(last_card)\r\n            }\r\n        }\r\n        return {card_type_stat: card_type_stat, card_name_info: card_name_info, card_name_stat: card_name_stat}\r\n    }\r\n\r\n    static SortAsc(cards: number[]){\r\n        cards.sort(function(a, b){\r\n            let valA = Card.codeToValue(a)\r\n            let valB = Card.codeToValue(b)\r\n            if(valA == valB){\r\n                return a - b\r\n            }\r\n            return valA - valB\r\n        })\r\n    }\r\n}\r\n","import { PatternType, CardPattern } from \"./poker_pattern\";\r\nimport { PokerRecommend } from \"./poker_recommend\";\r\nimport { DouDiZhuCardCommon, Card, CardNameIndex } from \"./poker_data\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class PokerSet {\r\n    cards: number[] = []\r\n    card_cnt: number = 0\r\n    setCodeList(codeList: number[], len?: number){\r\n        this.cards = []\r\n        if(codeList){\r\n            for (let i = 0; i < codeList.length; i++) {\r\n                const element = codeList[i];\r\n                this.cards.push(element)\r\n            }\r\n        }\r\n        if(len != null){\r\n            this.card_cnt = len\r\n        }else{\r\n            this.card_cnt = this.cards.length\r\n        }        \r\n    }\r\n\r\n    hintIterator(pattern: CardPattern, cards?: number[]):{tishiFun:Function, count:number, auto:boolean, pattern_set: CardPattern[]}{\r\n        let firstout = true\r\n        let outcard = []\r\n        let handcard = cards? cards: this.cards\r\n        if(pattern != null){\r\n            firstout = false\r\n            outcard = pattern.cards\r\n        }\r\n        let tishiData = PokerRecommend.hintIterator(handcard, outcard, firstout)\r\n        let pattern_set = []\r\n        let has_sidaier_map = []\r\n        for (let i = 0; i < tishiData.tishi.length; i++) {\r\n            const element = tishiData.tishi[i];\r\n            let pattern_tmp = CardPattern.newPattern(element)\r\n            if (pattern_tmp == null) {\r\n                return null;\r\n            }\r\n            if(pattern_tmp.type == PatternType.type_sandaiyi || pattern_tmp.type == PatternType.type_feiji){\r\n                this.proc_sanzhang_tail_cards(pattern_tmp, pattern, handcard)\r\n            }\r\n            pattern_set.push(pattern_tmp) \r\n        }\r\n\r\n        if(!pattern || pattern.type == PatternType.type_sidaier){\r\n            let outData = PokerRecommend.get_cards_type(outcard)\r\n            let cardsList = PokerRecommend.find_all_biger_sizhang(handcard, outData.card_value)\r\n            for (let i = 0; i < cardsList.length; i++) {\r\n                const element = cardsList[i];\r\n                let pattern_tmp = CardPattern.newPattern(element)\r\n                this.proc_sizhang_tail_cards(pattern_tmp, pattern, handcard)\r\n                pattern_set.push(pattern_tmp) \r\n            }            \r\n        }\r\n\r\n        let index = 1\r\n        if(pattern_set.length == 0){\r\n            return {tishiFun: null, count: 0, auto: tishiData.auto, pattern_set: pattern_set}\r\n        }else{\r\n            return {\r\n                tishiFun:function(){\r\n                    let oldIndex = index\r\n                    index = index % (pattern_set.length) + 1                    \r\n                    return pattern_set[oldIndex - 1]\r\n                },\r\n                count: pattern_set.length,\r\n                auto: tishiData.auto,     \r\n                pattern_set: pattern_set,           \r\n            }\r\n        }\r\n    }\r\n\r\n    choose_hintIterator(codeList: number[], pattern: CardPattern){        \r\n        let tishiData = this.hintIterator(pattern, codeList)\r\n        if (tishiData == null) {\r\n            return\r\n        }\r\n        if(tishiData.pattern_set.length > 0){\r\n            tishiData.pattern_set.sort(function(a, b){  //按张数从多到少排序\r\n                return b.card_cnt - a.card_cnt\r\n            })\r\n            let max_cnt = tishiData.pattern_set[0].card_cnt\r\n            let set = []\r\n            for (let i = 0; i < tishiData.pattern_set.length; i++) {\r\n                const pattern = tishiData.pattern_set[i];\r\n                if(pattern.card_cnt == max_cnt){\r\n                    set.push(pattern)\r\n                }\r\n            }\r\n\r\n            tishiData.pattern_set = set\r\n            tishiData.pattern_set.sort(function(a, b){\r\n                return DouDiZhuCardCommon.tishi[b.type] - DouDiZhuCardCommon.tishi[a.type]\r\n            })\r\n\r\n            return tishiData.pattern_set[0]\r\n        }else{\r\n            return {\r\n                cards: codeList,\r\n                card_cnt: codeList.length,\r\n                type: PatternType.type_unknow,\r\n            }\r\n        }\r\n    }\r\n\r\n    //处理3张或飞机带牌 3个带两\r\n    proc_sanzhang_tail_cards(hint_pattern: CardPattern, comp_pattern: CardPattern, cards: number[]){\r\n        let with_cnt = hint_pattern.card_cnt / 3 * 2 //3带2\r\n        let with_type\r\n\r\n        if(comp_pattern){\r\n            if(comp_pattern.type == PatternType.type_sandaiyi && comp_pattern.card_cnt == 3){\r\n                return\r\n            }\r\n\r\n            if(comp_pattern.type == PatternType.type_feiji){\r\n                if(with_cnt * 3 == comp_pattern.card_cnt){\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        if(hint_pattern.type != PatternType.type_sandaiyi && hint_pattern.type != PatternType.type_feiji){\r\n            console.error(new Error('只处理3张或飞机的带牌').stack)\r\n        }\r\n        if(comp_pattern){\r\n            if(comp_pattern.type == PatternType.type_sandaiyi){\r\n                if(comp_pattern.card_cnt != 5 && comp_pattern.card_cnt != 4){\r\n                    console.error(new Error('只处理3带1对或三带单张的带牌').stack)\r\n                }\r\n                with_type = comp_pattern.card_cnt == 5 ? PatternType.type_duizi: PatternType.type_danpai\r\n            }else{\r\n                if(comp_pattern.card_cnt <= with_cnt*3){\r\n                    console.error(new Error('没有牌给飞机当翅膀了').stack)                    \r\n                }\r\n                let tail_cards_cnt = comp_pattern.card_cnt - with_cnt*3\r\n                with_type = tail_cards_cnt / with_cnt\r\n                if(tail_cards_cnt%with_cnt == 0 && (with_type == PatternType.type_danpai || with_type == PatternType.type_duizi)){\r\n                    console.error(new Error('tail_cards_cnt%with_cnt == 0 && (with_type == PatternType.type_danpai || with_type == PatternType.type_duizi)').stack)  \r\n                }                \r\n            }\r\n        }else{\r\n            with_type = PatternType.type_danpai\r\n        }\r\n\r\n        let rest_cards = []\r\n        let used_cards = []\r\n        for (let i = 0; i < hint_pattern.cards.length; i++) {\r\n            const card = hint_pattern.cards[i];\r\n            used_cards[card] = true\r\n        }\r\n\r\n        for (let i = 0; i < cards.length; i++) {\r\n            const card = cards[i];\r\n            if(!used_cards[card]){\r\n                rest_cards.push(card)\r\n            }\r\n        }\r\n\r\n\r\n        rest_cards.sort(function(a, b){\r\n            return a - b\r\n        })\r\n        if(rest_cards.length >= 2){ //去掉剩余牌中的火箭\r\n            if(Card.makeCardByCode(rest_cards[rest_cards.length - 1]).index == CardNameIndex.card_big_king\r\n            && Card.makeCardByCode(rest_cards[rest_cards.length - 2]).index == CardNameIndex.card_small_king){\r\n                rest_cards.splice(rest_cards.length - 1, 1)\r\n                rest_cards.splice(rest_cards.length - 1)\r\n            }\r\n        }\r\n        if(rest_cards.length >= with_cnt * with_type){            \r\n            let parseResult = DouDiZhuCardCommon.InitParse(rest_cards)            \r\n            let tailData = this.get_tail_cards(parseResult.card_type_stat, parseResult.card_name_info, parseResult.card_name_stat, with_cnt, with_type)\r\n            if(tailData.tail_type && tailData.tail_cards.length / tailData.tail_type == with_cnt){\r\n                for (let i = 0; i < tailData.tail_cards.length; i++) {\r\n                    const card = tailData.tail_cards[i];\r\n                    hint_pattern.cards.push(card)\r\n                }\r\n\r\n                hint_pattern.card_cnt += tailData.tail_cards.length\r\n                if(hint_pattern.type == PatternType.type_sandaiyi){\r\n                    hint_pattern.parseDispType()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //处理四张带牌 4带3\r\n    proc_sizhang_tail_cards(hint_pattern: CardPattern, comp_pattern: CardPattern, cards: number[], with_type?: number){\r\n        let with_cnt = hint_pattern.card_cnt / 4 * 3        \r\n\r\n        if(comp_pattern){\r\n            if(comp_pattern.type != PatternType.type_sidaier){\r\n                return\r\n            }\r\n        }\r\n\r\n        if(comp_pattern){\r\n            if(comp_pattern.type == PatternType.type_sidaier){\r\n                if(comp_pattern.card_cnt == 6){\r\n                    with_type = PatternType.type_danpai\r\n                }else{\r\n                    with_type = PatternType.type_duizi\r\n                }          \r\n            }\r\n        }else{\r\n            with_type = with_type || PatternType.type_duizi\r\n        }\r\n\r\n        let rest_cards = []\r\n        let used_cards = []\r\n        for (let i = 0; i < hint_pattern.cards.length; i++) {\r\n            const card = hint_pattern.cards[i];\r\n            used_cards[card] = true\r\n        }\r\n\r\n        for (let i = 0; i < cards.length; i++) {\r\n            const card = cards[i];\r\n            if(!used_cards[card]){\r\n                rest_cards.push(card)\r\n            }\r\n        }\r\n\r\n\r\n        rest_cards.sort(function(a, b){\r\n            return a - b\r\n        })\r\n        if(rest_cards.length >= 2){ //去掉剩余牌中的火箭\r\n            if(Card.makeCardByCode(rest_cards[rest_cards.length - 1]).index == CardNameIndex.card_big_king\r\n            && Card.makeCardByCode(rest_cards[rest_cards.length - 2]).index == CardNameIndex.card_small_king){\r\n                rest_cards.splice(rest_cards.length - 1, 1)\r\n                rest_cards.splice(rest_cards.length - 1)\r\n            }\r\n        }\r\n        if(rest_cards.length >= with_cnt * with_type){            \r\n            let parseResult = DouDiZhuCardCommon.InitParse(rest_cards)            \r\n            let tailData = this.get_tail_cards(parseResult.card_type_stat, parseResult.card_name_info, parseResult.card_name_stat, with_cnt, with_type)\r\n            if(tailData.tail_type && tailData.tail_cards.length / tailData.tail_type == with_cnt){\r\n                for (let i = 0; i < tailData.tail_cards.length; i++) {\r\n                    const card = tailData.tail_cards[i];\r\n                    hint_pattern.cards.push(card)\r\n                }\r\n\r\n                hint_pattern.card_cnt += tailData.tail_cards.length\r\n                hint_pattern.type = PatternType.type_sidaier\r\n                hint_pattern.parseDispType()                \r\n                return\r\n            }\r\n        }\r\n        if(!comp_pattern && with_type == PatternType.type_duizi){\r\n            this.proc_sizhang_tail_cards(hint_pattern, comp_pattern, cards, PatternType.type_danpai)\r\n        }\r\n    }\r\n\r\n    \r\n    get_tail_cards(card_type_stat, card_name_info, card_name_stat, with_cnt, with_type){\r\n        let tail_cards = []\r\n        let tail_type = null\r\n\r\n        let sort_name = function(name1, name2){\r\n            let get_name = function(name){\r\n                if(name == CardNameIndex.card_A){\r\n                    return CardNameIndex.card_K + 0.1\r\n                }\r\n                if(name == CardNameIndex.card_2){\r\n                    return CardNameIndex.card_K + 0.2\r\n                }\r\n            }\r\n            name1 = get_name(name1)\r\n            name2 = get_name(name2)\r\n            return name1 - name2\r\n        }\r\n        let straight_cards = [] //顺子(多个顺子时从小到大排序)\r\n        let remain_single_cards = [] // 顺子中多余的单牌和不成牌型的单牌(从小到大排序)\r\n        let remain_pair_cards = [] //顺子中多余的对子，非连对对子，连对对子(从小到大排序)\r\n        let single_type_stat = card_type_stat[PatternType.type_danpai]\r\n        if(single_type_stat.length > 0){\r\n            this.porc_serial_cards(card_name_stat, PatternType.type_danpai, single_type_stat.length, single_type_stat, 5, straight_cards, remain_single_cards)            \r\n        }\r\n\r\n        let used_pair_cards = []\r\n        for (let i = 0; i < straight_cards.length; i++) {\r\n            const cards = straight_cards[i];\r\n            for (let j = 0; j < cards.length; j++) {\r\n                const name = cards[j];\r\n                if(card_name_stat[name] == 2){\r\n                    used_pair_cards[name] = {index: i, count: 1}\r\n                    remain_single_cards.push(name)\r\n                }else if(card_name_stat[name] == 3){\r\n                    used_pair_cards[name] = {index: i, count: 2}\r\n                    remain_pair_cards.push(name)    //顺子中多余的对子\r\n                }\r\n            }\r\n        }\r\n\r\n        let pair_type_stat = []\r\n        for (let i = 0; i < card_type_stat[PatternType.type_duizi].length; i++) {\r\n            const name = card_type_stat[PatternType.type_duizi][i];\r\n            if(!used_pair_cards[name] && card_name_stat[name] == 2){\r\n                pair_type_stat.push(name)\r\n            }\r\n        }\r\n\r\n        let straight_pair_cards = []\r\n        let plain_pair_cards = []\r\n        if(pair_type_stat.length > 0){\r\n            this.porc_serial_cards(card_name_stat, PatternType.type_duizi, pair_type_stat.length, pair_type_stat, 2, straight_pair_cards, plain_pair_cards)            \r\n        }\r\n        \r\n        for (let i = 0; i < plain_pair_cards.length; i++) {\r\n            const name = plain_pair_cards[i];\r\n            remain_pair_cards.push(name)\r\n        }        \r\n        remain_pair_cards.sort(sort_name)\r\n        for (let i = 0; i < straight_pair_cards.length; i++) {\r\n            const names = straight_pair_cards[i];\r\n            for (let j = 0; j < names.length; j++) {\r\n                const name = names[j];\r\n                remain_pair_cards.push(name)\r\n            }            \r\n        }\r\n\r\n        let remain_three_cards = []\r\n        for (let i = 0; i < card_type_stat[PatternType.type_sandaiyi].length; i++) {\r\n            const name = card_type_stat[PatternType.type_sandaiyi][i];\r\n            if(!used_pair_cards[name] && card_name_stat[name] == 3){\r\n                remain_three_cards.push(name)\r\n            }\r\n        }\r\n\r\n        if(with_type == PatternType.type_danpai){\r\n            tail_type = PatternType.type_danpai\r\n            remain_single_cards.sort(sort_name)\r\n            let singleList = []\r\n            for (let i = 0; i < remain_single_cards.length; i++) {\r\n                const name = remain_single_cards[i];\r\n                let tmp_code = card_name_info[name][0]\r\n                tail_cards.push(tmp_code)\r\n                singleList.push(tmp_code)\r\n                if(tail_cards.length >= with_cnt){\r\n                    break\r\n                }\r\n            }\r\n\r\n            if(tail_cards.length < with_cnt){   //从对子中凑单张\r\n                for (let i = 0; i < remain_pair_cards.length; i++) {\r\n                    const name = remain_pair_cards[i];\r\n                    if(tail_cards.length >= with_cnt){\r\n                        break\r\n                    }\r\n                    let tmp_code = card_name_info[name][0]\r\n                    let tmp_value =  Card.codeToValue(tmp_code)     \r\n                    if(tail_cards.length + 1 == with_cnt){  //保留大的单牌\r\n                        if(singleList.length > 0){\r\n                            if(Card.codeToValue(singleList[singleList.length - 1]) > tmp_value){\r\n                                tail_cards.pop()\r\n                                singleList.pop()                                \r\n                            }\r\n                        }\r\n                    }              \r\n                    tail_cards.push(tmp_code)                    \r\n                    if(tail_cards.length < with_cnt){\r\n                        tail_cards.push(card_name_info[name][1])\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(tail_cards.length < with_cnt){   //从三张中凑单张\r\n                for (let i = 0; i < remain_three_cards.length; i++) {\r\n                    const name = remain_three_cards[i];\r\n                    if(tail_cards.length >= with_cnt){\r\n                        break\r\n                    }\r\n\r\n                    tail_cards.push(card_name_info[name][0])\r\n                    if(tail_cards.length < with_cnt){\r\n                        tail_cards.push(card_name_info[name][1])\r\n                        if(tail_cards.length < with_cnt){\r\n                            tail_cards.push(card_name_info[name][2])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(tail_cards.length < with_cnt){   //从顺子中凑单张\r\n                for (let i = 0; i < straight_cards.length; i++) {\r\n                    const staight_names = straight_cards[i];\r\n                    for (let j = 0; j < staight_names.length; j++) {\r\n                        const name = staight_names[j];\r\n                        tail_cards.push(card_name_info[name][card_name_info[name].length - 1])\r\n                        if(tail_cards.length >= with_cnt){\r\n                            break\r\n                        }\r\n                    }\r\n\r\n                    if(tail_cards.length >= with_cnt){\r\n                        break\r\n                    }\r\n                }\r\n            }            \r\n        }else if(with_type == PatternType.type_duizi){\r\n            tail_type = PatternType.type_duizi\r\n            for (let i = 0; i < remain_pair_cards.length; i++) {\r\n                const name = remain_pair_cards[i];\r\n                if(tail_cards.length >= with_cnt * 2){\r\n                    break\r\n                }\r\n                tail_cards.push(card_name_info[name][0])\r\n                tail_cards.push(card_name_info[name][1])\r\n            }\r\n\r\n            if(tail_cards.length < with_cnt * 2){   //从三张中凑对子\r\n                for (let i = 0; i < remain_three_cards.length; i++) {\r\n                    const name = remain_three_cards[i];\r\n                    if(tail_cards.length >= with_cnt * 2){\r\n                        break\r\n                    }\r\n                    tail_cards.push(card_name_info[name][0])\r\n                    tail_cards.push(card_name_info[name][1])\r\n                }\r\n            }\r\n        }\r\n\r\n        return {tail_cards: tail_cards, tail_type: tail_type}\r\n    }\r\n\r\n    \r\n    porc_serial_cards(card_name_stat, type, type_size, type_stat, least_repeat_cnt, straight_names, remain_names){\r\n        let beg = 1\r\n        if(type_size >= least_repeat_cnt){\r\n            for (let i = 1; i <= type_size - 1; i++) {\r\n                if(Card.indexToValue(type_stat[i - 1]) + 1 != Card.indexToValue(type_stat[i - 1 + 1])){\r\n                    if(i - beg + 1 >= least_repeat_cnt){\r\n                        straight_names.push([])\r\n                        for (let j = beg; j <= i; j++) {\r\n                            straight_names[straight_names.length - 1].push(type_stat[j - 1])                    \r\n                        }\r\n                    }else{\r\n                        for (let j = beg; j <= i; j++) {\r\n                            if(card_name_stat[type_stat[j - 1]] == type){\r\n                                remain_names.push(type_stat[j - 1])\r\n                            }   \r\n                        }\r\n                    }\r\n\r\n                    beg = i + 1\r\n                    if(type_size - beg + 1 < least_repeat_cnt){\r\n                        break\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n        if(type_size - beg + 1 >= least_repeat_cnt){\r\n            straight_names.push([])\r\n            for (let i = beg; i <= type_size; i++) {                \r\n                straight_names[straight_names.length - 1].push(type_stat[i - 1])\r\n            }\r\n        }else{\r\n            for (let i = beg; i <= type_size; i++) {                \r\n                if(card_name_stat[type_stat[i - 1]] == type){\r\n                    remain_names.push(type_stat[i - 1])\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import PokerTablePokerBase from \"./poker_table_poker_base\";\r\nimport PokerTableSeatPokers from \"./poker_seat_pokers_base\"\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n\r\n@ccclass\r\n@menu(\"custom/PokerTableMySeatPokers\")\r\nexport default class PokerTableMySeatPokers extends PokerTableSeatPokers{\r\n    \r\n    @property(cc.Boolean)\r\n    useDynamicOffset: boolean = false\r\n\r\n    @property(cc.Vec2)\r\n    minOffset: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n    @property(cc.Vec2)\r\n    maxOffset: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n    isPlayingSelectPokerAnim: boolean = false    \r\n\r\n    protected mFirstHoverPoker: PokerTablePokerBase = null\r\n    protected mLastHoverPoker: PokerTablePokerBase = null\r\n\r\n    private m_sortedByZIndexPokerList: PokerTablePokerBase[] = []\r\n    private m_selectTimeIndex: number = 0\r\n\r\n    protected custom_on_finish_drag_pokers_fun: Function = null    \r\n    protected on_finish_drag_pokers_reselect_fun: Function = null\r\n    protected on_select_pokers_changed: Function = null\r\n    \r\n    @property(cc.Vec2)\r\n    selectOffest: cc.Vec2 = cc.v2(0, 30)\r\n\r\n    protected m_originalInterval: cc.Vec2 = null\r\n\r\n    getOriginalInterval(): cc.Vec2{\r\n        return this.m_originalInterval\r\n    }\r\n\r\n    protected getIntervalX(totalColCount: number, totalRowCount: number): number{\r\n        let intervalX = super.getIntervalX(totalColCount, totalRowCount)\r\n        if(this.useDynamicOffset){\r\n            if(totalColCount > 1){\r\n                let dis = this.getOriginalInterval().x * (this.maxColCount - 1)\r\n                intervalX = dis / (totalColCount - 1)\r\n                intervalX = Math.max(this.minOffset.x, intervalX)\r\n                intervalX = Math.min(this.maxOffset.x, intervalX)\r\n            }            \r\n        }\r\n        return intervalX\r\n    }\r\n\r\n    protected getIntervalY(totalColCount: number, totalRowCount: number): number{\r\n        let intervalY = super.getIntervalY(totalColCount, totalRowCount)\r\n        if(this.useDynamicOffset){\r\n            if(totalRowCount > 1){\r\n                let dis = this.getOriginalInterval().y * (this.maxRowCount - 1)\r\n                intervalY = dis / (totalRowCount - 1)\r\n                intervalY = Math.max(this.minOffset.y, intervalY)\r\n                intervalY = Math.min(this.maxOffset.y, intervalY)\r\n            }            \r\n        }\r\n        return intervalY\r\n    }\r\n\r\n\r\n    onLoad(){\r\n        this.m_originalInterval = cc.v2(this.intervalX, this.intervalX)\r\n    }\r\n\r\n    protected getSelectedOffsetPos(): cc.Vec2{\r\n        return this.selectOffest\r\n    }\r\n\r\n    protected genTimeSelectIndex(){\r\n        return ++this.m_selectTimeIndex\r\n    }\r\n\r\n    private genSortedByZIndexPokerList(){\r\n        let pokers = this.pokers    \r\n        let newList = []    \r\n        for (let index = 0; index < this.pokers.length; index++) {            \r\n            newList.push(pokers[index])\r\n        }\r\n        newList.sort(function(a, b){\r\n            return b.node.zIndex - a.node.zIndex\r\n        })\r\n        return newList\r\n    }\r\n\r\n    private findTouchedPoker(touch: cc.Touch): PokerTablePokerBase{\r\n        let sortedByZIndexPokerList = this.m_sortedByZIndexPokerList\r\n        for (let index = 0; index < sortedByZIndexPokerList.length; index++) {\r\n            const element = sortedByZIndexPokerList[index]\r\n            if(element.isTouchAtPoker(touch)){\r\n                return element              \r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    protected genPoker(code: number, params?: any){\r\n        let poker = super.genPoker(code, params)\r\n        poker.setClickListener(this.on_click, this)\r\n        poker.setTouchStartListener(this.on_touch_start, this)\r\n        poker.setTouchMoveListener(this.on_touch_move, this)\r\n        poker.setTouchEndListener(this.on_touch_end, this)\r\n        poker.setTouchCancelListener(this.on_touch_cancel, this)\r\n        return poker\r\n    }\r\n\r\n    protected on_touch_start(poker: PokerTablePokerBase, event: cc.Event.EventTouch){        \r\n        this.m_sortedByZIndexPokerList = this.genSortedByZIndexPokerList()\r\n        if(this.isPlayingSelectPokerAnim){\r\n            return\r\n        }\r\n        this.on_press(poker)     \r\n    }\r\n\r\n    protected on_touch_move(poker: PokerTablePokerBase, event: cc.Event.EventTouch){    \r\n        if(this.isPlayingSelectPokerAnim){\r\n            return\r\n        }\r\n        let touchedPoker = this.findTouchedPoker(event.touch)\r\n        if(touchedPoker != null){\r\n            this.on_drag(touchedPoker)\r\n        }\r\n    }\r\n\r\n    protected on_touch_end(poker: PokerTablePokerBase, event: cc.Event.EventTouch){\r\n        if(this.isPlayingSelectPokerAnim){\r\n            return\r\n        }\r\n        this.on_press_up(poker)\r\n    }\r\n\r\n    protected on_touch_cancel(poker: PokerTablePokerBase, event: cc.Event.EventTouch){\r\n        if(this.isPlayingSelectPokerAnim){\r\n            return\r\n        }\r\n        let touchedPoker = this.findTouchedPoker(event.touch)\r\n        if(touchedPoker != null){\r\n            this.on_press_up(touchedPoker)\r\n        }else{\r\n            this.on_press_up(this.mFirstHoverPoker)\r\n        }\r\n    }\r\n\r\n\r\n    protected on_click(poker: PokerTablePokerBase){\r\n\r\n    }\r\n\r\n    protected on_drag(poker: PokerTablePokerBase){\r\n        if(this.mFirstHoverPoker == null){\r\n            this.mFirstHoverPoker = poker\r\n        }\r\n        this.mLastHoverPoker = poker\r\n        this.on_draging_pokers()\r\n    }\r\n\r\n    protected on_press(poker: PokerTablePokerBase){\r\n        this.mFirstHoverPoker = poker\r\n        this.mLastHoverPoker = poker\r\n        this.on_draging_pokers()\r\n    }\r\n\r\n    protected on_press_up(poker: PokerTablePokerBase){\r\n        if(poker != null){\r\n            if(this.mFirstHoverPoker == null){\r\n                this.mFirstHoverPoker = poker\r\n            }\r\n            if(this.mLastHoverPoker == null){\r\n                this.mLastHoverPoker = poker\r\n            }\r\n        }else{\r\n            \r\n        }\r\n        if(this.mLastHoverPoker != null){\r\n            this.on_draging_pokers()\r\n            this.on_finish_drag_pokers()\r\n        }\r\n    }\r\n\r\n    protected check_drag_mark(){\r\n        let opt = {\r\n            startPoker: null,\r\n            isLeftPokersUnMark: false,\r\n        }\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            opt = this.check_drag_mark_singel(poker, opt.isLeftPokersUnMark, opt.startPoker)\r\n        }\r\n    }\r\n\r\n    protected check_drag_mark_singel(poker: PokerTablePokerBase, isLeftPokersUnMark: boolean, startPoker: PokerTablePokerBase): \r\n    {isLeftPokersUnMark: boolean, startPoker: PokerTablePokerBase}{\r\n        if(isLeftPokersUnMark){\r\n            poker.marked = false\r\n        }else{\r\n            if(poker == this.mFirstHoverPoker){\r\n                poker.marked = true\r\n                if(startPoker != null || poker == this.mLastHoverPoker){\r\n                    isLeftPokersUnMark = true\r\n                }else{\r\n                    startPoker = poker\r\n                }\r\n            }else if(poker == this.mLastHoverPoker){\r\n                poker.marked = true\r\n                if(startPoker != null || poker == this.mFirstHoverPoker){\r\n                    isLeftPokersUnMark = true\r\n                }else{\r\n                    startPoker = poker\r\n                }\r\n            }else{\r\n                if(startPoker != null){\r\n                    poker.marked = true\r\n                }else{\r\n                    poker.marked = false\r\n                }\r\n            }\r\n        }\r\n        return {isLeftPokersUnMark: isLeftPokersUnMark, startPoker: startPoker}\r\n    }\r\n\r\n    protected check_poker_selected_state():{markedList: PokerTablePokerBase[], selectedList: PokerTablePokerBase[],  real_selectedList: PokerTablePokerBase[]}{\r\n        let markedList = []\r\n        let selectedList = []\r\n        let real_selectedList = []\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i]    \r\n            if(poker.marked && (!poker.disabled)){\r\n                poker.selected = !poker.selected\r\n                markedList.push(poker)\r\n                if(poker.selected){\r\n                    selectedList.push(poker)\r\n                    poker.selected_time = this.genTimeSelectIndex()\r\n                }else{\r\n                    poker.selected_time = 0\r\n                }\r\n                if(poker.real_selected){\r\n                    real_selectedList.push(poker)\r\n                }\r\n            }\r\n        }\r\n        return {markedList: markedList, selectedList: selectedList, real_selectedList: real_selectedList}\r\n    }\r\n\r\n    protected on_draging_pokers(){\r\n        this.check_drag_mark()\r\n        this.refreshPokersMarkState()\r\n    }\r\n\r\n    protected on_finish_drag_pokers(){\r\n        let self = this\r\n        this.mFirstHoverPoker = null\r\n        this.mLastHoverPoker = null\r\n        let opt = this.check_poker_selected_state()\r\n        this.markAllPokers(false)\r\n        this.refreshPokersMarkState()\r\n        if(this.custom_on_finish_drag_pokers_fun != null){\r\n            return this.custom_on_finish_drag_pokers_fun()\r\n        }\r\n        if(opt.markedList.length > 1 && opt.selectedList.length > 1 && this.on_finish_drag_pokers_reselect_fun){\r\n            this.on_finish_drag_pokers_reselect_fun()\r\n        }else{\r\n            this.isPlayingSelectPokerAnim = true\r\n            this.refreshPokerSelectState(true, function(){\r\n                self.isPlayingSelectPokerAnim = false\r\n            })\r\n        }\r\n    }\r\n\r\n    protected markAllPokers(isMark: boolean){\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            poker.marked = isMark        \r\n        }\r\n    }\r\n\r\n    protected refreshPokersMarkState(){\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            this.setPokerGrayColor(poker, poker.marked)\r\n        }\r\n    }\r\n\r\n    protected setPokerGrayColor(poker: PokerTablePokerBase, gray: boolean){\r\n        if(gray){\r\n            poker.spriteFace.node.color = cc.color(128, 128, 128, 255)\r\n        }else{\r\n            poker.spriteFace.node.color = poker.original_color\r\n        }\r\n    }\r\n\r\n    protected playSelectPokerAnim(node: cc.Node, original_pos: cc.Vec2, selected: boolean, withAnim: boolean, onFinish: Function){     \r\n        withAnim = false                \r\n        let selectedOffsetPos = this.getSelectedOffsetPos()\r\n        let targetPos = cc.v2(original_pos.x, original_pos.y)\r\n        if(selected){\r\n            targetPos.y += selectedOffsetPos.y\r\n        }        \r\n        if(withAnim){\r\n            let duration = 0.1\r\n            let callFun = cc.callFunc(function(){\r\n                if(onFinish){\r\n                    onFinish()\r\n                }\r\n            }.bind(this))\r\n            var move = cc.moveTo(duration, targetPos)\r\n            var seq = cc.sequence([move, callFun]);\r\n            node.runAction(seq);\r\n        }else{\r\n            node.position = targetPos\r\n            if(onFinish != null){\r\n                onFinish()\r\n            }\r\n        }\r\n    }\r\n\r\n    refreshPokerSelectState(withAnim: boolean, onFinish?: Function){\r\n        withAnim = false\r\n        let self = this\r\n        let pokers = this.pokers\r\n        let finishCount = 0\r\n        const totalCount = pokers.length\r\n        for (let i = 0; i < totalCount; i++) {\r\n            const poker = pokers[i];\r\n            let selected = poker.selected\r\n            this.playSelectPokerAnim(poker.node, poker.original_pos, selected, withAnim, function(){\r\n                if(selected){\r\n                    poker.real_selected = true\r\n                    poker.real_selected_time = self.genTimeSelectIndex()\r\n                }else{\r\n                    poker.real_selected = false\r\n                    poker.real_selected_time = 0\r\n                }\r\n                finishCount += 1\r\n                if(finishCount == totalCount){\r\n                    if(onFinish){\r\n                        onFinish()\r\n                    }\r\n                    if(self.on_select_pokers_changed){\r\n                        self.on_select_pokers_changed()\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    setCustomOnFinishDragFunc(callback: Function){\r\n        this.custom_on_finish_drag_pokers_fun = callback\r\n    }\r\n\r\n    setCustomOnFinishDragPokerReselectFunc(callback: Function){\r\n        this.on_finish_drag_pokers_reselect_fun = callback\r\n    }\r\n\r\n    setCustomOnSelectPokersChanged(callback: Function){\r\n        this.on_select_pokers_changed = callback\r\n    }\r\n\r\n    resetPokers(withAnim?: boolean, onFinish?: Function, params?: any){\r\n        withAnim = false\r\n        let self = this\r\n        this.selectAllPokers(false)\r\n        this.refreshPokersMarkState()\r\n\r\n        if(params){\r\n            if(params.ignoreResetDisable){\r\n\r\n            }else{\r\n                this.enabledAllPokers()\r\n                this.refreshPokerDisableState()\r\n            }\r\n        }else{\r\n            this.enabledAllPokers()\r\n            this.refreshPokerDisableState()\r\n        }\r\n\r\n        if(withAnim){\r\n            this.isPlayingSelectPokerAnim = true\r\n        }\r\n        this.repostionPokers(withAnim, function(){\r\n            self.isPlayingSelectPokerAnim = false\r\n            if(onFinish){\r\n                onFinish()\r\n            }\r\n            if(self.on_select_pokers_changed){\r\n                self.on_select_pokers_changed()\r\n            }\r\n        })\r\n    }\r\n\r\n    repostionPokers(withAnim: boolean, onFinish?: Function){\r\n        withAnim = false\r\n        let pokers = this.pokers\r\n        let duration = 0.2\r\n        let totalCount = pokers.length\r\n        let layoutData = this.calcLayoutPosAndPriority(totalCount)\r\n        let dataList = layoutData.dataList\r\n        let finishCount = 0\r\n        for (let i = 0; i < totalCount; i++) {\r\n            let poker = pokers[i];          \r\n            let data = dataList[i]  \r\n            if(withAnim){\r\n                poker.original_pos = data.pos\r\n                let moveAnim = cc.moveTo(duration, data.pos)\r\n                let callFun = cc.callFunc(function(){\r\n                    poker.node.zIndex = data.priority\r\n                    finishCount++\r\n                    if(finishCount == totalCount){\r\n                        if(onFinish){\r\n                            onFinish()\r\n                        }\r\n                    }\r\n                })\r\n                let seq = cc.sequence([moveAnim, callFun])\r\n                poker.node.runAction(seq)\r\n            }else{\r\n                poker.node.position = data.pos\r\n                poker.original_pos = data.pos\r\n                poker.node.zIndex = data.priority \r\n            }            \r\n        }\r\n        if(!withAnim){\r\n            if(onFinish){\r\n                onFinish()\r\n            }\r\n        }\r\n    }\r\n\r\n    selectPokers(codeList: number[], idList: number[]){\r\n        let selectPokers = []\r\n        let waitSelectedCodeCountTable = []\r\n        let selectedCodeCountTable = []\r\n        let pokers = this.pokers\r\n        let useIdFind = false\r\n        let tmpList = codeList\r\n        if(idList && idList.length > 0){\r\n            useIdFind = true\r\n            tmpList = idList\r\n        }\r\n        for (let i = 0; i < tmpList.length; i++) {\r\n            const index = tmpList[i];\r\n            if(!waitSelectedCodeCountTable[index]){\r\n                waitSelectedCodeCountTable[index] = 0\r\n            }\r\n            waitSelectedCodeCountTable[index] = waitSelectedCodeCountTable[index] + 1\r\n            selectedCodeCountTable[index] = 0\r\n        }\r\n        this.selectAllPokers(false)\r\n        for (let i = 0; i < tmpList.length; i++) {\r\n            let index = tmpList[i]\r\n            for (let j = 0; j < pokers.length; j++) {\r\n                const poker = pokers[j];\r\n                let pokerIndex = poker.code\r\n                if(useIdFind){\r\n                    pokerIndex = poker.id\r\n                }\r\n                if(pokerIndex == index && (!poker.selected)){\r\n                    if(waitSelectedCodeCountTable[index] > selectedCodeCountTable[index]){\r\n                        selectedCodeCountTable[index] = selectedCodeCountTable[index] + 1\r\n                        poker.selected = true\r\n                        poker.selected_time = this.genTimeSelectIndex()\r\n                        selectPokers.push(poker)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return selectPokers\r\n    }\r\n\r\n    selectPoker(poker: PokerTablePokerBase, select: boolean){\r\n        if(select){\r\n            poker.selected = true\r\n            poker.selected_time = this.genTimeSelectIndex()\r\n            poker.real_selected = true\r\n            poker.real_selected_time = this.genTimeSelectIndex()\r\n        }else{\r\n            poker.selected = false\r\n            poker.selected_time = 0\r\n            poker.real_selected = false\r\n            poker.real_selected_time = 0\r\n        }\r\n        poker.marked = false\r\n    }\r\n\r\n    selectAllPokers(isSelect: boolean){\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            this.selectPoker(poker, isSelect)\r\n        }\r\n    }\r\n\r\n\r\n    getSelectedPokers(){\r\n        let selected_pokerList: PokerTablePokerBase[] = []\r\n        let selected_idList: number[] = []\r\n        let selected_codeList: number[] = []\r\n\r\n        let real_selected_pokerList: PokerTablePokerBase[] = []\r\n        let real_selected_idList: number[] = []\r\n        let real_selected_codeList: number[] = []\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            if(poker.selected){\r\n                selected_pokerList.push(poker)\r\n                selected_idList.push(poker.id)\r\n                selected_codeList.push(poker.code)\r\n            }\r\n\r\n            if(poker.real_selected){\r\n                real_selected_pokerList.push(poker)\r\n                real_selected_idList.push(poker.id)\r\n                real_selected_codeList.push(poker.code)\r\n            }\r\n        }\r\n        return {\r\n            selected_pokerList: selected_pokerList,\r\n            selected_codeList: selected_codeList,\r\n            selected_idList: selected_idList,\r\n            real_selected_pokerList: real_selected_pokerList,\r\n            real_selected_codeList: real_selected_codeList,\r\n            real_selected_idList: real_selected_idList,\r\n        }\r\n    }\r\n\r\n    enabledAllPokers(){\r\n        let enabledPokers = []\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            poker.disabled = false\r\n            enabledPokers.push(poker)\r\n        }\r\n        return enabledPokers\r\n    }\r\n\r\n    disablePokers(codeList: number[], idList?: number[]){\r\n        let disabledPokers = []\r\n        let waitdisabledCodeCountTable = []\r\n        let disabledCodeCountTable = []\r\n        let pokers = this.pokers\r\n        let useIdFind = false\r\n        let tmpList = codeList\r\n        if(idList && idList.length > 0){\r\n            useIdFind = true\r\n            tmpList = idList\r\n        }\r\n        for (let i = 0; i < tmpList.length; i++) {\r\n            const index = tmpList[i];\r\n            if(!waitdisabledCodeCountTable[index]){\r\n                waitdisabledCodeCountTable[index] = 0\r\n            }\r\n            waitdisabledCodeCountTable[index] = waitdisabledCodeCountTable[index] + 1\r\n            disabledCodeCountTable[index] = 0\r\n        }\r\n        this.enabledAllPokers()\r\n        for (let i = 0; i < tmpList.length; i++) {\r\n            let index = tmpList[i]\r\n            for (let j = 0; j < pokers.length; j++) {\r\n                const poker = pokers[j];\r\n                let pokerIndex = poker.code\r\n                if(useIdFind){\r\n                    pokerIndex = poker.id\r\n                }\r\n                if(pokerIndex == index && (!poker.disabled)){\r\n                    if(waitdisabledCodeCountTable[index] > disabledCodeCountTable[index]){\r\n                        disabledCodeCountTable[index] = disabledCodeCountTable[index] + 1\r\n                        poker.disabled = true\r\n                        disabledPokers.push(poker)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return disabledPokers\r\n    }\r\n\r\n    refreshPokerDisableState(){\r\n        let pokers = this.pokers\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            poker.enableClick(!poker.disabled)\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { PokerNode, IPokerNodeData } from \"./poker_node\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PokerNodeSet extends cc.Component {\r\n    @property([PokerNode])\r\n    pokerNodes:PokerNode[] = [];\r\n\r\n    playerCardAnim(hands:cc.Node[],number,toCount:number){\r\n        for (let idx = 0; idx < toCount; idx++) {\r\n            let hand = hands[idx];\r\n            let tempTransform = this.getTransFromData(toCount,idx);\r\n            let targetPos;\r\n            hand.parent.convertToNodeSpaceAR(tempTransform.worldPos,targetPos);\r\n            this.scheduleOnce(()=>{\r\n                this.playAnim(hand,targetPos,tempTransform.scale,tempTransform.angle,0.2,0,null,cc.easeCubicActionInOut());\r\n            },0.1*idx);\r\n        }\r\n    }\r\n\r\n    getTransFromData(showCount:number,index:number):IPokerNodeData{\r\n        let pokernode = this.pokerNodes[showCount];\r\n        if (pokernode) {\r\n            return pokernode.transformDataList[index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private playAnim(node: cc.Node, targetPos: cc.Vec2, targetScale: number, targetAngle: number, duration: number, delay?: number, onFinish?: Function, easingType?){\r\n        let self = this\r\n        let do_fun = function(){\r\n            let moveAnim = cc.moveTo(duration, targetPos)           \r\n            let rotaAnim = cc.rotateTo(duration, -targetAngle)\r\n            let scaleAnim = cc.scaleTo(duration, targetScale)\r\n            if(easingType){\r\n                moveAnim = moveAnim.easing(easingType)\r\n                rotaAnim = rotaAnim.easing(easingType)\r\n                scaleAnim = scaleAnim.easing(easingType)\r\n            }\r\n            let tmpFun = function(){\r\n                onFinish && onFinish()\r\n            }.bind(self)\r\n            let callFun = cc.callFunc(tmpFun)   \r\n            let swap = cc.spawn([moveAnim, rotaAnim, scaleAnim])\r\n            var seq = cc.sequence([swap, callFun])\r\n            node.stopAllActions()\r\n            node.runAction(seq)\r\n        }\r\n        if(delay && delay > 0){\r\n            self.scheduleOnce(function(){\r\n                do_fun()\r\n            }, delay)\r\n        }else{\r\n            do_fun()\r\n        }\r\n    }\r\n}","\r\n\r\nexport interface IPokerNodeData{\r\n    localPos?:cc.Vec2;\r\n    worldPos?:cc.Vec2;\r\n    angle?:number;\r\n    scale?:number;\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class PokerNode extends cc.Component {\r\n    protected mTransformDataList:IPokerNodeData[] = null;\r\n\r\n    onLoad(){\r\n        if (!this.mTransformDataList) {\r\n            let count = this.node.childrenCount;\r\n            for (let idx = 0; idx < count; idx++) {\r\n                let node = this.node.getChildByName('p'+(idx+1));\r\n                let data:IPokerNodeData = {};\r\n                data.localPos = node.position;\r\n                //data.worldPos = node.parent.convertToWorldSpaceAR(node.position);\r\n                data.angle = node.angle + node.parent.angle;\r\n                data.scale = node.scale + node.parent.scale;\r\n                this.mTransformDataList.push(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    get transformDataList():IPokerNodeData[]{\r\n        return this.mTransformDataList;\r\n    }\r\n}\r\n","\r\nimport { Card } from \"./poker_data\";\r\nimport { PokerRecommend } from \"./poker_recommend\";\r\nimport { RecommendTools } from \"./recommend_tools\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport enum PatternType{\r\n    type_unknow = 0,        //未知牌型\r\n    type_danpai = 1,        //单牌：单张的牌（例如黑桃K）；\r\n    type_duizi = 2,         //对子：牌面数字相同的2张牌（例如黑桃K+红桃K）；\r\n    type_sandaiyi = 3,      //三带一：牌面数字相同的3张牌+1张单牌或对子（例如KKK+8或QQQ+44）；\r\n    type_feiji = 4,         //飞机：2个或更多的连续三张牌型，飞机牌型中每1个三张都可+1张单牌或对子（例如：333444+78或333444+7788）；\r\n    type_shunzi = 5,        //顺子：5张或更多的连续单牌（例如78910J，3456789）；\r\n    type_liandui = 6,       //连对：3对或以上的连续对子牌型（例如334455，991010JJQQ）；\r\n    type_zhadan = 7,        //炸弹：牌面数字相同的4张牌（例如KKKK，QQQQ，3333）；\r\n    type_huojian = 8,       //火箭：双王，即大小王，最大的牌；\r\n    type_sidaier = 9,       //四带二：牌面数字相同的4张牌+2张牌（例如KKKK+89，8888+AA）。\r\n}\r\n\r\nexport class CardPattern{\r\n    cards: number[] = []\r\n    value: number = 0\r\n    type: PatternType = PatternType.type_unknow\r\n    repeated_cnt: number = 1\r\n    card_cnt: number = 0\r\n    disp_type: string    \r\n    feijinum: number = 0\r\n    \r\n    static newPattern(codeList){        \r\n        let pattern = new CardPattern()\r\n        if(pattern.parse(codeList)){\r\n            return pattern\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    compable(pattern: CardPattern): boolean{\r\n        if(this.type <= PatternType.type_unknow){\r\n            console.error(new Error('this.type='+this.type+\"<=PatternType.type_unknow\").stack)\r\n        }\r\n        if(pattern.type <= PatternType.type_unknow){\r\n            console.error(new Error('pattern.type='+pattern.type+\"<=PatternType.type_unknow\").stack)\r\n        }\r\n        if(this.type == PatternType.type_zhadan || this.type == PatternType.type_huojian){\r\n            return true\r\n        }else{\r\n            return this.card_cnt == pattern.card_cnt && this.type == pattern.type\r\n        }\r\n    }\r\n\r\n    le(pattern: CardPattern){\r\n        //牌型系数说明,影响牌值比较\r\n        let cardTypeFactor = [0, 0, 0, 0, 0, 0, 0, 100, 200, 0 ]\r\n        if(pattern == null){\r\n            console.error(new Error('pattern=null').stack)\r\n        }\r\n        if(!this.compable(pattern)){\r\n            console.error(new Error('不可比较的牌型').stack)\r\n        }\r\n        let maxValue = RecommendTools.Max(Card.cardValueMap)\r\n        if(this.value > maxValue){\r\n            console.error(new Error('this.value > maxValue,' + this.value).stack)\r\n        }\r\n        if(pattern.value > maxValue){\r\n            console.error(new Error('pattern.value > maxValue,' + pattern.value).stack)\r\n        }\r\n        if((this.value + cardTypeFactor[this.type]) <= (pattern.value + cardTypeFactor[pattern.type])){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    parseDispType(){\r\n        let dispTypeOfSingle = [ \"one1\", \"one2\", \"one3\", \"one4\", \"one5\", \"one6\", \"one7\", \"one8\", \"one9\", \"one10\", \"one11\", \"one12\", \"one13\", \"one14\", \"one15\" ]\r\n        let dispTypeOfDouble = [ \"dui1\", \"dui2\", \"dui3\", \"dui4\", \"dui5\", \"dui6\", \"dui7\", \"dui8\", \"dui9\", \"dui10\", \"dui11\", \"dui12\", \"dui13\" ]\r\n        if(this.type == PatternType.type_danpai){\r\n            this.disp_type = dispTypeOfSingle[PokerRecommend.value2cardvalue(this.value)]\r\n        }else if(this.type == PatternType.type_duizi){\r\n            this.disp_type = dispTypeOfDouble[PokerRecommend.value2cardvalue(this.value)]\r\n        }else if(this.type == PatternType.type_sandaiyi){\r\n            if(this.card_cnt == 3){\r\n                this.disp_type = 'sanzhang'\r\n            }else if(this.card_cnt == 4){\r\n                this.disp_type = 'sandaiyi'\r\n            }else if(this.card_cnt == 5){\r\n                this.disp_type = 'sandaier'\r\n            }\r\n        }else if(this.type == PatternType.type_shunzi){\r\n            this.disp_type = 'shunzi'\r\n        }else if(this.type == PatternType.type_liandui){\r\n            this.disp_type = 'liandui'\r\n        }else if(this.type == PatternType.type_zhadan){\r\n            this.disp_type = 'zhadan'\r\n        }else if(this.type == PatternType.type_feiji){\r\n            this.disp_type = 'feiji'\r\n        }else if(this.type == PatternType.type_huojian){\r\n            this.disp_type = 'huojian'\r\n        }else if(this.type == PatternType.type_sidaier){\r\n            if(this.card_cnt == 6){\r\n                this.disp_type = 'sidaier'\r\n            }else{\r\n                this.disp_type = 'sidaisi'\r\n            }\r\n        }\r\n    }\r\n\r\n    //判断是否为合法牌型，合法返回true,否则返回假\r\n    parse(codeList: number[]){\r\n        if(codeList != null){\r\n            this.cards = []\r\n            for (let i = 0; i < codeList.length; i++) {\r\n                const code = codeList[i];\r\n                this.cards.push(code)\r\n            }\r\n        }\r\n        this.card_cnt = this.cards.length\r\n        let card_type_vale = PokerRecommend.get_cards_type(codeList)\r\n        if(card_type_vale.card_type == PatternType.type_unknow){\r\n            return false\r\n        }else{\r\n            this.type = card_type_vale.card_type\r\n            this.value = card_type_vale.card_value     \r\n            this.feijinum = card_type_vale.feijinum       \r\n            this.parseDispType()\r\n            return true\r\n        }\r\n    }\r\n\r\n}\r\n","import { RecommendTools } from \"./recommend_tools\"\r\nimport { Card } from \"./poker_data\"\r\nimport { PatternType } from \"./poker_pattern\";\r\n\r\nexport class PokerRecommend{\r\n    //----------------牌型查找-----------------//\r\n    //找出所有的四张\r\n    static find_all_sizhang(handcards){\r\n        let newcardvalue = PokerRecommend.codesToValues(handcards)\r\n        let fourl = RecommendTools.remove_count_same(newcardvalue, 4)\r\n        RecommendTools.sort_ascend(fourl.removel)\r\n        let zhadanl = []\r\n        for (let i = 0; i < fourl.removel.length; i++) {\r\n            const element = fourl.removel[i];\r\n            let t = PokerRecommend.value2have_idx(element,handcards);\r\n            zhadanl.push(t)\r\n        }\r\n        return zhadanl\r\n    }\r\n\r\n    //找出所有的单张(包括对子，三张中的一张)\r\n    static find_all_danzhang(handcards: number[]){\r\n        let newcardvalue = PokerRecommend.codesToValues(handcards)\r\n        let fourl = RecommendTools.remove_count_same(newcardvalue, 4)\r\n        let threel = RecommendTools.remove_count_same(fourl.surl, 3)\r\n        let twol = RecommendTools.remove_count_same(threel.surl, 2)\r\n        RecommendTools.sort_ascend(twol.surl)\r\n        RecommendTools.sort_ascend(threel.removel)\r\n        RecommendTools.sort_ascend(twol.removel)\r\n        let danzhangidx = []\r\n        let twoidx = []\r\n        let threeidx = []\r\n        for (let i = 0; i < twol.surl.length; i++) {\r\n            const element = twol.surl[i]            \r\n            let t = PokerRecommend.value2have_idx(element, handcards)\r\n            danzhangidx.push(t)\r\n        }\r\n        for (let i = 0; i < twol.removel.length; i++) {\r\n            const element = twol.removel[i]\r\n            let t = PokerRecommend.value2have_point_idx([element], handcards)\r\n            twoidx.push(t)\r\n        }\r\n        for (let i = 0; i < threel.removel.length; i++) {\r\n            const element = threel.removel[i]\r\n            let t = PokerRecommend.value2have_point_idx([element], handcards)\r\n            threeidx.push(t)\r\n        }\r\n        return {all:RecommendTools.TableAdd([danzhangidx, twoidx, threeidx], 3), danzhangidx:danzhangidx}\r\n    }\r\n\r\n    //牌列表转换为牌值，需要比较大小的牌值\r\n    static codesToValues(codeList: number[]): number[]{\r\n        if(RecommendTools.is_null_or_empty(codeList)){\r\n            return codeList\r\n        }else{\r\n            let valueList = []\r\n            for (let i = 0; i < codeList.length; i++) {\r\n                const code = codeList[i];\r\n                valueList.push(Card.codeToValue(code))\r\n            }\r\n            return valueList\r\n        }\r\n    }\r\n\r\n    //先手提示 飞机》顺子》连对》三张》对子》单张》炸弹》火箭\r\n    static first_tishi_card(handcard: number[]):{tishi:number[], auto: boolean}{\r\n        let danPaiTishi = PokerRecommend.find_all_danzhang(handcard)\r\n        let tishiData = {\r\n            tishi:[],\r\n            auto: false,\r\n        }\r\n        if(handcard.length == 1){\r\n            tishiData.tishi = [handcard]\r\n            tishiData.auto = true\r\n        }else if(handcard.length == 2){\r\n            if(PokerRecommend.duiZi(handcard)){\r\n                tishiData.tishi = [handcard]\r\n                tishiData.auto = true\r\n            }else{\r\n                tishiData.tishi = PokerRecommend.find_tishi_type(handcard)                \r\n            }\r\n        }else if(handcard.length == 3){\r\n            if(PokerRecommend.sandaiyi(handcard) != null){\r\n                tishiData.tishi = [handcard]\r\n                tishiData.auto = true\r\n            }else{\r\n                tishiData.tishi = PokerRecommend.find_tishi_type(handcard)\r\n            }\r\n        }else if(handcard.length == 4){\r\n            if(PokerRecommend.zhadan(handcard) != null || PokerRecommend.sandaiyi(handcard) != null){\r\n                tishiData.tishi = [handcard]\r\n                tishiData.auto = true\r\n            }else{\r\n                tishiData.tishi = PokerRecommend.find_tishi_type(handcard)\r\n            }\r\n        }else if(handcard.length == 5){\r\n            let wangzha = PokerRecommend.find_huojian(handcard)\r\n            if((wangzha.length == 0 && PokerRecommend.sandaiyi(handcard) != null) || PokerRecommend.shunzi(handcard) != null){\r\n                tishiData.tishi = [handcard]\r\n                tishiData.auto = true\r\n            }else{\r\n                tishiData.tishi = PokerRecommend.find_tishi_type(handcard)\r\n            }\r\n        }else{\r\n            let sizhang = PokerRecommend.find_all_sizhang(handcard)\r\n            let wangzha = PokerRecommend.find_huojian(handcard)\r\n            if(sizhang.length == 0 && wangzha.length == 0){\r\n                if(PokerRecommend.shunzi(handcard) != null || PokerRecommend.liandui(handcard) != null || PokerRecommend.feiji(handcard) != null){\r\n                    tishiData.tishi = [handcard]\r\n                    tishiData.auto = true\r\n                }else{\r\n                    tishiData.tishi = PokerRecommend.find_tishi_type(handcard)\r\n                }\r\n            }else{\r\n                tishiData.tishi = PokerRecommend.find_tishi_type(handcard)\r\n            }\r\n        }\r\n        return tishiData\r\n    }\r\n\r\n    static feiji(codeList: number[]){\r\n        return null;\r\n    }\r\n\r\n    //是否是连对\r\n    static liandui(codeList: number[]): number{\r\n        let newcards = PokerRecommend.codesToValues(codeList)\r\n        let twol = RecommendTools.remove_count_same(newcards, 2)\r\n        if(RecommendTools.table_value_shunzi(twol.removel) && twol.removel.length >= 2 && twol.surl.length == 0){\r\n            return RecommendTools.sort_descend(twol.removel)[0]\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    //是否是单牌\r\n    static danPai(codeList: number[]): number{\r\n        if(codeList.length == 1){\r\n            return PokerRecommend.codesToValues(codeList)[0]\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    //是否是炸弹\r\n    static zhadan(codeList: number[]){\r\n        if(codeList.length == 4){\r\n            let newcards = PokerRecommend.codesToValues(codeList)\r\n            if(RecommendTools.isSameValue(newcards)){\r\n                return newcards[0]\r\n            }else{\r\n                return null\r\n            }\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    //是否是顺子，必须大于或者等于5个元素\r\n    static shunzi(codeList: number[]){\r\n        let newcards = PokerRecommend.codesToValues(codeList)\r\n        if(RecommendTools.table_value_shunzi(newcards) && codeList.length >= 5){\r\n            newcards = RecommendTools.sort_descend(newcards)\r\n            return newcards[0]\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    //是否是对子\r\n    static duiZi(codeList: number[]): number{\r\n        if(codeList.length == 2){\r\n            let values = PokerRecommend.codesToValues(codeList)\r\n            if(RecommendTools.isSameValue(values)){\r\n                return values[0]\r\n            }else{\r\n                return null\r\n            }\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    //找出所有的三张\r\n    static find_all_sanzhang(handcards){\r\n        let newcardvalue = PokerRecommend.codesToValues(handcards)\r\n        let fourl = RecommendTools.remove_count_same(newcardvalue, 4)\r\n        let threel = RecommendTools.remove_count_same(fourl.surl, 3)\r\n        let sanzhangl = []\r\n        RecommendTools.sort_ascend(threel.removel)\r\n        for (let i = 0; i < threel.removel.length; i++) {\r\n            const element = threel.removel[i];\r\n            let t = PokerRecommend.value2have_idx(element, handcards)\r\n            sanzhangl.push(t)\r\n        }\r\n        return sanzhangl\r\n    }\r\n\r\n    //找出所有的对子（包括三张）\r\n    static find_all_duizi(handcards){\r\n        let newcardvalue = PokerRecommend.codesToValues(handcards)\r\n        let fourl = RecommendTools.remove_count_same(newcardvalue, 4)\r\n        let threel = RecommendTools.remove_count_same(fourl.surl, 3)\r\n        let twol = RecommendTools.remove_count_same(threel.surl, 2)\r\n        RecommendTools.sort_ascend(threel.removel)\r\n        RecommendTools.sort_ascend(twol.removel)\r\n        let duizil = []\r\n        let sanzhangl = []\r\n        for (let i = 0; i < twol.removel.length; i++) {\r\n            const element = twol.removel[i];\r\n            let t = PokerRecommend.value2have_idx(element, handcards)\r\n            duizil.push(t)\r\n        }\r\n        for (let i = 0; i < threel.removel.length; i++) {\r\n            const element = threel.removel[i];\r\n            let t = PokerRecommend.value2have_point_idx([element, element], handcards)\r\n            sanzhangl.push(t)\r\n        }\r\n        return {all:RecommendTools.two_table_add(duizil, sanzhangl), duizil: duizil}\r\n    }\r\n    //牌值转换为手牌中的索引(指定数量的牌)\r\n    //cardvaluel 数组\r\n    static value2have_point_idx(cardvaluel, handcard){\r\n        let pointl = []\r\n        let newhandcard = RecommendTools.copy_array(handcard)\r\n        for (let i = 0; i < cardvaluel.length; i++) {\r\n            const element = cardvaluel[i];\r\n            let havel = PokerRecommend.value2have_idx(element, newhandcard)\r\n            if(havel.length > 0){\r\n                for (let j = 0; j < newhandcard.length; j++) {\r\n                    const tmpE = newhandcard[j];\r\n                    if(tmpE == havel[0]){\r\n                        pointl.push(tmpE)\r\n                        newhandcard.splice(j, 1)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        pointl = RecommendTools.sort_ascend(pointl)\r\n        return pointl\r\n    }\r\n\r\n    //牌值转换为手牌中的索引（全部拥有的牌）\r\n    //cardvalue--转换后的值  handcard 手牌 code\r\n    static value2have_idx(cardvalue, handcard){\r\n        let haveCode = [];\r\n        for (let i = 0; i < handcard.length; i++) {\r\n            let code = handcard[i];\r\n            if (Card.codeToValue(code) == cardvalue) {\r\n                haveCode.push(code);\r\n            }\r\n        }\r\n        haveCode = RecommendTools.sort_ascend(haveCode);\r\n        return haveCode;\r\n    }\r\n\r\n    //找到火箭\r\n    static find_huojian(handcards){\r\n        return [];\r\n    }\r\n\r\n    //3带二 3张点数相同的牌带任意两张其他牌，可带对子或者单张\r\n    //最后一手牌时，可带1张\r\n    static sandaiyi(codeList: number[]): number{\r\n        let len = codeList.length\r\n        if(len == 3 || len == 4 || len == 5){\r\n            let values = PokerRecommend.codesToValues(codeList)\r\n            let fourl = RecommendTools.remove_count_same(values, 4)\r\n            let threel = RecommendTools.remove_count_same(values, 3)\r\n            if(len == 4 && fourl.removel.length == 1){\r\n                return null\r\n            }\r\n            if(threel.removel.length == 1){\r\n                return threel.removel[0]\r\n            }else{\r\n                return null\r\n            }\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n     //返回收发提示牌型 飞机》顺子》连对》三张》对子》单张》炸弹》火箭\r\n     static find_tishi_type(handcard){\r\n        let threel = PokerRecommend.find_all_sanzhang(handcard)\r\n        let allduizi = PokerRecommend.find_all_duizi(handcard)\r\n        let alldanpai = PokerRecommend.find_all_danzhang(handcard)\r\n        let zhadan = PokerRecommend.find_all_sizhang(handcard)\r\n        let huojian = PokerRecommend.find_huojian(handcard)\r\n        let feiji = []\r\n        let shunzi = []\r\n        let liandui = []\r\n        let threenum = threel.length\r\n        let shunzinum = 12\r\n        if(handcard.length < 12 && handcard.length > 4){\r\n            shunzinum = handcard.length\r\n        }else if(handcard.length < 5){\r\n            shunzinum = 0\r\n        }\r\n        let duizinum = allduizi.all.length\r\n        while(threenum > 1 && feiji.length == 0){\r\n            feiji = PokerRecommend.find_all_feiji(handcard, threenum)\r\n            threenum = threenum - 1\r\n        }\r\n        while(shunzinum > 4 && shunzi.length == 0){\r\n            shunzi = PokerRecommend.find_all_shunzi(handcard, shunzinum)\r\n            shunzinum = shunzinum - 1\r\n        }\r\n        while(duizinum >= 2 && liandui.length == 0){\r\n            liandui = PokerRecommend.find_all_liandui(handcard, duizinum)\r\n            duizinum = duizinum - 1\r\n        }\r\n        return RecommendTools.TableAdd([feiji, liandui, shunzi, threel, allduizi.duizil, alldanpai.danzhangidx, zhadan, huojian])\r\n    }\r\n\r\n    //找出所有的飞机\r\n    static find_all_feiji(handcards, num){\r\n        let newcardvalue = PokerRecommend.codesToValues(handcards)\r\n        let fourl = RecommendTools.remove_count_same(newcardvalue, 4)\r\n        let threel = RecommendTools.remove_count_same(fourl.surl, 3)\r\n        let allthree = RecommendTools.two_table_add(fourl.removel, threel.removel)\r\n        let value_shunzi = RecommendTools.find_point_shunzi(allthree, num)\r\n        let idx_shunzi = []\r\n        for (let i = 0; i < value_shunzi.length; i++) {\r\n            const element = value_shunzi[i];\r\n            idx_shunzi.push(PokerRecommend.value2have_point_idx(RecommendTools.copy_table_value(element, 3), handcards))\r\n        }\r\n        return idx_shunzi\r\n    }\r\n\r\n    //找出所有的连对\r\n    static find_all_liandui(handcards, num){\r\n        let newcardvalue = PokerRecommend.codesToValues(handcards)\r\n        let fourl = RecommendTools.remove_count_same(newcardvalue, 4)\r\n        let threel = RecommendTools.remove_count_same(fourl.surl, 3)\r\n        let twol = RecommendTools.remove_count_same(threel.surl, 2)\r\n        let alltwo = RecommendTools.two_table_add(threel.removel, twol.removel)\r\n        let value_shunzi = RecommendTools.find_point_shunzi(alltwo, num)\r\n        let idx_shunzi = []\r\n        for (let i = 0; i < value_shunzi.length; i++) {\r\n            const element = value_shunzi[i];\r\n            idx_shunzi.push(PokerRecommend.value2have_point_idx(RecommendTools.copy_table_value(element, 2), handcards))\r\n        }\r\n        return idx_shunzi\r\n    }\r\n\r\n    //找出所有的顺子\r\n    static find_all_shunzi(handcards, num){\r\n        let newcardvalue = PokerRecommend.codesToValues(handcards)\r\n        let value_shunzi = RecommendTools.find_point_shunzi(newcardvalue, num)\r\n        let idx_shunzi = []\r\n        for (let i = 0; i < value_shunzi.length; i++) {\r\n            const element = value_shunzi[i];\r\n            idx_shunzi.push(PokerRecommend.value2have_point_idx(element, handcards))\r\n        }\r\n        return idx_shunzi\r\n    }\r\n\r\n    static hintIterator(handcard: number[], outcard: number[], firstout: boolean){\r\n        let tishiData = {\r\n            tishi:[],\r\n            auto: false,\r\n        }\r\n        if(firstout){\r\n            tishiData = PokerRecommend.first_tishi_card(handcard)            \r\n        }else{\r\n            tishiData.tishi = PokerRecommend.find_all_biger_type(handcard, outcard)\r\n            if(tishiData.tishi.length == 1){\r\n                if(tishiData.tishi[0].length == handcard.length){\r\n                    tishiData.auto = true\r\n                }\r\n            }\r\n        }\r\n        return tishiData\r\n    }\r\n\r\n    static get_cards_type(codeList: number[]):{card_type: number, card_value: number, feijinum?: number}{\r\n        let data = {\r\n            card_type: PatternType.type_unknow,\r\n            card_value: 0,\r\n            feijinum: 0,\r\n        }\r\n        if(!RecommendTools.is_null_or_empty(codeList)){\r\n            let danpai = PokerRecommend.danPai(codeList)\r\n            if(danpai != null){\r\n                return {card_type:PatternType.type_danpai, card_value:danpai}\r\n            }else{\r\n                let duizi = PokerRecommend.duiZi(codeList)\r\n                if(duizi != null){\r\n                    return {card_type:PatternType.type_duizi, card_value:duizi}\r\n                }else{\r\n                    let sandaiyi = PokerRecommend.sandaiyi(codeList)\r\n                    if(sandaiyi != null){\r\n                        return {card_type:PatternType.type_sandaiyi, card_value:sandaiyi}\r\n                    }else{\r\n                        let shunzi = PokerRecommend.shunzi(codeList)\r\n                        if(shunzi != null){\r\n                            return {card_type:PatternType.type_shunzi, card_value:shunzi}\r\n                        }else{\r\n                            let liandui = PokerRecommend.liandui(codeList)\r\n                            if(liandui != null){\r\n                                return {card_type:PatternType.type_liandui, card_value:liandui}\r\n                            }else{\r\n                                let feiji = PokerRecommend.feiji(codeList)\r\n                                if(feiji != null){\r\n                                    return {card_type:PatternType.type_feiji, card_value:feiji.air, feijinum:feiji.feijinum}\r\n                                }else{\r\n                                    let zhadan = PokerRecommend.zhadan(codeList)\r\n                                    if(zhadan != null){\r\n                                        return {card_type:PatternType.type_zhadan, card_value:zhadan}\r\n                                    }else{\r\n                                        let huojian = null//PokerRecommend.huojian(codeList)\r\n                                        if(huojian){\r\n                                            return {card_type:PatternType.type_huojian, card_value:Card.max_card_value}\r\n                                        }else{\r\n                                            let sidaier = PokerRecommend.sidaier(codeList)\r\n                                            if(sidaier != null){\r\n                                                return {card_type:PatternType.type_sidaier, card_value:sidaier}\r\n                                            }else{\r\n                                                return data\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            return data\r\n        }\r\n    }\r\n\r\n    //是否是四带二， 四带四\r\n    static sidaier(codeList: number[]){\r\n        if(codeList.length == 6){\r\n            let newcards = PokerRecommend.codesToValues(codeList)\r\n            let fourl = RecommendTools.remove_count_same(newcards, 4)\r\n            if(fourl.removel.length == 1){\r\n                return fourl.removel[0]\r\n            }else{\r\n                return null\r\n            }\r\n        }else if(codeList.length == 8){\r\n            let newcards = PokerRecommend.codesToValues(codeList)\r\n            let fourl = RecommendTools.remove_count_same(newcards, 4)\r\n            if(fourl.removel.length == 1){\r\n                let twol = RecommendTools.remove_count_same(fourl.surl, 2)\r\n                if(twol.removel.length == 2){\r\n                    return fourl.removel[0]\r\n                }else{\r\n                    return null\r\n                }\r\n            }else if(fourl.removel.length == 2){\r\n                let tmpE = RecommendTools.sort_descend(fourl.removel)\r\n                return tmpE[0]\r\n            }else{\r\n                return null\r\n            }\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    //找出所有大于上家出的牌的牌型\r\n    static find_all_biger_type(handcard, outcard){\r\n        let allboom = PokerRecommend.find_all_boom(handcard)\r\n        let huojian = PokerRecommend.find_huojian(handcard)\r\n        let outData = PokerRecommend.get_cards_type(outcard)\r\n        if(outData.card_type == PatternType.type_danpai){\r\n            return RecommendTools.two_table_add(PokerRecommend.find_all_biger_danpai(handcard, outData.card_value), allboom)\r\n        }else if(outData.card_type == PatternType.type_duizi){\r\n            return RecommendTools.two_table_add(PokerRecommend.find_all_biger_duizi(handcard, outData.card_value), allboom)\r\n        }else if(outData.card_type == PatternType.type_sandaiyi){\r\n            return RecommendTools.two_table_add(PokerRecommend.find_all_biger_sanzhang(handcard, outData.card_value, outcard.length), allboom)            \r\n        }else if(outData.card_type == PatternType.type_zhadan){\r\n            return RecommendTools.two_table_add(PokerRecommend.find_all_biger_sizhang(handcard, outData.card_value), huojian)            \r\n        }else if(outData.card_type == PatternType.type_shunzi){\r\n            return RecommendTools.two_table_add(PokerRecommend.find_all_biger_shunzi(handcard, outData.card_value, outcard.length), allboom)            \r\n        }else if(outData.card_type == PatternType.type_liandui){\r\n            return RecommendTools.two_table_add(PokerRecommend.find_all_biger_liandui(handcard, outData.card_value, outcard.length / 2), allboom)            \r\n        }else if(outData.card_type == PatternType.type_feiji){\r\n            return RecommendTools.two_table_add(PokerRecommend.find_all_biger_feiji(handcard, outcard), allboom)            \r\n        }else if(outData.card_type == PatternType.type_sidaier){\r\n            return allboom\r\n        }else if(outData.card_type == PatternType.type_huojian){\r\n            return []\r\n        }else{\r\n            return []\r\n        }\r\n    }\r\n\r\n    static find_all_boom(handcards){\r\n        return RecommendTools.two_table_add(PokerRecommend.find_all_sizhang(handcards), PokerRecommend.find_huojian(handcards))\r\n    }\r\n\r\n\r\n    static find_all_biger_danpai(handcard, outvalue){\r\n        let alltype = PokerRecommend.find_all_danzhang(handcard)\r\n        let biger = []\r\n        for (let i = 0; i < alltype.all.length; i++) {\r\n            const element = alltype.all[i];\r\n            let v = PokerRecommend.danPai(element)\r\n            if(v != null){\r\n                if(v > outvalue){\r\n                    biger.push(element)\r\n                }\r\n            }\r\n        }\r\n        return biger\r\n    }\r\n\r\n    static find_all_biger_duizi(handcard, outvalue){\r\n        let alltype = PokerRecommend.find_all_duizi(handcard)\r\n        let biger = []\r\n        for (let i = 0; i < alltype.all.length; i++) {\r\n            const element = alltype.all[i];\r\n            let v = PokerRecommend.duiZi(element)\r\n            if(v != null){\r\n                if(v > outvalue){\r\n                    biger.push(element)\r\n                }\r\n            }\r\n        }\r\n        return biger\r\n    }\r\n\r\n    static find_all_biger_sizhang(handcard, outvalue){\r\n        let alltype = PokerRecommend.find_all_sizhang(handcard)\r\n        let biger = []\r\n        for (let i = 0; i < alltype.length; i++) {\r\n            const element = alltype[i];\r\n            let v = PokerRecommend.zhadan(element)\r\n            if(v != null){\r\n                if(v > outvalue){\r\n                    biger.push(element)\r\n                }\r\n            }\r\n        }\r\n        return biger\r\n    }\r\n\r\n    static find_all_biger_shunzi(handcard, outvalue, num){\r\n        let alltype = PokerRecommend.find_all_shunzi(handcard, num)\r\n        let biger = []\r\n        for (let i = 0; i < alltype.length; i++) {\r\n            const element = alltype[i];\r\n            let v = PokerRecommend.shunzi(element)\r\n            if(v != null){\r\n                if(v > outvalue){\r\n                    biger.push(element)\r\n                }\r\n            }\r\n        }\r\n        return biger\r\n    }\r\n\r\n    static find_all_biger_liandui(handcard, outvalue, num){\r\n        let alltype = PokerRecommend.find_all_liandui(handcard, num)\r\n        let biger = []\r\n        for (let i = 0; i < alltype.length; i++) {\r\n            const element = alltype[i];\r\n            let v = PokerRecommend.liandui(element)\r\n            if(v != null){\r\n                if(v > outvalue){\r\n                    biger.push(element)\r\n                }\r\n            }\r\n        }\r\n        return biger\r\n    }\r\n\r\n    static find_all_biger_sanzhang(handcard, outvalue, num){\r\n        let is_has_pair = function(base_cards: number[]){\r\n            let rest_card_names = []\r\n            let used_cards = []\r\n            for (let i = 0; i < base_cards.length; i++) {\r\n                const card = base_cards[i];\r\n                used_cards[card] = true\r\n            }\r\n\r\n            for (let i = 0; i < handcard.length; i++) {\r\n                const card = handcard[i];\r\n                if(!used_cards[card]){\r\n                    let name = Card.makeCardByCode(card).index\r\n                    rest_card_names[name] = rest_card_names[name]? rest_card_names[name] + 1 : 1\r\n                    if(rest_card_names[name] >= 2){\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        }\r\n\r\n\r\n        let alltype = PokerRecommend.find_all_sanzhang(handcard)\r\n        let biger = []\r\n        if(handcard.length >= num){\r\n            for (let i = 0; i < alltype.length; i++) {                \r\n                const element = alltype[i];\r\n                if(num < 5 || is_has_pair(element)){\r\n                    let v = PokerRecommend.sandaiyi(element)\r\n                    if(v != null){\r\n                        if(v > outvalue){\r\n                            biger.push(element)\r\n                        }\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n\r\n        \r\n        return biger\r\n    }\r\n\r\n    static find_all_biger_feiji(handcard, outcard){\r\n        let outData = PokerRecommend.feiji(outcard)\r\n        let biger = []\r\n        if(outData != null){\r\n            let alltype = PokerRecommend.find_all_feiji(handcard, outData.feijinum)\r\n            if(handcard.length >= outcard.length){\r\n                for (let i = 0; i < alltype.length; i++) {\r\n                    const element = alltype[i];\r\n                    let v = PokerRecommend.feiji(element)\r\n                    if(v != null){\r\n                        if(v.air > outData.air){\r\n                            biger.push(element)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return biger\r\n    }\r\n\r\n    static value2cardvalue(cardvalue){\r\n        let cardname = 0\r\n        for (let i = 0; i < Card.cardValueMap.length; i++) {\r\n            const element = Card.cardValueMap[i];\r\n            if(cardvalue == element){\r\n                cardname = i\r\n            }\r\n        }\r\n        return cardname\r\n    }\r\n\r\n}","import PokerTablePokerBase from \"./poker_table_poker_base\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\nenum VerticalDirection{\r\n    BottomToTop = 0,\r\n    CenterToMargin = 1,\r\n    TopToBottom = 2,\r\n}\r\n\r\nenum HorizontalDirection{\r\n    LeftToRight = 0,\r\n    CenterToMargin  = 1,\r\n    RightToLeft = 2,\r\n}\r\n\r\n// enum AlignType{    \r\n//     Center = 1,\r\n//     FollowDirection = 2,\r\n// }\r\n\r\n\r\nenum StartAxis{\r\n    Horizontal = 0,\r\n    Vertical = 1,\r\n}\r\n\r\nenum HorizontalPriority{\r\n    Left = 0,\r\n    Right = 1,\r\n}\r\n\r\nenum VerticalPriority{\r\n    Top = 0,\r\n    Bottom = 1,\r\n}\r\n\r\n@ccclass\r\n@menu(\"custom/PokerTableSeatPokers\")\r\nexport default class PokerTableSeatPokers extends cc.Component{\r\n    @property(PokerTablePokerBase)\r\n    prefabPoker: PokerTablePokerBase = null\r\n\r\n    @property(cc.Node)\r\n    nodePokersParent: cc.Node = null\r\n\r\n    private m_unUseedHandPokers: PokerTablePokerBase[] = []    \r\n\r\n    @property({type: cc.Enum(StartAxis)})\r\n    startAxis: StartAxis = StartAxis.Horizontal\r\n\r\n    @property({type: cc.Enum(HorizontalDirection)})\r\n    horizontalDirection: HorizontalDirection = HorizontalDirection.CenterToMargin\r\n\r\n    @property({type: cc.Enum(VerticalDirection)})\r\n    verticalDirection: VerticalDirection = VerticalDirection.CenterToMargin\r\n\r\n    @property({type: cc.Enum(HorizontalPriority)})\r\n    horizontalPriority: HorizontalPriority = HorizontalPriority.Right\r\n\r\n    @property({type: cc.Enum(VerticalPriority)})\r\n    verticalPriority: VerticalPriority = VerticalPriority.Bottom\r\n\r\n    @property(cc.Boolean)\r\n    followHorizontalDirection: boolean = true\r\n\r\n    @property(cc.Boolean)\r\n    followVerticalDirection: boolean = true\r\n\r\n\r\n    @property(cc.Float)\r\n    offsetX: number = 0\r\n\r\n    @property(cc.Float)\r\n    offsetY: number = 0\r\n\r\n    @property(cc.Float)\r\n    intervalX: number = 0\r\n\r\n    @property(cc.Float)\r\n    intervalY: number = 0\r\n\r\n    @property(cc.Integer)\r\n    maxColCount: number = 0\r\n\r\n    @property(cc.Integer)\r\n    maxRowCount: number = 0\r\n\r\n    protected pokers: PokerTablePokerBase[] = []\r\n\r\n    protected m_customGetSpriteFrameKeyFunc: Function = null\r\n\r\n    reset(){\r\n        this.showPokers(false)\r\n    }\r\n\r\n    setCustomGetSpriteFrameKeyByCodeFunc(func: Function, refreshSpriteNow?: boolean){\r\n        this.m_customGetSpriteFrameKeyFunc = func\r\n        if(refreshSpriteNow){\r\n            for (let i = 0; i < this.pokers.length; i++) {\r\n                const poker = this.pokers[i];\r\n                poker.setCustomGetSpriteFrameKeyByCodeFunc(func, refreshSpriteNow)\r\n            }            \r\n        }\r\n    }\r\n\r\n    protected genPoker(code: number, params?: any){\r\n        let poker = this.shiftUnUseedPoker(this.m_unUseedHandPokers)\r\n        if(poker == null){\r\n            let node = this.instantiateObj(this.prefabPoker.node, this.nodePokersParent)                                \r\n            poker = node.getComponent(PokerTablePokerBase)\r\n        }  \r\n        poker.node.name = code + \"\"        \r\n        poker.reset()\r\n        poker.setCustomGetSpriteFrameKeyByCodeFunc(this.m_customGetSpriteFrameKeyFunc, false)\r\n        poker.fillPoker(code, params)\r\n        return poker\r\n    }\r\n\r\n    private shiftUnUseedPoker(list: PokerTablePokerBase[]):PokerTablePokerBase{\r\n        let poker = list.shift()\r\n        return poker\r\n    }\r\n\r\n    private pushToUnUseedList(list: PokerTablePokerBase[], poker: PokerTablePokerBase){\r\n        list.push(poker)\r\n    }\r\n\r\n    private instantiateObj(prefabNode:cc.Node, parent:cc.Node):cc.Node{\r\n        var node = cc.instantiate(prefabNode)\r\n        node.parent = parent\r\n        node.position = cc.v2(0, 0)\r\n        node.scale = 1        \r\n        return node\r\n    }\r\n\r\n    protected formatPokersLayout(pokerList: PokerTablePokerBase[]): cc.Vec2{\r\n        let layoutData = this.calcLayoutPosAndPriority(pokerList.length)\r\n        let dataList = layoutData.dataList\r\n        for (let i = 0; i < pokerList.length; i++) {\r\n            let poker = pokerList[i];          \r\n            let data = dataList[i]  \r\n            poker.node.position = data.pos\r\n            poker.original_pos = data.pos\r\n            poker.node.zIndex = data.priority \r\n        }\r\n        return layoutData.centerPos\r\n    }\r\n\r\n    protected calcLayoutPosAndPriority(len: number){\r\n        let dataList = []\r\n        let self = this\r\n\r\n        let maxColCount = this.maxColCount\r\n        let maxRowCount = this.maxRowCount        \r\n        let totalColCount = 1\r\n        let totalRowCount = 1\r\n        if(this.startAxis == StartAxis.Horizontal){\r\n            if(len > maxColCount){\r\n                totalColCount = maxColCount                \r\n            }else{\r\n                totalColCount = len\r\n            }                \r\n            totalRowCount = Math.ceil((len) / totalColCount)\r\n        }else{\r\n            if(len > maxRowCount){\r\n                totalRowCount = maxRowCount\r\n            }else{\r\n                totalRowCount = len\r\n            }           \r\n            totalColCount = Math.ceil((len) / totalRowCount)\r\n        }\r\n        let minColCount = len % totalColCount\r\n        let minRowCount = len % totalRowCount\r\n        // console.log(totalColCount, totalRowCount, minColCount, minRowCount)\r\n        for (let i = 0; i < len; i++) {            \r\n            let index = i  \r\n            let offsetIndex = 0\r\n            let leftCount = (len - 1) - index                                                                       \r\n            let curTotalColCount = totalColCount\r\n            let curTotalRowCount = totalRowCount\r\n\r\n            let horizontalDirection = this.horizontalDirection\r\n            let verticalDirection = this.verticalDirection\r\n            let horizontalPriority = this.horizontalPriority\r\n            let verticalPriority = this.verticalPriority\r\n            if(!this.followHorizontalDirection){\r\n                if(horizontalDirection == HorizontalDirection.LeftToRight){\r\n                    horizontalDirection = HorizontalDirection.RightToLeft\r\n                }else if(horizontalDirection == HorizontalDirection.RightToLeft){\r\n                    horizontalDirection = HorizontalDirection.LeftToRight\r\n                }\r\n            }  \r\n            if(!this.followVerticalDirection){\r\n                if(verticalDirection == VerticalDirection.TopToBottom){\r\n                    verticalDirection = VerticalDirection.BottomToTop\r\n                }else if(verticalDirection == VerticalDirection.BottomToTop){\r\n                    verticalDirection = VerticalDirection.TopToBottom\r\n                }\r\n            }\r\n            if(this.startAxis == StartAxis.Horizontal){ \r\n                if(verticalDirection == VerticalDirection.BottomToTop){\r\n                    if(minColCount > 0){\r\n                        if(index >= minColCount){\r\n                            offsetIndex = totalColCount - minColCount                                                 \r\n                        }else{\r\n                            if(horizontalDirection == HorizontalDirection.CenterToMargin){\r\n                                curTotalColCount = minColCount\r\n                            }else if(horizontalDirection == HorizontalDirection.RightToLeft){\r\n                                offsetIndex = (totalColCount - minColCount)\r\n                            }                           \r\n                        }\r\n                    }                    \r\n                }else{\r\n\r\n                }\r\n                let tmpIndex = index + offsetIndex\r\n                let tmpLeftCount = leftCount + offsetIndex\r\n                if(horizontalDirection == HorizontalDirection.CenterToMargin){\r\n                    if(tmpIndex % totalColCount + tmpLeftCount < minColCount){\r\n                        curTotalColCount = minColCount\r\n                    }\r\n                }else if(horizontalDirection == HorizontalDirection.RightToLeft){\r\n                    if(tmpIndex % totalColCount + tmpLeftCount < minColCount){\r\n                        offsetIndex = (totalColCount - minColCount)\r\n                    }\r\n                }             \r\n            }else{\r\n                if(horizontalDirection == HorizontalDirection.RightToLeft){\r\n                    if(minRowCount > 0){\r\n                        if(index >= minRowCount){\r\n                            offsetIndex = totalRowCount - minRowCount\r\n                        }else{\r\n                            if(verticalDirection == VerticalDirection.CenterToMargin){\r\n                                curTotalRowCount = minRowCount\r\n                            }else if(verticalDirection == VerticalDirection.BottomToTop){\r\n                                offsetIndex = (totalRowCount - minRowCount)\r\n                            }\r\n                        }\r\n                    }                    \r\n                }else{\r\n\r\n                }\r\n                let tmpIndex = index + offsetIndex\r\n                let tmpLeftCount = leftCount + offsetIndex\r\n                if(verticalDirection == VerticalDirection.CenterToMargin){\r\n                    if(tmpIndex % totalRowCount + tmpLeftCount < minRowCount){\r\n                        curTotalRowCount = minRowCount\r\n                    }\r\n                }else if(verticalDirection == VerticalDirection.BottomToTop){\r\n                    if(tmpIndex % totalRowCount + tmpLeftCount < minRowCount){\r\n                        offsetIndex = (totalRowCount - minRowCount)\r\n                    }\r\n                } \r\n            }        \r\n                                   \r\n            let col = this.getCol(index, totalColCount, totalRowCount, offsetIndex)\r\n            let row = this.getRow(index, totalColCount, totalRowCount, offsetIndex)\r\n            let pos = this.calcPos(col, row, curTotalColCount, curTotalRowCount)            \r\n            let priority = 0\r\n            priority = this.calcHorizontalPriority(priority, col, totalColCount, totalRowCount)\r\n            priority = this.calcVerticalPriority(priority, row, totalColCount, totalRowCount)\r\n            dataList.push({pos: pos, col: col, row: row, priority: priority})\r\n        }\r\n        let col = (totalColCount - 1) * 0.5\r\n        let row = (totalRowCount - 1) * 0.5\r\n        let centerPos = this.calcPos(col, row, totalColCount, totalRowCount)\r\n        return {dataList:dataList, centerPos: centerPos}\r\n    }\r\n\r\n    protected getCol(index: number, totalColCount: number, totalRowCount: number, offsetIndex: number): number{\r\n        let startAxis = this.startAxis\r\n        let horizontalDirection = this.horizontalDirection\r\n        let verticalDirection = this.verticalDirection\r\n        let horizontalPriority = this.horizontalPriority\r\n        let verticalPriority = this.verticalPriority\r\n        let col = 0\r\n        if(startAxis == StartAxis.Horizontal){\r\n            col = (index + offsetIndex) % totalColCount                       \r\n        }else{\r\n            col = Math.floor((index + offsetIndex) / totalRowCount)           \r\n        }\r\n        \r\n        return col\r\n    }\r\n\r\n    protected getRow(index: number, totalColCount: number, totalRowCount: number, offsetIndex: number): number{\r\n        let row = 0\r\n        let startAxis = this.startAxis\r\n        let horizontalDirection = this.horizontalDirection\r\n        let verticalDirection = this.verticalDirection\r\n        let horizontalPriority = this.horizontalPriority\r\n        let verticalPriority = this.verticalPriority\r\n        if(startAxis == StartAxis.Horizontal){\r\n            row = Math.floor((index + offsetIndex) / totalColCount)       \r\n        }else{\r\n            row = (index + offsetIndex) % totalRowCount                      \r\n        }\r\n        return row\r\n    }\r\n\r\n    protected calcHorizontalPriority(priority: number, col: number, totalColCount: number, totalRowCount: number): number{\r\n        let startAxis = this.startAxis\r\n        let horizontalDirection = this.horizontalDirection\r\n        let verticalDirection = this.verticalDirection\r\n        let horizontalPriority = this.horizontalPriority\r\n        let verticalPriority = this.verticalPriority\r\n        if(startAxis == StartAxis.Horizontal){\r\n            if(horizontalPriority == HorizontalPriority.Left){                   \r\n                return priority + (totalColCount - col)\r\n            }else{\r\n                return priority + col\r\n            }\r\n        }else{\r\n            if(horizontalPriority == HorizontalPriority.Left){\r\n                return priority + (totalColCount - col) * totalRowCount\r\n            }else{\r\n                return priority + col * totalRowCount\r\n            } \r\n        }                 \r\n    }\r\n\r\n    protected calcVerticalPriority(priority: number, row: number, totalColCount: number, totalRowCount: number): number{\r\n        let startAxis = this.startAxis\r\n        let horizontalDirection = this.horizontalDirection\r\n        let verticalDirection = this.verticalDirection\r\n        let horizontalPriority = this.horizontalPriority\r\n        let verticalPriority = this.verticalPriority\r\n        if(startAxis == StartAxis.Horizontal){\r\n            if(verticalPriority == VerticalPriority.Top){\r\n                return priority + (totalColCount - row) * totalColCount\r\n            }else{                                \r\n                return priority + row * totalColCount\r\n            }   \r\n        }else{\r\n            if(verticalPriority == VerticalPriority.Top){\r\n                return priority + (totalColCount - row)\r\n            }else{                \r\n                return priority + row\r\n            }   \r\n        }                 \r\n    }\r\n\r\n    protected getOffsetX(totalColCount: number, totalRowCount: number): number{\r\n        return this.offsetX\r\n    }\r\n\r\n    protected getOffsetY(totalColCount: number, totalRowCount: number): number{\r\n        return this.offsetY\r\n    }\r\n\r\n    protected getIntervalX(totalColCount: number, totalRowCount: number): number{\r\n        return this.intervalX\r\n    }\r\n\r\n    protected getIntervalY(totalColCount: number, totalRowCount: number): number{\r\n        return this.intervalY\r\n    }\r\n\r\n    protected calcPos(col: number, row: number, totalColCount: number, totalRowCount: number): cc.Vec2{           \r\n        //最上面为第0行，最左边为第0列\r\n        let centerCol = ((totalColCount - 1) * 0.5)\r\n        let centerRow = ((totalRowCount - 1) * 0.5)\r\n        let pos = cc.v2(0, 0)\r\n        let intervalX = this.getIntervalX(totalColCount, totalRowCount)\r\n        pos.x = intervalX * col\r\n        if(this.horizontalDirection == HorizontalDirection.CenterToMargin){\r\n            pos.x = intervalX * (col - centerCol)\r\n        }else if(this.horizontalDirection == HorizontalDirection.LeftToRight){\r\n            pos.x = intervalX * col\r\n        }else if(this.horizontalDirection == HorizontalDirection.RightToLeft){\r\n            pos.x = intervalX * (col - (totalColCount - 1))\r\n        }\r\n        pos.x += this.getOffsetX(totalColCount, totalRowCount)\r\n\r\n        let intervalY = this.getIntervalY(totalColCount, totalRowCount)\r\n        pos.y = intervalY * row\r\n        if(this.verticalDirection == VerticalDirection.CenterToMargin){\r\n            pos.y = intervalY * (centerRow - row)\r\n        }else if(this.verticalDirection == VerticalDirection.TopToBottom){\r\n            pos.y = intervalY * (-row)\r\n        }else if(this.verticalDirection == VerticalDirection.BottomToTop){\r\n            pos.y = intervalY * ((totalRowCount - 1) - row)\r\n        }\r\n        pos.y += this.getOffsetY(totalColCount, totalRowCount)\r\n        return pos\r\n    }\r\n\r\n    genPokerList(codeList: number[], append: boolean, show?: boolean, showFace?: boolean){\r\n        if(!append){\r\n            this.removeAllPokers()\r\n        }\r\n        let list = []\r\n        for (let index = 0; index < codeList.length; index++) {\r\n            const code = codeList[index];\r\n            let poker = this.genPoker(code)                \r\n            this.pokers.push(poker)\r\n            if(show){\r\n                poker.show()\r\n            }else{\r\n                poker.hide()\r\n            }\r\n            if(showFace){\r\n                poker.showFace(true)\r\n            }else{\r\n                poker.showFace(false)\r\n            }            \r\n            list.push(poker)\r\n        }\r\n        return list\r\n    }\r\n\r\n    removeAllPokers(){\r\n        for (let index = 0; index < this.pokers.length; index++) {\r\n            const poker = this.pokers[index];\r\n            poker.hide()\r\n            poker.node.stopAllActions()\r\n            this.pushToUnUseedList(this.m_unUseedHandPokers, poker)\r\n        }\r\n        this.pokers = []\r\n    }\r\n\r\n    removePoker(poker: PokerTablePokerBase){\r\n        for (let i = 0; i < this.pokers.length; i++) {\r\n            const p = this.pokers[i];\r\n            if(poker.id == p.id){                \r\n                this.removePokerByIndex(i)\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    removePokers(pokers: PokerTablePokerBase[]){\r\n        for (let i = 0; i < pokers.length; i++) {\r\n            const poker = pokers[i];\r\n            this.removePoker(poker)\r\n        }\r\n    }\r\n\r\n    removePokerByIndex(index: number){\r\n        let poker = this.pokers[index]\r\n        this.pokers.splice(index, 1)\r\n        poker.hide()\r\n        this.pushToUnUseedList(this.m_unUseedHandPokers, poker)\r\n    }\r\n\r\n    showPokers(show: boolean, codeList?: number[], params?: any){\r\n        this.removeAllPokers()        \r\n        if(show){\r\n            let pokerList = this.genPokerList(codeList, false)\r\n            for (let index = 0; index < pokerList.length; index++) {\r\n                let poker = pokerList[index]    \r\n                poker.show()\r\n                if(params){\r\n                    if(params.hidePoker){\r\n                        poker.hide()\r\n                    }\r\n                }                         \r\n                poker.showFace(true)                \r\n            }\r\n            let centerLocalPos = this.formatPokersLayout(pokerList)\r\n\r\n            let worldPos:cc.Vec2;\r\n            this.nodePokersParent.convertToWorldSpaceAR(centerLocalPos,worldPos);\r\n            return worldPos\r\n        }\r\n        return cc.Vec2.ZERO\r\n    }\r\n}\r\n","\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n\r\n@ccclass\r\n@menu('custom/PokerTablePokerBase')\r\nexport default class PokerTablePokerBase extends cc.Component{\r\n    private static s_curMaxId: number = 0\r\n    @property(cc.SpriteAtlas)\r\n    spriteAtlasPoker: cc.SpriteAtlas = null\r\n\r\n    @property(cc.Sprite)\r\n    spriteFace: cc.Sprite = null\r\n\r\n    @property(cc.Sprite)\r\n    spriteBack: cc.Sprite = null\r\n\r\n    @property(cc.Button)\r\n    button: cc.Button = null\r\n\r\n    @property(cc.Node)\r\n    nodeLaiZiTag: cc.Node = null\r\n\r\n    public selected: boolean = false\r\n    public marked: boolean = false\r\n    public disabled: boolean = false\r\n    public real_selected: boolean = false\r\n    public selected_time: number = 0\r\n    public real_selected_time: number = 0\r\n    public original_pos: cc.Vec2 = cc.v2(0, 0)\r\n    public original_color: cc.Color = new cc.Color(255, 255, 255, 255)\r\n\r\n    private m_customGetSpriteFrameKeyFunc: Function = null\r\n\r\n    public get id():number{\r\n        return this.m_id\r\n    }\r\n    private m_id: number = 0\r\n\r\n    public get code():number{\r\n        return this.m_code\r\n    }\r\n    private m_code: number = 0\r\n\r\n    protected static genId():number{\r\n        return ++PokerTablePokerBase.s_curMaxId\r\n    }\r\n\r\n    private m_onTouchStartCallback: Function = null\r\n    private m_onTouchStartCallbackObj: any = null\r\n\r\n    private m_onTouchMoveCallback: Function = null\r\n    private m_onTouchMoveCallbackObj: any = null\r\n\r\n    private m_onTouchEndCallback: Function = null\r\n    private m_onTouchEndCallbackObj: any = null\r\n\r\n    private m_onTouchCancelCallback: Function = null\r\n    private m_onTouchCancelCallbackObj: any = null\r\n\r\n    private m_onClickCallback: Function = null\r\n    private m_onClickCallbackObj: any = null\r\n\r\n    show(){\r\n        this.node.active = true\r\n    }\r\n\r\n    hide(){\r\n        this.node.active = false\r\n    }\r\n\r\n    reset(){\r\n        this.m_code = 0\r\n        this.selected = false\r\n        this.real_selected = false\r\n        this.marked = false\r\n        this.disabled = false\r\n        this.selected_time = 0\r\n        this.real_selected_time = 0\r\n    }\r\n\r\n    onLoad(){        \r\n        this.m_id = PokerTablePokerBase.genId() \r\n        this.spriteFace && (this.original_color = this.spriteFace.node.color)\r\n        this.registClickEvent()     \r\n    }\r\n\r\n    onDestroy(){\r\n        this.unregistClickEvent()\r\n        this.setClickListener(null, null)\r\n        this.setTouchStartListener(null, null)\r\n        this.setTouchMoveListener(null, null)\r\n        this.setTouchEndListener(null, null)\r\n        this.setTouchCancelListener(null, null)\r\n    }\r\n\r\n    protected registClickEvent(){\r\n        if(this.button && this.button.node != null){\r\n            \r\n            this.button.node.on('click', this.onClick, this);\r\n            this.button.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n            this.button.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n            this.button.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n            this.button.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n        }  \r\n    }\r\n\r\n    protected unregistClickEvent(){\r\n        if(this.button && this.button.node != null){\r\n            this.button.node.off('click', this.onClick, this);\r\n            this.button.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n            this.button.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n            this.button.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n            this.button.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this)\r\n        }  \r\n    }\r\n\r\n\r\n    protected onClick(event: cc.Button){\r\n        if(this.m_onClickCallback != null){\r\n            this.m_onClickCallback.call(this.m_onClickCallbackObj, this, event)\r\n        }\r\n    }\r\n\r\n    protected onTouchStart(event: cc.Event.EventTouch){\r\n        if(this.m_onTouchStartCallback != null){\r\n            this.m_onTouchStartCallback.call(this.m_onTouchStartCallbackObj, this, event)\r\n        }\r\n    }\r\n\r\n    protected onTouchEnd(event: cc.Event.EventTouch){\r\n        if(this.m_onTouchEndCallback != null){\r\n            this.m_onTouchEndCallback.call(this.m_onTouchEndCallbackObj, this, event)\r\n        }\r\n    }\r\n\r\n    protected onTouchCancel(event: cc.Event.EventTouch){\r\n        if(this.m_onTouchCancelCallback != null){\r\n            this.m_onTouchCancelCallback.call(this.m_onTouchCancelCallbackObj, this, event)\r\n        }\r\n    }\r\n\r\n    protected onTouchMove(event: cc.Event.EventTouch){\r\n        if(this.m_onTouchMoveCallback != null){\r\n            this.m_onTouchMoveCallback.call(this.m_onTouchMoveCallbackObj, this, event)\r\n        }\r\n    }    \r\n\r\n    setTouchStartListener(callback: Function, tagget?: any){\r\n        this.m_onTouchStartCallback = callback\r\n        this.m_onTouchStartCallbackObj = tagget\r\n    }\r\n    \r\n    setTouchMoveListener(callback: Function, tagget?: any){\r\n        this.m_onTouchMoveCallback = callback\r\n        this.m_onTouchMoveCallbackObj = tagget\r\n    }\r\n\r\n    setTouchEndListener(callback: Function, tagget?: any){\r\n        this.m_onTouchEndCallback = callback\r\n        this.m_onTouchEndCallbackObj = tagget\r\n    }\r\n\r\n    setTouchCancelListener(callback: Function, tagget?: any){\r\n        this.m_onTouchCancelCallback = callback\r\n        this.m_onTouchCancelCallbackObj = tagget\r\n    }\r\n\r\n    setClickListener(callback: Function, tagget?: any){\r\n        this.m_onClickCallback = callback\r\n        this.m_onClickCallbackObj = tagget\r\n    }\r\n\r\n\r\n    fillPoker(code: number, params?: any){\r\n        this.m_code = code\r\n        this.setFace(code)\r\n    }\r\n    \r\n    showFace(show: boolean){\r\n        this.spriteFace.node.active = show\r\n    }\r\n\r\n    showBack(show: boolean){\r\n        this.spriteBack.node.active = show\r\n    }\r\n\r\n    showLaiZiTag(show: boolean){\r\n        this.nodeLaiZiTag && (this.nodeLaiZiTag.active = show || false)\r\n    }\r\n\r\n    enableClick(enable: boolean){\r\n        this.button.enabled = enable || false\r\n    }\r\n\r\n    setCustomGetSpriteFrameKeyByCodeFunc(func: Function, refreshSpriteNow?: boolean){\r\n        this.m_customGetSpriteFrameKeyFunc = func\r\n        if(refreshSpriteNow){\r\n            if(this.code > 0){\r\n                this.setFace(this.code)\r\n            }\r\n        }\r\n    }\r\n\r\n    isTouchAtPoker(touch: cc.Touch): boolean{\r\n        let touchLocalPos = this.node.convertToNodeSpaceAR(touch.getLocation())\r\n        let size = this.node.getContentSize()\r\n        let scaleX = this.node.scaleX        \r\n        let scaleY = this.node.scaleY\r\n        let minX = (this.node.anchorX - 1) * size.width * scaleX\r\n        let maxX = (1 - this.node.anchorX) * size.width * scaleX\r\n        let minY = (this.node.anchorY - 1) * size.height * scaleY\r\n        let maxY = (1 - this.node.anchorY) * size.height * scaleY\r\n        return touchLocalPos.x >= minX && touchLocalPos.x <= maxX && touchLocalPos.y >= minY &&touchLocalPos.y <= maxY\r\n    }\r\n\r\n    protected setFace(code: number){\r\n        let key = this.getSpriteFrameKeyByCode(code)        \r\n        this.spriteFace.spriteFrame = this.getSpriteFrameByName(key)\r\n    }\r\n\r\n    protected getSpriteFrameKeyByCode(code: number):string{\r\n        if(this.m_customGetSpriteFrameKeyFunc != null){\r\n            return this.m_customGetSpriteFrameKeyFunc(code)            \r\n        }\r\n        code = code % 13 + 1\r\n        return 'Public_fangkuai_' + code.toString()\r\n    }\r\n\r\n    protected getSpriteFrameByName(key: string){\r\n        return this.spriteAtlasPoker.getSpriteFrame(key)\r\n    }\r\n}\r\n","import CustomUIStateSwitcher from \"../ui/custom_ui_state_switcher\";\r\nimport SpriteFrameHolder from \"../ui/spriteFrameHolder\";\r\nimport Utility from \"../../../utility/Utility\";\r\nimport TimeManager from \"../../../manager/time_manager\";\r\nimport GameUtil from \"../../../utility/game_util\";\r\nimport AudioManager from \"../../../manager/audio_manager\";\r\nimport { COPYFILE_FICLONE } from \"constants\";\r\n\r\nconst { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n\r\nclass SpriteCache{\r\n    private m_spriteFrame: cc.SpriteFrame\r\n    private m_refreshTime: number\r\n    private m_key: string\r\n    constructor(key: string, spriteFrame: cc.SpriteFrame){\r\n        this.m_spriteFrame = spriteFrame\r\n        this.refreshTime()\r\n    }\r\n\r\n    getSpriteFrame(): cc.SpriteFrame{\r\n        this.refreshTime()\r\n        return this.m_spriteFrame\r\n    }\r\n\r\n    getKey(){\r\n        return this.m_key\r\n    }\r\n\r\n    getRefreshTime(): number{\r\n        return this.m_refreshTime\r\n    }\r\n\r\n    release(){\r\n        let spriteFrame = this.m_spriteFrame\r\n        if(spriteFrame){            \r\n            let tex = spriteFrame.getTexture()\r\n            if(tex){\r\n                tex.destroy()\r\n            }\r\n            spriteFrame.clearTexture()\r\n            spriteFrame.destroy()\r\n        }\r\n        this.m_spriteFrame = null\r\n    }\r\n\r\n    private refreshTime(){\r\n        this.m_refreshTime = new Date().getTime()\r\n    }\r\n}\r\n\r\nclass SpriteCacheManager{\r\n    private m_maxCount;\r\n    private m_map;\r\n    constructor(maxCount: number){\r\n        this.m_maxCount = maxCount\r\n        this.m_map = {}\r\n    }\r\n    \r\n    addSpriteFrame(key: string, spriteFrame: cc.SpriteFrame){\r\n        this.m_map[key] = new SpriteCache(key, spriteFrame)\r\n    }\r\n    \r\n    findSpriteFrame(key: number|string): cc.SpriteFrame{\r\n        let spritCache = this.m_map[key] as SpriteCache\r\n        if(spritCache == null){\r\n            return null\r\n        }\r\n        return spritCache.getSpriteFrame()\r\n    }\r\n\r\n    cleanExcessCaches(){\r\n        let cacheList = new Array<SpriteCache>();\r\n        for (const key in this.m_map) {\r\n            if (this.m_map.hasOwnProperty(key)) {\r\n                const element = this.m_map[key];\r\n                if(element){\r\n                    cacheList.push(element)\r\n                }                \r\n            }\r\n        }\r\n        if(cacheList.length < this.m_maxCount){\r\n            return\r\n        }\r\n        cacheList.sort(function(a, b){\r\n            return b.getRefreshTime() - a.getRefreshTime()\r\n        })\r\n        for (let index = this.m_maxCount - 1; index < cacheList.length; index++) {\r\n            const element = cacheList[index];\r\n            let key = element.getKey()\r\n            // element.release()\r\n            this.m_map[key] = null;\r\n        }\r\n    }\r\n\r\n    cleanAllCaches(){\r\n        for (const key in this.m_map) {\r\n            if (this.m_map.hasOwnProperty(key)) {\r\n                const element = this.m_map[key];\r\n                if(element){\r\n                    element.release()\r\n                }                \r\n            }\r\n        }\r\n        this.m_map = {}\r\n    }\r\n}\r\n\r\n@ccclass\r\n@requireComponent(CustomUIStateSwitcher)\r\nexport default abstract class PokerTableSeatBaseView extends cc.Component{\r\n\r\n    static s_avatarSpriteCacheManager: SpriteCacheManager = new SpriteCacheManager(20);\r\n\r\n    @property(cc.Node)  \r\n    nodeRoleInfo: cc.Node = null\r\n\r\n    @property(cc.Sprite)  //头像\r\n    spriteAvatar: cc.Sprite = null\r\n\r\n    @property(cc.Label)  //名字\r\n    lableName: cc.Label = null\r\n\r\n    @property(cc.Sprite)  //掉线\r\n    spriteOffLine: cc.Sprite = null\r\n\r\n    @property(cc.Sprite)    //准备图标\r\n    spriteReady: cc.Sprite = null\r\n\r\n    @property(CustomUIStateSwitcher)\r\n    styleUiStateSwitcher: CustomUIStateSwitcher = null\r\n\r\n    @property(cc.Sprite)    //房主\r\n    spriteOwner: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    nodeClock: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    lableClock: cc.Label = null\r\n\r\n    @property(cc.Node)\r\n    nodeChatText: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeSelect: cc.Node = null\r\n\r\n    @property(cc.Button)\r\n    buttonAvatar:cc.Button = null;\r\n\r\n    @property(cc.Size)\r\n    avatarSize:cc.Size = null;\r\n\r\n    @property(cc.Node)\r\n    single:cc.Node = null;\r\n    \r\n    @property(cc.Label)\r\n    lableCoinBalance: cc.Label = null\r\n\r\n    protected mOnclickKickBtnCallback: Function = null\r\n    protected mOnclickAvatarBtnCallback: Function = null\r\n    protected mOnclickNotSeatBtnCallback: Function = null\r\n    private m_clockScheduleId: number = 0\r\n    onLoad(){\r\n        let self = this\r\n        if(this.styleUiStateSwitcher == null){\r\n            this.styleUiStateSwitcher = this.getComponent<CustomUIStateSwitcher>(CustomUIStateSwitcher)\r\n        }\r\n        if(this.buttonAvatar != null){\r\n            this.buttonAvatar.node.on('click', function(event: cc.Button){\r\n                if(self.mOnclickAvatarBtnCallback){\r\n                    self.mOnclickAvatarBtnCallback(self)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        this.showName(false)\r\n        this.showAvatar(false)\r\n        this.showOffLineTag(false)\r\n        this.showOwnerTag(false)\r\n        this.showReadyTag(false)\r\n        this.showSingle(false);\r\n    }\r\n\r\n    showName(show: boolean, name?: string){\r\n        this.lableName.node.active = show\r\n        if(show && name != null){\r\n            this.lableName.string = Utility.instance.filterPlayerName(name)\r\n        }        \r\n    }\r\n\r\n    showCoin(show:boolean,coin:number){\r\n        this.lableCoinBalance.string = Utility.instance.formateNumb(coin).toString();\r\n        this.lableCoinBalance.node.active = show;\r\n    }\r\n\r\n    showSingle(show:boolean){\r\n        this.single.active = show;\r\n    }\r\n\r\n    showAvatar(show: boolean, spriteFrame?: cc.SpriteFrame){\r\n        this.spriteAvatar.node.active = show        \r\n        if(show){\r\n            this.spriteAvatar.spriteFrame = spriteFrame\r\n        }\r\n    }\r\n\r\n\r\n    showOffLineTag(show: boolean){\r\n        if(this.spriteOffLine == null){\r\n            return\r\n        }\r\n        this.spriteOffLine.node.active = show\r\n    }\r\n\r\n    showAvatarByUrl(show: boolean, url: string){\r\n        let self = this\r\n        if(show){\r\n            let spriteFrame = PokerTableSeatBaseView.s_avatarSpriteCacheManager.findSpriteFrame(url)\r\n            if(!spriteFrame){\r\n                GameUtil.loadTexture(url, function (err, texture) {\r\n                    if (texture != null) {\r\n                        if (!self.isValid) {\r\n                            cc.warn(\"网络加载头像 self.isValid\")\r\n                            return\r\n                        }\r\n                        let frame = new cc.SpriteFrame(texture)\r\n                        frame.setOriginalSize(self.avatarSize)\r\n                        PokerTableSeatBaseView.s_avatarSpriteCacheManager.addSpriteFrame(url, frame)\r\n                        self.showAvatar(show, frame)                        \r\n                    }\r\n                });\r\n            }\r\n            this.showAvatar(show, spriteFrame)\r\n            return\r\n        }\r\n        this.showAvatar(false)\r\n    }\r\n\r\n    showOwnerTag(show: boolean){\r\n        this.spriteOwner.node.active = show\r\n    }\r\n\r\n\r\n    showReadyTag(show: boolean){\r\n        this.spriteReady.node.active = show\r\n    }\r\n\r\n    resetSeatStyle(index: number){\r\n        this.styleUiStateSwitcher.SwitchState(this.getSeatStyleName(index))\r\n    }\r\n\r\n\r\n    showSelect(show: boolean){\r\n        if(!this.nodeSelect) return        \r\n        this.nodeSelect.active = show\r\n    }\r\n\r\n\r\n    showClock(show: boolean, secs?: number, needShake?: boolean, onFinish?: Function){\r\n        this.nodeClock.active = show\r\n        if(this.m_clockScheduleId > 0){\r\n            TimeManager.instance.cancelSchedule(this.m_clockScheduleId)\r\n            this.m_clockScheduleId = 0\r\n        }\r\n        if(show){            \r\n            this.refreshClockLable(secs, needShake, onFinish)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    protected refreshClockLable(secs: number, needShake?: boolean, onFinish?: Function){\r\n        let self = this\r\n        this.lableClock.string = secs.toString()\r\n        if(secs <= 0){\r\n            if(needShake){\r\n                AudioManager.instance.vibrate()\r\n            }\r\n            if(onFinish){\r\n                onFinish()\r\n            }\r\n            return\r\n        }\r\n        this.m_clockScheduleId = TimeManager.instance.doScheduleOnce(function(){\r\n            self.m_clockScheduleId = 0\r\n            secs--\r\n            self.refreshClockLable(secs, needShake, onFinish)\r\n        }, 1)\r\n    }\r\n\r\n    enableAvatarBtn(enable: boolean){\r\n        if(!this.buttonAvatar) return\r\n        this.buttonAvatar.enabled = enable\r\n    }\r\n\r\n\r\n    setClickAvatarBtnListener(callback: Function){\r\n        this.mOnclickAvatarBtnCallback = callback\r\n    }\r\n\r\n    setClickNotSeatBtnListener(callback: Function){\r\n        this.mOnclickNotSeatBtnCallback = callback\r\n    }\r\n\r\n    setClickKickBtnListener(callback: Function){\r\n        this.mOnclickKickBtnCallback = callback\r\n    }\r\n    \r\n    abstract getSeatStyleName(index: number):string;\r\n\r\n \r\n\r\n    getChatTextWorldPos(){\r\n        return this.nodeChatText.parent.convertToWorldSpaceAR(this.nodeChatText.getPosition())\r\n    }\r\n\r\n\r\n\r\n    onDestroy(){\r\n        if(this.m_clockScheduleId > 0){\r\n            TimeManager.instance.cancelSchedule(this.m_clockScheduleId)\r\n            this.m_clockScheduleId = 0\r\n        }\r\n        this.unscheduleAllCallbacks()\r\n    }\r\n}\r\n","(function(){\r\n\r\n  /**\r\n   * Expose `Emitter`.\r\n   */\r\n\r\n  // module.exports = Emitter;\r\n\r\n  /**\r\n   * Initialize a new `Emitter`.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  function Emitter(obj) {\r\n    if (obj) return mixin(obj);\r\n  };\r\n\r\n  /**\r\n   * Mixin the emitter properties.\r\n   *\r\n   * @param {Object} obj\r\n   * @return {Object}\r\n   * @api private\r\n   */\r\n\r\n  function mixin(obj) {\r\n    for (var key in Emitter.prototype) {\r\n      obj[key] = Emitter.prototype[key];\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Listen on the given `event` with `fn`.\r\n   *\r\n   * @param {String} event\r\n   * @param {Function} fn\r\n   * @return {Emitter}\r\n   * @api public\r\n   */\r\n\r\n  Emitter.prototype.on =\r\n  Emitter.prototype.addEventListener = function(event, fn){\r\n    this._callbacks = this._callbacks || {};\r\n    (this._callbacks[event] = this._callbacks[event] || [])\r\n      .push(fn);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Adds an `event` listener that will be invoked a single\r\n   * time then automatically removed.\r\n   *\r\n   * @param {String} event\r\n   * @param {Function} fn\r\n   * @return {Emitter}\r\n   * @api public\r\n   */\r\n\r\n  Emitter.prototype.once = function(event, fn){\r\n    var self = this;\r\n    this._callbacks = this._callbacks || {};\r\n\r\n    function on() {\r\n      self.off(event, on);\r\n      fn.apply(this, arguments);\r\n    }\r\n\r\n    on.fn = fn;\r\n    this.on(event, on);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Remove the given callback for `event` or all\r\n   * registered callbacks.\r\n   *\r\n   * @param {String} event\r\n   * @param {Function} fn\r\n   * @return {Emitter}\r\n   * @api public\r\n   */\r\n\r\n  Emitter.prototype.off =\r\n  Emitter.prototype.removeListener =\r\n  Emitter.prototype.removeAllListeners =\r\n  Emitter.prototype.removeEventListener = function(event, fn){\r\n    this._callbacks = this._callbacks || {};\r\n\r\n    // all\r\n    if (0 == arguments.length) {\r\n      this._callbacks = {};\r\n      return this;\r\n    }\r\n\r\n    // specific event\r\n    var callbacks = this._callbacks[event];\r\n    if (!callbacks) return this;\r\n\r\n    // remove all handlers\r\n    if (1 == arguments.length) {\r\n      delete this._callbacks[event];\r\n      return this;\r\n    }\r\n\r\n    // remove specific handler\r\n    var cb;\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n      cb = callbacks[i];\r\n      if (cb === fn || cb.fn === fn) {\r\n        callbacks.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Emit `event` with the given args.\r\n   *\r\n   * @param {String} event\r\n   * @param {Mixed} ...\r\n   * @return {Emitter}\r\n   */\r\n\r\n  Emitter.prototype.emit = function(event){\r\n    this._callbacks = this._callbacks || {};\r\n    var args = [].slice.call(arguments, 1)\r\n      , callbacks = this._callbacks[event];\r\n\r\n    if (callbacks) {\r\n      callbacks = callbacks.slice(0);\r\n      for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n        callbacks[i].apply(this, args);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Return array of callbacks for `event`.\r\n   *\r\n   * @param {String} event\r\n   * @return {Array}\r\n   * @api public\r\n   */\r\n\r\n  Emitter.prototype.listeners = function(event){\r\n    this._callbacks = this._callbacks || {};\r\n    return this._callbacks[event] || [];\r\n  };\r\n\r\n  /**\r\n   * Check if this emitter has `event` handlers.\r\n   *\r\n   * @param {String} event\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  Emitter.prototype.hasListeners = function(event){\r\n    return !! this.listeners(event).length;\r\n  };\r\n\r\n  if(typeof(window) != \"undefined\") {\r\n    window.EventEmitter = Emitter;\r\n  }\r\n\r\n})();\r\n\r\n(function (exports, ByteArray, global) {\r\n  var Protocol = exports;\r\n\r\n  var PKG_HEAD_BYTES = 4;\r\n  var MSG_FLAG_BYTES = 1;\r\n  var MSG_ROUTE_CODE_BYTES = 2;\r\n  var MSG_ID_MAX_BYTES = 5;\r\n  var MSG_ROUTE_LEN_BYTES = 1;\r\n\r\n  var MSG_ROUTE_CODE_MAX = 0xffff;\r\n\r\n  var MSG_COMPRESS_ROUTE_MASK = 0x1;\r\n  var MSG_TYPE_MASK = 0x7;\r\n\r\n  var Package = Protocol.Package = {};\r\n  var Message = Protocol.Message = {};\r\n\r\n  Package.TYPE_HANDSHAKE = 1;\r\n  Package.TYPE_HANDSHAKE_ACK = 2;\r\n  Package.TYPE_HEARTBEAT = 3;\r\n  Package.TYPE_DATA = 4;\r\n  Package.TYPE_KICK = 5;\r\n\r\n  Message.TYPE_REQUEST = 0;\r\n  Message.TYPE_NOTIFY = 1;\r\n  Message.TYPE_RESPONSE = 2;\r\n  Message.TYPE_PUSH = 3;\r\n\r\n  /**\r\n   * pomele client encode\r\n   * id message id;\r\n   * route message route\r\n   * msg message body\r\n   * socketio current support string\r\n   */\r\n  Protocol.strencode = function(str) {\r\n    var byteArray = new ByteArray(str.length * 3);\r\n    var offset = 0;\r\n    for(var i = 0; i < str.length; i++){\r\n      var charCode = str.charCodeAt(i);\r\n      var codes = null;\r\n      if(charCode <= 0x7f){\r\n        codes = [charCode];\r\n      }else if(charCode <= 0x7ff){\r\n        codes = [0xc0|(charCode>>6), 0x80|(charCode & 0x3f)];\r\n      }else{\r\n        codes = [0xe0|(charCode>>12), 0x80|((charCode & 0xfc0)>>6), 0x80|(charCode & 0x3f)];\r\n      }\r\n      for(var j = 0; j < codes.length; j++){\r\n        byteArray[offset] = codes[j];\r\n        ++offset;\r\n      }\r\n    }\r\n    var _buffer = new ByteArray(offset);\r\n    copyArray(_buffer, 0, byteArray, 0, offset);\r\n    return _buffer;\r\n  };\r\n\r\n  /**\r\n   * client decode\r\n   * msg String data\r\n   * return Message Object\r\n   */\r\n  Protocol.strdecode = function(buffer) {\r\n    var bytes = new ByteArray(buffer);\r\n    var array = [];\r\n    var offset = 0;\r\n    var charCode = 0;\r\n    var end = bytes.length;\r\n    while(offset < end){\r\n      if(bytes[offset] < 128){\r\n        charCode = bytes[offset];\r\n        offset += 1;\r\n      }else if(bytes[offset] < 224){\r\n        charCode = ((bytes[offset] & 0x3f)<<6) + (bytes[offset+1] & 0x3f);\r\n        offset += 2;\r\n      }else{\r\n        charCode = ((bytes[offset] & 0x0f)<<12) + ((bytes[offset+1] & 0x3f)<<6) + (bytes[offset+2] & 0x3f);\r\n        offset += 3;\r\n      }\r\n      array.push(charCode);\r\n    }\r\n    return String.fromCharCode.apply(null, array);\r\n  };\r\n\r\n  /**\r\n   * Package protocol encode.\r\n   *\r\n   * Pomelo package format:\r\n   * +------+-------------+------------------+\r\n   * | type | body length |       body       |\r\n   * +------+-------------+------------------+\r\n   *\r\n   * Head: 4bytes\r\n   *   0: package type,\r\n   *      1 - handshake,\r\n   *      2 - handshake ack,\r\n   *      3 - heartbeat,\r\n   *      4 - data\r\n   *      5 - kick\r\n   *   1 - 3: big-endian body length\r\n   * Body: body length bytes\r\n   *\r\n   * @param  {Number}    type   package type\r\n   * @param  {ByteArray} body   body content in bytes\r\n   * @return {ByteArray}        new byte array that contains encode result\r\n   */\r\n  Package.encode = function(type, body){\r\n    var length = body ? body.length : 0;\r\n    var buffer = new ByteArray(PKG_HEAD_BYTES + length);\r\n    var index = 0;\r\n    buffer[index++] = type & 0xff;\r\n    buffer[index++] = (length >> 16) & 0xff;\r\n    buffer[index++] = (length >> 8) & 0xff;\r\n    buffer[index++] = length & 0xff;\r\n    if(body) {\r\n      copyArray(buffer, index, body, 0, length);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  /**\r\n   * Package protocol decode.\r\n   * See encode for package format.\r\n   *\r\n   * @param  {ByteArray} buffer byte array containing package content\r\n   * @return {Object}           {type: package type, buffer: body byte array}\r\n   */\r\n  Package.decode = function(buffer){\r\n    var offset = 0;\r\n    var bytes = new ByteArray(buffer);\r\n    var length = 0;\r\n    var rs = [];\r\n    while(offset < bytes.length) {\r\n      var type = bytes[offset++];\r\n      length = ((bytes[offset++]) << 16 | (bytes[offset++]) << 8 | bytes[offset++]) >>> 0;\r\n      var body = length ? new ByteArray(length) : null;\r\n      copyArray(body, 0, bytes, offset, length);\r\n      offset += length;\r\n      rs.push({'type': type, 'body': body});\r\n    }\r\n    return rs.length === 1 ? rs[0]: rs;\r\n  };\r\n\r\n  /**\r\n   * Message protocol encode.\r\n   *\r\n   * @param  {Number} id            message id\r\n   * @param  {Number} type          message type\r\n   * @param  {Number} compressRoute whether compress route\r\n   * @param  {Number|String} route  route code or route string\r\n   * @param  {Buffer} msg           message body bytes\r\n   * @return {Buffer}               encode result\r\n   */\r\n  Message.encode = function(id, type, compressRoute, route, msg){\r\n    // caculate message max length\r\n    var idBytes = msgHasId(type) ? caculateMsgIdBytes(id) : 0;\r\n    var msgLen = MSG_FLAG_BYTES + idBytes;\r\n\r\n    if(msgHasRoute(type)) {\r\n      if(compressRoute) {\r\n        if(typeof route !== 'number'){\r\n          throw new Error('error flag for number route!');\r\n        }\r\n        msgLen += MSG_ROUTE_CODE_BYTES;\r\n      } else {\r\n        msgLen += MSG_ROUTE_LEN_BYTES;\r\n        if(route) {\r\n          route = Protocol.strencode(route);\r\n          if(route.length>255) {\r\n            throw new Error('route maxlength is overflow');\r\n          }\r\n          msgLen += route.length;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(msg) {\r\n      msgLen += msg.length;\r\n    }\r\n\r\n    var buffer = new ByteArray(msgLen);\r\n    var offset = 0;\r\n\r\n    // add flag\r\n    offset = encodeMsgFlag(type, compressRoute, buffer, offset);\r\n\r\n    // add message id\r\n    if(msgHasId(type)) {\r\n      offset = encodeMsgId(id, buffer, offset);\r\n    }\r\n\r\n    // add route\r\n    if(msgHasRoute(type)) {\r\n      offset = encodeMsgRoute(compressRoute, route, buffer, offset);\r\n    }\r\n\r\n    // add body\r\n    if(msg) {\r\n      offset = encodeMsgBody(msg, buffer, offset);\r\n    }\r\n\r\n    return buffer;\r\n  };\r\n\r\n  /**\r\n   * Message protocol decode.\r\n   *\r\n   * @param  {Buffer|Uint8Array} buffer message bytes\r\n   * @return {Object}            message object\r\n   */\r\n  Message.decode = function(buffer) {\r\n    var bytes =  new ByteArray(buffer);\r\n    var bytesLen = bytes.length || bytes.byteLength;\r\n    var offset = 0;\r\n    var id = 0;\r\n    var route = null;\r\n\r\n    // parse flag\r\n    var flag = bytes[offset++];\r\n    var compressRoute = flag & MSG_COMPRESS_ROUTE_MASK;\r\n    var type = (flag >> 1) & MSG_TYPE_MASK;\r\n\r\n    // parse id\r\n    if(msgHasId(type)) {\r\n      var m = parseInt(bytes[offset]);\r\n      var i = 0;\r\n      do{\r\n        var m = parseInt(bytes[offset]);\r\n        id = id + ((m & 0x7f) * Math.pow(2,(7*i)));\r\n        offset++;\r\n        i++;\r\n      }while(m >= 128);\r\n    }\r\n\r\n    // parse route\r\n    if(msgHasRoute(type)) {\r\n      if(compressRoute) {\r\n        route = (bytes[offset++]) << 8 | bytes[offset++];\r\n      } else {\r\n        var routeLen = bytes[offset++];\r\n        if(routeLen) {\r\n          route = new ByteArray(routeLen);\r\n          copyArray(route, 0, bytes, offset, routeLen);\r\n          route = Protocol.strdecode(route);\r\n        } else {\r\n          route = '';\r\n        }\r\n        offset += routeLen;\r\n      }\r\n    }\r\n\r\n    // parse body\r\n    var bodyLen = bytesLen - offset;\r\n    var body = new ByteArray(bodyLen);\r\n\r\n    copyArray(body, 0, bytes, offset, bodyLen);\r\n\r\n    return {'id': id, 'type': type, 'compressRoute': compressRoute,\r\n            'route': route, 'body': body};\r\n  };\r\n\r\n  var copyArray = function(dest, doffset, src, soffset, length) {\r\n    if('function' === typeof src.copy) {\r\n      // Buffer\r\n      src.copy(dest, doffset, soffset, soffset + length);\r\n    } else {\r\n      // Uint8Array\r\n      for(var index=0; index<length; index++){\r\n        dest[doffset++] = src[soffset++];\r\n      }\r\n    }\r\n  };\r\n\r\n  var msgHasId = function(type) {\r\n    return type === Message.TYPE_REQUEST || type === Message.TYPE_RESPONSE;\r\n  };\r\n\r\n  var msgHasRoute = function(type) {\r\n    return type === Message.TYPE_REQUEST || type === Message.TYPE_NOTIFY ||\r\n           type === Message.TYPE_PUSH;\r\n  };\r\n\r\n  var caculateMsgIdBytes = function(id) {\r\n    var len = 0;\r\n    do {\r\n      len += 1;\r\n      id >>= 7;\r\n    } while(id > 0);\r\n    return len;\r\n  };\r\n\r\n  var encodeMsgFlag = function(type, compressRoute, buffer, offset) {\r\n    if(type !== Message.TYPE_REQUEST && type !== Message.TYPE_NOTIFY &&\r\n       type !== Message.TYPE_RESPONSE && type !== Message.TYPE_PUSH) {\r\n      throw new Error('unkonw message type: ' + type);\r\n    }\r\n\r\n    buffer[offset] = (type << 1) | (compressRoute ? 1 : 0);\r\n\r\n    return offset + MSG_FLAG_BYTES;\r\n  };\r\n\r\n  var encodeMsgId = function(id, buffer, offset) {\r\n    do{\r\n      var tmp = id % 128;\r\n      var next = Math.floor(id/128);\r\n\r\n      if(next !== 0){\r\n        tmp = tmp + 128;\r\n      }\r\n      buffer[offset++] = tmp;\r\n\r\n      id = next;\r\n    } while(id !== 0);\r\n\r\n    return offset;\r\n  };\r\n\r\n  var encodeMsgRoute = function(compressRoute, route, buffer, offset) {\r\n    if (compressRoute) {\r\n      if(route > MSG_ROUTE_CODE_MAX){\r\n        throw new Error('route number is overflow');\r\n      }\r\n\r\n      buffer[offset++] = (route >> 8) & 0xff;\r\n      buffer[offset++] = route & 0xff;\r\n    } else {\r\n      if(route) {\r\n        buffer[offset++] = route.length & 0xff;\r\n        copyArray(buffer, offset, route, 0, route.length);\r\n        offset += route.length;\r\n      } else {\r\n        buffer[offset++] = 0;\r\n      }\r\n    }\r\n\r\n    return offset;\r\n  };\r\n\r\n  var encodeMsgBody = function(msg, buffer, offset) {\r\n    copyArray(buffer, offset, msg, 0, msg.length);\r\n    return offset + msg.length;\r\n  };\r\n\r\n  // module.exports = Protocol;\r\n  if(typeof(window) != \"undefined\") {\r\n    window.Protocol = Protocol;\r\n  }\r\n})(typeof(window)==\"undefined\" ? module.exports : ({}),typeof(window)==\"undefined\"  ? Buffer : Uint8Array, this);\r\n\r\n/* ProtocolBuffer client 0.1.0*/\r\n\r\n/**\r\n * pomelo-protobuf\r\n * @author <zhang0935@gmail.com>\r\n */\r\n\r\n/**\r\n * Protocol buffer root\r\n * In browser, it will be window.protbuf\r\n */\r\n(function (exports, global){\r\n  var Protobuf = exports;\r\n\r\n  Protobuf.init = function(opts){\r\n    //On the serverside, use serverProtos to encode messages send to client\r\n    Protobuf.encoder.init(opts.encoderProtos);\r\n\r\n    //On the serverside, user clientProtos to decode messages receive from clients\r\n    Protobuf.decoder.init(opts.decoderProtos);\r\n  };\r\n\r\n  Protobuf.encode = function(key, msg){\r\n    return Protobuf.encoder.encode(key, msg);\r\n  };\r\n\r\n  Protobuf.decode = function(key, msg){\r\n    return Protobuf.decoder.decode(key, msg);\r\n  };\r\n\r\n  // exports to support for components\r\n  // module.exports = Protobuf;\r\n  if(typeof(window) != \"undefined\") {\r\n    window.protobuf = Protobuf;\r\n  }\r\n  \r\n})(typeof(window) == \"undefined\" ? module.exports : ({}), this);\r\n\r\n/**\r\n * constants\r\n */\r\n(function (exports, global){\r\n  var constants = exports.constants = {};\r\n\r\n  constants.TYPES = {\r\n    uInt32 : 0,\r\n    sInt32 : 0,\r\n    int32 : 0,\r\n    double : 1,\r\n    string : 2,\r\n    message : 2,\r\n    float : 5\r\n  };\r\n\r\n})('undefined' !== typeof protobuf ? protobuf : module.exports, this);\r\n\r\n/**\r\n * util module\r\n */\r\n(function (exports, global){\r\n\r\n  var Util = exports.util = {};\r\n\r\n  Util.isSimpleType = function(type){\r\n    return ( type === 'uInt32' ||\r\n             type === 'sInt32' ||\r\n             type === 'int32'  ||\r\n             type === 'uInt64' ||\r\n             type === 'sInt64' ||\r\n             type === 'float'  ||\r\n             type === 'double' );\r\n  };\r\n\r\n})('undefined' !== typeof protobuf ? protobuf : module.exports, this);\r\n\r\n/**\r\n * codec module\r\n */\r\n(function (exports, global){\r\n\r\n  var Codec = exports.codec = {};\r\n\r\n  var buffer = new ArrayBuffer(8);\r\n  var float32Array = new Float32Array(buffer);\r\n  var float64Array = new Float64Array(buffer);\r\n  var uInt8Array = new Uint8Array(buffer);\r\n\r\n  Codec.encodeUInt32 = function(n){\r\n    var n = parseInt(n);\r\n    if(isNaN(n) || n < 0){\r\n      return null;\r\n    }\r\n\r\n    var result = [];\r\n    do{\r\n      var tmp = n % 128;\r\n      var next = Math.floor(n/128);\r\n\r\n      if(next !== 0){\r\n        tmp = tmp + 128;\r\n      }\r\n      result.push(tmp);\r\n      n = next;\r\n    }while(n !== 0);\r\n\r\n    return result;\r\n  };\r\n\r\n  Codec.encodeSInt32 = function(n){\r\n    var n = parseInt(n);\r\n    if(isNaN(n)){\r\n      return null;\r\n    }\r\n    n = n<0?(Math.abs(n)*2-1):n*2;\r\n\r\n    return Codec.encodeUInt32(n);\r\n  };\r\n\r\n  Codec.decodeUInt32 = function(bytes){\r\n    var n = 0;\r\n\r\n    for(var i = 0; i < bytes.length; i++){\r\n      var m = parseInt(bytes[i]);\r\n      n = n + ((m & 0x7f) * Math.pow(2,(7*i)));\r\n      if(m < 128){\r\n        return n;\r\n      }\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n  Codec.decodeSInt32 = function(bytes){\r\n    var n = this.decodeUInt32(bytes);\r\n    var flag = ((n%2) === 1)?-1:1;\r\n\r\n    n = ((n%2 + n)/2)*flag;\r\n\r\n    return n;\r\n  };\r\n\r\n  Codec.encodeFloat = function(float){\r\n    float32Array[0] = float;\r\n    return uInt8Array;\r\n  };\r\n\r\n  Codec.decodeFloat = function(bytes, offset){\r\n    if(!bytes || bytes.length < (offset + 4)){\r\n      return null;\r\n    }\r\n\r\n    for(var i = 0; i < 4; i++){\r\n      uInt8Array[i] = bytes[offset + i];\r\n    }\r\n\r\n    return float32Array[0];\r\n  };\r\n\r\n  Codec.encodeDouble = function(double){\r\n    float64Array[0] = double;\r\n    return uInt8Array.subarray(0, 8);\r\n  };\r\n\r\n  Codec.decodeDouble = function(bytes, offset){\r\n    if(!bytes || bytes.length < (offset + 8)){\r\n      return null;\r\n    }\r\n\r\n    for(var i = 0; i < 8; i++){\r\n      uInt8Array[i] = bytes[offset + i];\r\n    }\r\n\r\n    return float64Array[0];\r\n  };\r\n\r\n  Codec.encodeStr = function(bytes, offset, str){\r\n    for(var i = 0; i < str.length; i++){\r\n      var code = str.charCodeAt(i);\r\n      var codes = encode2UTF8(code);\r\n\r\n      for(var j = 0; j < codes.length; j++){\r\n        bytes[offset] = codes[j];\r\n        offset++;\r\n      }\r\n    }\r\n\r\n    return offset;\r\n  };\r\n\r\n  /**\r\n   * Decode string from utf8 bytes\r\n   */\r\n  Codec.decodeStr = function(bytes, offset, length){\r\n    var array = [];\r\n    var end = offset + length;\r\n\r\n    while(offset < end){\r\n      var code = 0;\r\n\r\n      if(bytes[offset] < 128){\r\n        code = bytes[offset];\r\n\r\n        offset += 1;\r\n      }else if(bytes[offset] < 224){\r\n        code = ((bytes[offset] & 0x3f)<<6) + (bytes[offset+1] & 0x3f);\r\n        offset += 2;\r\n      }else{\r\n        code = ((bytes[offset] & 0x0f)<<12) + ((bytes[offset+1] & 0x3f)<<6) + (bytes[offset+2] & 0x3f);\r\n        offset += 3;\r\n      }\r\n\r\n      array.push(code);\r\n\r\n    }\r\n\r\n    var str = '';\r\n    for(var i = 0; i < array.length;){\r\n      str += String.fromCharCode.apply(null, array.slice(i, i + 10000));\r\n      i += 10000;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n  /**\r\n   * Return the byte length of the str use utf8\r\n   */\r\n  Codec.byteLength = function(str){\r\n    if(typeof(str) !== 'string'){\r\n      return -1;\r\n    }\r\n\r\n    var length = 0;\r\n\r\n    for(var i = 0; i < str.length; i++){\r\n      var code = str.charCodeAt(i);\r\n      length += codeLength(code);\r\n    }\r\n\r\n    return length;\r\n  };\r\n\r\n  /**\r\n   * Encode a unicode16 char code to utf8 bytes\r\n   */\r\n  function encode2UTF8(charCode){\r\n    if(charCode <= 0x7f){\r\n      return [charCode];\r\n    }else if(charCode <= 0x7ff){\r\n      return [0xc0|(charCode>>6), 0x80|(charCode & 0x3f)];\r\n    }else{\r\n      return [0xe0|(charCode>>12), 0x80|((charCode & 0xfc0)>>6), 0x80|(charCode & 0x3f)];\r\n    }\r\n  }\r\n\r\n  function codeLength(code){\r\n    if(code <= 0x7f){\r\n      return 1;\r\n    }else if(code <= 0x7ff){\r\n      return 2;\r\n    }else{\r\n      return 3;\r\n    }\r\n  }\r\n})('undefined' !== typeof protobuf ? protobuf : module.exports, this);\r\n\r\n/**\r\n * encoder module\r\n */\r\n(function (exports, global){\r\n\r\n  var protobuf = exports;\r\n  var MsgEncoder = exports.encoder = {};\r\n\r\n  var codec = protobuf.codec;\r\n  var constant = protobuf.constants;\r\n  var util = protobuf.util;\r\n\r\n  MsgEncoder.init = function(protos){\r\n    this.protos = protos || {};\r\n  };\r\n\r\n  MsgEncoder.encode = function(route, msg){\r\n    //Get protos from protos map use the route as key\r\n    var protos = this.protos[route];\r\n\r\n    //Check msg\r\n    if(!checkMsg(msg, protos)){\r\n      return null;\r\n    }\r\n\r\n    //Set the length of the buffer 2 times bigger to prevent overflow\r\n    var length = codec.byteLength(JSON.stringify(msg));\r\n\r\n    //Init buffer and offset\r\n    var buffer = new ArrayBuffer(length);\r\n    var uInt8Array = new Uint8Array(buffer);\r\n    var offset = 0;\r\n\r\n    if(!!protos){\r\n      offset = encodeMsg(uInt8Array, offset, protos, msg);\r\n      if(offset > 0){\r\n        return uInt8Array.subarray(0, offset);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Check if the msg follow the defination in the protos\r\n   */\r\n  function checkMsg(msg, protos){\r\n    if(!protos){\r\n      return false;\r\n    }\r\n\r\n    for(var name in protos){\r\n      var proto = protos[name];\r\n\r\n      //All required element must exist\r\n      switch(proto.option){\r\n        case 'required' :\r\n          if(typeof(msg[name]) === 'undefined'){\r\n            console.warn('no property exist for required! name: %j, proto: %j, msg: %j', name, proto, msg);\r\n            return false;\r\n          }\r\n        case 'optional' :\r\n          if(typeof(msg[name]) !== 'undefined'){\r\n            var message = protos.__messages[proto.type] || MsgEncoder.protos['message ' + proto.type];\r\n            if(!!message && !checkMsg(msg[name], message)){\r\n              console.warn('inner proto error! name: %j, proto: %j, msg: %j', name, proto, msg);\r\n              return false;\r\n            }\r\n          }\r\n        break;\r\n        case 'repeated' :\r\n          //Check nest message in repeated elements\r\n          var message = protos.__messages[proto.type] || MsgEncoder.protos['message ' + proto.type];\r\n          if(!!msg[name] && !!message){\r\n            for(var i = 0; i < msg[name].length; i++){\r\n              if(!checkMsg(msg[name][i], message)){\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n        break;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function encodeMsg(buffer, offset, protos, msg){\r\n    for(var name in msg){\r\n      if(!!protos[name]){\r\n        var proto = protos[name];\r\n\r\n        switch(proto.option){\r\n          case 'required' :\r\n          case 'optional' :\r\n            offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\r\n            offset = encodeProp(msg[name], proto.type, offset, buffer, protos);\r\n          break;\r\n          case 'repeated' :\r\n            if(msg[name].length > 0){\r\n              offset = encodeArray(msg[name], proto, offset, buffer, protos);\r\n            }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  function encodeProp(value, type, offset, buffer, protos){\r\n    switch(type){\r\n      case 'uInt32':\r\n        offset = writeBytes(buffer, offset, codec.encodeUInt32(value));\r\n      break;\r\n      case 'int32' :\r\n      case 'sInt32':\r\n        offset = writeBytes(buffer, offset, codec.encodeSInt32(value));\r\n      break;\r\n      case 'float':\r\n        writeBytes(buffer, offset, codec.encodeFloat(value));\r\n        offset += 4;\r\n      break;\r\n      case 'double':\r\n        writeBytes(buffer, offset, codec.encodeDouble(value));\r\n        offset += 8;\r\n      break;\r\n      case 'string':\r\n        var length = codec.byteLength(value);\r\n\r\n        //Encode length\r\n        offset = writeBytes(buffer, offset, codec.encodeUInt32(length));\r\n        //write string\r\n        codec.encodeStr(buffer, offset, value);\r\n        offset += length;\r\n      break;\r\n      default :\r\n        var message = protos.__messages[type] || MsgEncoder.protos['message ' + type];\r\n        if(!!message){\r\n          //Use a tmp buffer to build an internal msg\r\n          var tmpBuffer = new ArrayBuffer(codec.byteLength(JSON.stringify(value))*2);\r\n          var length = 0;\r\n\r\n          length = encodeMsg(tmpBuffer, length, message, value);\r\n          //Encode length\r\n          offset = writeBytes(buffer, offset, codec.encodeUInt32(length));\r\n          //contact the object\r\n          for(var i = 0; i < length; i++){\r\n            buffer[offset] = tmpBuffer[i];\r\n            offset++;\r\n          }\r\n        }\r\n      break;\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Encode reapeated properties, simple msg and object are decode differented\r\n   */\r\n  function encodeArray(array, proto, offset, buffer, protos){\r\n    var i = 0;\r\n\r\n    if(util.isSimpleType(proto.type)){\r\n      offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\r\n      offset = writeBytes(buffer, offset, codec.encodeUInt32(array.length));\r\n      for(i = 0; i < array.length; i++){\r\n        offset = encodeProp(array[i], proto.type, offset, buffer);\r\n      }\r\n    }else{\r\n      for(i = 0; i < array.length; i++){\r\n        offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\r\n        offset = encodeProp(array[i], proto.type, offset, buffer, protos);\r\n      }\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  function writeBytes(buffer, offset, bytes){\r\n    for(var i = 0; i < bytes.length; i++, offset++){\r\n      buffer[offset] = bytes[i];\r\n    }\r\n\r\n    return offset;\r\n  }\r\n\r\n  function encodeTag(type, tag){\r\n    var value = constant.TYPES[type]||2;\r\n\r\n    return codec.encodeUInt32((tag<<3)|value);\r\n  }\r\n})('undefined' !== typeof protobuf ? protobuf : module.exports, this);\r\n\r\n/**\r\n * decoder module\r\n */\r\n(function (exports, global){\r\n  var protobuf = exports;\r\n  var MsgDecoder = exports.decoder = {};\r\n\r\n  var codec = protobuf.codec;\r\n  var util = protobuf.util;\r\n\r\n  var buffer;\r\n  var offset = 0;\r\n\r\n  MsgDecoder.init = function(protos){\r\n    this.protos = protos || {};\r\n  };\r\n\r\n  MsgDecoder.setProtos = function(protos){\r\n    if(!!protos){\r\n      this.protos = protos;\r\n    }\r\n  };\r\n\r\n  MsgDecoder.decode = function(route, buf){\r\n    var protos = this.protos[route];\r\n\r\n    buffer = buf;\r\n    offset = 0;\r\n\r\n    if(!!protos){\r\n      return decodeMsg({}, protos, buffer.length);\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  function decodeMsg(msg, protos, length){\r\n    while(offset<length){\r\n      var head = getHead();\r\n      var type = head.type;\r\n      var tag = head.tag;\r\n      var name = protos.__tags[tag];\r\n\r\n      switch(protos[name].option){\r\n        case 'optional' :\r\n        case 'required' :\r\n          msg[name] = decodeProp(protos[name].type, protos);\r\n        break;\r\n        case 'repeated' :\r\n          if(!msg[name]){\r\n            msg[name] = [];\r\n          }\r\n          decodeArray(msg[name], protos[name].type, protos);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  }\r\n\r\n  /**\r\n   * Test if the given msg is finished\r\n   */\r\n  function isFinish(msg, protos){\r\n    return (!protos.__tags[peekHead().tag]);\r\n  }\r\n  /**\r\n   * Get property head from protobuf\r\n   */\r\n  function getHead(){\r\n    var tag = codec.decodeUInt32(getBytes());\r\n\r\n    return {\r\n      type : tag&0x7,\r\n      tag : tag>>3\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get tag head without move the offset\r\n   */\r\n  function peekHead(){\r\n    var tag = codec.decodeUInt32(peekBytes());\r\n\r\n    return {\r\n      type : tag&0x7,\r\n      tag : tag>>3\r\n    };\r\n  }\r\n\r\n  function decodeProp(type, protos){\r\n    switch(type){\r\n      case 'uInt32':\r\n        return codec.decodeUInt32(getBytes());\r\n      case 'int32' :\r\n      case 'sInt32' :\r\n        return codec.decodeSInt32(getBytes());\r\n      case 'float' :\r\n        var float = codec.decodeFloat(buffer, offset);\r\n        offset += 4;\r\n        return float;\r\n      case 'double' :\r\n        var double = codec.decodeDouble(buffer, offset);\r\n        offset += 8;\r\n        return double;\r\n      case 'string' :\r\n        var length = codec.decodeUInt32(getBytes());\r\n\r\n        var str =  codec.decodeStr(buffer, offset, length);\r\n        offset += length;\r\n\r\n        return str;\r\n      default :\r\n        var message = protos && (protos.__messages[type] || MsgDecoder.protos['message ' + type]);\r\n        if(!!message){\r\n          var length = codec.decodeUInt32(getBytes());\r\n          var msg = {};\r\n          decodeMsg(msg, message, offset+length);\r\n          return msg;\r\n        }\r\n      break;\r\n    }\r\n  }\r\n\r\n  function decodeArray(array, type, protos){\r\n    if(util.isSimpleType(type)){\r\n      var length = codec.decodeUInt32(getBytes());\r\n\r\n      for(var i = 0; i < length; i++){\r\n        array.push(decodeProp(type));\r\n      }\r\n    }else{\r\n      array.push(decodeProp(type, protos));\r\n    }\r\n  }\r\n\r\n  function getBytes(flag){\r\n    var bytes = [];\r\n    var pos = offset;\r\n    flag = flag || false;\r\n\r\n    var b;\r\n\r\n    do{\r\n      b = buffer[pos];\r\n      bytes.push(b);\r\n      pos++;\r\n    }while(b >= 128);\r\n\r\n    if(!flag){\r\n      offset = pos;\r\n    }\r\n    return bytes;\r\n  }\r\n\r\n  function peekBytes(){\r\n    return getBytes(true);\r\n  }\r\n\r\n})('undefined' !== typeof protobuf ? protobuf : module.exports, this);\r\n\r\ncc.Pomelo = function() {\r\n  var JS_WS_CLIENT_TYPE = 'js-websocket';\r\n  var JS_WS_CLIENT_VERSION = '0.0.1';\r\n\r\n  var Protocol = window.Protocol;\r\n  var protobuf = window.protobuf;\r\n  var decodeIO_protobuf = window.decodeIO_protobuf;\r\n  var decodeIO_encoder = null;\r\n  var decodeIO_decoder = null;\r\n  var Package = Protocol.Package;\r\n  var Message = Protocol.Message;\r\n  var EventEmitter = window.EventEmitter;\r\n  var rsa = window.rsa;\r\n\r\n  if(typeof(window) != \"undefined\" && typeof(sys) != 'undefined' && sys.localStorage) {\r\n    window.localStorage = sys.localStorage;\r\n  }\r\n  \r\n  var RES_OK = 200;\r\n  var RES_FAIL = 500;\r\n  var RES_OLD_CLIENT = 501;\r\n\r\n  if (typeof Object.create !== 'function') {\r\n    Object.create = function (o) {\r\n      function F() {}\r\n      F.prototype = o;\r\n      return new F();\r\n    };\r\n  }\r\n\r\n  var root = window;\r\n  var pomelo = Object.create(EventEmitter.prototype); // object extend from object\r\n  // root.pomelo = pomelo;\r\n  var socket = null;\r\n  var reqId = 0;\r\n  var callbacks = {};\r\n  var handlers = {};\r\n  //Map from request id to route\r\n  var routeMap = {};\r\n  var dict = {};    // route string to code\r\n  var abbrs = {};   // code to route string\r\n  var serverProtos = {};\r\n  var clientProtos = {};\r\n  var protoVersion = 0;\r\n\r\n  var heartbeatInterval = 0;\r\n  var heartbeatTimeout = 0;\r\n  var nextHeartbeatTimeout = 0;\r\n  var gapThreshold = 100;   // heartbeat gap threashold\r\n  var heartbeatId = null;\r\n  var heartbeatTimeoutId = null;\r\n  var handshakeCallback = null;\r\n\r\n  var decode = null;\r\n  var encode = null;\r\n\r\n  var reconnect = false;\r\n  var reconncetTimer = null;\r\n  var reconnectUrl = null;\r\n  var reconnectAttempts = 0;\r\n  var reconnectionDelay = 5000;\r\n  var DEFAULT_MAX_RECONNECT_ATTEMPTS = 10;\r\n  var useCrypto;\r\n\r\n  var handshakeBuffer = {\r\n    'sys': {\r\n      type: JS_WS_CLIENT_TYPE,\r\n      version: JS_WS_CLIENT_VERSION,\r\n      rsa: {}\r\n    },\r\n    'user': {\r\n    }\r\n  };\r\n\r\n  var initCallback = null;\r\n\r\n  pomelo.connect = function(url, cb) {\r\n    initCallback = cb;\r\n\r\n    encode = defaultEncode;\r\n    decode = defaultDecode;\r\n\r\n    if(false) {\r\n      useCrypto = true;\r\n      rsa.generate(1024, \"10001\");\r\n      var data = {\r\n        rsa_n: rsa.n.toString(16),\r\n        rsa_e: rsa.e\r\n      }\r\n      handshakeBuffer.sys.rsa = data;\r\n    }\r\n    connect(null, url, cb);\r\n  };\r\n\r\n  var defaultDecode = pomelo.decode = function(data) {\r\n    //probuff decode\r\n    var msg = Message.decode(data);\r\n\r\n    if(msg.id > 0){\r\n      msg.route = routeMap[msg.id];\r\n      delete routeMap[msg.id];\r\n      if(!msg.route){\r\n        return;\r\n      }\r\n    }\r\n\r\n    msg.body = deCompose(msg);\r\n    return msg;\r\n  };\r\n\r\n  var defaultEncode = pomelo.encode = function(reqId, route, msg) {\r\n    var type = reqId ? Message.TYPE_REQUEST : Message.TYPE_NOTIFY;\r\n\r\n    //compress message by protobuf\r\n    if(protobuf && clientProtos[route]) {\r\n      msg = protobuf.encode(route, msg);\r\n    } else if(decodeIO_encoder && decodeIO_encoder.lookup(route)) {\r\n      var Builder = decodeIO_encoder.build(route);\r\n      msg = new Builder(msg).encodeNB();\r\n    } else {\r\n      msg = Protocol.strencode(JSON.stringify(msg));\r\n    }\r\n\r\n    var compressRoute = 0;\r\n    if(dict && dict[route]) {\r\n      route = dict[route];\r\n      compressRoute = 1;\r\n    }\r\n\r\n    return Message.encode(reqId, type, compressRoute, route, msg);\r\n  };\r\n\r\n  var connect = function(params, url, cb) {\r\n    console.log('connect to ' + url);\r\n\r\n    var params = params || {};\r\n    var maxReconnectAttempts = DEFAULT_MAX_RECONNECT_ATTEMPTS;\r\n    reconnectUrl = url;\r\n    //Add protobuf version\r\n    if(window.localStorage && window.localStorage.getItem('protos') && protoVersion === 0) {\r\n      var protos = JSON.parse(window.localStorage.getItem('protos'));\r\n\r\n      protoVersion = protos.version || 0;\r\n      serverProtos = protos.server || {};\r\n      clientProtos = protos.client || {};\r\n\r\n      if(!!protobuf) {\r\n        protobuf.init({encoderProtos: clientProtos, decoderProtos: serverProtos});\r\n      } \r\n      if(!!decodeIO_protobuf) {\r\n        decodeIO_encoder = decodeIO_protobuf.loadJson(clientProtos);\r\n        decodeIO_decoder = decodeIO_protobuf.loadJson(serverProtos);\r\n      }\r\n    }\r\n    //Set protoversion\r\n    handshakeBuffer.sys.protoVersion = protoVersion;\r\n\r\n    var onopen = function(event) {\r\n      if(!!reconnect) {\r\n        pomelo.emit('reconnect');\r\n      }\r\n      pomelo.emit('onOpen',event);\r\n      reset();\r\n      var obj = Package.encode(Package.TYPE_HANDSHAKE, Protocol.strencode(JSON.stringify(handshakeBuffer)));\r\n      send(obj);\r\n    };\r\n    var onmessage = function(event) {\r\n      processPackage(Package.decode(event.data), cb);\r\n    };\r\n    var onerror = function(event) {\r\n      pomelo.emit('onerror', event);\r\n      socket.onmessage = null;\r\n      cc.error('onerror: ', event);\r\n    };\r\n    var onclose = function(event) {\r\n      cc.warn('socket close: ', event);\r\n      pomelo.emit('onclose', event);      \r\n      socket.onmessage = null;\r\n    };\r\n    socket = new WebSocket(url);\r\n    socket.binaryType = 'arraybuffer';\r\n    socket.onopen = onopen;\r\n    socket.onmessage = onmessage;\r\n    socket.onerror = onerror;\r\n    socket.onclose = onclose;\r\n  };\r\n\r\n  pomelo.log = function(){\r\n    cc.log('[pomelo] ',arguments);\r\n  }\r\n\r\n  pomelo.getNetState = function(){\r\n    if(socket){\r\n      return socket.readyState\r\n    }\r\n  }\r\n\r\n  //断开连接\r\n  pomelo.disconnect = function(cb) {\r\n    if(socket) {\r\n        if (socket.readyState == WebSocket.OPEN) {//打开的\r\n            if(socket.close) {\r\n              socket.close();\r\n              pomelo.log('断开网络！');\r\n            }\r\n        }\r\n        socket = null;\r\n    }\r\n\r\n    if(heartbeatId) {\r\n      clearTimeout(heartbeatId);\r\n      heartbeatId = null;\r\n    }\r\n    if(heartbeatTimeoutId) {\r\n      clearTimeout(heartbeatTimeoutId);\r\n      heartbeatTimeoutId = null;\r\n    }\r\n  };\r\n\r\n  var reset = function() {\r\n    reconnect = false;\r\n    reconnectionDelay = 1000 * 5;\r\n    reconnectAttempts = 0;\r\n    clearTimeout(reconncetTimer);\r\n  };\r\n\r\n  pomelo.websocket=function(){\r\n      return socket;\r\n  }\r\n\r\n  pomelo.clear = function(){\r\n    if (socket != null) {\r\n      socket.onopen = null;\r\n      socket.onmessage = null;\r\n      socket.onerror = null;\r\n      socket.onclose = null;\r\n    }\r\n  }\r\n\r\n  pomelo.request = function(route, msg, cb) {\r\n    if(arguments.length === 2 && typeof msg === 'function') {\r\n      cb = msg;\r\n      msg = {};\r\n    } else {\r\n      msg = msg || {};\r\n    }\r\n    route = route || msg.route;\r\n    if(!route) {\r\n      return;\r\n    }\r\n\r\n    reqId++;\r\n    sendMessage(reqId, route, msg);\r\n\r\n    callbacks[reqId] = cb;\r\n    routeMap[reqId] = route;\r\n  };\r\n\r\n  pomelo.notify = function(route, msg) {\r\n    msg = msg || {};\r\n    sendMessage(0, route, msg);\r\n  };\r\n\r\n  var sendMessage = function(reqId, route, msg) {\r\n    if(useCrypto) {\r\n      msg = JSON.stringify(msg);\r\n      var sig = rsa.signString(msg, \"sha256\");\r\n      msg = JSON.parse(msg);\r\n      msg['__crypto__'] = sig;\r\n    }\r\n\r\n    if(encode) {\r\n      msg = encode(reqId, route, msg);\r\n    }\r\n\r\n    var packet = Package.encode(Package.TYPE_DATA, msg);\r\n    send(packet);\r\n  };\r\n\r\n  var send = function(packet) {\r\n    if (socket !== null) {\r\n        socket.send(packet.buffer);\r\n    }\r\n  };\r\n\r\n  var handler = {};\r\n\r\n  pomelo.heartbeat = function(){\r\n    var obj = Package.encode(Package.TYPE_HEARTBEAT);\r\n    send(obj);\r\n  }\r\n\r\n  ///心跳相关\r\n  var heartbeat = function(data) {\r\n    pomelo.emit('heartbeat');//发送心跳\r\n  };\r\n\r\n  var heartbeatTimeoutCb = function() {\r\n\r\n  };\r\n\r\n  var handshake = function(data) {\r\n    data = JSON.parse(Protocol.strdecode(data));\r\n    if(data.code === RES_OLD_CLIENT) {\r\n      pomelo.emit('error', 'client version not fullfill');\r\n      return;\r\n    }\r\n\r\n    if(data.code !== RES_OK) {\r\n      pomelo.emit('error', 'handshake fail');\r\n      return;\r\n    }\r\n\r\n    handshakeInit(data);\r\n\r\n    var obj = Package.encode(Package.TYPE_HANDSHAKE_ACK);\r\n    send(obj);\r\n    pomelo.emit('handshake',data);\r\n    if(initCallback) {\r\n      initCallback(socket);\r\n    }\r\n  };\r\n\r\n  var onData = function(data) {\r\n    var msg = data;\r\n    if(decode) {\r\n      msg = decode(msg);\r\n    }\r\n    processMessage(pomelo, msg);\r\n  };\r\n\r\n  var onKick = function(data) {\r\n    data = JSON.parse(Protocol.strdecode(data));\r\n    pomelo.emit('onKick', data);\r\n  };\r\n\r\n  handlers[Package.TYPE_HANDSHAKE] = handshake;\r\n  handlers[Package.TYPE_HEARTBEAT] = heartbeat;\r\n  handlers[Package.TYPE_DATA] = onData;\r\n  handlers[Package.TYPE_KICK] = onKick;\r\n\r\n  var processPackage = function(msgs) {\r\n    if(Array.isArray(msgs)) {\r\n      for(var i=0; i<msgs.length; i++) {\r\n        var msg = msgs[i];\r\n        handlers[msg.type](msg.body);\r\n      }\r\n    } else {\r\n      handlers[msgs.type](msgs.body);\r\n    }\r\n  };\r\n\r\n  var processMessage = function(pomelo, msg) {\r\n    if(!msg.id) {\r\n      let time = new Date();\r\n      cc.log(`${time.getHours()}:${time.getMinutes()}:${time.getSeconds()} [pomelo]:收到消息:`,msg.route,msg.body);\r\n      // server push message\r\n      pomelo.emit(msg.route, msg.body);\r\n      return;\r\n    }\r\n\r\n    var cb = callbacks[msg.id];\r\n    let time = new Date();\r\n    cc.log(`${time.getHours()}:${time.getMinutes()}:${time.getSeconds()} [pomelo]:收到消息:`,msg.route,msg.body);\r\n    delete callbacks[msg.id];\r\n    if(typeof cb !== 'function') {\r\n      return;\r\n    }\r\n\r\n    cb(msg.body);\r\n    return;\r\n  };\r\n\r\n  var processMessageBatch = function(pomelo, msgs) {\r\n    for(var i=0, l=msgs.length; i<l; i++) {\r\n      processMessage(pomelo, msgs[i]);\r\n    }\r\n  };\r\n\r\n  var deCompose = function(msg) {\r\n    var route = msg.route;\r\n\r\n    //Decompose route from dict\r\n    if(msg.compressRoute) {\r\n      if(!abbrs[route]){\r\n        return {};\r\n      }\r\n\r\n      route = msg.route = abbrs[route];\r\n    }\r\n    if(protobuf && serverProtos[route]) {\r\n      return protobuf.decode(route, msg.body);\r\n    } else if(decodeIO_decoder && decodeIO_decoder.lookup(route)) {\r\n      return decodeIO_decoder.build(route).decode(msg.body);\r\n    } else {\r\n      return JSON.parse(Protocol.strdecode(msg.body));\r\n    }\r\n\r\n    return msg;\r\n  };\r\n\r\n  var handshakeInit = function(data) {\r\n    if(data.sys && data.sys.heartbeat) {\r\n      heartbeatInterval = data.sys.heartbeat * 1000;   // heartbeat interval\r\n      heartbeatTimeout = heartbeatInterval * 2;        // max heartbeat timeout\r\n    } else {\r\n      heartbeatInterval = 0;\r\n      heartbeatTimeout = 0;\r\n    }\r\n\r\n    initData(data);\r\n\r\n    if(typeof handshakeCallback === 'function') {\r\n      handshakeCallback(data.user);\r\n    }\r\n  };\r\n\r\n  //Initilize data used in pomelo client\r\n  var initData = function(data) {\r\n    if(!data || !data.sys) {\r\n      return;\r\n    }\r\n    dict = data.sys.dict;\r\n    var protos = data.sys.protos;\r\n\r\n    //Init compress dict\r\n    if(dict) {\r\n      dict = dict;\r\n      abbrs = {};\r\n\r\n      for(var route in dict) {\r\n        abbrs[dict[route]] = route;\r\n      }\r\n    }\r\n\r\n    //Init protobuf protos\r\n    if(protos) {\r\n      protoVersion = protos.version || 0;\r\n      serverProtos = protos.server || {};\r\n      clientProtos = protos.client || {};\r\n\r\n        //Save protobuf protos to localStorage\r\n        window.localStorage.setItem('protos', JSON.stringify(protos));\r\n\r\n        if(!!protobuf) {\r\n          protobuf.init({encoderProtos: protos.client, decoderProtos: protos.server});\r\n        }\r\n        if(!!decodeIO_protobuf) {\r\n          decodeIO_encoder = decodeIO_protobuf.loadJson(clientProtos);\r\n          decodeIO_decoder = decodeIO_protobuf.loadJson(serverProtos);\r\n        }\r\n      }\r\n    };\r\n    return pomelo;\r\n  };\r\nmodule.exports = cc.Pomelo;\r\nwindow.pomelo=new cc.Pomelo();\r\n\r\n\r\n\r\n\r\n","\r\n//对象池\r\nexport class Pool{\r\n\r\n    private _pool:cc.Node[];\r\n\r\n    constructor(private template:cc.Node,private comp?:string){\r\n        this._pool = [];\r\n    }\r\n\r\n    recycle(t:cc.Node){\r\n        if (t && this._pool.indexOf(t) == -1) {\r\n            t.removeFromParent(false);//移除不清理\r\n            let cp = this.comp ? t.getComponent(this.comp):null;\r\n            if (cp && cp.unuse) {\r\n                cp.unuse.apply(cp);\r\n            } \r\n            this._pool.push(t);\r\n        }\r\n    }\r\n\r\n    obtain(){\r\n        //获取对象\r\n        let last = this._pool.length - 1;\r\n        if (last<0) {\r\n            return this.instantiate();\r\n            //实例化\r\n        }else{//使用缓存\r\n            let obj = this._pool[last];\r\n            this._pool.length = last;\r\n            let cp = this.comp ? obj.getComponent(this.comp):null;\r\n            if (cp && cp.use) {\r\n                cp.use.apply(cp);\r\n            } \r\n            return obj;\r\n        }\r\n    }\r\n\r\n    private instantiate(){\r\n        let node = cc.instantiate(this.template);\r\n        let cp = this.comp ? node.getComponent(this.comp):null;\r\n        if (cp && cp.use) {\r\n            cp.use.apply(cp);\r\n        } \r\n        return node;\r\n    }\r\n\r\n\r\n    clear(){\r\n        let count = this._pool.length;\r\n        for (let i = 0; i < count; i++) {\r\n            let node = this._pool[i];\r\n            node.destroy();\r\n        }\r\n        this._pool.length = 0;\r\n    }\r\n\r\n\r\n}\r\n","export default class PromiseUtility{\r\n    private static genPromise(doFun){\r\n        let promise = new Promise(function(resolve, reject){\r\n            doFun(function(err, data){\r\n                if(err){\r\n                    reject(err)\r\n                }else{\r\n                    resolve(data)\r\n                }\r\n            })\r\n        });\r\n        return promise\r\n    }\r\n\r\n    private static getPromiseList(doFuns: Function[]): any[]{\r\n        let list: any[] = []\r\n        for (let index = 0; index < doFuns.length; index++) {\r\n            const element = doFuns[index];            \r\n            list.push(this.genPromise(element))\r\n        }\r\n        return list\r\n    }\r\n\r\n    static all(doFuns: Function[]){\r\n        let promiseList = this.getPromiseList(doFuns)\r\n        return Promise.all(promiseList)\r\n    }\r\n\r\n    static race(doFuns: Function[]){\r\n        let promiseList = this.getPromiseList(doFuns)\r\n        return Promise.race(promiseList)\r\n    }\r\n\r\n}","import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PublicRuleView extends ViewBase {\r\n\r\n    @property(cc.RichText)\r\n    ruleRichText: cc.RichText = null\r\n    @property(cc.Node)\r\n    closeBtnNode: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    leftToggleRoot: cc.Node = null\r\n    @property(cc.Node)\r\n    topToggleRoot: cc.Node = null\r\n\r\n    _leftCurrentSelect = 1\r\n    _topCurrentSelect = 1\r\n    _textArr: string[][] = [[]]\r\n    onLoad() {\r\n        this.closeBtnNode.on(\"click\", () => {\r\n            ModuleManager.instance.hideModule(\"PublicRule\")\r\n        })\r\n        let leftTabs = this.leftToggleRoot.children\r\n        for (let i = 0; i < leftTabs.length; i++) {\r\n            const tab = leftTabs[i]\r\n            tab.off(\"toggle\", this.onLeftTabClick, this)\r\n            tab.on(\"toggle\", this.onLeftTabClick, this)\r\n        }\r\n\r\n        let topTabs = this.topToggleRoot.children\r\n        for (let i = 0; i < topTabs.length; i++) {\r\n            const tab = topTabs[i]\r\n            tab.off(\"toggle\", this.onTopTabClick, this)\r\n            tab.on(\"toggle\", this.onTopTabClick, this)\r\n        }\r\n\r\n        // text\r\n        this._textArr.push([])\r\n        this._textArr[1][1] = \"1、斗地主是一种三人游戏，对局开始时通过叫地主决定\\n\" + \"阵营，阵营双方对战，先出完牌的一方获胜。\\n\" +\r\n            \" 2、地主拥有优先出牌权，玩家按逆时针方向跟牌，每位\\n\" + \"玩家可以选择用更大的牌组跟牌或不跟。\\n\"\r\n        this._textArr[1][2] = \"1、单牌：单张的牌（例如黑桃K）\\n\" +\r\n            \"2、对子：牌面数字相同的2张牌（例如黑桃K+红桃K）\\n\" +\r\n            \"3、三张：牌面数字相同的3张牌（例如黑桃K+红桃K+梅花\\n\" + \"K）\\n\" +\r\n            \"4、三带一：牌面数字相同的3张牌+1张单牌或对子（例如\\n\" + \"KKK+8 或 QQQ+44）\\n\" +\r\n            \"5、飞机：2个或更多的连续三张牌型（例如：333444 或 \\n\" + \"555666777）\\n\" +\r\n            \"6、飞机带翅膀：飞机+同数量的单牌 或 飞机+同数量的对\\n\" + \"子（例如：333444+78 或 444555+7788）\\n\" +\r\n            \"7、顺子：5张或以上的连续单牌，2不可以和其它牌组成顺\\n\" + \"子（例如78910J，3456789）\\n\" +\r\n            \"8、连对：3对或以上的连续对子牌型，2不可以和其它牌组\\n\" + \"成连对（例如334455，991010JJQQ）\\n\" +\r\n            \"9、四带二：牌面数字相同的4张牌+2张不同单牌或2个对子\\n\" + \"（例如KKKK+89，8888+KKAA）\\n\" +\r\n            \"10、炸弹：牌面数字相同的4张牌（例如KKKK，QQQQ，\\n\" + \"3333）\\n\" +\r\n            \"11、王炸：双王，即大小王，最大的牌\\n\"\r\n        this._textArr.push([])\r\n        this._textArr[2][1] = \"1、不洗牌玩法的牌型规则与经典玩法相同，但发牌方式\\n\" + \"不同。\\n\" +\r\n            \"2、在不洗牌玩法中，玩家打完一局后，所有的牌将不会\\n\" + \"洗牌，按一定顺序切牌后依次发给下一桌玩家。\\n\" +\r\n            \"3、玩法特点1：手牌牌型更加整齐。\\n\" +\r\n            \"4、玩法特点2：拿到炸弹的可能性更高。\\n\" +\r\n            \"5、玩法特点3：单局耗时更短，更刺激，更流畅！\\n\"\r\n        this._textArr[2][2] = \"1、同经典玩法\"\r\n    }\r\n\r\n    private onLeftTabClick(event: cc.Button) {\r\n        this._leftCurrentSelect = Number(event.node.name)\r\n        cc.log(\"点击了\", this._leftCurrentSelect)\r\n        this.ruleRichText.string = this._textArr[this._leftCurrentSelect][this._topCurrentSelect]\r\n    }\r\n\r\n    private onTopTabClick(event: cc.Button) {\r\n        this._topCurrentSelect = Number(event.node.name)\r\n        this.ruleRichText.string = this._textArr[this._leftCurrentSelect][this._topCurrentSelect]\r\n    }\r\n\r\n    showRule() {\r\n        this.ruleRichText.string = this._textArr[this._leftCurrentSelect][this._topCurrentSelect]//content\r\n    }\r\n\r\n}","import Module, { moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport PublicRuleView from \"./public_rule_view\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit('PublicRule')\r\nexport default class PublicRule extends Module<PublicRuleView, null> {\r\n\r\n    constructor() {\r\n        super();\r\n        this.windowPrefabResPath = 'package/pdk/module/Public_Rule';\r\n        this.viewType = PublicRuleView;\r\n        this.modelType = null;\r\n        this.needAnim = true\r\n        this.needViewMask = true\r\n    }\r\n\r\n    onShow() {\r\n        this.view.showRule()\r\n    }\r\n\r\n}","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\nconst { ccclass, menu, property } = cc._decorator;\r\nconst renderEngine = cc.renderer.renderEngine;\r\nconst renderer = renderEngine.renderer;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Rain')\r\nexport default class RainShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Rain\"\r\n    protected _needUpdate = true\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    uniform mat4 model;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        mat4 mvp;\r\n        mvp = viewProj * model;\r\n        vec4 pos = mvp * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    // Heartfelt - by Martijn Steinrucken aka BigWings - 2017\r\n    // countfrolic@gmail.com\r\n    // License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\r\n    \r\n    // I revisited the rain effect I did for another shader. This one is better in multiple ways:\r\n    // 1. The glass gets foggy.\r\n    // 2. Drops cut trails in the fog on the glass.\r\n    // 3. The amount of rain is adjustable (with Mouse.y)\r\n    \r\n    // To have full control over the rain, uncomment the HAS_HEART define \r\n    \r\n    // A video of the effect can be found here:\r\n    // https://www.youtube.com/watch?v=uiF5Tlw22PI&feature=youtu.be\r\n    \r\n    // Music - Alone In The Dark - Vadim Kiselev\r\n    // https://soundcloud.com/ahmed-gado-1/sad-piano-alone-in-the-dark\r\n    // Rain sounds:\r\n    // https://soundcloud.com/elirtmusic/sleeping-sound-rain-and-thunder-1-hours\r\n    \r\n    #define S(a, b, t) smoothstep(a, b, t)\r\n    //#define CHEAP_NORMALS\r\n    \r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    uniform vec3 iResolution;\r\n    uniform float time;\r\n    uniform vec2 texSize;\r\n    varying vec2 uv0;\r\n    \r\n    vec3 N13(float p) {\r\n        //  from DAVE HOSKINS\r\n       vec3 p3 = fract(vec3(p) * vec3(.1031,.11369,.13787));\r\n       p3 += dot(p3, p3.yzx + 19.19);\r\n       return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\r\n    }\r\n    \r\n    vec4 N14(float t) {\r\n        return fract(sin(t*vec4(123., 1024., 1456., 264.))*vec4(6547., 345., 8799., 1564.));\r\n    }\r\n    float N(float t) {\r\n        return fract(sin(t*12345.564)*7658.76);\r\n    }\r\n    \r\n    float Saw(float b, float t) {\r\n        return S(0., b, t)*S(1., b, t);\r\n    }\r\n    \r\n    vec2 DropLayer2(vec2 uv, float t) {\r\n        vec2 UV = uv;\r\n        \r\n        uv.y += t*0.75;\r\n        vec2 a = vec2(6., 1.);\r\n        vec2 grid = a*2.;\r\n        vec2 id = floor(uv*grid);\r\n        \r\n        float colShift = N(id.x); \r\n        uv.y += colShift;\r\n        \r\n        id = floor(uv*grid);\r\n        vec3 n = N13(id.x*35.2+id.y*2376.1);\r\n        vec2 st = fract(uv*grid)-vec2(.5, 0);\r\n        \r\n        float x = n.x-.5;\r\n        \r\n        float y = UV.y*20.;\r\n        float wiggle = sin(y+sin(y));\r\n        x += wiggle*(.5-abs(x))*(n.z-.5);\r\n        x *= .7;\r\n        float ti = fract(t+n.z);\r\n        y = (Saw(.85, ti)-.5)*.9+.5;\r\n        vec2 p = vec2(x, y);\r\n        \r\n        float d = length((st-p)*a.yx);\r\n        \r\n        float mainDrop = S(.4, .0, d);\r\n        \r\n        float r = sqrt(S(1., y, st.y));\r\n        float cd = abs(st.x-x);\r\n        float trail = S(.23*r, .15*r*r, cd);\r\n        float trailFront = S(-.02, .02, st.y-y);\r\n        trail *= trailFront*r*r;\r\n        \r\n        y = UV.y;\r\n        float trail2 = S(.2*r, .0, cd);\r\n        float droplets = max(0., (sin(y*(1.-y)*120.)-st.y))*trail2*trailFront*n.z;\r\n        y = fract(y*10.)+(st.y-.5);\r\n        float dd = length(st-vec2(x, y));\r\n        droplets = S(.3, 0., dd);\r\n        float m = mainDrop+droplets*r*trailFront;\r\n        \r\n        //m += st.x>a.y*.45 || st.y>a.x*.165 ? 1.2 : 0.;\r\n        return vec2(m, trail);\r\n    }\r\n    \r\n    float StaticDrops(vec2 uv, float t) {\r\n        uv *= 40.;\r\n        \r\n        vec2 id = floor(uv);\r\n        uv = fract(uv)-.5;\r\n        vec3 n = N13(id.x*107.45+id.y*3543.654);\r\n        vec2 p = (n.xy-.5)*.7;\r\n        float d = length(uv-p);\r\n        \r\n        float fade = Saw(.025, fract(t+n.z));\r\n        float c = S(.3, 0., d)*fract(n.z*10.)*fade;\r\n        return c;\r\n    }\r\n    \r\n    vec2 Drops(vec2 uv, float t, float l0, float l1, float l2) {\r\n        float s = StaticDrops(uv, t)*l0; \r\n        vec2 m1 = DropLayer2(uv, t)*l1;\r\n        vec2 m2 = DropLayer2(uv*1.85, t)*l2;\r\n        \r\n        float c = s+m1.x+m2.x;\r\n        c = S(.3, 1., c);\r\n        \r\n        return vec2(c, max(m1.y*l0, m2.y*l1));\r\n    }\r\n    \r\n    void main()\r\n    {\r\n        vec4 iMouse = vec4(0.0, 0.0, 0.0, 0.0);\r\n        vec2 fragCoord = vec2(uv0.x * texSize.x - 0.5 * texSize.x, 0.5 * texSize.y - uv0.y * texSize.y);\r\n    \r\n        vec2 uv = fragCoord.xy / iResolution.y;\r\n        vec2 UV = (fragCoord.xy+.5*iResolution.xy) / iResolution.xy;\r\n        vec3 M = iMouse.xyz/iResolution.xyz;\r\n        float T = time+M.x*2.;\r\n        \r\n        #ifdef HAS_HEART\r\n            T = mod(time, 102.);\r\n            T = mix(T, M.x*102., M.z>0.?1.:0.);\r\n        #endif\r\n        \r\n        float t = T*.2;\r\n        \r\n        float rainAmount = iMouse.z>0. ? M.y : sin(T*.05)*.3+.7;\r\n        \r\n        float maxBlur = mix(3., 6., rainAmount);\r\n        float minBlur = 2.;\r\n        \r\n        float story = 0.;\r\n        float heart = 0.;\r\n        \r\n        #ifdef HAS_HEART\r\n            story = S(0., 70., T);\r\n            \r\n            t = min(1., T/70.);\t\t\t\t\t\t// remap drop time so it goes slower when it freezes\r\n            t = 1.-t;\r\n            t = (1.-t*t)*70.;\r\n            \r\n            float zoom= mix(.3, 1.2, story);\t\t// slowly zoom out\r\n            uv *=zoom;\r\n            minBlur = 4.+S(.5, 1., story)*3.;\t\t// more opaque glass towards the end\r\n            maxBlur = 6.+S(.5, 1., story)*1.5;\r\n            \r\n            vec2 hv = uv-vec2(.0, -.1);\t\t\t\t// build heart\r\n            hv.x *= .5;\r\n            float s = S(110., 70., T);\t\t\t\t// heart gets smaller and fades towards the end\r\n            hv.y-=sqrt(abs(hv.x))*.5*s;\r\n            heart = length(hv);\r\n            heart = S(.4*s, .2*s, heart)*s;\r\n            rainAmount = heart;\t\t\t\t\t\t// the rain is where the heart is\r\n            \r\n            maxBlur-=heart;\t\t\t\t\t\t\t// inside the heart slighly less foggy\r\n            uv *= 1.5;\t\t\t\t\t\t\t\t// zoom out a bit more\r\n            t *= .25;\r\n        #else\r\n            float zoom = -cos(T*.2);\r\n            uv *= .7+zoom*.3;\r\n        #endif\r\n        UV = (UV-.5)*(.9+zoom*.1)+.5;\r\n        \r\n        float staticDrops = S(-.5, 1., rainAmount)*2.;\r\n        float layer1 = S(.25, .75, rainAmount);\r\n        float layer2 = S(.0, .5, rainAmount);\r\n        \r\n        vec2 c = Drops(uv, t, staticDrops, layer1, layer2);\r\n        #ifdef CHEAP_NORMALS\r\n            vec2 n = vec2(dFdx(c.x), dFdy(c.x));// cheap normals (3x cheaper, but 2 times shittier ;))\r\n        #else\r\n            vec2 e = vec2(.001, 0.);\r\n            float cx = Drops(uv+e, t, staticDrops, layer1, layer2).x;\r\n            float cy = Drops(uv+e.yx, t, staticDrops, layer1, layer2).x;\r\n            vec2 n = vec2(cx-c.x, cy-c.x);\t\t// expensive normals\r\n        #endif\r\n    \r\n        #ifdef HAS_HEART\r\n            n *= 1.-S(60., 85., T);\r\n            c.y *= 1.-S(80., 100., T)*.8;\r\n        #endif\r\n    \r\n        float focus = mix(maxBlur-c.y, minBlur, S(.1, .2, c.x));\r\n        vec3 col = texture2D(texture, UV+n).rgb;\r\n                                // make time sync with first lightnoing\r\n    \r\n        #ifdef USE_POST_PROCESSING\r\n            t = (T+3.)*.5;\t\t\t\r\n            float colFade = sin(t*.2)*.5+.5+story;\r\n            col *= mix(vec3(1.), vec3(.8, .9, 1.3), colFade);\t// subtle color shift\r\n            float fade = S(0., 10., T);\t\t\t\t\t\t\t// fade in at the start\r\n            float lightning = sin(t*sin(t*10.));\t\t\t\t// lighting flicker\r\n            lightning *= pow(max(0., sin(t+sin(t))), 10.);\t\t// lightning flash\r\n            col *= 1.+lightning*fade*mix(1., .1, story*story);\t// composite lightning\r\n            col *= 1.-dot(UV-=.5, UV);\t\t\t\t\t\t\t// vignette\r\n    \r\n            #ifdef HAS_HEART\r\n                col = mix(pow(col, vec3(1.2)), col, heart);\r\n                fade *= S(102., 97., T);\r\n            #endif\r\n    \r\n            col *= fade;\t\t\t\t\t\t\t\t\t\t// composite start and end fade\r\n        #endif\r\n    \r\n        //col = vec3(heart);\r\n        gl_FragColor = vec4(col, 1.);\r\n    }\r\n    `\r\n\r\n\r\n    protected _params = [\r\n        { name: 'texSize', type: renderer.PARAM_FLOAT2 },\r\n        { name: 'iResolution', type: renderer.PARAM_FLOAT3 },\r\n    ]\r\n\r\n    protected _defines =  [\r\n        { name: 'HAS_HEART', value: false },\r\n        { name: 'USE_POST_PROCESSING', value: true }\r\n    ]\r\n\r\n    protected setParamValue(material: ShaderMaterial) {\r\n        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);\r\n        var texSize = new cc.Vec2(this.node.width, this.node.height);\r\n        material.setParamValue(\"iResolution\", iResolution);\r\n        material.setParamValue(\"texSize\", texSize);\r\n    }\r\n}\r\n","\r\n//提示工具类\r\nexport class RecommendTools{\r\n    //将表中的所有元素复制指定数量\r\n    static copy_table_value(t, count){\r\n        let ntable = []\r\n        for (let i = 0; i < t.length; i++) {\r\n            const v = t[i];\r\n            for (let j = 0; j < count; j++) {                \r\n                ntable.push(v)\r\n            }\r\n        }\r\n        return ntable\r\n    }\r\n\r\n    //两个表相减\r\n    static ArraySubtract(t1, t2){\r\n        let r = []\r\n        let tempt2 = RecommendTools.copy_array(t2)\r\n        for (let i = 0; i < t1.length; i++) {\r\n            const element = t1[i];\r\n            let temp1 = false\r\n            let num1 = 0\r\n            for (let j = 0; j < tempt2.length; j++) {\r\n                const tmpE = tempt2[j];\r\n                if(element == tmpE){\r\n                    temp1 = true\r\n                    num1 = j\r\n                }\r\n            }\r\n            if(temp1){\r\n                tempt2.splice(num1, 1)\r\n            }else{\r\n                r.push(element)\r\n            }\r\n        }\r\n        return r\r\n    }\r\n\r\n    //复制table，只复制一层\r\n    static copy_array(t){\r\n        let copyt = []\r\n        for (let i = 0; i < t.length; i++) {\r\n            const v = t[i];\r\n            copyt.push(v)\r\n        }\r\n        return copyt\r\n    }\r\n\r\n    static contains(array, e){\r\n        for (let i = 0; i < array.length; i++) {\r\n            const v = array[i];\r\n            if(v == e){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n   }\r\n\r\n   //是否是相同\r\n   static isSameValue(array: number[]): boolean{\r\n    if(RecommendTools.is_null_or_empty(array)){\r\n        return true\r\n    }else{\r\n        let lastVal = null\r\n        for (let i = 0; i < array.length; i++) {\r\n            const element = array[i];\r\n            if(i > 0 && lastVal != element){\r\n                return false\r\n            }\r\n            lastVal = element\r\n        }\r\n        return true\r\n    }\r\n}\r\n\r\n   \r\n   //降序排序\r\n   static sort_descend(t){\r\n        t.sort(function(a, b){\r\n            return b - a\r\n        })\r\n        return t\r\n   }\r\n\r\n   //升序排序\r\n   static sort_ascend(t){\r\n        t.sort(function(a, b){\r\n            return a - b\r\n        })\r\n        return t\r\n   }\r\n\r\n    //去掉重复的元素并升序排序(复制出一份新表操作)\r\n    static usort(array: number[]): number[]{\r\n        let newArray = []\r\n        for (let i = 0; i < array.length; i++) {\r\n            const element = array[i];\r\n            if(!RecommendTools.contains(newArray, element)){\r\n                newArray.push(element)\r\n            }\r\n        }\r\n        RecommendTools.sort_ascend(newArray)\r\n        return newArray\r\n    }\r\n\r\n    //获取相同count牌的数组\r\n    static get_mulsame(array: number[], count: number): number[]{\r\n        let copyt = RecommendTools.usort(array)       //去掉重复的牌并排序\r\n        let mul = []\r\n        for (let i = 0; i < copyt.length; i++) {\r\n            const element = copyt[i];\r\n            let ts = 0\r\n            for (let j = 0; j < array.length; j++) {\r\n                const tmp = array[j];\r\n                if(tmp == element){\r\n                    ts = ts + 1\r\n                }\r\n            }\r\n            if(ts >= count){\r\n                mul.push(element)\r\n            }\r\n        }\r\n        return mul\r\n    }\r\n\r\n    //移除 remove 相同count的数组，surl array中移除相同count的牌值\r\n    static remove_count_same(array: number[], count: number){\r\n        let removel = RecommendTools.get_mulsame(array, count)\r\n        let surl = RecommendTools.ArraySubtract(array, RecommendTools.copy_table_value(removel, count))\r\n        return {removel:removel, surl: surl}\r\n    }\r\n\r\n    static table_value_shunzi(t){\r\n        let shunzi = true\r\n        if(t.length == 0){\r\n            return false\r\n        }else if(t.length > 1){\r\n            let copyt = RecommendTools.copy_array(t)\r\n            copyt = RecommendTools.sort_ascend(copyt)\r\n            let num\r\n            for (let i = 0; i < copyt.length; i++) {\r\n                if(i > 0){\r\n                    if(num + 1 != copyt[i]){\r\n                         return false\r\n                    }\r\n                }\r\n                num = copyt[i]\r\n            }           \r\n        }\r\n        return shunzi\r\n    }\r\n\r\n    static is_null_or_empty(list: any){\r\n        if(list == null){\r\n            return true\r\n        }\r\n        if(!Array.isArray(list)){\r\n            return true\r\n        }\r\n        if(list.length == 0){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    //新表添加 \r\n    static TableAdd(t, num?:number){\r\n        if(num == null){\r\n            num = t.length\r\n        }\r\n        let r = []\r\n        for (let i = 0; i < num; i++) {\r\n            let e = t[i]\r\n            for (let j = 0; j < e.length; j++) {\r\n                const element = e[j];\r\n                r.push(element)\r\n            }\r\n            \r\n        }\r\n        return r\r\n    }\r\n\r\n    static find_point_shunzi(t, len){\r\n        let copyt = RecommendTools.usort(t)\r\n        let shunzil = []\r\n        if(copyt.length >= len && len > 1){\r\n            let tmpLen = copyt.length - len + 1\r\n            for (let i = 0; i < tmpLen; i++) {\r\n                let daixuan = []\r\n                for (let j = i; j <= len + i - 1; j++) {\r\n                    const element = copyt[j];\r\n                    daixuan.push(element)\r\n                }\r\n                if(RecommendTools.table_value_shunzi(daixuan)){\r\n                    shunzil.push(daixuan)\r\n                }\r\n            }\r\n        }\r\n        return shunzil\r\n    }\r\n\r\n    \r\n    static two_table_add(t1, t2){\r\n        return RecommendTools.TableAdd([t1, t2], 2)\r\n    }\r\n\r\n    \r\n    static Max(t){\r\n        let max = 0\r\n        for (let i = 0; i < t.length; i++) {\r\n            const element = t[i];\r\n            if(element > max){\r\n                max = element\r\n            }\r\n        }\r\n        return max\r\n    }    \r\n}","import Module, { moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport { ResultView } from \"./result_view\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\n\r\n\r\n\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"ResultModule\")\r\nexport class ResultModule extends Module<ResultView, null> {\r\n\r\n    private lineHeight = 1\r\n\r\n    constructor() {\r\n        super();\r\n        this.windowPrefabResPath = \"package/pdk/module/table/doudizhu_gold_onegame_result\";\r\n        this.viewType = ResultView;\r\n        this.modelType = null;\r\n        this.needAnim = true\r\n        this.clickAnywhereClose = false;\r\n        this.needViewMask = true\r\n    }\r\n\r\n    private func:Function;\r\n    private data:any\r\n    onShow(arg){\r\n        super.onShow(arg)\r\n        this.func = arg.func;\r\n        this.data = arg.data;\r\n        this.refreshUI();\r\n    }\r\n\r\n    private refreshUI(){\r\n        this.view.updateUI(this.data.msg.winUser,this.data.roleid)\r\n    }\r\n\r\n    protected onButtonClick(node: cc.Node, customEventData){\r\n        let pName = node.name;\r\n        switch (pName) {\r\n            case 'LeaveButton':\r\n                ModuleManager.instance.destroyModule('ResultModule');\r\n                break;\r\n            case 'ContinuButton':\r\n                if (this.func) {\r\n                    this.func();\r\n                }\r\n                ModuleManager.instance.destroyModule('ResultModule');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport { GameManager } from '../../../../manager/game_manager';\r\n\r\nconst { ccclass, property, menu} = cc._decorator;\r\n\r\n@ccclass\r\nexport class ResultView extends ViewBase {\r\n    \r\n    @property(cc.Node)\r\n    winner:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    loser:cc.Node = null;\r\n\r\n    updateUI(winner:number,mChairid:number){\r\n        this.winner.active = winner == mChairid;\r\n        this.loser.active = winner != mChairid;\r\n    }\r\n}\r\n","//创房配置\r\nexport module PdkRoomConfig\r\n{\r\n    export let config = [\r\n        {\r\n            tag:{\r\n                title:'xx1',\r\n                rowCount:3,\r\n            },\r\n            childList:[\r\n                {\r\n                    disable:true,\r\n                    json:'xx2',\r\n                    toggleType:1,\r\n                    title:'nnnn',\r\n                    toggleisOn:true,\r\n                    value:8,\r\n                }\r\n            ]\r\n        },\r\n    ]\r\n}\r\n","\r\nexport enum ToggleType{\r\n    Circle =1,//圆形\r\n    Square =2,//方形toggle\r\n}\r\n\r\n//一个块\r\nexport class IChumpItem{\r\n    title?:string;//标题\r\n    rowCount?:number;//列数\r\n    childArray:IChildItem[];//字节点个数\r\n}\r\n\r\nexport interface IChildItem{\r\n    disable?:boolean;//是否禁用\r\n    json?:string;//json key\r\n    toggleType?:ToggleType;//类型\r\n    title?:string;\r\n    toggleisOn:boolean;\r\n}","import { IChildItem, IChumpItem } from \"./rule_data\";\r\n\r\nexport class RuleFactory{\r\n    public static readonly instance: RuleFactory = new RuleFactory();\r\n\r\n    getConfig(ruleCfg:any):IChumpItem[]{\r\n        if (!ruleCfg) {\r\n            cc.error('不存在规则文件');\r\n        }\r\n        let chumps:IChumpItem[] = [];\r\n\r\n        ruleCfg.forEach(rule => {\r\n            let chump:IChumpItem = {\r\n                title:rule.tag.title,\r\n                rowCount:rule.tag.rowCount,\r\n                childArray:this.praseChildItem(rule.childList)\r\n            }\r\n            chumps.push(chump);\r\n        });\r\n        return chumps;\r\n    }\r\n\r\n    private praseChildItem(childList:any):IChildItem[]{\r\n        let childs:IChildItem[] = [];\r\n        for (let child of childList) {\r\n            childs.push(child);\r\n        }\r\n        return childs;\r\n    }\r\n\r\n\r\n}","import ModuleManager from \"../framework/core/module_manager\";\r\nimport AppData from \"../pacakge/public/const/app_data\";\r\nimport LoginServer from \"../pacakge/server/loginserver/login_server\";\r\nimport HallServer from \"../pacakge/server/hallserver/hall_server\";\r\nimport GameServer from \"../pacakge/server/gameserver/game_server\";\r\nimport HallModule from \"../pacakge/hall/hall_module\";\r\nimport AuthModule from \"../pacakge/hall/module/auth/auth_module\";\r\nimport AudioManager from \"./audio_manager\";\r\nimport { GameCfg } from \"../pacakge/public/const/game_cfg\";\r\n\r\n\r\n//场景跳转\r\nexport default class SceneManager {\r\n\r\n    //当前进入的牌桌\r\n    static tableModuleName = 'DouDiZhuTableModule';\r\n\r\n    static lastEntranceOpenModuleName = \"\"\r\n\r\n    static subGames:{[key:string]:string} = {};\r\n\r\n    //初始化子游戏\r\n    static init(){\r\n        this.subGames['FN_PDK'] = 'PdkModule';\r\n    }\r\n\r\n    static gotoSubGame(data, onFinish?: () => void) {\r\n        let gameCgf = GameCfg[AppData.gameid]\r\n        if (!gameCgf) {\r\n            cc.error('游戏配置不存在: ',AppData.gameid);\r\n            return;\r\n        }\r\n        this.tableModuleName = gameCgf.module;\r\n        if (!this.tableModuleName) {\r\n            cc.error('no subGame：',this.tableModuleName);\r\n            return;\r\n        }\r\n        ModuleManager.instance.removeModule(this.tableModuleName)\r\n        ModuleManager.instance.showModuleName(this.tableModuleName, data, () => {\r\n            ModuleManager.instance.hideAllModule([this.tableModuleName])\r\n            ModuleManager.instance.destroyRemoveModule(this.tableModuleName)\r\n            if (onFinish) {\r\n                onFinish()\r\n            }\r\n        })\r\n    }\r\n\r\n    //登录\r\n    static gotoLogin() {\r\n        LoginServer.instance.close();\r\n        HallServer.instance.close();\r\n        GameServer.instance.close();\r\n        ModuleManager.instance.showModule(AuthModule) \r\n    }\r\n\r\n    //跳转大厅\r\n    static gotoHall(isNeedCheck:boolean = true) {\r\n        LoginServer.instance.close();\r\n        HallServer.instance.close();\r\n        GameServer.instance.close();        \r\n        HallServer.instance.isNeedCheck = isNeedCheck;//需要检测\r\n        HallServer.instance.loginHallServer();\r\n    }\r\n\r\n    //外部无需调用\r\n    static showHallUI(){\r\n        AudioManager.instance.playMusicLoop()\r\n        ModuleManager.instance.hideAllModule([\"AuthModule\", this.tableModuleName])\r\n        if (SceneManager.lastEntranceOpenModuleName != \"\") {\r\n            ModuleManager.instance.showModuleName(this.lastEntranceOpenModuleName, null, () => {\r\n                ModuleManager.instance.destroyModule(this.tableModuleName)\r\n            })      \r\n        } else {\r\n            ModuleManager.instance.showModule(HallModule, null, () => {\r\n                ModuleManager.instance.destroyModule(this.tableModuleName)\r\n            })      \r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //网络连接故障\r\n}","import AppData from \"../const/app_data\";\r\nimport EventManager from \"../../../manager/event_manager\";\r\n\r\n\r\n\r\nconst { ccclass, property, menu} = cc._decorator;\r\n\r\nenum AdaptationType {\r\n    LetfOffset = 0,\r\n    RightOffset = 1,\r\n    LessenX = 2,\r\n}\r\n\r\n@ccclass\r\n@menu('UI/ScreenAdaptationUtil')\r\nexport default class screenAdaptationUtil extends cc.Component {\r\n    @property({ type: cc.Enum(AdaptationType) })\r\n    adaptationStyle: AdaptationType = AdaptationType.LetfOffset;\r\n\r\n    @property(Number)\r\n    adaptationValue : number = 50\r\n\r\n    widget : cc.Widget\r\n\r\n    widgetLeft\r\n\r\n    onLoad(){\r\n        if (this.node) {\r\n            this.widget = this.node.getComponent(cc.Widget)\r\n            if (this.widget) {\r\n                this.widgetLeft = this.widget.left\r\n            }\r\n        }\r\n        this.adaptation()\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n    }\r\n\r\n    private refresh_screenAdaptationUtil(data) {\r\n        if (!this || !this.node) {\r\n            return\r\n        }\r\n\r\n        if (this.node.parent && this.node.parent.name) {\r\n            let viewName = this.node.parent.name\r\n            if (viewName != \"hall_match\") {\r\n                return\r\n            }\r\n            if (!AppData.isIphoneX) {\r\n                return\r\n            }\r\n            this.changePos(data)\r\n        }\r\n    }\r\n\r\n    private changePos(data) {\r\n\r\n\r\n        let widget = this.node.getComponent(cc.Widget)\r\n\r\n        let offset = AppData.iphonexOffset//偏移齐刘海宽度\r\n\r\n        let value = data.value\r\n\r\n        if (value == \"portrait\") {\r\n            //竖屏\r\n        } else if (value == \"landscape\") {\r\n            //横屏正方向，以 HOME 键在屏幕右侧为正方向\r\n            //改变比赛场左偏移\r\n            widget.left = this.widgetLeft + offset\r\n        } else if (value == \"landscapeReverse\") {\r\n            //横屏反方向，以 HOME 键在屏幕左侧为反方向\r\n            //比赛场左偏移取消\r\n            widget.left = this.widgetLeft\r\n        }\r\n    }\r\n\r\n    adaptation() {\r\n        if (!AppData.isIphoneX) {\r\n            return\r\n        }\r\n\r\n        // let letfOffset = DesignWidth * (44 / 812)//偏移齐刘海宽度\r\n        // let rightOffset = DesignWidth * (34 / 812)//偏移下面圆弧宽度\r\n        let offset = AppData.iphonexOffset//偏移齐刘海宽度\r\n        if (this.adaptationValue != 0) {\r\n            offset = this.adaptationValue\r\n        }\r\n\r\n        switch (this.adaptationStyle) {\r\n            case AdaptationType.LetfOffset:\r\n                if (this.widget == null) {\r\n                    this.node.position = cc.v2(this.node.position.x + offset, this.node.position.y)\r\n                } else if (this.widget.isAlignLeft) {\r\n                    this.widget.left = this.widget.left + offset\r\n                }\r\n                break;\r\n            case AdaptationType.RightOffset:\r\n                if (this.widget == null) {\r\n                    this.node.position = cc.v2(this.node.position.x - offset, this.node.position.y)\r\n                } else if (this.widget.isAlignRight) {\r\n                    this.widget.right = this.widget.right + offset\r\n                }\r\n                break;\r\n            case AdaptationType.LessenX:\r\n                this.node.scaleX = 0.9\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n","//无限循环列表（item大小不固定）但是只有单列 用于聊天\r\nexport class ScrollView {\r\n    private m_scrollview: cc.ScrollView;\r\n    private m_view: cc.Node;\r\n    private m_content: cc.Node;\r\n    private m_item_templates: { key: string, item: cc.Node }[];\r\n    private m_node_pools: { key: string, items: cc.Node[] }[];\r\n\r\n    private m_dir: number;\r\n    private m_width: number;\r\n    private m_height: number;\r\n    private m_gap_x: number;\r\n    private m_gap_y: number;\r\n    private m_cb_host: any;\r\n    private item_update_func: (item: cc.Node, key: string, data: any, index: number) => [number, number];\r\n    private recycle_cb: (item: cc.Node, key: string) => void;\r\n    private scroll_to_end_cb: () => void;\r\n    private m_auto_scrolling: boolean;\r\n    private m_items: ScrollItem[];\r\n    private m_start_index: number;\r\n    private m_stop_index: number;\r\n\r\n    constructor(params: ScrollViewParams) {\r\n        this.m_scrollview = params.scrollview;\r\n        this.m_view = params.view;\r\n        this.m_content = params.content;\r\n        this.m_node_pools = [];\r\n        this.m_item_templates = [];\r\n        params.item_templates.forEach((tpl: ScrollItemTemplate) => {\r\n            tpl.node.active = false;\r\n            let item = { key: tpl.key, item: tpl.node }\r\n            this.m_item_templates.push(item);\r\n        });\r\n\r\n        this.m_dir = params.direction || ScrollDirection.Vertical;\r\n        this.m_width = params.width || this.m_view.width;\r\n        this.m_height = params.height || this.m_view.height;\r\n        this.m_gap_x = params.gap_x || 0;\r\n        this.m_gap_y = params.gap_y || 0;\r\n        this.m_cb_host = params.cb_host;\r\n        this.item_update_func = params.item_update_func;\r\n        this.recycle_cb = params.recycle_cb;\r\n        this.scroll_to_end_cb = params.scroll_to_end_cb;\r\n        this.m_auto_scrolling = params.auto_scrolling || false;\r\n\r\n        if (this.m_dir == ScrollDirection.Vertical) {\r\n            this.m_content.width = this.m_width;\r\n        }\r\n        else {\r\n            this.m_content.height = this.m_height;\r\n        }\r\n        this.m_view.setContentSize(this.m_width, this.m_height);\r\n        this.m_scrollview.vertical = this.m_dir == ScrollDirection.Vertical;\r\n        this.m_scrollview.horizontal = this.m_dir == ScrollDirection.Horizontal;\r\n        this.m_scrollview.inertia = true;\r\n        this.m_scrollview.node.on(\"scrolling\", this.on_scrolling, this);\r\n        this.m_scrollview.node.on(\"scroll-to-bottom\", this.on_scroll_to_end, this);\r\n        this.m_scrollview.node.on(\"scroll-to-right\", this.on_scroll_to_end, this);\r\n    }\r\n\r\n    set_data(datas: ScrollItemData[]) {\r\n        this.clear_items();\r\n        this.m_items = [];\r\n        datas.forEach((data, index) => {\r\n            let item: ScrollItem = this.pack_item(index, data);\r\n            this.m_items.push(item);\r\n        });\r\n        this.layout_items(0);\r\n        this.resize_content();\r\n        this.m_start_index = -1;\r\n        this.m_stop_index = -1;\r\n        if (this.m_dir == ScrollDirection.Vertical) {\r\n            this.m_content.y = 0;\r\n        }\r\n        else {\r\n            this.m_content.x = 0;\r\n        }\r\n        if (this.m_items.length > 0) {\r\n            this.on_scrolling();\r\n        }\r\n    }\r\n\r\n    insert_data(index: number, ...datas: ScrollItemData[]) {\r\n        if (datas.length == 0) {\r\n            cc.log(\"nothing to insert\");\r\n            return;\r\n        }\r\n        if (!this.m_items) {\r\n            this.m_items = [];\r\n        }\r\n        if (index < 0 || index > this.m_items.length) {\r\n            cc.warn(\"invalid index\", index);\r\n            return;\r\n        }\r\n        let is_append: boolean = index == this.m_items.length;\r\n        let items: ScrollItem[] = [];\r\n        datas.forEach((data, index) => {\r\n            let item: ScrollItem = this.pack_item(index, data);\r\n            items.push(item);\r\n        });\r\n        this.m_items.splice(index, 0, ...items);\r\n        this.layout_items(index);\r\n        this.resize_content();\r\n        this.m_start_index = -1;\r\n        this.m_stop_index = -1;\r\n\r\n        if (this.m_auto_scrolling && is_append) {\r\n            this.scroll_to_end();\r\n        }\r\n        this.on_scrolling();\r\n    }\r\n\r\n    append_data(...datas: ScrollItemData[]) {\r\n        if (!this.m_items) {\r\n            this.m_items = [];\r\n        }\r\n        this.insert_data(this.m_items.length, ...datas);\r\n    }\r\n\r\n    scroll_to_end() {\r\n        if (this.m_dir == ScrollDirection.Vertical) {\r\n            this.m_scrollview.scrollToBottom();\r\n        }\r\n        else {\r\n            this.m_scrollview.scrollToRight();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.clear_items();\r\n        let length = this.m_node_pools.length\r\n        for (let i = 0; i < length; i++) {\r\n            if (this.m_node_pools[i].items) {\r\n                let count = this.m_node_pools[i].items.length\r\n                for (let j = 0; j < count; j++) {\r\n                    this.m_node_pools[i].items[j].destroy()\r\n                }\r\n            }\r\n        }\r\n        this.m_node_pools = null;\r\n        this.m_items = null;\r\n\r\n        if (cc.isValid(this.m_scrollview.node)) {\r\n            this.m_scrollview.node.off(\"scrolling\", this.on_scrolling, this);\r\n            this.m_scrollview.node.off(\"scroll-to-bottom\", this.on_scroll_to_end, this);\r\n            this.m_scrollview.node.off(\"scroll-to-right\", this.on_scroll_to_end, this);\r\n        }\r\n    }\r\n\r\n    private on_scroll_to_end() {\r\n        if (this.scroll_to_end_cb) {\r\n            this.scroll_to_end_cb.call(this.m_cb_host);\r\n        }\r\n    }\r\n\r\n    private on_scrolling() {\r\n        if (!this.m_items || !this.m_items.length) {\r\n            return;\r\n        }\r\n        if (this.m_dir == ScrollDirection.Vertical) {\r\n            let posy: number = this.m_content.y;\r\n            if (posy < 0) {\r\n                posy = 0;\r\n            }\r\n            if (posy > this.m_content.height - this.m_height) {\r\n                posy = this.m_content.height - this.m_height;\r\n            }\r\n            let start: number = 0;\r\n            let stop: number = this.m_items.length - 1;\r\n            let viewport_start: number = -posy;\r\n            let viewport_stop: number = viewport_start - this.m_height;\r\n            while (this.m_items[start].y - this.m_items[start].height > viewport_start) {\r\n                start++;\r\n            }\r\n            while (this.m_items[stop].y < viewport_stop) {\r\n                stop--;\r\n            }\r\n            if (start != this.m_start_index && stop != this.m_stop_index) {\r\n                this.m_start_index = start;\r\n                this.m_stop_index = stop;\r\n                cc.log(\"render_from:\", start, stop);\r\n                this.render_items();\r\n            }\r\n        }\r\n        else {\r\n            let posx: number = this.m_content.x;\r\n            if (posx > 0) {\r\n                posx = 0;\r\n            }\r\n            if (posx < this.m_width - this.m_content.width) {\r\n                posx = this.m_width - this.m_content.width;\r\n            }\r\n            let start: number = 0;\r\n            let stop: number = this.m_items.length - 1;\r\n            let viewport_start: number = -posx;\r\n            let viewport_stop: number = viewport_start + this.m_width;\r\n            while (this.m_items[start].x + this.m_items[start].width < viewport_start) {\r\n                start++;\r\n            }\r\n            while (this.m_items[stop].x > viewport_stop) {\r\n                stop--;\r\n            }\r\n            if (start != this.m_start_index && stop != this.m_stop_index) {\r\n                this.m_start_index = start;\r\n                this.m_stop_index = stop;\r\n                cc.log(\"render_from:\", start, stop);\r\n                this.render_items();\r\n            }\r\n        }\r\n    }\r\n\r\n    private get_pools_by_key(key: string) {\r\n        let length = this.m_node_pools.length\r\n        for (let i = 0; i < length; i++) {\r\n            if (this.m_node_pools[i].key == key) {\r\n                return this.m_node_pools[i].items\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    private get_item_by_key(key: string) {\r\n        let length = this.m_item_templates.length\r\n        for (let i = 0; i < length; i++) {\r\n            if (this.m_item_templates[i].key == key) {\r\n                return this.m_item_templates[i].item\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    private spawn_node(key: string): cc.Node {\r\n        let node: cc.Node;\r\n        let pools: cc.Node[] = this.get_pools_by_key(key);\r\n        if (pools && pools.length > 0) {\r\n            node = pools.pop();\r\n        }\r\n        else {\r\n            node = cc.instantiate(this.get_item_by_key(key));\r\n            node.active = true;\r\n        }\r\n        node.parent = this.m_content;\r\n        return node;\r\n    }\r\n\r\n    private recycle_item(item: ScrollItem) {\r\n        if (item.node && cc.isValid(item.node)) {\r\n            let pools: cc.Node[] = this.get_pools_by_key(item.data.key);\r\n            if (!pools) {\r\n                pools = [];\r\n                this.m_node_pools.push({ key: item.data.key, items: pools });\r\n            }\r\n            pools.push(item.node);\r\n            if (this.recycle_cb) {\r\n                this.recycle_cb.call(this.m_cb_host, item.node, item.data.key);\r\n            }\r\n            item.node.removeFromParent();\r\n            item.node = null;\r\n        }\r\n    }\r\n\r\n    private clear_items() {\r\n        if (this.m_items) {\r\n            this.m_items.forEach((item) => {\r\n                this.recycle_item(item);\r\n            });\r\n        }\r\n    }\r\n\r\n    private render_items() {\r\n        let item: ScrollItem;\r\n        for (let i: number = 0; i < this.m_start_index; i++) {\r\n            item = this.m_items[i];\r\n            if (item.node) {\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for (let i: number = this.m_items.length - 1; i > this.m_stop_index; i--) {\r\n            item = this.m_items[i];\r\n            if (item.node) {\r\n                this.recycle_item(item);\r\n            }\r\n        }\r\n        for (let i: number = this.m_start_index; i <= this.m_stop_index; i++) {\r\n            item = this.m_items[i];\r\n            if (!item.node) {\r\n                item.node = this.spawn_node(item.data.key);\r\n                this.item_update_func.call(this.m_cb_host, item.node, item.data.key, item.data.data, i);\r\n            }\r\n            item.node.setPosition(item.x, item.y);\r\n        }\r\n    }\r\n\r\n    private pack_item(index: number, data: ScrollItemData): ScrollItem {\r\n        let node: cc.Node = this.spawn_node(data.key);\r\n        let [width, height]: [number, number] = this.item_update_func.call(this.m_cb_host, node, data.key, data.data, index);\r\n        let item: ScrollItem = { x: 0, y: 0, width: width, height: height, data: data, node: node };\r\n        this.recycle_item(item);\r\n        return item;\r\n    }\r\n\r\n    private layout_items(start: number) {\r\n        if (this.m_items.length <= 0) {\r\n            return;\r\n        }\r\n        let start_pos: number = 0;\r\n        if (start > 0) {\r\n            let prev_item: ScrollItem = this.m_items[start - 1];\r\n            if (this.m_dir == ScrollDirection.Vertical) {\r\n                start_pos = prev_item.y - prev_item.height - this.m_gap_y;\r\n            }\r\n            else {\r\n                start_pos = prev_item.x + prev_item.width + this.m_gap_x;\r\n            }\r\n        }\r\n        for (let index: number = start, stop: number = this.m_items.length; index < stop; index++) {\r\n            let item: ScrollItem = this.m_items[index];\r\n            if (this.m_dir == ScrollDirection.Vertical) {\r\n                item.x = 0;\r\n                item.y = start_pos;\r\n                start_pos -= item.height + this.m_gap_y;\r\n            }\r\n            else {\r\n                item.y = 0;\r\n                item.x = start_pos;\r\n                start_pos += item.width + this.m_gap_x;\r\n            }\r\n        }\r\n    }\r\n\r\n    private resize_content() {\r\n        if (this.m_items.length <= 0) {\r\n            this.m_content.width = 0;\r\n            this.m_content.height = 0;\r\n            return;\r\n        }\r\n        let last_item: ScrollItem = this.m_items[this.m_items.length - 1];\r\n        if (this.m_dir == ScrollDirection.Vertical) {\r\n            this.m_content.height = Math.max(this.m_height, last_item.height - last_item.y);\r\n        }\r\n        else {\r\n            this.m_content.width = Math.max(this.m_width, last_item.x + last_item.width);\r\n        }\r\n    }\r\n}\r\n\r\nexport type ScrollItemTemplate = {\r\n    key: string;\r\n    node: cc.Node;\r\n}\r\n\r\nexport type ScrollItemData = {\r\n    key: string;\r\n    data: any;\r\n}\r\n\r\nexport enum ScrollDirection {\r\n    Vertical = 1,\r\n    Horizontal = 2,\r\n}\r\n\r\ntype ScrollViewParams = {\r\n    scrollview: cc.ScrollView;\r\n    view: cc.Node;\r\n    content: cc.Node;\r\n    item_templates: ScrollItemTemplate[];\r\n    direction?: ScrollDirection;\r\n    width?: number;\r\n    height?: number;\r\n    gap_x?: number;\r\n    gap_y?: number;\r\n    cb_host?: any;\r\n    item_update_func: (item: cc.Node, key: string, data: any, index: number) => [number, number];\r\n    recycle_cb?: (item: cc.Node, key: string) => void;\r\n    scroll_to_end_cb?: () => void;\r\n    auto_scrolling?: boolean;\r\n}\r\n\r\ntype ScrollItem = {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    data: ScrollItemData;\r\n    node: cc.Node;\r\n}","\r\nexport default class SdkDefine{\r\n\r\n    public static FACE_BOOK_NAME : string = \"facebook\";\r\n    public static LINE_NAME : string = \"line\";\r\n}\r\n","import Utility from \"../../utility/Utility\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport HallServer from \"../../pacakge/hall/server/hall/hall_serve\";\r\nimport Debug from \"../../manager/debug\";\r\nimport SceneManager from \"../../manager/scene_manager\";\r\n\r\n\r\nexport default class SdkFacebook{\r\n\r\n\r\n    private static _instance : SdkFacebook;\r\n    public static get instance() : SdkFacebook {\r\n\r\n        if (!SdkFacebook._instance) {\r\n            \r\n            SdkFacebook._instance = new SdkFacebook();\r\n        }\r\n        return SdkFacebook._instance;\r\n    }\r\n\r\n\r\n    public receive(json : any){\r\n        \r\n        if (json.funcName == \"login\") {\r\n            \r\n            this.login(json.param);\r\n        }\r\n    }\r\n\r\n\r\n    public login(jsonParam : string){\r\n        \r\n        //facebook 头像单独处理 否则返回json\r\n        let jsonObject =  JSON.parse(jsonParam);        \r\n        jsonObject[\"headImg\"] = \"https://graph.facebook.com/\"+ jsonObject.thirdUnionId + \"/picture?type=normal\";\r\n        let param = JSON.stringify(jsonObject);\r\n\r\n        Debug.log(\" facebook login  : \" + param );\r\n\r\n        //param =  AES.encrypt(AES.key,jsonParam);\r\n\r\n        //Debug.log(\" facebook login base64 \",jsonParam);\r\n        \r\n        SceneManager.loginFromAuth(param);\r\n\r\n        // Utility.instance.playButtonSound();\r\n        // ModuleManager.instance.showModuleName(\"NetPrompt\", { showImmediately: true })\r\n        // HallServer.instance.accountLogin(\"\", \"\", \"\",null,null,6,param);\r\n    }\r\n}","import Debug from \"../../manager/debug\";\r\nimport Utility from \"../../utility/Utility\";\r\nimport ModuleManager from \"../../framework/core/module_manager\";\r\nimport HallServer from \"../../pacakge/hall/server/hall/hall_serve\";\r\nimport SceneManager from \"../../manager/scene_manager\";\r\n\r\n\r\nexport default class SdkLine{\r\n\r\n    private static _instance : SdkLine;\r\n    public static get instance() : SdkLine {\r\n\r\n        if (!SdkLine._instance) {\r\n            \r\n            SdkLine._instance = new SdkLine();\r\n        }\r\n        return SdkLine._instance;\r\n    }\r\n\r\n    public receive(json : any){\r\n        \r\n        if (json.funcName == \"login\") {\r\n            \r\n            this.login(json.param);\r\n        }\r\n    }\r\n\r\n    public login(jsonParam : string){\r\n\r\n        let param = jsonParam;\r\n   \r\n        Debug.log(\" line login  : \" + param );\r\n\r\n        //param =  AES.encrypt(AES.key,jsonParam);\r\n\r\n        //Debug.log(\" line login base64 \",jsonParam);\r\n\r\n        SceneManager.loginFromAuth(param);\r\n\r\n        // Utility.instance.playButtonSound();\r\n        // ModuleManager.instance.showModuleName(\"NetPrompt\", { showImmediately: true })\r\n        // HallServer.instance.accountLogin(\"\", \"\", \"\",null,null,6,param);\r\n    }\r\n\r\n}\r\n","import Utility from \"../utility/Utility\";\r\nimport ModuleManager from \"../framework/core/module_manager\";\r\n\r\nimport {Base64} from \"../utility/base64\";\r\nimport Debug from \"./debug\";\r\nimport SdkFacebook from \"../sdk/collection/sdk_facebook\";\r\nimport SdkDefine from \"../sdk/collection/sdk_define\";\r\nimport SdkLine from \"../sdk/collection/sdk_line\";\r\n\r\nexport default class SdkManager extends cc.Component {\r\n    \r\n    private static _instance : SdkManager;\r\n    public static get instance() : SdkManager {\r\n\r\n        if (!SdkManager._instance) {\r\n            \r\n            SdkManager._instance = new SdkManager();\r\n        }\r\n        return SdkManager._instance;\r\n    }\r\n\r\n    public receive(base64Str : string){\r\n\r\n        let json = JSON.parse(Utility.instance.decodeBase64(base64Str));        \r\n        if (json.sdkName == SdkDefine.FACE_BOOK_NAME) {            \r\n\r\n            SdkFacebook.instance.receive(json);\r\n\r\n        }else if(json.sdkName == SdkDefine.LINE_NAME){\r\n\r\n            SdkLine.instance.receive(json);\r\n        }\r\n        \r\n    }\r\n\r\n    public requestNativeFunc(skdName : string, funcName : string,jsonParam : string = \"\" ){\r\n  \r\n        let jsonObj = { \"sdkName\" : skdName, \r\n                        \"funcName\": funcName, \r\n                        \"params\": jsonParam };                                \r\n\r\n        let jsonStr = JSON.stringify(jsonObj);\r\n\r\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\r\n\r\n            let className = \"org/cocos2dx/javascript/sdk/SDKManager\";            \r\n            jsb.reflection.callStaticMethod(className, \"receiveJSCall\",\"(Ljava/lang/String;)V\",jsonStr);\r\n        }      \r\n    }\r\n\r\n}\r\n\r\n//@ts-ignore\r\nwindow.sdkMgr = SdkManager.instance;\r\n\r\n\r\n","import ModelBase from \"../../framework/core/mvvm/model_base\";\r\nimport NetClient, { NetClientProtoType } from \"../../framework/net/net_client\";\r\nimport TimeManager from \"../../manager/time_manager\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class ServerBase extends cc.Component {\r\n\r\n    model: ModelBase = new ModelBase()\r\n    netClient: NetClient = new NetClient();\r\n    _pingDelayTime: number = 0\r\n    clientName : string\r\n    _lastPingTime:number;\r\n    netClientProtoType : NetClientProtoType\r\n\r\n    onNotifyPing: (ping:number) => void;\r\n\r\n    protected init(clientName) {\r\n        this.model = new ModelBase();\r\n        this.netClient = new NetClient();\r\n        this.netClient.name = clientName;\r\n        this.clientName = clientName;\r\n        this.model.netClient = this.netClient;\r\n    }\r\n\r\n    _onConnectState: (state: string) => void;\r\n\r\n    state = null\r\n    _reconTimes = 0\r\n    _maxReconTimes = 5\r\n\r\n    private url : string \r\n\r\n\r\n    //连接服务器\r\n    protected connect(url, callback?: (state: string) => void) {\r\n        this.close()\r\n        this._onConnectState = callback\r\n        this.url = url\r\n        this.netClient.connect(url, this.netClientProtoType ? this.netClientProtoType :NetClientProtoType.GameServer);\r\n        //bind是非常必要的，因为从回调回来的this已经改变了已经变了\r\n        this.netClient.onConnectStateEvent = this._onConnectStateEvent.bind(this)\r\n        this.model.netClient = this.netClient;\r\n        this.netClient.heartbeatEvent = this._heartbeatEvent.bind(this);\r\n        cc.log(\"服务器连接：\", url, TimeManager.instance.getServerTime())\r\n        this.unschedule(this.checkConnect)\r\n        this.scheduleOnce(this.checkConnect, 30)\r\n    }\r\n\r\n    _heartbeatEvent(){\r\n        if (this._lastPingTime) {\r\n            this._pingDelayTime = this.netClient.lastReceivePingTime - this._lastPingTime;\r\n            this._lastPingTime = null;\r\n            if (this._pingDelayTime == 0) {\r\n                this._pingDelayTime = 0.06;\r\n            }\r\n\r\n            if(this.onNotifyPing){\r\n                this.onNotifyPing(this._pingDelayTime)\r\n            }\r\n        }\r\n    }\r\n\r\n    checkConnect() {\r\n        cc.log(`${0}连接超时，重连！`,this.clientName,TimeManager.instance.getServerTime())\r\n        this.unschedule(this.checkConnect)\r\n        this.reconnectServer()\r\n    }\r\n\r\n    close() {\r\n        this.unschedule(this._reconnect)\r\n        this.unschedule(this.checkConnect)\r\n        this.unschedule(this._checkPing)\r\n        this.unschedule(this._loginIsTimeOut);\r\n        this.netClient.activeClose();\r\n    }\r\n\r\n\r\n    protected startCheckPing() {\r\n        this.unschedule(this._loginIsTimeOut);\r\n        this._reconTimes = 0\r\n        this.netClient.lastReceivePingTime = Date.now();\r\n        this._lastPingTime = Date.now();\r\n        this._requestPing()\r\n        this.unschedule(this._checkPing)\r\n        this.schedule(this._checkPing, this.netClient.heartbeatInterval, cc.macro.REPEAT_FOREVER)\r\n    }\r\n\r\n    private _checkPing() {\r\n        let time = Date.now()\r\n        //cc.log(\"checkPing\",this.clientName, time - this.netClient.lastReceivePingTime , this.netClient.heartbeatTimeout)\r\n        this._requestPing()\r\n        if (this._lastPingTime == null) {\r\n            this._lastPingTime = time;\r\n        }\r\n\r\n        let passTime = time - this.netClient.lastReceivePingTime;\r\n        let isConnect = passTime - this.netClient.heartbeatTimeout > 0;//超时\r\n        if (isConnect) {\r\n            this.heartbeat_timeout_reconnect()\r\n        }\r\n\r\n        if(this.onNotifyPing){\r\n            this.onNotifyPing(this._pingDelayTime)\r\n        }\r\n    }\r\n\r\n    protected _requestPing() {\r\n    //cc.log('----->>ping:',this.netClient.netState);\r\n        if (this.netClient.netState) {\r\n            this.netClient.heartbeat();\r\n        }\r\n    }\r\n\r\n    reconnectServer() {\r\n        if (TimeManager.instance.backGround) {\r\n            cc.warn(\"正在后台中，不重连！\")\r\n            return\r\n        }\r\n        let time = 1\r\n        if (this._reconTimes >= 2) {\r\n            time = 3\r\n        }\r\n        cc.log(\"断线重连！\", time, this._reconTimes)\r\n        this.unschedule(this._reconnect)\r\n        this.unschedule(this.checkConnect)\r\n        this.unschedule(this._checkPing)\r\n        this.unschedule(this._loginIsTimeOut);\r\n        this.scheduleOnce(this._reconnect, time)\r\n    }\r\n\r\n    protected onReconnectServer() {\r\n\r\n    }\r\n\r\n    protected onConnected() {\r\n\r\n    }\r\n    \r\n\r\n    private _reconnect() {\r\n        this._reconTimes = this._reconTimes + 1\r\n        this.connectTimes(this._reconTimes);\r\n        if (this._reconTimes < this._maxReconTimes) {\r\n            this.connect(this.url, this._onConnectState)\r\n        } else {\r\n            cc.warn(this.clientName, \"断线重连次数用完提示登陆失败\")\r\n            this.close()\r\n            this.reconnectServerFail()\r\n        }\r\n    }\r\n\r\n    protected connectTimes(times:number){\r\n\r\n    }\r\n\r\n\r\n    protected reconnectServerFail() {\r\n\r\n    }\r\n\r\n    _loginIsTimeOut() {\r\n        cc.warn(this.clientName, \"服务器连接超时！\")\r\n        this.reconnectServer()\r\n    }\r\n\r\n\r\n    _onConnectStateEvent(state) {\r\n        this.unschedule(this.checkConnect)\r\n        cc.warn(this.clientName, \"onConnectStateEvent\", state)\r\n        if (\"OPEN\" == state) {\r\n            this._reconTimes = 0\r\n            this.subscibeMsgEvent()\r\n            this.scheduleOnce(this._loginIsTimeOut, 10);\r\n        } else if (state == 'error') {\r\n            this.reconnectServer()\r\n        } else if (\"CLOSE\" == state) {\r\n            cc.warn(\"连接中断，自动重连！\")\r\n            this.reconnectServer()\r\n        } else if (state == \"TIMEOUT\") {//连接超时\r\n            this.reconnectServer()\r\n        }else if (state == 'handshake') {\r\n            this.onConnected()\r\n        }\r\n        if (this._onConnectState != null) {\r\n            this._onConnectState(state)\r\n        }\r\n\r\n    }\r\n\r\n    private subscibeMsgEvent() {\r\n        let self = this\r\n        this.model.clearMsgEvent()\r\n    }\r\n\r\n\r\n    heartbeat_timeout_reconnect(){\r\n        cc.warn(\"断线重连...！\")\r\n        let self = this\r\n        self.close()\r\n        self.scheduleOnce(function(){\r\n            self.reconnectServer()\r\n        }, 0.5)        \r\n    }\r\n\r\n    exit() {\r\n        this.onNotifyPing = null;\r\n    }\r\n\r\n}\r\n","import ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\nimport AppData from \"../../../public/const/app_data\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingView extends ViewBase {\r\n\r\n    @property(cc.Button)\r\n    closeBtn: cc.Button = null\r\n\r\n\r\n    @property(cc.Toggle)\r\n    musicToggle: cc.Toggle = null\r\n\r\n    @property(cc.Toggle)\r\n    soundToggle: cc.Toggle = null\r\n\r\n    @property(cc.Slider)\r\n    musicSlider: cc.Slider = null\r\n\r\n    @property(cc.ProgressBar)\r\n    musicProgressBar: cc.ProgressBar = null\r\n\r\n    @property(cc.Slider)\r\n    soundSlider: cc.Slider = null\r\n\r\n    @property(cc.ProgressBar)\r\n    soundProgressBar: cc.ProgressBar = null\r\n\r\n    @property(cc.Label)\r\n    labVersion: cc.Label = null;\r\n\r\n    start() {\r\n        \r\n    }\r\n}\r\n","import ModuleBase, { ViewLayer, moduleInit, bindButtonClickEvent } from \"../../../../framework/core/mvvm/module_base\";\r\nimport SettingView from \"./setting_view\";\r\nimport ModuleManager from \"../../../../framework/core/module_manager\";\r\nimport LocalStorage from \"../../../../manager/local_storage\";\r\nimport AudioManager from \"../../../../manager/audio_manager\";\r\nimport Utility from \"../../../../utility/Utility\";\r\nimport AuthModule from \"../auth/auth_module\";\r\nimport AppData from \"../../../public/const/app_data\";\r\nimport SceneManager from \"../../../../manager/scene_manager\";\r\nimport { GameManager } from '../../../../manager/game_manager';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\n@moduleInit(\"Setting\")\r\nexport default class Setting extends ModuleBase<SettingView, null> {\r\n\r\n    isClick = false\r\n    constructor() {\r\n        super();\r\n        this.layer = ViewLayer.High;\r\n        this.windowPrefabResPath = \"package/hall/module/setting/hall_setting\";\r\n        this.viewType = SettingView;\r\n        this.modelType = null;\r\n        this.needAnim = true\r\n        this.needViewMask = true\r\n    }\r\n\r\n    protected onButtonClickName(name : string) {\r\n        switch (name) {\r\n            case \"closeBtn\":\r\n                Utility.instance.playButtonSound()\r\n                this.hide()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    @bindButtonClickEvent(\"btnCancel\")\r\n    onButtonCancel()\r\n    {\r\n        this.hide()\r\n    }\r\n    @bindButtonClickEvent(\"btnSure\")\r\n    onButtonSure()\r\n    {\r\n        //SceneManager.gotoAuth()\r\n    }\r\n\r\n    onInit() {\r\n        let self = this\r\n        this.isClick = false\r\n\r\n        // 0 - 开  1 - 闭\r\n        this.view.musicToggle.node.on('toggle', function (event: cc.Toggle) {\r\n            if (this.isClick) {\r\n                Utility.instance.playButtonSound()\r\n            }\r\n            let toggle = event;\r\n            let bgNode = self.view.musicToggle.node.getChildByName(\"Background\")\r\n            let markNode = self.view.musicToggle.node.getChildByName(\"checkmark\")\r\n            if (toggle.isChecked == true) {\r\n                bgNode.active = false\r\n                markNode.active = true\r\n                AudioManager.instance.setMusicOpen(true)\r\n                AudioManager.instance.resumeMusic()\r\n            } else {\r\n                bgNode.active = true\r\n                markNode.active = false\r\n                AudioManager.instance.setMusicOpen(false)\r\n                AudioManager.instance.pauseMusic()\r\n            }\r\n        }, this);\r\n\r\n        this.view.soundToggle.node.on('toggle', function (event: cc.Toggle) {\r\n            if (this.isClick) {\r\n                Utility.instance.playButtonSound()\r\n            }\r\n            let bgNode = self.view.soundToggle.node.getChildByName(\"Background\")\r\n            let markNode = self.view.soundToggle.node.getChildByName(\"checkmark\")\r\n            let toggle = event;\r\n            if (toggle.isChecked == true) {\r\n                bgNode.active = false\r\n                markNode.active = true\r\n                AudioManager.instance.setSoundOpen(true)\r\n            } else {\r\n                bgNode.active = true\r\n                markNode.active = false\r\n                AudioManager.instance.setSoundOpen(false)\r\n            }\r\n        }, this);\r\n\r\n        this.view.musicSlider.node.on(\"slide\", function(event)\r\n        {\r\n            let musicValue = self.view.musicSlider.progress\r\n            AudioManager.instance.setMusicVolume(musicValue)\r\n            this.view.musicProgressBar.progress = musicValue;\r\n        },this)\r\n\r\n        this.view.soundSlider.node.on(\"slide\", function(event)\r\n        {\r\n            let soundValue = self.view.soundSlider.progress\r\n            AudioManager.instance.setSoundVolume(soundValue)\r\n            this.view.soundProgressBar.progress = soundValue;\r\n        },this)\r\n    }\r\n\r\n    onShow() {\r\n        this.isClick = false\r\n        if (AudioManager.instance.isMusicOpen()) {\r\n            this.view.musicToggle.check();\r\n        } else {\r\n            this.view.musicToggle.uncheck();\r\n        }\r\n\r\n        if (AudioManager.instance.isSoundOpen()) {\r\n            this.view.soundToggle.check();\r\n        } else {\r\n            this.view.soundToggle.uncheck();\r\n        }\r\n\r\n        this.view.soundSlider.progress = cc.audioEngine.getEffectsVolume()\r\n        this.view.soundProgressBar.progress = cc.audioEngine.getEffectsVolume()\r\n        this.view.musicSlider.progress = cc.audioEngine.getMusicVolume()\r\n        this.view.musicProgressBar.progress = cc.audioEngine.getMusicVolume()\r\n        //this.view.labVersion.string = \"版本号:\" + GameManager.getAppVersionBuildTime()\r\n        this.isClick = true\r\n    }\r\n\r\n}\r\n","import ShaderMaterial from \"./shader_material\";\r\n\r\nconst { ccclass, property, executeInEditMode, requireComponent, disallowMultiple } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Sprite)\r\n@executeInEditMode\r\nexport default class ShaderComponent extends cc.Component {\r\n\r\n    protected _material: ShaderMaterial = null\r\n    protected _color = cc.color()\r\n    protected _start = 0\r\n    protected _shaderName = \"\"\r\n    protected _state = 100\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 clrx = color * texture2D(texture, uv0);\r\n        float brightness = (clrx.r + clrx.g + clrx.b) * (1. / 3.);\r\n        float gray = (1.5)*brightness;\r\n        clrx = vec4(gray, gray, gray, clrx.a)*vec4(0.8,1.2,1.5,1);\r\n        gl_FragColor =clrx;\r\n    }\r\n    `\r\n    protected _defines = []\r\n\r\n    protected _params = []\r\n\r\n    protected _needUpdate = false\r\n\r\n\r\n    start() {\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.node.getComponent(cc.Sprite).setState(0);\r\n        this._applyShader();\r\n    }\r\n\r\n    onEnable() {\r\n        this.init()\r\n    }\r\n\r\n\r\n    update(dt) {\r\n        if (!this._material) return;\r\n        this._setShaderColor();\r\n        this._setShaderTime(dt);\r\n    }\r\n\r\n    protected useShader() {\r\n        if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {\r\n            console.warn('Shader not surpport for canvas');\r\n            return;\r\n        }\r\n        let sprite = this.node.getComponent(cc.Sprite);\r\n        if (!sprite || !sprite.spriteFrame || sprite.getState() === cc.Sprite.State.GRAY) {\r\n            return;\r\n        }\r\n        let material = new ShaderMaterial().create(this._shaderName, this._vert, this._frag, this._defines, this._params);\r\n        let texture = sprite.spriteFrame.getTexture();\r\n        material.setTexture(texture);\r\n        material.updateHash();\r\n        this.setParamValue(material)\r\n        let sp = sprite;\r\n        sp[\"_material\"] = material;\r\n        sp[\"_renderData\"]._material = material;\r\n        sp[\"_state\"] = this._state;\r\n        return material;\r\n    }\r\n\r\n    protected setParamValue(material: ShaderMaterial) {\r\n\r\n    }\r\n\r\n    protected _applyShader() {\r\n        let material = this.useShader();\r\n        this._material = material;\r\n        this._start = 0;\r\n        let clr = this._color;\r\n        clr.setR(255), clr.setG(255), clr.setB(255), clr.setA(255);\r\n        this._setShaderColor();\r\n    }\r\n\r\n    protected _setShaderColor() {\r\n        let node = this.node;\r\n        let c0 = node.color;\r\n        let c1 = this._color;\r\n        let r = c0.getR(), g = c0.getG(), b = c0.getB(), a = node.opacity;\r\n        let f = !1;\r\n        if (c1.getR() !== r) { c1.setR(r); f = !0; }\r\n        if (c1.getG() !== g) { c1.setG(g); f = !0; }\r\n        if (c1.getB() !== b) { c1.setB(b); f = !0; }\r\n        if (c1.getA() !== a) { c1.setA(a); f = !0; }\r\n        f && this._material.setColor(r / 255, g / 255, b / 255, a / 255);\r\n    }\r\n\r\n    protected _setShaderTime(dt) {\r\n        if (this._needUpdate) {\r\n            let start = this._start;\r\n            if (start > 65535) start = 0;\r\n            start += dt;\r\n            this._material.setTime(start);\r\n            this._start = start;\r\n        }\r\n    }\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShaderTest extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    shaderRoot: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    lastBtn: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nextBtn: cc.Node = null\r\n\r\n    @property(cc.SpriteFrame)\r\n    spriteFrame: cc.SpriteFrame = null\r\n\r\n    _curIndex = 0\r\n    _totalCount = 0\r\n\r\n    start() {\r\n        this._totalCount = this.shaderRoot.childrenCount\r\n        this.lastBtn.on(\"click\", this.onLastBtnClick, this)\r\n        this.nextBtn.on(\"click\", this.onNextBtnClick, this)\r\n        this.shoChild()\r\n    }\r\n\r\n    private onLastBtnClick() {\r\n        this._curIndex--\r\n        if (this._curIndex < 0) {\r\n            this._curIndex = this._totalCount - 1\r\n        }\r\n        this.shoChild()\r\n    }\r\n\r\n    private onNextBtnClick() {\r\n        this._curIndex++\r\n        if (this._curIndex >= this._totalCount) {\r\n            this._curIndex = 0\r\n        }\r\n        this.shoChild()\r\n    }\r\n\r\n    private shoChild() {\r\n        let length = this._totalCount\r\n        for (let i = 0; i < length; i++) {\r\n            this.shaderRoot.children[i].active = i == this._curIndex\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nenum RotateType {\r\n    Normal = 0,\r\n    RotationY = 1,\r\n    RotationX = 2,\r\n}\r\n\r\n@ccclass\r\nexport default class SimpleRotation extends cc.Component {\r\n\r\n    @property(Number)\r\n    angle: number = 400; //转动角度的速度\r\n\r\n    @property({ type: cc.Enum(RotateType) })\r\n    rotationType: RotateType = RotateType.Normal\r\n\r\n    protected update(dt: number) {\r\n        if (this.rotationType == RotateType.Normal) {\r\n            this.node.rotation += this.angle * dt;\r\n        } else if (this.rotationType == RotateType.RotationY) {\r\n            this.node.rotationY += this.angle * dt;\r\n        } else if (this.rotationType == RotateType.RotationX) {\r\n            this.node.rotationX += this.angle * dt;\r\n        }\r\n    }\r\n}\r\n","\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass('SpriteFrameKeyPair')\r\nclass SpriteFrameKeyPair{\r\n    @property(cc.SpriteFrame)\r\n    spriteFrame: cc.SpriteFrame = null\r\n\r\n    @property(cc.String)\r\n    key: string = ''\r\n}\r\n\r\n@ccclass\r\n@menu('custom/SpriteFrameHolder')\r\nexport default class SpriteFrameHolder extends cc.Component{\r\n    \r\n    @property([SpriteFrameKeyPair])\r\n    spriteFrameList: SpriteFrameKeyPair[] = []\r\n\r\n    getSpriteFrameByKey(key: string){\r\n        for (let i = 0; i < this.spriteFrameList.length; i++) {\r\n            const element = this.spriteFrameList[i];\r\n            if(element.key == key){\r\n                return element.spriteFrame\r\n            }\r\n        }\r\n        return null\r\n    }\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nconst { ccclass, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Stone')\r\nexport default class StoneShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Stone\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `\r\n    uniform sampler2D texture;\r\n    uniform vec4 color;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 c = color * texture2D(texture, uv0);\r\n        float clrbright = (c.r + c.g + c.b) * (1. / 3.);\r\n        float gray = (0.6) * clrbright;\r\n        gl_FragColor = vec4(gray, gray, gray, c.a);\r\n    }\r\n    `\r\n}\r\n","import GameUtil from \"../utility/game_util\";\r\nimport TimeManager from \"./time_manager\";\r\nimport Debug from \"../manager/debug\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nclass TextureCache {\r\n    key: string\r\n    spriteFrame: cc.SpriteFrame\r\n    constructor() { }\r\n}\r\n\r\nclass ReloadCache {\r\n    key: string\r\n    count: number\r\n    constructor() { }\r\n}\r\n\r\n@ccclass\r\nexport default class TextureManager extends cc.Component {\r\n\r\n    public static readonly instance: TextureManager = new TextureManager();\r\n\r\n    spriteCache: TextureCache[] = []\r\n    reloadCache: ReloadCache[] = []\r\n    reloadTimeArray = [1, 3, 5]//加载失败后重新加载间隔时间\r\n\r\n    clear() {\r\n        let length = this.spriteCache.length\r\n        for (let i = 0; i < length; i++) {\r\n            cc.loader.releaseAsset(this.spriteCache[i].spriteFrame)\r\n        }\r\n        this.spriteCache = []\r\n        this.reloadCache = []\r\n    }\r\n\r\n    //加载远程图片\r\n    getSprite(key: string, success: Function) {\r\n        let index = this.hasSprite(key)\r\n        if (index >= 0) {\r\n            return success(this.spriteCache[index].spriteFrame)\r\n        }\r\n        let self = this\r\n        GameUtil.loadTexture(key, function (err, texture) {\r\n            if (texture) {\r\n                let frame = new cc.SpriteFrame(texture)\r\n                self.addSprite(key, frame)\r\n                self.removeReloadCache(key)\r\n                return success(frame)\r\n            } else {\r\n                Debug.warn(\"下载图片出错：\", key)\r\n                let time = self.getReloadTime(key)\r\n                if (time > 0) {\r\n                    TimeManager.instance.scheduleOnce(() => {\r\n                        self.getSprite(key, success)\r\n                    }, time)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //加载本地图片\r\n    getLocalSprite(name: string, success: Function) {\r\n        let index = this.hasSprite(name)\r\n        if (index >= 0) {\r\n            return success(this.spriteCache[index].spriteFrame)\r\n        }\r\n        let self = this\r\n        cc.loader.loadRes(\"image/\" + name, cc.SpriteFrame, function (error: Error, resource) {\r\n            if (error) {\r\n                Debug.log(error)\r\n            } else {\r\n                let frame = <cc.SpriteFrame>resource\r\n                self.addSprite(name, frame)\r\n                return success(frame)\r\n            }\r\n        })\r\n    }\r\n\r\n    hasSprite(key: string) {\r\n        let length = this.spriteCache.length\r\n        for (let i = 0; i < length; i++) {\r\n            if (this.spriteCache[i].key == key) {\r\n                return i\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n\r\n    addSprite(key: string, spriteFrame: cc.SpriteFrame) {\r\n        let index = this.hasSprite(key)\r\n        if (index < 0) {\r\n            let spriteData = new TextureCache()\r\n            spriteData.key = key\r\n            spriteData.spriteFrame = spriteFrame\r\n            this.spriteCache.push(spriteData)\r\n        } else {\r\n            this.spriteCache[index].spriteFrame = spriteFrame\r\n        }\r\n    }\r\n\r\n    hasReloadCache(key: string) {\r\n        let length = this.reloadCache.length\r\n        for (let i = 0; i < length; i++) {\r\n            if (this.reloadCache[i].key == key) {\r\n                return i\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n\r\n    removeReloadCache(key: string) {\r\n        let index = this.hasReloadCache(key)\r\n        if (index > 0) {\r\n            this.reloadCache.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    getReloadTime(key: string) {\r\n        let index = this.hasReloadCache(key)\r\n        if (index < 0) {\r\n            let spriteData = new ReloadCache()\r\n            spriteData.key = key\r\n            spriteData.count = 0\r\n            this.reloadCache.push(spriteData)\r\n            if (spriteData.count >= this.reloadTimeArray.length) {\r\n                return -1\r\n            } else {\r\n                return this.reloadTimeArray[spriteData.count]\r\n            }\r\n        } else {\r\n            let spriteData = this.reloadCache[index]\r\n            spriteData.count = spriteData.count + 1\r\n            if (spriteData.count >= this.reloadTimeArray.length) {\r\n                return -1\r\n            } else {\r\n                return this.reloadTimeArray[spriteData.count]\r\n            }\r\n        }\r\n    }\r\n}","import EventManager from \"./event_manager\";\r\nimport AudioManager from \"./audio_manager\";\r\n// import MakePointsManager from \"./make_points_manager\";\r\nimport ModuleManager from \"../framework/core/module_manager\";\r\nimport LogReportManager from \"./log_report_manager\";\r\nimport Debug from \"./debug\";\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nenum TimeType {\r\n    INTERVAL,\r\n    COUNT_DOWN\r\n}\r\n\r\n\r\n@ccclass\r\nexport default class TimeManager extends cc.Component {\r\n\r\n    _needCheckModule: string[] = [\r\n        \"AuthModule\",\r\n        \"HallModule\",\r\n        \"RandomAwardModule\",\r\n        \"RankingMatchStarup\",\r\n        \"DouDiZhuTableModule\",\r\n        \"DouDiZhuMatchingTableModule\",\r\n        \"Match\",\r\n        \"GoldEntranceModule\",\r\n        \"Bag\",\r\n        \"ShopModule\",\r\n        \"CreatRoom\",\r\n        \"HallRank\",\r\n    ]\r\n\r\n    public static readonly instance: TimeManager = new TimeManager();\r\n    backGround = false\r\n\r\n    private _handles = []\r\n    private _serverMarkTime: number = 0//服务器初始化时间\r\n    private _serverLocalDifTime: number = 0//服务器初始化时和本地相差时间\r\n    private _lastTime = 0\r\n\r\n    private _hideTime = 0//切后台的时间\r\n    private _showTime = 0//切到前台的时间\r\n\r\n    private _startCheckBlack = false//开始黑屏检测\r\n    private _blackTimes = 0//检测黑屏次数\r\n\r\n    private _backTarget = \"\"//切到后台前标记，切回前台后使用\r\n\r\n    m_maxId: number = 0\r\n    m_callbackMap = {}\r\n\r\n    AppRunningTime = 0\r\n\r\n    start() {\r\n        if (CC_WECHATGAME) {\r\n            // WXGameManager.onShow(this.wx_game_focus)\r\n            // WXGameManager.onHide(this.wx_game_hide)\r\n            //WXGameManager.onDeviceOrientationChange(this.onDeviceOrientationChange)\r\n        } else {\r\n            cc.game.off(cc.game.EVENT_HIDE, this.onApplicationHide.bind(this))\r\n            cc.game.off(cc.game.EVENT_SHOW, this.onApplicationShow.bind(this))\r\n            cc.game.on(cc.game.EVENT_HIDE, this.onApplicationHide.bind(this))\r\n            cc.game.on(cc.game.EVENT_RESTART, this.onApplicationShow.bind(this))\r\n            cc.view.getScaleX\r\n        }\r\n    }\r\n\r\n    setBackTarget(value: string) {\r\n        TimeManager.instance._backTarget = value\r\n    }\r\n\r\n    getBackTarget() {\r\n        return TimeManager.instance._backTarget\r\n    }\r\n\r\n\r\n\r\n\r\n    private onApplicationHide() {\r\n        TimeManager.instance._hideTime = Date.now()\r\n        Debug.log(\"切到后台了！\", TimeManager.instance._hideTime)\r\n        this.backGround = true\r\n        AudioManager.instance.release()//必须释放掉声音，不然微信中切到前台会自动播放缓存的声音\r\n        EventManager.instance.dispatch(\"game_event_show\", false)\r\n    }\r\n\r\n    private onApplicationShow() {\r\n        TimeManager.instance._showTime = Date.now()\r\n        let difTime = TimeManager.instance._showTime - TimeManager.instance._hideTime\r\n        Debug.log(\"切到前台了！\", TimeManager.instance._showTime, difTime)\r\n        this.backGround = false\r\n        EventManager.instance.dispatch(\"game_event_show\", true, difTime, TimeManager.instance._backTarget)\r\n        //MatchingManager.instance.dealSpecialQrcode(28)\r\n    }\r\n\r\n    //轮询 name为key值 每个interval调用一次callback count是执行次数不传或0都是无限次\r\n    setInerval(name: string, callback: Function, target: any, interval: number, count?: number) {\r\n        let index = this.hasHander(name, callback, TimeType.INTERVAL)\r\n        if (index > 0) {\r\n            TimeManager.instance._handles[index].remove = true\r\n        }\r\n        let data = {\r\n            type: TimeType.INTERVAL,\r\n            name: name,\r\n            callback: callback,\r\n            target: target,\r\n            interval: interval,//间隔\r\n            totalCount: count ? count : 0,//interval执行总次数\r\n            curCount: 0,//当前执行了多少次\r\n            progress: 0,//每执行一次 进度每秒加1\r\n            remove: false,\r\n            step: (nowTime) => {\r\n                data.progress++\r\n                if (data.progress >= data.interval) {//可以执行一次了\r\n                    data.progress = 0\r\n                    data.curCount++\r\n                    let callback: Function = data.callback\r\n                    callback.call(data.target, data.curCount)\r\n                    if (data.curCount >= data.totalCount && data.totalCount) {//所有interval已经完成\r\n                        data.remove = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        TimeManager.instance._handles.push(data)\r\n    }\r\n\r\n    //倒计时 name 为key值 间隔interval秒后调用callback\r\n    countDown(name: string, callback: Function, target: any, interval: number) {\r\n        let now = this.getServerTime()\r\n        let index = this.hasHander(name, callback)\r\n        if (index > 0) {\r\n            TimeManager.instance._handles[index].remove = true\r\n        }\r\n        let data = {\r\n            type: TimeType.COUNT_DOWN,\r\n            name: name,\r\n            callback: callback,\r\n            target: target,\r\n            targetTime: now + interval,\r\n            remove: false,\r\n            step: (nowTime) => {\r\n                if (data.targetTime <= nowTime && data.remove == false && data.target) {\r\n                    let callback: Function = data.callback\r\n                    callback.call(data.target)\r\n                    data.remove = true\r\n                }\r\n            }\r\n        }\r\n        TimeManager.instance._handles.push(data)\r\n    }\r\n\r\n    //倒计时 name 为key值  到targetTime时调用callback\r\n    countDownTargetTime(name: string, callback: Function, target: any, targetTime: number) {\r\n        let index = this.hasHander(name, callback)\r\n        if (index >= 0) {\r\n            TimeManager.instance._handles[index].remove = true\r\n        }\r\n        let data = {\r\n            type: TimeType.COUNT_DOWN,\r\n            name: name,\r\n            callback: callback,\r\n            target: target,\r\n            targetTime: targetTime,\r\n            remove: false,\r\n            step: (nowTime) => {\r\n                if (data.targetTime <= nowTime && data.remove == false && data.target) {\r\n                    let callback: Function = data.callback\r\n                    callback.call(data.target)\r\n                    data.remove = true\r\n                }\r\n            }\r\n        }\r\n        TimeManager.instance._handles.push(data)\r\n    }\r\n\r\n    offAllByKey(name: string) {\r\n        let length = TimeManager.instance._handles.length\r\n        for (let i = 0; i < length; i++) {\r\n            let data = TimeManager.instance._handles[i]\r\n            if (data.name == name) {\r\n                TimeManager.instance._handles[i].remove = true\r\n            }\r\n        }\r\n    }\r\n\r\n    offCountDown(name: string, callback: Function) {\r\n        this.offHander(name, callback, TimeType.COUNT_DOWN)\r\n    }\r\n\r\n    offInterval(name: string, callback: Function) {\r\n        this.offHander(name, callback, TimeType.INTERVAL)\r\n    }\r\n\r\n    private offHander(name: string, callback: Function, type = TimeType.COUNT_DOWN) {\r\n        let index = this.hasHander(name, callback, type)\r\n        if (index >= 0) {\r\n            TimeManager.instance._handles[index].remove = true\r\n        }\r\n    }\r\n\r\n    private hasHander(name: string, callback: Function, type = TimeType.COUNT_DOWN) {\r\n        let length = TimeManager.instance._handles.length\r\n        for (let i = 0; i < length; i++) {\r\n            let data = TimeManager.instance._handles[i]\r\n            if (data.type == type && data.callback == callback && data.name == name) {\r\n                return i\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n\r\n    //初始化服务器时间\r\n    initServerTime(serverTime: number) {\r\n        this._serverMarkTime = serverTime\r\n        this._serverLocalDifTime = Math.floor(new Date().getTime() / 1000) - serverTime\r\n    }\r\n\r\n    //没有初始化得到的是本地时间\r\n    getServerTime() {\r\n        let nowTime = Math.floor(new Date().getTime() / 1000)\r\n        if (this._serverMarkTime <= 0) {\r\n            return nowTime\r\n        }\r\n        return nowTime - this._serverLocalDifTime\r\n    }\r\n\r\n    //TimeManager每秒执行一次 所有TimeManager中的方法都是以秒为精确的 可能有1秒内误差\r\n    private step() {\r\n        let nowTime = this.getServerTime()\r\n        for (let i = 0; i < TimeManager.instance._handles.length; i++) {\r\n            let data = TimeManager.instance._handles[i]\r\n            if (!data.remove && data.target) {\r\n                data.step(nowTime)\r\n            } else {\r\n                TimeManager.instance._handles.splice(i, 1)\r\n                i--\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    update(dt) {//切到后台不执行和cc.schedule一样\r\n        TimeManager.instance.AppRunningTime += dt\r\n        let now = Date.now()\r\n        if (this._lastTime == 0 || this._lastTime + 1000 < now) {\r\n            this._lastTime = now\r\n            this.step()\r\n            this.checkBlack()\r\n        }\r\n    }\r\n\r\n    //检测黑屏\r\n    startCheckBlack() {\r\n        TimeManager.instance._startCheckBlack = true\r\n    }\r\n\r\n    checkBlack() {\r\n        if (!TimeManager.instance._startCheckBlack) {\r\n            return\r\n        }\r\n\r\n        for (let i = 0; i < TimeManager.instance._needCheckModule.length; i++) {\r\n            let isActive = ModuleManager.instance.moduleHasActive(TimeManager.instance._needCheckModule[i])\r\n            if (isActive) {\r\n                TimeManager.instance._blackTimes = 0\r\n                return\r\n            }\r\n        }\r\n\r\n        TimeManager.instance._blackTimes = TimeManager.instance._blackTimes + 1\r\n        if (TimeManager.instance._blackTimes > 3) {\r\n            TimeManager.instance._blackTimes = 0\r\n            ModuleManager.instance.setModuleActive(\"HallModule\")\r\n            cc.error(\"出现了黑屏\")\r\n            LogReportManager.report(\"出现了黑屏\")\r\n        }\r\n    }\r\n\r\n\r\n    private genId() {\r\n        return ++this.m_maxId\r\n    }\r\n\r\n    doSchedule(callback: Function, interval?: number, repeat?: number, delay?: number) {\r\n        let self = this\r\n        let id = this.genId()\r\n        let tmpFun = function () {\r\n            if (!repeat) {\r\n                self.cancelSchedule(id)\r\n            }\r\n            callback()\r\n        }\r\n        this.m_callbackMap[Number(id)] = tmpFun\r\n        this.schedule(tmpFun, interval, repeat, delay)\r\n        return id\r\n    }\r\n\r\n    doScheduleOnce(callback: Function, delay: number): number {\r\n        let self = this\r\n        let id = this.genId()\r\n        let tmpFun = function () {\r\n            this.m_callbackMap[id.toString()] = null\r\n            callback()\r\n        }\r\n        this.m_callbackMap[Number(id)] = tmpFun\r\n        this.scheduleOnce(tmpFun, delay)\r\n        return id\r\n    }\r\n\r\n    cancelSchedule(id: number) {\r\n        let key = id.toString()\r\n        let callback = this.m_callbackMap[key]\r\n        if (callback) {\r\n            this.unschedule(callback)\r\n            this.m_callbackMap[key] = null\r\n        }\r\n    }\r\n\r\n    cleanDoShedules() {\r\n        let object = this.m_callbackMap\r\n        let list = []\r\n        for (const key in object) {\r\n            if (object.hasOwnProperty(key)) {\r\n                list.push(key)\r\n            }\r\n        }\r\n        for (let i = 0; i < list.length; i++) {\r\n            const key = list[i];\r\n            this.cancelSchedule(Number(key))\r\n        }\r\n        this.m_callbackMap = {}\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\nimport ViewBase from \"../../../../framework/core/mvvm/view_base\";\r\n\r\n@ccclass\r\nexport default class ToastView extends ViewBase {\r\n\r\n    @property(cc.Node)\r\n    holder : cc.Node = null\r\n\r\n}","//默认导入\r\nconst { ccclass, property } = cc._decorator;\r\nimport ModuleBase, { ViewLayer, moduleInit } from \"../../../../framework/core/mvvm/module_base\";\r\nimport ToastView from \"./toast_view\";\r\n\r\n\r\n@ccclass\r\n@moduleInit(\"Toast\")\r\nexport default class Toast extends ModuleBase<ToastView, null> {\r\n\r\n    constructor() {\r\n        super();\r\n        this.package = \"public\";\r\n        this.layer = ViewLayer.High;\r\n        this.windowPrefabResPath = \"package/public/public_toast\";\r\n        this.viewType = ToastView;\r\n    }\r\n\r\n    onShow(intentData?: any) {\r\n        if (intentData && typeof (intentData) == \"object\") {\r\n            let text = intentData.text\r\n            let long = intentData.long\r\n            this._show(text, long)\r\n        } else {\r\n            this._show(intentData)\r\n        }\r\n    }\r\n\r\n    _show(text, long?: boolean) {\r\n        let node = cc.instantiate(this.view.holder);\r\n        this.view.node.addChild(node)\r\n        let spriteBackground = node.getChildByName(\"SpriteBackground\").getComponent(cc.Sprite)\r\n        let textLabel = node.getChildByName(\"Label\").getComponent(cc.Label)\r\n        textLabel.string = text; \r\n        //@ts-ignore\r\n        if (!CC_JSB) {\r\n            //@ts-ignore\r\n            textLabel._updateRenderData(true)//刷新Label宽高度   \r\n        }  \r\n        spriteBackground.node.width = textLabel.node.width + 40;\r\n        let finished = cc.callFunc(function (target) {\r\n            node.destroy();\r\n        }, this);\r\n        let time1 = 1\r\n        let time2 = 0.6\r\n        if (long) {\r\n            time1 = 2\r\n            time2 = 1.2\r\n        }\r\n\r\n        //需求变更：不向上飘动\r\n        let action = cc.sequence(cc.moveBy(time1, cc.v2(0, 50)), cc.fadeOut(time2), finished);\r\n        node.runAction(action);\r\n    }\r\n}","\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class ToggleItem extends cc.Component {\r\n\r\n    @property(cc.Float)\r\n    startPos:number = 0;\r\n\r\n    @property(cc.Float)\r\n    dis:number = 0;\r\n\r\n    private childToggle:cc.Toggle[] = [];\r\n\r\n    init(){\r\n        \r\n    }\r\n}\r\n","import ModuleManager from \"../../../framework/core/module_manager\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/UIStateSwitcher')\r\nexport default class UIStateSwitcher extends cc.Component {\r\n\r\n    showChild(name: string, playAnim = false, needMask = false) {\r\n        let length = this.node.childrenCount\r\n        for (let i = 0; i < length; i++) {\r\n            let child = this.node.children[i]\r\n            if (child.name == name) {\r\n                // if (!child.active && playAnim) {\r\n                //     let mask = this._findMask(child)\r\n                //     let target = child\r\n                //     let mainNode = child.getChildByName(\"MainNode\")\r\n                //     if (mainNode) {\r\n                //         target = mainNode\r\n                //     }\r\n                //     child.active = true\r\n                //     target.active = true\r\n                //     if (mask != null && needMask) {\r\n                //         ModuleManager.instance.playAnim(true, target, mask)\r\n                //     } else {\r\n                //         ModuleManager.instance.playAnim(true, target)\r\n                //     }\r\n                // } else {\r\n                //     child.active = true\r\n                // }\r\n                child.active = true\r\n            } else {\r\n                child.active = false\r\n            }\r\n        }\r\n    }\r\n\r\n    _findMask(target: cc.Node) {\r\n        let length = target.childrenCount\r\n        for (let i = 0; i < length; i++) {\r\n            if (target.children[i].name == \"Mask\") {\r\n                return target.children[i]\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    isChildActive(name: string) {\r\n        let length = this.node.childrenCount\r\n        for (let i = 0; i < length; i++) {\r\n            let child = this.node.children[i]\r\n            if (child.name == name) {\r\n                return child.active\r\n            }\r\n        }\r\n    }\r\n\r\n    hasChildActive() {\r\n        let length = this.node.childrenCount\r\n        for (let i = 0; i < length; i++) {\r\n            let child = this.node.children[i]\r\n            if (child.active) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    hideAll() {\r\n        let length = this.node.childrenCount\r\n        for (let i = 0; i < length; i++) {\r\n            this.node.children[i].active = false\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","\r\nexport interface IUserData {\r\n    avatarUrl?:string;\r\n    coin?:number;\r\n    gender?:number;\r\n    uid?:number;\r\n    name?:string;\r\n    openid?:number;\r\n}\r\n\r\n//用户类\r\nexport default class UserDataManager {\r\n\r\n    public static readonly instance: UserDataManager = new UserDataManager();\r\n\r\n    private _userInfo:IUserData = null;\r\n\r\n    mChairID:number = null;\r\n    mPlayerCount:number = null;\r\n\r\n    setUserData(data:any){\r\n        this._userInfo = data;\r\n    }\r\n\r\n    getUserData():IUserData{\r\n        return this._userInfo;\r\n    }\r\n\r\n    isMale(){\r\n        return this._userInfo.gender == 1;\r\n    }\r\n}","\r\n\r\nimport AudioManager from \"../manager/audio_manager\"\r\nimport GrayLable from \"../pacakge/public/ui/GrayLable\";\r\nimport TextureManager from \"../manager/texture_manager\";\r\nimport Debug from \"../manager/debug\";\r\nimport { randomBytes } from \"crypto\";\r\nimport {Base64} from \"../utility/base64\"\r\n\r\nlet grayMateral\r\nlet normalMaterial\r\n\r\nexport default class Utility {\r\n\r\n    public static readonly instance: Utility = new Utility();\r\n\r\n    _lastClickTime = 0\r\n    _lastAnimTime = 0\r\n    _screenSize: cc.Size = null\r\n\r\n    random(min: number, max: number): number {\r\n\r\n        let range = max - min;\r\n\r\n        return min + Math.random() * range;\r\n    }\r\n\r\n    randomToInt(min: number, max: number): number {\r\n\r\n        let range = max - min;\r\n\r\n        return Math.round(min + Math.random() * range);\r\n    }\r\n\r\n    randomInsideRadius(radius: number = 1): cc.Vec2 {\r\n\r\n        let vec = new cc.Vec2();\r\n        vec.x = this.random(-radius, radius);\r\n\r\n        vec.y = Math.sqrt(radius * radius - vec.x * vec.x) * this.random(-1, 1);\r\n\r\n        return vec;\r\n    }\r\n\r\n    decodeBase64(content : string){\r\n        return Base64.decode(content);\r\n    }\r\n\r\n    nowTimestamp(): number {\r\n        return Math.floor(Date.now() * 0.001)\r\n    }\r\n\r\n    formateNumb(coin:number){\r\n        return coin? coin < 1e4 ? coin : coin < 1e6 ? (coin / 1e4).toFixed(2) + \"万\" : coin < 1e8 ? Math.floor(coin / 1e4) + \"万\" : (coin / 1e8).toFixed(3) + \"亿\" : 0;\r\n    }\r\n\r\n    setBtnGray(btn: cc.Button, isGray: boolean) {\r\n        if (btn == null) {\r\n            cc.warn(\"置灰按钮为null\")\r\n            return\r\n        }\r\n        btn.interactable = !isGray;\r\n        btn.enableAutoGrayEffect = isGray;\r\n        this.setNodeGray(btn.node,isGray);\r\n    }\r\n    setNodeGray(node: cc.Node, isGray: boolean) {\r\n        let coms = node.getComponents(cc.Sprite).concat(node.getComponentsInChildren(cc.Sprite))\r\n        for (let i = 0; i < coms.length; i++) {\r\n            const element = coms[i];\r\n            if (isGray) {\r\n                this.setGray(element)\r\n            } else {\r\n                this.resetGray(element)\r\n            }\r\n        }\r\n        let grayLabls = node.getComponents(GrayLable).concat(node.getComponentsInChildren(GrayLable))\r\n        for (let i = 0; i < grayLabls.length; i++) {\r\n            const element = grayLabls[i];\r\n            if (isGray) {\r\n                element.enabled = true\r\n            } else {\r\n                element.enabled = false\r\n            }\r\n        }\r\n    }\r\n\r\n    isGray(sp: cc.Sprite): boolean {\r\n        return sp.getState() == cc.Sprite.State.GRAY\r\n    }\r\n\r\n    //图片置灰\r\n    setGray(sp: cc.Sprite) {\r\n        //@ts-ignore\r\n        grayMateral = grayMateral || cc.Material.getBuiltinMaterial(\"2d-gray-sprite\");        \r\n        // sp.setState(cc.Sprite.State.GRAY)//置灰\r\n        sp.setMaterial(0, grayMateral)\r\n    }\r\n\r\n    //取消图片置灰\r\n    resetGray(sp: cc.Sprite) {\r\n        //@ts-ignore\r\n        normalMaterial = normalMaterial || (normalMaterial = cc.Material.getBuiltinMaterial(\"2d-sprite\", sp));\r\n        // sp.setState(cc.Sprite.State.NORMAL) //正常\r\n        sp.setMaterial(0, normalMaterial)\r\n    }\r\n\r\n    //时间format yyyy-MM-dd hh:mm\r\n    formatTime(timestamp?: number, pattern?: string) {\r\n        var date = null\r\n        if (timestamp == null) {\r\n            date = new Date()\r\n        } else {\r\n            date = new Date(timestamp * 1000);\r\n        }\r\n\r\n        if (pattern == null || pattern == \"\") {\r\n            pattern = \"yyyy-MM-dd hh:mm\"\r\n        }\r\n\r\n        let o = {\r\n            \"M+\": date.getMonth() + 1,\r\n            \"d+\": date.getDate(),\r\n            \"h+\": date.getHours(),\r\n            \"m+\": date.getMinutes(),\r\n            \"s+\": date.getSeconds(),\r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3),\r\n            \"S\": date.getMilliseconds()\r\n        };\r\n\r\n        if (/(y+)/.test(pattern)) {\r\n            pattern = pattern.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        }\r\n\r\n        for (var k in o) {\r\n            if (new RegExp(\"(\" + k + \")\").test(pattern)) {\r\n                pattern = pattern.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\r\n            }\r\n        }\r\n        return pattern\r\n    }\r\n\r\n    //time服务器传的时间戳\r\n    getDate(time) {\r\n        let date = new Date(time.replace(/-/g, '/'))\r\n        let year = date.getFullYear() < 10 ? \"0\" + date.getFullYear() : \"\" + date.getFullYear()\r\n        let month = (date.getMonth() + 1) < 10 ? \"0\" + (date.getMonth() + 1) : \"\" + (date.getMonth() + 1)\r\n        let day = date.getDate() < 10 ? \"0\" + date.getDate() : \"\" + date.getDate()\r\n        let data = { year: year, month: month, day: day }\r\n        return data\r\n    }\r\n\r\n    notIOS() {\r\n        if (!this.isMobile()) {\r\n            return true\r\n        }\r\n        return cc.sys.OS_IOS != cc.sys.os\r\n    }\r\n\r\n    //是否是手机系统\r\n    isMobile() {\r\n        return cc.sys.isMobile\r\n    }\r\n\r\n    //str 需要截断的字符串\r\n    //maxChars 保留的汉字长度\r\n    //suffix 添加的后缀 （注意，如果后缀不为null或者'' ，则要占用一个汉字的位置,具体看下方的示例代码)\r\n    playerNameClamp(str, maxChars, suffix) {\r\n        var toCodePoint = function (unicodeSurrogates) {\r\n            var r = [], c = 0, p = 0, i = 0;\r\n            while (i < unicodeSurrogates.length) {\r\n                var pos = i;\r\n                c = unicodeSurrogates.charCodeAt(i++);//返回位置的字符的 Unicode 编码 \r\n                if (c == 0xfe0f) {\r\n                    continue;\r\n                }\r\n                if (p) {\r\n                    var value = (0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00));\r\n                    r.push({\r\n                        v: value,\r\n                        pos: pos,\r\n                    }); //计算4字节的unicode\r\n                    p = 0;\r\n                } else if (0xD800 <= c && c <= 0xDBFF) {\r\n                    p = c; //如果unicode编码在oxD800-0xDBff之间，则需要与后一个字符放在一起\r\n                } else {\r\n                    r.push({\r\n                        v: c,\r\n                        pos: pos\r\n                    }); //如果是2字节，直接将码点转为对应的十六进制形式\r\n                }\r\n            }\r\n            return r;\r\n        }\r\n\r\n        suffix = suffix == null ? '..' : suffix;\r\n        maxChars *= 2;\r\n        var codeArr = toCodePoint(str);\r\n        var numChar = 0;\r\n        var index = 0;\r\n        for (var i = 0; i < codeArr.length; ++i) {\r\n            var code = codeArr[i].v;\r\n            var add = 1;\r\n            if (code >= 128) {\r\n                add = 2;\r\n            }\r\n            //如果超过了限制，则按上一个为准\r\n            if (numChar + add > maxChars) {\r\n                break;\r\n            }\r\n            index = i;\r\n            //累加\r\n            numChar += add;\r\n        }\r\n        if (codeArr.length - 1 == index) {\r\n            return str;\r\n        }\r\n        var more = suffix ? 1 : 0;\r\n        return str.substring(0, codeArr[index - more].pos + 1) + suffix;\r\n    }\r\n\r\n    //获取输入中文文字长度 数字字母算半个\r\n    getNameLen(name: string) {\r\n        if (name == \"\") {\r\n            return 0\r\n        }\r\n        let lenInByte = name.length\r\n        let inputLen = 0\r\n        let i = 0\r\n        while (i < lenInByte) {\r\n            let curByte = name.charCodeAt(i)\r\n            let addLen = 0\r\n            if (curByte > 0 && curByte <= 127) {\r\n                addLen = 0.5\r\n            }\r\n            else if (curByte >= 192 && curByte < 223) {\r\n                addLen = 1\r\n            }\r\n            else if (curByte >= 224 && curByte < 239) {\r\n                addLen = 1\r\n            }\r\n            else if (curByte >= 240 && curByte <= 247) {\r\n                addLen = 1\r\n            }\r\n            else {\r\n                addLen = 1\r\n            }\r\n\r\n            inputLen = inputLen + addLen\r\n            i = i + 1\r\n        }\r\n        return inputLen\r\n    }\r\n\r\n    filterPlayerName(name: string, maxCharLen?: number) {\r\n        if (name == \"\") {\r\n            return \"\"\r\n        }\r\n        maxCharLen = maxCharLen || 8\r\n        let newName = \"\"\r\n        let lenInByte = name.length\r\n        let inputLen = 0\r\n        let i = 0\r\n        while (i < lenInByte) {\r\n            let curByte = name.charCodeAt(i)\r\n            let byteCount = 1;\r\n            let addLen = 0\r\n            if (curByte > 0 && curByte <= 127) {\r\n                byteCount = 1                                               //1字节字符\r\n                addLen = 1\r\n            }\r\n            else if (curByte >= 192 && curByte < 223) {\r\n                byteCount = 2                                               //双字节字符\r\n                addLen = 2\r\n            }\r\n            else if (curByte >= 224 && curByte < 239) {\r\n                byteCount = 3                                               //汉字\r\n                addLen = 2\r\n            }\r\n            else if (curByte >= 240 && curByte <= 247) {\r\n                byteCount = 4                                               //4字节字符\r\n                addLen = 2\r\n            }\r\n            else {\r\n                byteCount = 3\r\n                addLen = 2\r\n            }\r\n            if (inputLen + addLen > maxCharLen) {\r\n                return newName + \"..\"\r\n            }\r\n            inputLen = inputLen + addLen\r\n            let char = name.charAt(i)\r\n            i = i + 1\r\n            newName = newName + char\r\n        }\r\n        return newName\r\n    }\r\n\r\n    //隐藏所有子对象\r\n    hideAllChildren(parent: cc.Node) {\r\n        let length = parent.childrenCount\r\n        for (let i = 0; i < length; i++) {\r\n            parent.children[i].active = false\r\n        }\r\n    }\r\n\r\n    //获取[under,over]之间整数随机值\r\n    getIntRandom(under: number = 0, over: number = 0) {\r\n        return Math.floor(Math.random() * (over - under + 1) + under)\r\n    }\r\n\r\n    //播放按钮点击声音\r\n    playButtonSound() {\r\n        let url = \"sound/public/button\"\r\n        AudioManager.instance.playSound(url, false)\r\n    }\r\n\r\n    //播放获得奖励声音\r\n    playRewardSound() {\r\n        let url = \"sound/public/huojiang\"\r\n        AudioManager.instance.playSound(url, false)\r\n    }\r\n\r\n    //两个number数组是否相等\r\n    isNumArrayEquel(a: number[], b: number[]) {\r\n        if (a.length != b.length) {\r\n            return false\r\n        }\r\n        for (let i = 0; i < a.length; i++) {\r\n            let index = b.indexOf(a[i])\r\n            if (index < 0) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    // 时间戳\r\n    timeStamp() {\r\n        return \"\" + (new Date().getTime() / 1000)\r\n    }\r\n\r\n    // 随机数\r\n    randomString() {\r\n        var chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/\r\n        var maxPos = chars.length;\r\n        var pwd = '';\r\n        for (var i = 0; i < 32; i++) {\r\n            pwd += chars.charAt(Math.floor(Math.random() * maxPos));\r\n        }\r\n        return pwd;\r\n    }\r\n\r\n    //重置sprite大小\r\n    resetSpriteSize(sprite: cc.Sprite, maxWH?: number) {\r\n        if (maxWH) {\r\n            let v2 = sprite.spriteFrame.getOriginalSize()\r\n            let max = Math.max(v2.width, v2.height)\r\n            let scale = 1\r\n            if (max > maxWH) {\r\n                scale = maxWH / max\r\n            }\r\n            sprite.node.setContentSize(v2.width * scale, v2.height * scale)\r\n        } else {\r\n            let v2 = sprite.spriteFrame.getOriginalSize()\r\n            sprite.node.setContentSize(v2)\r\n        }\r\n    }\r\n\r\n    scaleSpriteToSize(sprite: cc.Sprite, spriteFrame: cc.SpriteFrame, maxWH: number) {\r\n        let v2 = spriteFrame.getOriginalSize()\r\n        let width = v2.width\r\n        let height = v2.height\r\n        if (width > height) {\r\n            width = maxWH\r\n            height = (v2.height / v2.width) * maxWH\r\n        } else {\r\n            height = maxWH\r\n            width = (v2.width / v2.height) * maxWH\r\n        }\r\n        sprite.spriteFrame = spriteFrame\r\n        sprite.node.setContentSize(width, height)\r\n    }\r\n\r\n    //防止打断动画播放\r\n    lastAnimValid(intervalTime?: number) {\r\n        let time = 300\r\n        if (intervalTime) {\r\n            time = intervalTime\r\n        }\r\n        let cur = new Date().getTime()\r\n        if (cur - this._lastAnimTime < time) {\r\n            return false\r\n        } else {\r\n            this._lastAnimTime = cur\r\n            return true\r\n        }\r\n    }\r\n\r\n    //防止用户连续点击\r\n    btnClickValid(intervalTime?: number) {\r\n        let time = 400\r\n        if (intervalTime) {\r\n            time = intervalTime\r\n        }\r\n        let cur = new Date().getTime()\r\n        if (cur - this._lastClickTime < time) {\r\n            return false\r\n        } else {\r\n            this._lastClickTime = cur\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    //获取用户头像的地址\r\n    getUserHeadImagePath(headImg: string) {\r\n        if (!headImg || headImg == \"\" || headImg == \"http://www.sincebest.com/app/lyfivestar/images/guest.png\") {\r\n            return \"https://game.oss.sincebest.com/image/guest.png\"\r\n        } else {\r\n            return headImg\r\n        }\r\n    }\r\n\r\n\r\n    getLabelSize(str: string, label: cc.Label) {\r\n        label.string = str\r\n        if (!CC_JSB) {\r\n            //@ts-ignore\r\n            label._updateRenderData(true)//cocos 2.0.1版本以后用此方法可以刷新label的宽高\r\n        }\r\n        return label.node.getContentSize()\r\n    }\r\n\r\n    getPrefabNode(index: number, parent: cc.Node, prefab: cc.Node): cc.Node {\r\n        if (parent.childrenCount <= index) {\r\n            var node = cc.instantiate(prefab)\r\n            node.position = cc.v2(0, 0)\r\n            node.scale = 1\r\n            node.parent = parent\r\n            node.active = false\r\n            return this.getPrefabNode(index, parent, prefab)\r\n        }\r\n        else {\r\n            return parent.children[index]\r\n        }\r\n    }\r\n\r\n    getScreenSize() {\r\n        if (this._screenSize) {\r\n            return this._screenSize\r\n        }\r\n        let canvas = cc.find(\"GameRoot/UI\")\r\n        return canvas.getContentSize()\r\n    }\r\n\r\n    getDesignResolutionSize() {\r\n        if (this._screenSize) {\r\n            return this._screenSize\r\n        }\r\n        let canvas = cc.find(\"GameRoot/UI\").getComponent(cc.Canvas)\r\n        return canvas.designResolution\r\n    }\r\n\r\n\r\n\r\n\r\n    public strIsContain(sourceStr, needStr) {\r\n        if (!sourceStr) {\r\n            return false\r\n        }\r\n\r\n        if (!needStr) {\r\n            return false\r\n        }\r\n\r\n        if (sourceStr.indexOf(needStr) != -1) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    public setHeadFrame(url: string, sprite: cc.Sprite, self, size: number = 95) {\r\n        if (!url) {\r\n            return\r\n        }\r\n        TextureManager.instance.getSprite(url, (frame) => {\r\n            if (self && self.isValid && frame) {\r\n                //frame.setOriginalSize(cc.size(121, 112))\r\n                sprite.spriteFrame = frame\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    getStrLength(str) {\r\n        if (str) {\r\n            return 0\r\n        }\r\n        var toCodePoint = function (unicodeSurrogates) {\r\n            var r = [], c = 0, p = 0, i = 0;\r\n            while (i < unicodeSurrogates.length) {\r\n                var pos = i;\r\n                c = unicodeSurrogates.charCodeAt(i++);//返回位置的字符的 Unicode 编码\r\n                if (c == 0xfe0f) {\r\n                    continue;\r\n                }\r\n                if (p) {\r\n                    var value = (0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00));\r\n                    r.push({\r\n                        v: value,\r\n                        pos: pos,\r\n                    }); //计算4字节的unicode\r\n                    p = 0;\r\n                } else if (0xD800 <= c && c <= 0xDBFF) {\r\n                    p = c; //如果unicode编码在oxD800-0xDBff之间，则需要与后一个字符放在一起\r\n                } else {\r\n                    r.push({\r\n                        v: c,\r\n                        pos: pos\r\n                    }); //如果是2字节，直接将码点转为对应的十六进制形式\r\n                }\r\n            }\r\n            return r;\r\n        }\r\n\r\n        var codeArr = toCodePoint(str);\r\n        var numChar = 0;\r\n\r\n        for (var i = 0; i < codeArr.length; ++i) {\r\n            var code = codeArr[i].v;\r\n            var add = 1;\r\n            if (code >= 128) {\r\n                add = 2;\r\n            }\r\n            numChar += add;\r\n        }\r\n\r\n        return numChar\r\n    }\r\n\r\n    public resetAnimation(anim: cc.Animation) {\r\n        if (!anim) {\r\n            return\r\n        }\r\n        anim.setCurrentTime(0)\r\n    }\r\n\r\n    findChildNode(node: cc.Node, path: string): cc.Node {\r\n        let index = path.indexOf('/')\r\n        if (index > 0) {\r\n            let name = path.substring(0, index)\r\n            if (index + 1 < path.length) {\r\n                path = path.substring(index + 1)\r\n                let child = node.getChildByName(name)\r\n                if (child) {\r\n                    return this.findChildNode(child, path)\r\n                }\r\n                return null\r\n            } else {\r\n                return node.getChildByName(name)\r\n            }\r\n        } else {\r\n            return node.getChildByName(path)\r\n        }\r\n\r\n    }\r\n\r\n    // 货币格式\r\n    static currencyFormatting(num: number, isInt: boolean = false) {\r\n        let numStr: string = (num.toFixed(2) || 0).toString(), result = '';\r\n        let arr = numStr.split(\".\");\r\n        let beforeStr = arr[0];\r\n\r\n        while (beforeStr.length > 3) {\r\n            result = ',' + beforeStr.slice(-3) + result;\r\n            beforeStr = beforeStr.slice(0, beforeStr.length - 3);\r\n        }\r\n        if (beforeStr) { result = beforeStr + result; }\r\n        if (isInt) { return result }\r\n        if (arr.length > 1) {\r\n            result = result + \".\" + arr[1];\r\n        }\r\n        return result;\r\n    }\r\n\r\n}","import Debug from \"./debug\";\r\nimport EventManager from \"./event_manager\";\r\nimport AppData from \"../pacakge/public/const/app_data\";\r\nimport LoaclStorage from \"./local_storage\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class VersionManager extends cc.Component{\r\n\r\n    public static instance : VersionManager;\r\n\r\n    private storagePath : string ;\r\n    private assetManager : any;\r\n\r\n    private updating: boolean;\r\n    private canRetry: boolean;\r\n\r\n    private progress : number;\r\n\r\n    @property(cc.Object)\r\n    public manifestUrl : cc.Asset = null;\r\n        \r\n    onLoad() {               \r\n        VersionManager.instance = this;   \r\n    \r\n    }\r\n\r\n    public checkVersion(){\r\n\r\n        // Hot update is only available in Native build\r\n        if (!cc.sys.isNative) {\r\n            return;\r\n        }                \r\n\r\n        if (!this.manifestUrl) {\r\n            Debug.error(\" the manifestUrl is null \");\r\n            return;\r\n        }\r\n\r\n        this.storagePath = ((jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/') + 'remote-asset-ssqp');\r\n        cc.log('Storage path for remote asset : ' + this.storagePath);\r\n        \r\n        let self = this;\r\n\r\n        // Init with empty manifest url for testing custom manifest\r\n        this.assetManager = new jsb.AssetsManager('', this.storagePath, this.versionCompareHandle.bind(this));\r\n        \r\n        // Setup the verification callback, but we don't have md5 check function yet, so only print some message\r\n        // Return true if the verification passed, otherwise return false\r\n        this.assetManager.setVerifyCallback(function (path, asset) {\r\n            // When asset is compressed, we don't need to check its md5, because zip file have been deleted.\r\n            var compressed = asset.compressed;\r\n            // Retrieve the correct md5 value.\r\n            var expectedMD5 = asset.md5;\r\n            // asset.path is relative path and path is absolute.\r\n            var relativePath = asset.path;\r\n            // The size of asset file, but this value could be absent.\r\n            var size = asset.size;\r\n\r\n            if (compressed) {\r\n                //self.panel.info.string = \"Verification passed : \" + relativePath;\r\n                return true;\r\n            }\r\n            else {\r\n                //self.panel.info.string = \"Verification passed : \" + relativePath + ' (' + expectedMD5 + ')';\r\n                return true;\r\n            }\r\n        });\r\n\r\n        //this.panel.info.string = 'Hot update is ready, please check or directly update.';\r\n\r\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\r\n            // Some Android device may slow down the download process when concurrent tasks is too much.\r\n            // The value may not be accurate, please do more test and find what's most suitable for your game.\r\n            this.assetManager.setMaxConcurrentTask(2);\r\n            //this.panel.info.string = \"Max concurrent tasks count have been limited to 2\";\r\n        }\r\n        \r\n        //this.panel.fileProgress.progress = 0;\r\n        //this.panel.byteProgress.progress = 0;\r\n\r\n        this.checkUpdate();\r\n\r\n    }\r\n\r\n    private versionCompare(versionA , versionB ) : number{\r\n\r\n        var vA = versionA.split('.');\r\n        var vB = versionB.split('.');   \r\n\r\n        for (var i = 0; i < vA.length; ++i) {\r\n            var a = parseInt(vA[i]);\r\n            var b = parseInt(vB[i] || 0);\r\n            if (a == b) {\r\n                continue;\r\n            }\r\n            else {       \r\n                return a - b;\r\n            }\r\n        }\r\n        \r\n        if (vB.length > vA.length) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        } \r\n    }\r\n\r\n    // Setup your own version compare handler, localVer and remoteVer is versions in string\r\n    // if the return value greater than 0, localVer is greater than remoteVer,\r\n    // if the return value equals 0, localVer equals to remoteVer,\r\n    // if the return value smaller than 0, localVer is smaller than remoteVer.\r\n    private versionCompareHandle (localVer, remoteVer) {\r\n\r\n        cc.log(\"JS Custom Version Compare: local version is \" + localVer + ', remote version is ' + remoteVer);\r\n        var vA = localVer.split('.');\r\n        var vB = remoteVer.split('.');       \r\n        \r\n        // let storageVer  = LoaclStorage.getNumber(\"version\");\r\n        // if (storageVer) {\r\n            \r\n        //     if(this.versionCompare(localVer,storageVer) > 0 ){\r\n        //         jsb.fileUtils.removeDirectory(this.storagePath);\r\n        //         console.log(\" remove storage dic \");\r\n        //     }\r\n        // }\r\n\r\n        AppData.appVersion = localVer;     \r\n        LoaclStorage.setNumber(\"version\",localVer);\r\n        \r\n        EventManager.instance.dispatch(\"get_app_version\",localVer);\r\n        \r\n        for (var i = 0; i < vA.length; ++i) {\r\n            var a = parseInt(vA[i]);\r\n            var b = parseInt(vB[i] || 0);\r\n            if (a == b) {\r\n                continue;\r\n            }\r\n            else {\r\n                //大版本检测\r\n                if (i == 0 && a < b) {\r\n                    \r\n                    console.log(\"please down load the lastest app package .\");                                                                  \r\n                    //self.panel.info.string = \"please down load the lastest app package .\";\r\n                    return 0;\r\n                }\r\n                return a - b;\r\n            }\r\n        }\r\n        \r\n        if (vB.length > vA.length) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        } \r\n    }\r\n\r\n\r\n    public checkUpdate() {\r\n        //console.log(\" checkUpdate  \");\r\n        if (this.updating) {\r\n            //this.panel.info.string = 'Checking or updating ...';\r\n            return;\r\n        }\r\n        if (this.assetManager.getState() === jsb.AssetsManager.State.UNINITED) {\r\n            // Resolve md5 url\r\n            var url = this.manifestUrl.nativeUrl;        \r\n            if (cc.loader.md5Pipe) {\r\n                url = cc.loader.md5Pipe.transformURL(url);\r\n            }\r\n            \r\n            this.assetManager.loadLocalManifest(url);\r\n        }\r\n        if (!this.assetManager.getLocalManifest() || !this.assetManager.getLocalManifest().isLoaded()) {\r\n            //this.panel.info.string = 'Failed to load local manifest ...';\r\n            return;\r\n        }\r\n        this.assetManager.setEventCallback(this.checkCb.bind(this));\r\n\r\n        this.assetManager.checkUpdate();\r\n        this.updating = true;\r\n    }\r\n\r\n    private checkCb (event) {\r\n\r\n        let code = event.getEventCode();\r\n\r\n        cc.log('checkCb Code: ' + code);\r\n\r\n        this.updating = false;        \r\n        \r\n        switch (code)\r\n        {\r\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\r\n                cc.log(\"No local manifest file found, hot update skipped.\");\r\n                EventManager.instance.dispatch(\"error_no_local_manifest.\");\r\n                //this.panel.info.string = \"No local manifest file found, hot update skipped.\";\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\r\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\r\n                cc.log(\"Fail to download manifest file, hot update skipped.\");\r\n                EventManager.instance.dispatch(\"error_download_manifest_file.\");\r\n                //this.panel.info.string = \"Fail to download manifest file, hot update skipped.\";\r\n                break;\r\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:            \r\n                cc.log(\"Already up to date with the latest remote version.\");                \r\n                EventManager.instance.dispatch(\"already_up_to_date\");\r\n                //this.panel.info.string = \"Already up to date with the latest remote version.\";\r\n                break;\r\n            case jsb.EventAssetsManager.NEW_VERSION_FOUND:\r\n                // this.panel.info.string = 'New version found, please try to update.';\r\n                // this.panel.checkBtn.active = false;\r\n                // this.panel.fileProgress.progress = 0;\r\n                // this.panel.byteProgress.progress = 0;\r\n                \r\n                EventManager.instance.dispatch(\"new_version_found\");\r\n                cc.log(\"New version found, do update.\");                \r\n                this.scheduleOnce(this.hotUpdate,0.01);\r\n                break;\r\n            default:\r\n                cc.log(\" check cb default\");\r\n                return;\r\n        }               \r\n        \r\n        this.assetManager.setEventCallback(null);\r\n\r\n\r\n    }\r\n\r\n    public hotUpdate () {\r\n\r\n        //console.log(\" hotUpdate \" , jsb.AssetsManager.State.UNINITED);\r\n        if (this.assetManager && !this.updating) {\r\n            this.assetManager.setEventCallback(this.updateCb.bind(this));\r\n\r\n            if (this.assetManager.getState() === jsb.AssetsManager.State.UNINITED) {\r\n                // Resolve md5 url\r\n                var url = this.manifestUrl.nativeUrl;\r\n                if (cc.loader.md5Pipe) {\r\n                    url = cc.loader.md5Pipe.transformURL(url);\r\n                }\r\n                this.assetManager.loadLocalManifest(url);\r\n            }\r\n            //this._failCount = 0;\r\n            this.assetManager.update();\r\n            //this.panel.updateBtn.active = false;\r\n            this.updating = true;\r\n        }\r\n    }\r\n\r\n    public updateCb (event) {\r\n        var needRestart = false;\r\n        var failed = false;\r\n\r\n        console.log(\" updateCb \",event.getEventCode());\r\n\r\n        switch (event.getEventCode())\r\n        {\r\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\r\n                //this.panel.info.string = 'No local manifest file found, hot update skipped.';\r\n                console.log(\"No local manifest file found, hot update skipped.\");\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_PROGRESSION:\r\n                //this.panel.byteProgress.progress = event.getPercent();\r\n                //this.panel.fileProgress.progress = event.getPercentByFile();         \r\n                var msg = event.getMessage();\r\n                if (msg) {\r\n                    //this.panel.info.string = 'Updated file: ' + msg;      \r\n                    console.log(\" updateProgress msg \" , msg);              \r\n                }\r\n\r\n                let downFiles = Number(event.getDownloadedFiles() );\r\n                let totalFiles = Number(event.getTotalFiles());\r\n\r\n                let downBytes = Number(event.getDownloadedBytes());\r\n                let totalBytes = Number(event.getTotalBytes());         \r\n                \r\n                console.log(\" update progress files : \",downFiles + \" / \" + totalFiles);\r\n                console.log(\"update progress bytes : \",downBytes + ' / ' + totalBytes);                \r\n                \r\n                let progress = totalBytes == 0 ?  0 :  Number((downBytes / totalBytes).toFixed(2));\r\n                //progress = event.getPercent();\r\n\r\n                console.log(\" progress \", progress);                \r\n                if (this.progress != progress) {\r\n                                        \r\n                    EventManager.instance.dispatch(\"update_progress\",progress);\r\n                }\r\n\r\n                this.progress = progress;\r\n                \r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\r\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\r\n                //this.panel.info.string = 'Fail to download manifest file, hot update skipped.';\r\n                console.log(\"Fail to download manifest file, hot update skipped.\");\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\r\n                //this.panel.info.string = 'Already up to date with the latest remote version.';\r\n                console.log(\"Already up to date with the latest remote version.\");\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FINISHED:\r\n                //this.panel.info.string = 'Update finished. ' + event.getMessage();\r\n                console.log(\" Update finished\", event.getMessage());\r\n                EventManager.instance.dispatch(\"update_finished\");\r\n                needRestart = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FAILED:\r\n                //this.panel.info.string = 'Update failed. ' + event.getMessage();\r\n                //this.panel.retryBtn.active = true;\r\n                this.updating = false;\r\n                this.canRetry = true;\r\n                console.log(\"Update failed. \",event.getMessage());\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_UPDATING:\r\n                //this.panel.info.string = 'Asset update error: ' + event.getAssetId() + ', ' + event.getMessage();\r\n                console.log(\"Asset update error: \",event.getAssetId()+ \", \" ,event.getMessage());\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DECOMPRESS:\r\n                //this.panel.info.string = event.getMessage();\r\n                console.log(\" ERROR_DECOMPRESS \",event.getMessage());\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (failed) {\r\n            this.assetManager.setEventCallback(null);\r\n            //this._updateListener = null;\r\n            this.updating = false;\r\n        }\r\n\r\n        if (needRestart) {\r\n            this.assetManager.setEventCallback(null);\r\n            //this._updateListener = null;\r\n            // Prepend the manifest's search path\r\n            var searchPaths = jsb.fileUtils.getSearchPaths();\r\n            var newPaths = this.assetManager.getLocalManifest().getSearchPaths();\r\n            console.log(JSON.stringify(newPaths));\r\n            Array.prototype.unshift.apply(searchPaths, newPaths);\r\n            // This value will be retrieved and appended to the default search path during game startup,\r\n            // please refer to samples/js-tests/main.js for detailed usage.\r\n            // !!! Re-add the search paths in main.js is very important, otherwise, new scripts won't take effect.\r\n            cc.sys.localStorage.setItem('HotUpdateSearchPaths', JSON.stringify(searchPaths));\r\n            jsb.fileUtils.setSearchPaths(searchPaths);\r\n\r\n            cc.audioEngine.stopAll();\r\n            cc.game.restart();\r\n\r\n        }\r\n    }\r\n\r\n    retry () {\r\n        if (!this.updating && this.canRetry) {\r\n            //this.panel.retryBtn.active = false;\r\n            this.canRetry = false;\r\n            \r\n            //this.panel.info.string = 'Retry failed Assets...';\r\n            this.assetManager.downloadFailedAssets();\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n}\r\n\r\n","import ModuleManager from \"../module_manager\";\r\nimport Module from \"./module_base\";\r\nimport MVVMBase from './mvvm_base';\r\nimport UserDataManager from \"../../../manager/user_manager\";\r\nimport ModelData from \"../../../pacakge/public/model_data\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ViewBase extends MVVMBase {\r\n\r\n    public  _moduleBase : Module<any, any>\r\n\r\n    public onButtonClickEventFunctions\r\n\r\n    private _cacheComponent : Array<any> = []\r\n\r\n\r\n    onShow(arg0?: any) {\r\n \r\n    }\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    _show(intentData?: any) {\r\n        this.onShow(intentData)\r\n    }\r\n\r\n    on_destroy(): any{}\r\n    \r\n    destroyView() {\r\n        // if (!this.isDestroyed) {\r\n        //     this.node.destroy()\r\n        //     // this.node.pauseAllActions()\r\n        // }\r\n        this.isDestroyed = true\r\n        this._baseDestroy()\r\n    }\r\n\r\n    onInit() {\r\n\r\n    }\r\n    \r\n    public cacheComponent(name : string, component : cc.Component) {\r\n        this._cacheComponent.push(component)\r\n    }\r\n\r\n    // public set cacheComponent(name : string, component : cc.Component) {\r\n    //     this._cacheComponent.push(name, component)\r\n    // }\r\n\r\n    // get isActive(): boolean {\r\n    //     if (this.node != null) {\r\n    //         return this.node.active;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n\r\n    // //需要注意网络是有延时的，如果界面隐藏了需要是否过滤掉处理\r\n    // http_get(requestData: any, responeSuccessCallback: any, responeErrorCallback: any) {\r\n    //     let _responeSuccessCallback = responeSuccessCallback\r\n    //     let _responeErrorCallback = responeErrorCallback\r\n    //     let self = this\r\n    //     if (requestData.showNetPrompt) {\r\n    //         ModuleManager.instance.showModuleName(\"NetPrompt\");\r\n    //     }\r\n    //     GameUtil.http_get(requestData, function (data) {\r\n    //         if (requestData.showNetPrompt) {\r\n    //             ModuleManager.instance.showModuleName(\"NetPrompt\");\r\n    //         }\r\n    //         if (self.isActive) {\r\n    //             _responeSuccessCallback(data)\r\n    //         }\r\n    //     }, function (errorData) {\r\n    //         if (requestData.showNetPrompt) {\r\n    //             ModuleManager.instance.showModuleName(\"NetPrompt\");\r\n    //         }\r\n    //         if (self.isActive) {\r\n    //             _responeErrorCallback(errorData)\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    showNetPrompt(show: boolean) {\r\n        if (show) {\r\n            ModuleManager.instance.showModuleName(\"NetPrompt\")\r\n        } else {\r\n            ModuleManager.instance.hideModule(\"NetPrompt\")\r\n        }\r\n    }\r\n\r\n    buttonClick(node: cc.Node, customEventData) {\r\n        // cc.log(node.name)\r\n        this._moduleBase._ButtonClick(node, customEventData)\r\n\r\n        // cc.SpriteAtlas\r\n    }\r\n\r\n}\r\n","import ShaderComponent from \"./shader_component\";\r\nimport ShaderMaterial from \"./shader_material\";\r\n\r\nconst renderEngine = cc.renderer.renderEngine;\r\nconst renderer = renderEngine.renderer;\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu('custom/Shader/Water')\r\nexport default class WaterShader extends ShaderComponent {\r\n\r\n    protected _shaderName = \"Water\"\r\n\r\n    protected _vert = `\r\n    uniform mat4 viewProj;\r\n    attribute vec3 a_position;\r\n    attribute vec2 a_uv0;\r\n    varying vec2 uv0;\r\n    void main () {\r\n        vec4 pos = viewProj * vec4(a_position, 1);\r\n        gl_Position = pos;\r\n        uv0 = a_uv0;\r\n    }`;\r\n    protected _frag = `uniform sampler2D texture;\r\n    uniform vec3 iResolution;\r\n    uniform float time;\r\n    varying vec2 uv0;\r\n\r\n    #define F cos(x-y)*cos(y),sin(x+y)*sin(y)\r\n\r\n    vec2 s(vec2 p)\r\n    {\r\n        float d=time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\r\n        return vec2(F);\r\n    }\r\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n    {\r\n        // 换成resolution\r\n        vec2 rs = iResolution.xy;\r\n        // 换成纹理坐标v_texCoord.xy\r\n        vec2 uv = fragCoord;\r\n        vec2 q = uv+2./iResolution.x*(s(uv)-s(uv+rs));\r\n        //反转y\r\n        //q.y=1.-q.y;\r\n        fragColor = texture2D(texture, q);\r\n    }\r\n    void main()\r\n    {\r\n        mainImage(gl_FragColor, uv0.xy);\r\n    }`\r\n\r\n    protected _defines = []\r\n\r\n    protected _params = [{ name: 'iResolution', type: renderer.PARAM_FLOAT3 }]\r\n\r\n    protected _needUpdate = true\r\n\r\n    protected setParamValue(material: ShaderMaterial) {\r\n        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);\r\n        material.setParamValue(\"iResolution\", iResolution)\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/","file":"project.dev.js"}