window.__require = function e(t, n, r) {
  function s(o, u) {
    if (!n[o]) {
      if (!t[o]) {
        var b = o.split("/");
        b = b[b.length - 1];
        if (!t[b]) {
          var a = "function" == typeof __require && __require;
          if (!u && a) return a(b, !0);
          if (i) return i(b, !0);
          throw new Error("Cannot find module '" + o + "'");
        }
      }
      var f = n[o] = {
        exports: {}
      };
      t[o][0].call(f.exports, function(e) {
        var n = t[o][1][e];
        return s(n || e);
      }, f, f.exports, e, t, n, r);
    }
    return n[o].exports;
  }
  var i = "function" == typeof __require && __require;
  for (var o = 0; o < r.length; o++) s(r[o]);
  return s;
}({
  ConfigLanguageData: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2a1929cJJdAwK/6b1ZOzfFF", "ConfigLanguageData");
    "use strict";
    var polyInst = null;
    window.i18n || (window.i18n = {
      languages: {},
      curLang: ""
    });
    false;
    function loadLanguageData(language) {
      if (!language) return window.i18n.curLang ? LoadCurrentLanguageData(window.i18n.curLang) : void 0;
      if (!window.i18n.languages[language]) {
        cc.log("\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01window.i18n.languages[language] \u4e3a\u7a7a");
        window.i18n.languages[language] = LoadCurrentLanguageData(language);
      }
      return window.i18n.languages[language];
    }
    function LoadCurrentLanguageData(language) {
      var Fs = require("fs");
      var Path = require("path");
      var absolutePath = Path.join(Editor.Project.path, "./packages/i18n/config/i18n/" + language + ".json");
      var data = Fs.readFileSync(absolutePath);
      return data;
    }
    function initPolyglot(data) {
      if (data) if (polyInst) polyInst = data; else {
        polyInst = "";
        polyInst = data;
      }
    }
    module.exports = {
      init: function init(language) {
        if (!language) {
          cc.log("language \u672a\u5b9a\u4e49");
          cc.log("window.i18n.curLang:" + window.i18n.curLang);
        }
        if (language === window.i18n.curLang) return;
        var data = loadLanguageData(language) || {};
        cc.log(data);
        cc.log(data);
        window.i18n.curLang = language;
        initPolyglot(data);
        this.inst = polyInst;
      },
      parse: function parse(key) {
        239 === polyInst[0] && 187 === polyInst[1] && 191 === polyInst[2] && (polyInst = polyInst.slice(3));
        polyInst = polyInst.toString("utf-8");
        var json = JSON.parse(polyInst);
        if (json.hasOwnProperty(key)) {
          cc.log(json[key]);
          return json[key].toString();
        }
        return "\u672a\u5b9a\u4e49\u5b57\u6bb5";
      },
      inst: polyInst,
      updateSceneRenderers: function updateSceneRenderers() {
        var rootNodes = cc.director.getScene().children;
        var allLocalizedLabels = [];
        for (var i = 0; i < rootNodes.length; ++i) {
          var labels = rootNodes[i].getComponentsInChildren("ULabel");
          Array.prototype.push.apply(allLocalizedLabels, labels);
        }
        for (var _i = 0; _i < allLocalizedLabels.length; ++_i) {
          var label = allLocalizedLabels[_i];
          label.updateLabel();
        }
      }
    };
    cc._RF.pop();
  }, {
    fs: void 0,
    path: 5
  } ],
  CustomRichText: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cadf6TTLxFN1a/0gxNSVWAM", "CustomRichText");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, property = _a.property, executeInEditMode = _a.executeInEditMode, inspector = _a.inspector;
    var CustomRichText = function(_super) {
      __extends(CustomRichText, _super);
      function CustomRichText() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.overflow = cc.Label.Overflow.NONE;
        _this._overflow = cc.Label.Overflow.NONE;
        _this._maxFragmentWidth = 0;
        return _this;
      }
      CustomRichText.prototype._updateRichTextWithMaxWidth = function(labelString, labelWidth, styleIndex) {
        this.overflow == cc.Label.Overflow.SHRINK ? this._updateRichTextWithMaxWidth_shrink(labelString, labelWidth, styleIndex) : _super.prototype["_updateRichTextWithMaxWidth"].call(this, labelString, labelWidth, styleIndex);
      };
      CustomRichText.prototype._updateRichText = function() {
        this._maxFragmentWidth = 0;
        _super.prototype["_updateRichText"].call(this);
        this.overflow == cc.Label.Overflow.SHRINK && this.maxWidth > 0 && this._maxFragmentWidth > this.maxWidth ? this.node.scale = this.maxWidth / this._maxFragmentWidth : this.node.scale = 1;
      };
      CustomRichText.prototype.update = function() {
        cc.sys.platform == cc.sys.EDITOR_PAGE && this._updateEditor();
      };
      CustomRichText.prototype._updateEditor = function() {
        if (this.overflow != this._overflow) {
          this._overflow = this.overflow;
          this["_updateRichText"]();
        }
      };
      CustomRichText.prototype._updateRichTextWithMaxWidth_shrink = function(labelString, labelWidth, styleIndex) {
        var fragmentWidth = labelWidth;
        var labelSegment = void 0;
        if (this["_lineOffsetX"] > 0 && fragmentWidth + this["_lineOffsetX"] > this.maxWidth) {
          var checkStartIndex = 0;
          while (this["_lineOffsetX"] <= this.maxWidth) {
            var checkEndIndex = this["_getFirstWordLen"](labelString, checkStartIndex, labelString.length);
            var checkString = labelString.substr(checkStartIndex, checkEndIndex);
            var checkStringWidth = this["_measureText"](styleIndex, checkString);
            if (!(this["_lineOffsetX"] + checkStringWidth <= this.maxWidth)) {
              if (checkStartIndex > 0) {
                var remainingString = labelString.substr(0, checkStartIndex);
                this["_addLabelSegment"](remainingString, styleIndex);
                labelString = labelString.substr(checkStartIndex, labelString.length);
                fragmentWidth = this["_measureText"](styleIndex, labelString);
              }
              this["_updateLineInfo"]();
              break;
            }
            this["_lineOffsetX"] += checkStringWidth;
            checkStartIndex += checkEndIndex;
          }
        }
        if (fragmentWidth > this.maxWidth) {
          this["_lineOffsetX"] += fragmentWidth;
          this["_addLabelSegment"](labelString, styleIndex);
          this._maxFragmentWidth += fragmentWidth;
        } else {
          this["_lineOffsetX"] += fragmentWidth;
          this["_addLabelSegment"](labelString, styleIndex);
        }
      };
      __decorate([ property({
        type: cc.Enum(cc.Label.Overflow)
      }) ], CustomRichText.prototype, "overflow", void 0);
      CustomRichText = __decorate([ ccclass, menu("custom/customRichText"), executeInEditMode ], CustomRichText);
      return CustomRichText;
    }(cc.RichText);
    exports.default = CustomRichText;
    cc._RF.pop();
  }, {} ],
  CustomToggle: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5dcea7eMG9A2Z+BvpE03Wd/", "CustomToggle");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, property = _a.property, inspector = _a.inspector;
    var CustomToggle = function(_super) {
      __extends(CustomToggle, _super);
      function CustomToggle() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.targetLabel = null;
        _this.selectedlColor = cc.Color.WHITE;
        _this.unSelectedColor = cc.Color.RED;
        return _this;
      }
      CustomToggle.prototype._updateCheckMark = function() {
        _super.prototype["_updateCheckMark"].call(this);
        this.targetLabel && (this.targetLabel.node.color = this.isChecked ? this.selectedlColor : this.unSelectedColor);
      };
      __decorate([ property(cc.Label) ], CustomToggle.prototype, "targetLabel", void 0);
      __decorate([ property(cc.Color) ], CustomToggle.prototype, "selectedlColor", void 0);
      __decorate([ property(cc.Color) ], CustomToggle.prototype, "unSelectedColor", void 0);
      CustomToggle = __decorate([ ccclass, menu("custom/customToggle"), inspector("packages://customtoggle-inspector/inspector.js") ], CustomToggle);
      return CustomToggle;
    }(cc.Toggle);
    exports.default = CustomToggle;
    cc._RF.pop();
  }, {} ],
  1: [ function(require, module, exports) {
    "use strict";
    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = "undefined" !== typeof Uint8Array ? Uint8Array : Array;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
    function getLens(b64) {
      var len = b64.length;
      if (len % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
      var validLen = b64.indexOf("=");
      -1 === validLen && (validLen = len);
      var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
      return [ validLen, placeHoldersLen ];
    }
    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return 3 * (validLen + placeHoldersLen) / 4 - placeHoldersLen;
    }
    function _byteLength(b64, validLen, placeHoldersLen) {
      return 3 * (validLen + placeHoldersLen) / 4 - placeHoldersLen;
    }
    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0;
      var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i;
      for (i = 0; i < len; i += 4) {
        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = 255 & tmp;
      }
      if (2 === placeHoldersLen) {
        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = 255 & tmp;
      }
      if (1 === placeHoldersLen) {
        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = 255 & tmp;
      }
      return arr;
    }
    function tripletToBase64(num) {
      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[63 & num];
    }
    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];
      for (var i = start; i < end; i += 3) {
        tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (255 & uint8[i + 2]);
        output.push(tripletToBase64(tmp));
      }
      return output.join("");
    }
    function fromByteArray(uint8) {
      var tmp;
      var len = uint8.length;
      var extraBytes = len % 3;
      var parts = [];
      var maxChunkLength = 16383;
      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
      if (1 === extraBytes) {
        tmp = uint8[len - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "==");
      } else if (2 === extraBytes) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "=");
      }
      return parts.join("");
    }
  }, {} ],
  2: [ function(require, module, exports) {
    (function(global) {
      "use strict";
      var base64 = require("base64-js");
      var ieee754 = require("ieee754");
      var isArray = require("isarray");
      exports.Buffer = Buffer;
      exports.SlowBuffer = SlowBuffer;
      exports.INSPECT_MAX_BYTES = 50;
      Buffer.TYPED_ARRAY_SUPPORT = void 0 !== global.TYPED_ARRAY_SUPPORT ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
      exports.kMaxLength = kMaxLength();
      function typedArraySupport() {
        try {
          var arr = new Uint8Array(1);
          arr.__proto__ = {
            __proto__: Uint8Array.prototype,
            foo: function() {
              return 42;
            }
          };
          return 42 === arr.foo() && "function" === typeof arr.subarray && 0 === arr.subarray(1, 1).byteLength;
        } catch (e) {
          return false;
        }
      }
      function kMaxLength() {
        return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function createBuffer(that, length) {
        if (kMaxLength() < length) throw new RangeError("Invalid typed array length");
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          that = new Uint8Array(length);
          that.__proto__ = Buffer.prototype;
        } else {
          null === that && (that = new Buffer(length));
          that.length = length;
        }
        return that;
      }
      function Buffer(arg, encodingOrOffset, length) {
        if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) return new Buffer(arg, encodingOrOffset, length);
        if ("number" === typeof arg) {
          if ("string" === typeof encodingOrOffset) throw new Error("If encoding is specified then the first argument must be a string");
          return allocUnsafe(this, arg);
        }
        return from(this, arg, encodingOrOffset, length);
      }
      Buffer.poolSize = 8192;
      Buffer._augment = function(arr) {
        arr.__proto__ = Buffer.prototype;
        return arr;
      };
      function from(that, value, encodingOrOffset, length) {
        if ("number" === typeof value) throw new TypeError('"value" argument must not be a number');
        if ("undefined" !== typeof ArrayBuffer && value instanceof ArrayBuffer) return fromArrayBuffer(that, value, encodingOrOffset, length);
        if ("string" === typeof value) return fromString(that, value, encodingOrOffset);
        return fromObject(that, value);
      }
      Buffer.from = function(value, encodingOrOffset, length) {
        return from(null, value, encodingOrOffset, length);
      };
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        Buffer.prototype.__proto__ = Uint8Array.prototype;
        Buffer.__proto__ = Uint8Array;
        "undefined" !== typeof Symbol && Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, {
          value: null,
          configurable: true
        });
      }
      function assertSize(size) {
        if ("number" !== typeof size) throw new TypeError('"size" argument must be a number');
        if (size < 0) throw new RangeError('"size" argument must not be negative');
      }
      function alloc(that, size, fill, encoding) {
        assertSize(size);
        if (size <= 0) return createBuffer(that, size);
        if (void 0 !== fill) return "string" === typeof encoding ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
        return createBuffer(that, size);
      }
      Buffer.alloc = function(size, fill, encoding) {
        return alloc(null, size, fill, encoding);
      };
      function allocUnsafe(that, size) {
        assertSize(size);
        that = createBuffer(that, size < 0 ? 0 : 0 | checked(size));
        if (!Buffer.TYPED_ARRAY_SUPPORT) for (var i = 0; i < size; ++i) that[i] = 0;
        return that;
      }
      Buffer.allocUnsafe = function(size) {
        return allocUnsafe(null, size);
      };
      Buffer.allocUnsafeSlow = function(size) {
        return allocUnsafe(null, size);
      };
      function fromString(that, string, encoding) {
        "string" === typeof encoding && "" !== encoding || (encoding = "utf8");
        if (!Buffer.isEncoding(encoding)) throw new TypeError('"encoding" must be a valid string encoding');
        var length = 0 | byteLength(string, encoding);
        that = createBuffer(that, length);
        var actual = that.write(string, encoding);
        actual !== length && (that = that.slice(0, actual));
        return that;
      }
      function fromArrayLike(that, array) {
        var length = array.length < 0 ? 0 : 0 | checked(array.length);
        that = createBuffer(that, length);
        for (var i = 0; i < length; i += 1) that[i] = 255 & array[i];
        return that;
      }
      function fromArrayBuffer(that, array, byteOffset, length) {
        array.byteLength;
        if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError("'offset' is out of bounds");
        if (array.byteLength < byteOffset + (length || 0)) throw new RangeError("'length' is out of bounds");
        array = void 0 === byteOffset && void 0 === length ? new Uint8Array(array) : void 0 === length ? new Uint8Array(array, byteOffset) : new Uint8Array(array, byteOffset, length);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          that = array;
          that.__proto__ = Buffer.prototype;
        } else that = fromArrayLike(that, array);
        return that;
      }
      function fromObject(that, obj) {
        if (Buffer.isBuffer(obj)) {
          var len = 0 | checked(obj.length);
          that = createBuffer(that, len);
          if (0 === that.length) return that;
          obj.copy(that, 0, 0, len);
          return that;
        }
        if (obj) {
          if ("undefined" !== typeof ArrayBuffer && obj.buffer instanceof ArrayBuffer || "length" in obj) {
            if ("number" !== typeof obj.length || isnan(obj.length)) return createBuffer(that, 0);
            return fromArrayLike(that, obj);
          }
          if ("Buffer" === obj.type && isArray(obj.data)) return fromArrayLike(that, obj.data);
        }
        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
      }
      function checked(length) {
        if (length >= kMaxLength()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + kMaxLength().toString(16) + " bytes");
        return 0 | length;
      }
      function SlowBuffer(length) {
        +length != length && (length = 0);
        return Buffer.alloc(+length);
      }
      Buffer.isBuffer = function isBuffer(b) {
        return !!(null != b && b._isBuffer);
      };
      Buffer.compare = function compare(a, b) {
        if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) throw new TypeError("Arguments must be Buffers");
        if (a === b) return 0;
        var x = a.length;
        var y = b.length;
        for (var i = 0, len = Math.min(x, y); i < len; ++i) if (a[i] !== b[i]) {
          x = a[i];
          y = b[i];
          break;
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      Buffer.isEncoding = function isEncoding(encoding) {
        switch (String(encoding).toLowerCase()) {
         case "hex":
         case "utf8":
         case "utf-8":
         case "ascii":
         case "latin1":
         case "binary":
         case "base64":
         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return true;

         default:
          return false;
        }
      };
      Buffer.concat = function concat(list, length) {
        if (!isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === list.length) return Buffer.alloc(0);
        var i;
        if (void 0 === length) {
          length = 0;
          for (i = 0; i < list.length; ++i) length += list[i].length;
        }
        var buffer = Buffer.allocUnsafe(length);
        var pos = 0;
        for (i = 0; i < list.length; ++i) {
          var buf = list[i];
          if (!Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
          buf.copy(buffer, pos);
          pos += buf.length;
        }
        return buffer;
      };
      function byteLength(string, encoding) {
        if (Buffer.isBuffer(string)) return string.length;
        if ("undefined" !== typeof ArrayBuffer && "function" === typeof ArrayBuffer.isView && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) return string.byteLength;
        "string" !== typeof string && (string = "" + string);
        var len = string.length;
        if (0 === len) return 0;
        var loweredCase = false;
        for (;;) switch (encoding) {
         case "ascii":
         case "latin1":
         case "binary":
          return len;

         case "utf8":
         case "utf-8":
         case void 0:
          return utf8ToBytes(string).length;

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return 2 * len;

         case "hex":
          return len >>> 1;

         case "base64":
          return base64ToBytes(string).length;

         default:
          if (loweredCase) return utf8ToBytes(string).length;
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
        }
      }
      Buffer.byteLength = byteLength;
      function slowToString(encoding, start, end) {
        var loweredCase = false;
        (void 0 === start || start < 0) && (start = 0);
        if (start > this.length) return "";
        (void 0 === end || end > this.length) && (end = this.length);
        if (end <= 0) return "";
        end >>>= 0;
        start >>>= 0;
        if (end <= start) return "";
        encoding || (encoding = "utf8");
        while (true) switch (encoding) {
         case "hex":
          return hexSlice(this, start, end);

         case "utf8":
         case "utf-8":
          return utf8Slice(this, start, end);

         case "ascii":
          return asciiSlice(this, start, end);

         case "latin1":
         case "binary":
          return latin1Slice(this, start, end);

         case "base64":
          return base64Slice(this, start, end);

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return utf16leSlice(this, start, end);

         default:
          if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
          encoding = (encoding + "").toLowerCase();
          loweredCase = true;
        }
      }
      Buffer.prototype._isBuffer = true;
      function swap(b, n, m) {
        var i = b[n];
        b[n] = b[m];
        b[m] = i;
      }
      Buffer.prototype.swap16 = function swap16() {
        var len = this.length;
        if (len % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var i = 0; i < len; i += 2) swap(this, i, i + 1);
        return this;
      };
      Buffer.prototype.swap32 = function swap32() {
        var len = this.length;
        if (len % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var i = 0; i < len; i += 4) {
          swap(this, i, i + 3);
          swap(this, i + 1, i + 2);
        }
        return this;
      };
      Buffer.prototype.swap64 = function swap64() {
        var len = this.length;
        if (len % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var i = 0; i < len; i += 8) {
          swap(this, i, i + 7);
          swap(this, i + 1, i + 6);
          swap(this, i + 2, i + 5);
          swap(this, i + 3, i + 4);
        }
        return this;
      };
      Buffer.prototype.toString = function toString() {
        var length = 0 | this.length;
        if (0 === length) return "";
        if (0 === arguments.length) return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
      };
      Buffer.prototype.equals = function equals(b) {
        if (!Buffer.isBuffer(b)) throw new TypeError("Argument must be a Buffer");
        if (this === b) return true;
        return 0 === Buffer.compare(this, b);
      };
      Buffer.prototype.inspect = function inspect() {
        var str = "";
        var max = exports.INSPECT_MAX_BYTES;
        if (this.length > 0) {
          str = this.toString("hex", 0, max).match(/.{2}/g).join(" ");
          this.length > max && (str += " ... ");
        }
        return "<Buffer " + str + ">";
      };
      Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
        if (!Buffer.isBuffer(target)) throw new TypeError("Argument must be a Buffer");
        void 0 === start && (start = 0);
        void 0 === end && (end = target ? target.length : 0);
        void 0 === thisStart && (thisStart = 0);
        void 0 === thisEnd && (thisEnd = this.length);
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError("out of range index");
        if (thisStart >= thisEnd && start >= end) return 0;
        if (thisStart >= thisEnd) return -1;
        if (start >= end) return 1;
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target) return 0;
        var x = thisEnd - thisStart;
        var y = end - start;
        var len = Math.min(x, y);
        var thisCopy = this.slice(thisStart, thisEnd);
        var targetCopy = target.slice(start, end);
        for (var i = 0; i < len; ++i) if (thisCopy[i] !== targetCopy[i]) {
          x = thisCopy[i];
          y = targetCopy[i];
          break;
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
        if (0 === buffer.length) return -1;
        if ("string" === typeof byteOffset) {
          encoding = byteOffset;
          byteOffset = 0;
        } else byteOffset > 2147483647 ? byteOffset = 2147483647 : byteOffset < -2147483648 && (byteOffset = -2147483648);
        byteOffset = +byteOffset;
        isNaN(byteOffset) && (byteOffset = dir ? 0 : buffer.length - 1);
        byteOffset < 0 && (byteOffset = buffer.length + byteOffset);
        if (byteOffset >= buffer.length) {
          if (dir) return -1;
          byteOffset = buffer.length - 1;
        } else if (byteOffset < 0) {
          if (!dir) return -1;
          byteOffset = 0;
        }
        "string" === typeof val && (val = Buffer.from(val, encoding));
        if (Buffer.isBuffer(val)) {
          if (0 === val.length) return -1;
          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
        }
        if ("number" === typeof val) {
          val &= 255;
          if (Buffer.TYPED_ARRAY_SUPPORT && "function" === typeof Uint8Array.prototype.indexOf) return dir ? Uint8Array.prototype.indexOf.call(buffer, val, byteOffset) : Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir);
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
        var indexSize = 1;
        var arrLength = arr.length;
        var valLength = val.length;
        if (void 0 !== encoding) {
          encoding = String(encoding).toLowerCase();
          if ("ucs2" === encoding || "ucs-2" === encoding || "utf16le" === encoding || "utf-16le" === encoding) {
            if (arr.length < 2 || val.length < 2) return -1;
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
          }
        }
        function read(buf, i) {
          return 1 === indexSize ? buf[i] : buf.readUInt16BE(i * indexSize);
        }
        var i;
        if (dir) {
          var foundIndex = -1;
          for (i = byteOffset; i < arrLength; i++) if (read(arr, i) === read(val, -1 === foundIndex ? 0 : i - foundIndex)) {
            -1 === foundIndex && (foundIndex = i);
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
          } else {
            -1 !== foundIndex && (i -= i - foundIndex);
            foundIndex = -1;
          }
        } else {
          byteOffset + valLength > arrLength && (byteOffset = arrLength - valLength);
          for (i = byteOffset; i >= 0; i--) {
            var found = true;
            for (var j = 0; j < valLength; j++) if (read(arr, i + j) !== read(val, j)) {
              found = false;
              break;
            }
            if (found) return i;
          }
        }
        return -1;
      }
      Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
        return -1 !== this.indexOf(val, byteOffset, encoding);
      };
      Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
      };
      Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
      };
      function hexWrite(buf, string, offset, length) {
        offset = Number(offset) || 0;
        var remaining = buf.length - offset;
        if (length) {
          length = Number(length);
          length > remaining && (length = remaining);
        } else length = remaining;
        var strLen = string.length;
        if (strLen % 2 !== 0) throw new TypeError("Invalid hex string");
        length > strLen / 2 && (length = strLen / 2);
        for (var i = 0; i < length; ++i) {
          var parsed = parseInt(string.substr(2 * i, 2), 16);
          if (isNaN(parsed)) return i;
          buf[offset + i] = parsed;
        }
        return i;
      }
      function utf8Write(buf, string, offset, length) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
      }
      function asciiWrite(buf, string, offset, length) {
        return blitBuffer(asciiToBytes(string), buf, offset, length);
      }
      function latin1Write(buf, string, offset, length) {
        return asciiWrite(buf, string, offset, length);
      }
      function base64Write(buf, string, offset, length) {
        return blitBuffer(base64ToBytes(string), buf, offset, length);
      }
      function ucs2Write(buf, string, offset, length) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
      }
      Buffer.prototype.write = function write(string, offset, length, encoding) {
        if (void 0 === offset) {
          encoding = "utf8";
          length = this.length;
          offset = 0;
        } else if (void 0 === length && "string" === typeof offset) {
          encoding = offset;
          length = this.length;
          offset = 0;
        } else {
          if (!isFinite(offset)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          offset |= 0;
          if (isFinite(length)) {
            length |= 0;
            void 0 === encoding && (encoding = "utf8");
          } else {
            encoding = length;
            length = void 0;
          }
        }
        var remaining = this.length - offset;
        (void 0 === length || length > remaining) && (length = remaining);
        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError("Attempt to write outside buffer bounds");
        encoding || (encoding = "utf8");
        var loweredCase = false;
        for (;;) switch (encoding) {
         case "hex":
          return hexWrite(this, string, offset, length);

         case "utf8":
         case "utf-8":
          return utf8Write(this, string, offset, length);

         case "ascii":
          return asciiWrite(this, string, offset, length);

         case "latin1":
         case "binary":
          return latin1Write(this, string, offset, length);

         case "base64":
          return base64Write(this, string, offset, length);

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return ucs2Write(this, string, offset, length);

         default:
          if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
        }
      };
      Buffer.prototype.toJSON = function toJSON() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function base64Slice(buf, start, end) {
        return 0 === start && end === buf.length ? base64.fromByteArray(buf) : base64.fromByteArray(buf.slice(start, end));
      }
      function utf8Slice(buf, start, end) {
        end = Math.min(buf.length, end);
        var res = [];
        var i = start;
        while (i < end) {
          var firstByte = buf[i];
          var codePoint = null;
          var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
          if (i + bytesPerSequence <= end) {
            var secondByte, thirdByte, fourthByte, tempCodePoint;
            switch (bytesPerSequence) {
             case 1:
              firstByte < 128 && (codePoint = firstByte);
              break;

             case 2:
              secondByte = buf[i + 1];
              if (128 === (192 & secondByte)) {
                tempCodePoint = (31 & firstByte) << 6 | 63 & secondByte;
                tempCodePoint > 127 && (codePoint = tempCodePoint);
              }
              break;

             case 3:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              if (128 === (192 & secondByte) && 128 === (192 & thirdByte)) {
                tempCodePoint = (15 & firstByte) << 12 | (63 & secondByte) << 6 | 63 & thirdByte;
                tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343) && (codePoint = tempCodePoint);
              }
              break;

             case 4:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              fourthByte = buf[i + 3];
              if (128 === (192 & secondByte) && 128 === (192 & thirdByte) && 128 === (192 & fourthByte)) {
                tempCodePoint = (15 & firstByte) << 18 | (63 & secondByte) << 12 | (63 & thirdByte) << 6 | 63 & fourthByte;
                tempCodePoint > 65535 && tempCodePoint < 1114112 && (codePoint = tempCodePoint);
              }
            }
          }
          if (null === codePoint) {
            codePoint = 65533;
            bytesPerSequence = 1;
          } else if (codePoint > 65535) {
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | 1023 & codePoint;
          }
          res.push(codePoint);
          i += bytesPerSequence;
        }
        return decodeCodePointsArray(res);
      }
      var MAX_ARGUMENTS_LENGTH = 4096;
      function decodeCodePointsArray(codePoints) {
        var len = codePoints.length;
        if (len <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints);
        var res = "";
        var i = 0;
        while (i < len) res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
        return res;
      }
      function asciiSlice(buf, start, end) {
        var ret = "";
        end = Math.min(buf.length, end);
        for (var i = start; i < end; ++i) ret += String.fromCharCode(127 & buf[i]);
        return ret;
      }
      function latin1Slice(buf, start, end) {
        var ret = "";
        end = Math.min(buf.length, end);
        for (var i = start; i < end; ++i) ret += String.fromCharCode(buf[i]);
        return ret;
      }
      function hexSlice(buf, start, end) {
        var len = buf.length;
        (!start || start < 0) && (start = 0);
        (!end || end < 0 || end > len) && (end = len);
        var out = "";
        for (var i = start; i < end; ++i) out += toHex(buf[i]);
        return out;
      }
      function utf16leSlice(buf, start, end) {
        var bytes = buf.slice(start, end);
        var res = "";
        for (var i = 0; i < bytes.length; i += 2) res += String.fromCharCode(bytes[i] + 256 * bytes[i + 1]);
        return res;
      }
      Buffer.prototype.slice = function slice(start, end) {
        var len = this.length;
        start = ~~start;
        end = void 0 === end ? len : ~~end;
        if (start < 0) {
          start += len;
          start < 0 && (start = 0);
        } else start > len && (start = len);
        if (end < 0) {
          end += len;
          end < 0 && (end = 0);
        } else end > len && (end = len);
        end < start && (end = start);
        var newBuf;
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          newBuf = this.subarray(start, end);
          newBuf.__proto__ = Buffer.prototype;
        } else {
          var sliceLen = end - start;
          newBuf = new Buffer(sliceLen, void 0);
          for (var i = 0; i < sliceLen; ++i) newBuf[i] = this[i + start];
        }
        return newBuf;
      };
      function checkOffset(offset, ext, length) {
        if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
        if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
      }
      Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength && (mul *= 256)) val += this[offset + i] * mul;
        return val;
      };
      Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset + --byteLength];
        var mul = 1;
        while (byteLength > 0 && (mul *= 256)) val += this[offset + --byteLength] * mul;
        return val;
      };
      Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        noAssert || checkOffset(offset, 1, this.length);
        return this[offset];
      };
      Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
      };
      Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
      };
      Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + 16777216 * this[offset + 3];
      };
      Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return 16777216 * this[offset] + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
      };
      Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength && (mul *= 256)) val += this[offset + i] * mul;
        mul *= 128;
        val >= mul && (val -= Math.pow(2, 8 * byteLength));
        return val;
      };
      Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var i = byteLength;
        var mul = 1;
        var val = this[offset + --i];
        while (i > 0 && (mul *= 256)) val += this[offset + --i] * mul;
        mul *= 128;
        val >= mul && (val -= Math.pow(2, 8 * byteLength));
        return val;
      };
      Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
        noAssert || checkOffset(offset, 1, this.length);
        if (!(128 & this[offset])) return this[offset];
        return -1 * (255 - this[offset] + 1);
      };
      Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        var val = this[offset] | this[offset + 1] << 8;
        return 32768 & val ? 4294901760 | val : val;
      };
      Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        var val = this[offset + 1] | this[offset] << 8;
        return 32768 & val ? 4294901760 | val : val;
      };
      Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
      };
      Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
      };
      Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
      };
      Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
      };
      Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        noAssert || checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
      };
      Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        noAssert || checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
      };
      function checkInt(buf, value, offset, ext, max, min) {
        if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
      }
      Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        byteLength |= 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength) - 1;
          checkInt(this, value, offset, byteLength, maxBytes, 0);
        }
        var mul = 1;
        var i = 0;
        this[offset] = 255 & value;
        while (++i < byteLength && (mul *= 256)) this[offset + i] = value / mul & 255;
        return offset + byteLength;
      };
      Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        byteLength |= 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength) - 1;
          checkInt(this, value, offset, byteLength, maxBytes, 0);
        }
        var i = byteLength - 1;
        var mul = 1;
        this[offset + i] = 255 & value;
        while (--i >= 0 && (mul *= 256)) this[offset + i] = value / mul & 255;
        return offset + byteLength;
      };
      Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 1, 255, 0);
        Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value));
        this[offset] = 255 & value;
        return offset + 1;
      };
      function objectWriteUInt16(buf, value, offset, littleEndian) {
        value < 0 && (value = 65535 + value + 1);
        for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> 8 * (littleEndian ? i : 1 - i);
      }
      Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
        } else objectWriteUInt16(this, value, offset, true);
        return offset + 2;
      };
      Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = 255 & value;
        } else objectWriteUInt16(this, value, offset, false);
        return offset + 2;
      };
      function objectWriteUInt32(buf, value, offset, littleEndian) {
        value < 0 && (value = 4294967295 + value + 1);
        for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) buf[offset + i] = value >>> 8 * (littleEndian ? i : 3 - i) & 255;
      }
      Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset + 3] = value >>> 24;
          this[offset + 2] = value >>> 16;
          this[offset + 1] = value >>> 8;
          this[offset] = 255 & value;
        } else objectWriteUInt32(this, value, offset, true);
        return offset + 4;
      };
      Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = 255 & value;
        } else objectWriteUInt32(this, value, offset, false);
        return offset + 4;
      };
      Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength - 1);
          checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }
        var i = 0;
        var mul = 1;
        var sub = 0;
        this[offset] = 255 & value;
        while (++i < byteLength && (mul *= 256)) {
          value < 0 && 0 === sub && 0 !== this[offset + i - 1] && (sub = 1);
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength;
      };
      Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength - 1);
          checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }
        var i = byteLength - 1;
        var mul = 1;
        var sub = 0;
        this[offset + i] = 255 & value;
        while (--i >= 0 && (mul *= 256)) {
          value < 0 && 0 === sub && 0 !== this[offset + i + 1] && (sub = 1);
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength;
      };
      Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 1, 127, -128);
        Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value));
        value < 0 && (value = 255 + value + 1);
        this[offset] = 255 & value;
        return offset + 1;
      };
      Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
        } else objectWriteUInt16(this, value, offset, true);
        return offset + 2;
      };
      Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = 255 & value;
        } else objectWriteUInt16(this, value, offset, false);
        return offset + 2;
      };
      Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
          this[offset + 2] = value >>> 16;
          this[offset + 3] = value >>> 24;
        } else objectWriteUInt32(this, value, offset, true);
        return offset + 4;
      };
      Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648);
        value < 0 && (value = 4294967295 + value + 1);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = 255 & value;
        } else objectWriteUInt32(this, value, offset, false);
        return offset + 4;
      };
      function checkIEEE754(buf, value, offset, ext, max, min) {
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
        if (offset < 0) throw new RangeError("Index out of range");
      }
      function writeFloat(buf, value, offset, littleEndian, noAssert) {
        noAssert || checkIEEE754(buf, value, offset, 4, 3.4028234663852886e38, -3.4028234663852886e38);
        ieee754.write(buf, value, offset, littleEndian, 23, 4);
        return offset + 4;
      }
      Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
        return writeFloat(this, value, offset, true, noAssert);
      };
      Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
        return writeFloat(this, value, offset, false, noAssert);
      };
      function writeDouble(buf, value, offset, littleEndian, noAssert) {
        noAssert || checkIEEE754(buf, value, offset, 8, 1.7976931348623157e308, -1.7976931348623157e308);
        ieee754.write(buf, value, offset, littleEndian, 52, 8);
        return offset + 8;
      }
      Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
        return writeDouble(this, value, offset, true, noAssert);
      };
      Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
        return writeDouble(this, value, offset, false, noAssert);
      };
      Buffer.prototype.copy = function copy(target, targetStart, start, end) {
        start || (start = 0);
        end || 0 === end || (end = this.length);
        targetStart >= target.length && (targetStart = target.length);
        targetStart || (targetStart = 0);
        end > 0 && end < start && (end = start);
        if (end === start) return 0;
        if (0 === target.length || 0 === this.length) return 0;
        if (targetStart < 0) throw new RangeError("targetStart out of bounds");
        if (start < 0 || start >= this.length) throw new RangeError("sourceStart out of bounds");
        if (end < 0) throw new RangeError("sourceEnd out of bounds");
        end > this.length && (end = this.length);
        target.length - targetStart < end - start && (end = target.length - targetStart + start);
        var len = end - start;
        var i;
        if (this === target && start < targetStart && targetStart < end) for (i = len - 1; i >= 0; --i) target[i + targetStart] = this[i + start]; else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) for (i = 0; i < len; ++i) target[i + targetStart] = this[i + start]; else Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
        return len;
      };
      Buffer.prototype.fill = function fill(val, start, end, encoding) {
        if ("string" === typeof val) {
          if ("string" === typeof start) {
            encoding = start;
            start = 0;
            end = this.length;
          } else if ("string" === typeof end) {
            encoding = end;
            end = this.length;
          }
          if (1 === val.length) {
            var code = val.charCodeAt(0);
            code < 256 && (val = code);
          }
          if (void 0 !== encoding && "string" !== typeof encoding) throw new TypeError("encoding must be a string");
          if ("string" === typeof encoding && !Buffer.isEncoding(encoding)) throw new TypeError("Unknown encoding: " + encoding);
        } else "number" === typeof val && (val &= 255);
        if (start < 0 || this.length < start || this.length < end) throw new RangeError("Out of range index");
        if (end <= start) return this;
        start >>>= 0;
        end = void 0 === end ? this.length : end >>> 0;
        val || (val = 0);
        var i;
        if ("number" === typeof val) for (i = start; i < end; ++i) this[i] = val; else {
          var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
          var len = bytes.length;
          for (i = 0; i < end - start; ++i) this[i + start] = bytes[i % len];
        }
        return this;
      };
      var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
      function base64clean(str) {
        str = stringtrim(str).replace(INVALID_BASE64_RE, "");
        if (str.length < 2) return "";
        while (str.length % 4 !== 0) str += "=";
        return str;
      }
      function stringtrim(str) {
        if (str.trim) return str.trim();
        return str.replace(/^\s+|\s+$/g, "");
      }
      function toHex(n) {
        if (n < 16) return "0" + n.toString(16);
        return n.toString(16);
      }
      function utf8ToBytes(string, units) {
        units = units || Infinity;
        var codePoint;
        var length = string.length;
        var leadSurrogate = null;
        var bytes = [];
        for (var i = 0; i < length; ++i) {
          codePoint = string.charCodeAt(i);
          if (codePoint > 55295 && codePoint < 57344) {
            if (!leadSurrogate) {
              if (codePoint > 56319) {
                (units -= 3) > -1 && bytes.push(239, 191, 189);
                continue;
              }
              if (i + 1 === length) {
                (units -= 3) > -1 && bytes.push(239, 191, 189);
                continue;
              }
              leadSurrogate = codePoint;
              continue;
            }
            if (codePoint < 56320) {
              (units -= 3) > -1 && bytes.push(239, 191, 189);
              leadSurrogate = codePoint;
              continue;
            }
            codePoint = 65536 + (leadSurrogate - 55296 << 10 | codePoint - 56320);
          } else leadSurrogate && (units -= 3) > -1 && bytes.push(239, 191, 189);
          leadSurrogate = null;
          if (codePoint < 128) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
          } else if (codePoint < 2048) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 6 | 192, 63 & codePoint | 128);
          } else if (codePoint < 65536) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, 63 & codePoint | 128);
          } else {
            if (!(codePoint < 1114112)) throw new Error("Invalid code point");
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, 63 & codePoint | 128);
          }
        }
        return bytes;
      }
      function asciiToBytes(str) {
        var byteArray = [];
        for (var i = 0; i < str.length; ++i) byteArray.push(255 & str.charCodeAt(i));
        return byteArray;
      }
      function utf16leToBytes(str, units) {
        var c, hi, lo;
        var byteArray = [];
        for (var i = 0; i < str.length; ++i) {
          if ((units -= 2) < 0) break;
          c = str.charCodeAt(i);
          hi = c >> 8;
          lo = c % 256;
          byteArray.push(lo);
          byteArray.push(hi);
        }
        return byteArray;
      }
      function base64ToBytes(str) {
        return base64.toByteArray(base64clean(str));
      }
      function blitBuffer(src, dst, offset, length) {
        for (var i = 0; i < length; ++i) {
          if (i + offset >= dst.length || i >= src.length) break;
          dst[i + offset] = src[i];
        }
        return i;
      }
      function isnan(val) {
        return val !== val;
      }
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    "base64-js": 1,
    ieee754: 4,
    isarray: 3
  } ],
  3: [ function(require, module, exports) {
    var toString = {}.toString;
    module.exports = Array.isArray || function(arr) {
      return "[object Array]" == toString.call(arr);
    };
  }, {} ],
  4: [ function(require, module, exports) {
    exports.read = function(buffer, offset, isLE, mLen, nBytes) {
      var e, m;
      var eLen = 8 * nBytes - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i = isLE ? nBytes - 1 : 0;
      var d = isLE ? -1 : 1;
      var s = buffer[offset + i];
      i += d;
      e = s & (1 << -nBits) - 1;
      s >>= -nBits;
      nBits += eLen;
      for (;nBits > 0; e = 256 * e + buffer[offset + i], i += d, nBits -= 8) ;
      m = e & (1 << -nBits) - 1;
      e >>= -nBits;
      nBits += mLen;
      for (;nBits > 0; m = 256 * m + buffer[offset + i], i += d, nBits -= 8) ;
      if (0 === e) e = 1 - eBias; else {
        if (e === eMax) return m ? NaN : Infinity * (s ? -1 : 1);
        m += Math.pow(2, mLen);
        e -= eBias;
      }
      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
    };
    exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
      var e, m, c;
      var eLen = 8 * nBytes - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = 23 === mLen ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
      var i = isLE ? 0 : nBytes - 1;
      var d = isLE ? 1 : -1;
      var s = value < 0 || 0 === value && 1 / value < 0 ? 1 : 0;
      value = Math.abs(value);
      if (isNaN(value) || Infinity === value) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
      } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
          e--;
          c *= 2;
        }
        value += e + eBias >= 1 ? rt / c : rt * Math.pow(2, 1 - eBias);
        if (value * c >= 2) {
          e++;
          c /= 2;
        }
        if (e + eBias >= eMax) {
          m = 0;
          e = eMax;
        } else if (e + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e += eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e = 0;
        }
      }
      for (;mLen >= 8; buffer[offset + i] = 255 & m, i += d, m /= 256, mLen -= 8) ;
      e = e << mLen | m;
      eLen += mLen;
      for (;eLen > 0; buffer[offset + i] = 255 & e, i += d, e /= 256, eLen -= 8) ;
      buffer[offset + i - d] |= 128 * s;
    };
  }, {} ],
  5: [ function(require, module, exports) {
    (function(process) {
      function normalizeArray(parts, allowAboveRoot) {
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if ("." === last) parts.splice(i, 1); else if (".." === last) {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        if (allowAboveRoot) for (;up--; up) parts.unshift("..");
        return parts;
      }
      exports.resolve = function() {
        var resolvedPath = "", resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = i >= 0 ? arguments[i] : process.cwd();
          if ("string" !== typeof path) throw new TypeError("Arguments to path.resolve must be strings");
          if (!path) continue;
          resolvedPath = path + "/" + resolvedPath;
          resolvedAbsolute = "/" === path.charAt(0);
        }
        resolvedPath = normalizeArray(filter(resolvedPath.split("/"), function(p) {
          return !!p;
        }), !resolvedAbsolute).join("/");
        return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
      };
      exports.normalize = function(path) {
        var isAbsolute = exports.isAbsolute(path), trailingSlash = "/" === substr(path, -1);
        path = normalizeArray(filter(path.split("/"), function(p) {
          return !!p;
        }), !isAbsolute).join("/");
        path || isAbsolute || (path = ".");
        path && trailingSlash && (path += "/");
        return (isAbsolute ? "/" : "") + path;
      };
      exports.isAbsolute = function(path) {
        return "/" === path.charAt(0);
      };
      exports.join = function() {
        var paths = Array.prototype.slice.call(arguments, 0);
        return exports.normalize(filter(paths, function(p, index) {
          if ("string" !== typeof p) throw new TypeError("Arguments to path.join must be strings");
          return p;
        }).join("/"));
      };
      exports.relative = function(from, to) {
        from = exports.resolve(from).substr(1);
        to = exports.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (;start < arr.length; start++) if ("" !== arr[start]) break;
          var end = arr.length - 1;
          for (;end >= 0; end--) if ("" !== arr[end]) break;
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split("/"));
        var toParts = trim(to.split("/"));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) if (fromParts[i] !== toParts[i]) {
          samePartsLength = i;
          break;
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) outputParts.push("..");
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join("/");
      };
      exports.sep = "/";
      exports.delimiter = ":";
      exports.dirname = function(path) {
        "string" !== typeof path && (path += "");
        if (0 === path.length) return ".";
        var code = path.charCodeAt(0);
        var hasRoot = 47 === code;
        var end = -1;
        var matchedSlash = true;
        for (var i = path.length - 1; i >= 1; --i) {
          code = path.charCodeAt(i);
          if (47 === code) {
            if (!matchedSlash) {
              end = i;
              break;
            }
          } else matchedSlash = false;
        }
        if (-1 === end) return hasRoot ? "/" : ".";
        if (hasRoot && 1 === end) return "/";
        return path.slice(0, end);
      };
      function basename(path) {
        "string" !== typeof path && (path += "");
        var start = 0;
        var end = -1;
        var matchedSlash = true;
        var i;
        for (i = path.length - 1; i >= 0; --i) if (47 === path.charCodeAt(i)) {
          if (!matchedSlash) {
            start = i + 1;
            break;
          }
        } else if (-1 === end) {
          matchedSlash = false;
          end = i + 1;
        }
        if (-1 === end) return "";
        return path.slice(start, end);
      }
      exports.basename = function(path, ext) {
        var f = basename(path);
        ext && f.substr(-1 * ext.length) === ext && (f = f.substr(0, f.length - ext.length));
        return f;
      };
      exports.extname = function(path) {
        "string" !== typeof path && (path += "");
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var matchedSlash = true;
        var preDotState = 0;
        for (var i = path.length - 1; i >= 0; --i) {
          var code = path.charCodeAt(i);
          if (47 === code) {
            if (!matchedSlash) {
              startPart = i + 1;
              break;
            }
            continue;
          }
          if (-1 === end) {
            matchedSlash = false;
            end = i + 1;
          }
          46 === code ? -1 === startDot ? startDot = i : 1 !== preDotState && (preDotState = 1) : -1 !== startDot && (preDotState = -1);
        }
        if (-1 === startDot || -1 === end || 0 === preDotState || 1 === preDotState && startDot === end - 1 && startDot === startPart + 1) return "";
        return path.slice(startDot, end);
      };
      function filter(xs, f) {
        if (xs.filter) return xs.filter(f);
        var res = [];
        for (var i = 0; i < xs.length; i++) f(xs[i], i, xs) && res.push(xs[i]);
        return res;
      }
      var substr = "b" === "ab".substr(-1) ? function(str, start, len) {
        return str.substr(start, len);
      } : function(str, start, len) {
        start < 0 && (start = str.length + start);
        return str.substr(start, len);
      };
    }).call(this, require("_process"));
  }, {
    _process: 6
  } ],
  6: [ function(require, module, exports) {
    var process = module.exports = {};
    var cachedSetTimeout;
    var cachedClearTimeout;
    function defaultSetTimout() {
      throw new Error("setTimeout has not been defined");
    }
    function defaultClearTimeout() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        cachedSetTimeout = "function" === typeof setTimeout ? setTimeout : defaultSetTimout;
      } catch (e) {
        cachedSetTimeout = defaultSetTimout;
      }
      try {
        cachedClearTimeout = "function" === typeof clearTimeout ? clearTimeout : defaultClearTimeout;
      } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
      }
    })();
    function runTimeout(fun) {
      if (cachedSetTimeout === setTimeout) return setTimeout(fun, 0);
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
      }
      try {
        return cachedSetTimeout(fun, 0);
      } catch (e) {
        try {
          return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
          return cachedSetTimeout.call(this, fun, 0);
        }
      }
    }
    function runClearTimeout(marker) {
      if (cachedClearTimeout === clearTimeout) return clearTimeout(marker);
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
      }
      try {
        return cachedClearTimeout(marker);
      } catch (e) {
        try {
          return cachedClearTimeout.call(null, marker);
        } catch (e) {
          return cachedClearTimeout.call(this, marker);
        }
      }
    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;
    function cleanUpNextTick() {
      if (!draining || !currentQueue) return;
      draining = false;
      currentQueue.length ? queue = currentQueue.concat(queue) : queueIndex = -1;
      queue.length && drainQueue();
    }
    function drainQueue() {
      if (draining) return;
      var timeout = runTimeout(cleanUpNextTick);
      draining = true;
      var len = queue.length;
      while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) currentQueue && currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
      }
      currentQueue = null;
      draining = false;
      runClearTimeout(timeout);
    }
    process.nextTick = function(fun) {
      var args = new Array(arguments.length - 1);
      if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) args[i - 1] = arguments[i];
      queue.push(new Item(fun, args));
      1 !== queue.length || draining || runTimeout(drainQueue);
    };
    function Item(fun, array) {
      this.fun = fun;
      this.array = array;
    }
    Item.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    process.title = "browser";
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = "";
    process.versions = {};
    function noop() {}
    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;
    process.prependListener = noop;
    process.prependOnceListener = noop;
    process.listeners = function(name) {
      return [];
    };
    process.binding = function(name) {
      throw new Error("process.binding is not supported");
    };
    process.cwd = function() {
      return "/";
    };
    process.chdir = function(dir) {
      throw new Error("process.chdir is not supported");
    };
    process.umask = function() {
      return 0;
    };
  }, {} ],
  7: [ function(require, module, exports) {
    "use strict";
    module.exports = asPromise;
    function asPromise(fn, ctx) {
      var params = new Array(arguments.length - 1), offset = 0, index = 2, pending = true;
      while (index < arguments.length) params[offset++] = arguments[index++];
      return new Promise(function executor(resolve, reject) {
        params[offset] = function callback(err) {
          if (pending) {
            pending = false;
            if (err) reject(err); else {
              var params = new Array(arguments.length - 1), offset = 0;
              while (offset < params.length) params[offset++] = arguments[offset];
              resolve.apply(null, params);
            }
          }
        };
        try {
          fn.apply(ctx || null, params);
        } catch (err) {
          if (pending) {
            pending = false;
            reject(err);
          }
        }
      });
    }
  }, {} ],
  8: [ function(require, module, exports) {
    "use strict";
    var base64 = exports;
    base64.length = function length(string) {
      var p = string.length;
      if (!p) return 0;
      var n = 0;
      while (--p % 4 > 1 && "=" === string.charAt(p)) ++n;
      return Math.ceil(3 * string.length) / 4 - n;
    };
    var b64 = new Array(64);
    var s64 = new Array(123);
    for (var i = 0; i < 64; ) s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;
    base64.encode = function encode(buffer, start, end) {
      var parts = null, chunk = [];
      var i = 0, j = 0, t;
      while (start < end) {
        var b = buffer[start++];
        switch (j) {
         case 0:
          chunk[i++] = b64[b >> 2];
          t = (3 & b) << 4;
          j = 1;
          break;

         case 1:
          chunk[i++] = b64[t | b >> 4];
          t = (15 & b) << 2;
          j = 2;
          break;

         case 2:
          chunk[i++] = b64[t | b >> 6];
          chunk[i++] = b64[63 & b];
          j = 0;
        }
        if (i > 8191) {
          (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
          i = 0;
        }
      }
      if (j) {
        chunk[i++] = b64[t];
        chunk[i++] = 61;
        1 === j && (chunk[i++] = 61);
      }
      if (parts) {
        i && parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
      }
      return String.fromCharCode.apply(String, chunk.slice(0, i));
    };
    var invalidEncoding = "invalid encoding";
    base64.decode = function decode(string, buffer, offset) {
      var start = offset;
      var j = 0, t;
      for (var i = 0; i < string.length; ) {
        var c = string.charCodeAt(i++);
        if (61 === c && j > 1) break;
        if (void 0 === (c = s64[c])) throw Error(invalidEncoding);
        switch (j) {
         case 0:
          t = c;
          j = 1;
          break;

         case 1:
          buffer[offset++] = t << 2 | (48 & c) >> 4;
          t = c;
          j = 2;
          break;

         case 2:
          buffer[offset++] = (15 & t) << 4 | (60 & c) >> 2;
          t = c;
          j = 3;
          break;

         case 3:
          buffer[offset++] = (3 & t) << 6 | c;
          j = 0;
        }
      }
      if (1 === j) throw Error(invalidEncoding);
      return offset - start;
    };
    base64.test = function test(string) {
      return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);
    };
  }, {} ],
  9: [ function(require, module, exports) {
    "use strict";
    module.exports = codegen;
    function codegen(functionParams, functionName) {
      if ("string" === typeof functionParams) {
        functionName = functionParams;
        functionParams = void 0;
      }
      var body = [];
      function Codegen(formatStringOrScope) {
        if ("string" !== typeof formatStringOrScope) {
          var source = toString();
          codegen.verbose && console.log("codegen: " + source);
          source = "return " + source;
          if (formatStringOrScope) {
            var scopeKeys = Object.keys(formatStringOrScope), scopeParams = new Array(scopeKeys.length + 1), scopeValues = new Array(scopeKeys.length), scopeOffset = 0;
            while (scopeOffset < scopeKeys.length) {
              scopeParams[scopeOffset] = scopeKeys[scopeOffset];
              scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];
            }
            scopeParams[scopeOffset] = source;
            return Function.apply(null, scopeParams).apply(null, scopeValues);
          }
          return Function(source)();
        }
        var formatParams = new Array(arguments.length - 1), formatOffset = 0;
        while (formatOffset < formatParams.length) formatParams[formatOffset] = arguments[++formatOffset];
        formatOffset = 0;
        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {
          var value = formatParams[formatOffset++];
          switch ($1) {
           case "d":
           case "f":
            return String(Number(value));

           case "i":
            return String(Math.floor(value));

           case "j":
            return JSON.stringify(value);

           case "s":
            return String(value);
          }
          return "%";
        });
        if (formatOffset !== formatParams.length) throw Error("parameter count mismatch");
        body.push(formatStringOrScope);
        return Codegen;
      }
      function toString(functionNameOverride) {
        return "function " + (functionNameOverride || functionName || "") + "(" + (functionParams && functionParams.join(",") || "") + "){\n  " + body.join("\n  ") + "\n}";
      }
      Codegen.toString = toString;
      return Codegen;
    }
    codegen.verbose = false;
  }, {} ],
  10: [ function(require, module, exports) {
    "use strict";
    module.exports = EventEmitter;
    function EventEmitter() {
      this._listeners = {};
    }
    EventEmitter.prototype.on = function on(evt, fn, ctx) {
      (this._listeners[evt] || (this._listeners[evt] = [])).push({
        fn: fn,
        ctx: ctx || this
      });
      return this;
    };
    EventEmitter.prototype.off = function off(evt, fn) {
      if (void 0 === evt) this._listeners = {}; else if (void 0 === fn) this._listeners[evt] = []; else {
        var listeners = this._listeners[evt];
        for (var i = 0; i < listeners.length; ) listeners[i].fn === fn ? listeners.splice(i, 1) : ++i;
      }
      return this;
    };
    EventEmitter.prototype.emit = function emit(evt) {
      var listeners = this._listeners[evt];
      if (listeners) {
        var args = [], i = 1;
        for (;i < arguments.length; ) args.push(arguments[i++]);
        for (i = 0; i < listeners.length; ) listeners[i].fn.apply(listeners[i++].ctx, args);
      }
      return this;
    };
  }, {} ],
  11: [ function(require, module, exports) {
    "use strict";
    module.exports = fetch;
    var asPromise = require("@protobufjs/aspromise"), inquire = require("@protobufjs/inquire");
    var fs = inquire("fs");
    function fetch(filename, options, callback) {
      if ("function" === typeof options) {
        callback = options;
        options = {};
      } else options || (options = {});
      if (!callback) return asPromise(fetch, this, filename, options);
      if (!options.xhr && fs && fs.readFile) return fs.readFile(filename, function fetchReadFileCallback(err, contents) {
        return err && "undefined" !== typeof XMLHttpRequest ? fetch.xhr(filename, options, callback) : err ? callback(err) : callback(null, options.binary ? contents : contents.toString("utf8"));
      });
      return fetch.xhr(filename, options, callback);
    }
    fetch.xhr = function fetch_xhr(filename, options, callback) {
      var xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function fetchOnReadyStateChange() {
        if (4 !== xhr.readyState) return;
        if (0 !== xhr.status && 200 !== xhr.status) return callback(Error("status " + xhr.status));
        if (options.binary) {
          var buffer = xhr.response;
          if (!buffer) {
            buffer = [];
            for (var i = 0; i < xhr.responseText.length; ++i) buffer.push(255 & xhr.responseText.charCodeAt(i));
          }
          return callback(null, "undefined" !== typeof Uint8Array ? new Uint8Array(buffer) : buffer);
        }
        return callback(null, xhr.responseText);
      };
      if (options.binary) {
        "overrideMimeType" in xhr && xhr.overrideMimeType("text/plain; charset=x-user-defined");
        xhr.responseType = "arraybuffer";
      }
      xhr.open("GET", filename);
      xhr.send();
    };
  }, {
    "@protobufjs/aspromise": 7,
    "@protobufjs/inquire": 13
  } ],
  12: [ function(require, module, exports) {
    "use strict";
    module.exports = factory(factory);
    function factory(exports) {
      "undefined" !== typeof Float32Array ? function() {
        var f32 = new Float32Array([ -0 ]), f8b = new Uint8Array(f32.buffer), le = 128 === f8b[3];
        function writeFloat_f32_cpy(val, buf, pos) {
          f32[0] = val;
          buf[pos] = f8b[0];
          buf[pos + 1] = f8b[1];
          buf[pos + 2] = f8b[2];
          buf[pos + 3] = f8b[3];
        }
        function writeFloat_f32_rev(val, buf, pos) {
          f32[0] = val;
          buf[pos] = f8b[3];
          buf[pos + 1] = f8b[2];
          buf[pos + 2] = f8b[1];
          buf[pos + 3] = f8b[0];
        }
        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;
        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;
        function readFloat_f32_cpy(buf, pos) {
          f8b[0] = buf[pos];
          f8b[1] = buf[pos + 1];
          f8b[2] = buf[pos + 2];
          f8b[3] = buf[pos + 3];
          return f32[0];
        }
        function readFloat_f32_rev(buf, pos) {
          f8b[3] = buf[pos];
          f8b[2] = buf[pos + 1];
          f8b[1] = buf[pos + 2];
          f8b[0] = buf[pos + 3];
          return f32[0];
        }
        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;
        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;
      }() : function() {
        function writeFloat_ieee754(writeUint, val, buf, pos) {
          var sign = val < 0 ? 1 : 0;
          sign && (val = -val);
          if (0 === val) writeUint(1 / val > 0 ? 0 : 2147483648, buf, pos); else if (isNaN(val)) writeUint(2143289344, buf, pos); else if (val > 3.4028234663852886e38) writeUint((sign << 31 | 2139095040) >>> 0, buf, pos); else if (val < 1.1754943508222875e-38) writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos); else {
            var exponent = Math.floor(Math.log(val) / Math.LN2), mantissa = 8388607 & Math.round(val * Math.pow(2, -exponent) * 8388608);
            writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);
          }
        }
        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);
        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);
        function readFloat_ieee754(readUint, buf, pos) {
          var uint = readUint(buf, pos), sign = 2 * (uint >> 31) + 1, exponent = uint >>> 23 & 255, mantissa = 8388607 & uint;
          return 255 === exponent ? mantissa ? NaN : Infinity * sign : 0 === exponent ? 1.401298464324817e-45 * sign * mantissa : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);
        }
        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);
        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);
      }();
      "undefined" !== typeof Float64Array ? function() {
        var f64 = new Float64Array([ -0 ]), f8b = new Uint8Array(f64.buffer), le = 128 === f8b[7];
        function writeDouble_f64_cpy(val, buf, pos) {
          f64[0] = val;
          buf[pos] = f8b[0];
          buf[pos + 1] = f8b[1];
          buf[pos + 2] = f8b[2];
          buf[pos + 3] = f8b[3];
          buf[pos + 4] = f8b[4];
          buf[pos + 5] = f8b[5];
          buf[pos + 6] = f8b[6];
          buf[pos + 7] = f8b[7];
        }
        function writeDouble_f64_rev(val, buf, pos) {
          f64[0] = val;
          buf[pos] = f8b[7];
          buf[pos + 1] = f8b[6];
          buf[pos + 2] = f8b[5];
          buf[pos + 3] = f8b[4];
          buf[pos + 4] = f8b[3];
          buf[pos + 5] = f8b[2];
          buf[pos + 6] = f8b[1];
          buf[pos + 7] = f8b[0];
        }
        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;
        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;
        function readDouble_f64_cpy(buf, pos) {
          f8b[0] = buf[pos];
          f8b[1] = buf[pos + 1];
          f8b[2] = buf[pos + 2];
          f8b[3] = buf[pos + 3];
          f8b[4] = buf[pos + 4];
          f8b[5] = buf[pos + 5];
          f8b[6] = buf[pos + 6];
          f8b[7] = buf[pos + 7];
          return f64[0];
        }
        function readDouble_f64_rev(buf, pos) {
          f8b[7] = buf[pos];
          f8b[6] = buf[pos + 1];
          f8b[5] = buf[pos + 2];
          f8b[4] = buf[pos + 3];
          f8b[3] = buf[pos + 4];
          f8b[2] = buf[pos + 5];
          f8b[1] = buf[pos + 6];
          f8b[0] = buf[pos + 7];
          return f64[0];
        }
        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;
        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;
      }() : function() {
        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {
          var sign = val < 0 ? 1 : 0;
          sign && (val = -val);
          if (0 === val) {
            writeUint(0, buf, pos + off0);
            writeUint(1 / val > 0 ? 0 : 2147483648, buf, pos + off1);
          } else if (isNaN(val)) {
            writeUint(0, buf, pos + off0);
            writeUint(2146959360, buf, pos + off1);
          } else if (val > 1.7976931348623157e308) {
            writeUint(0, buf, pos + off0);
            writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);
          } else {
            var mantissa;
            if (val < 2.2250738585072014e-308) {
              mantissa = val / 5e-324;
              writeUint(mantissa >>> 0, buf, pos + off0);
              writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);
            } else {
              var exponent = Math.floor(Math.log(val) / Math.LN2);
              1024 === exponent && (exponent = 1023);
              mantissa = val * Math.pow(2, -exponent);
              writeUint(4503599627370496 * mantissa >>> 0, buf, pos + off0);
              writeUint((sign << 31 | exponent + 1023 << 20 | 1048576 * mantissa & 1048575) >>> 0, buf, pos + off1);
            }
          }
        }
        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);
        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);
        function readDouble_ieee754(readUint, off0, off1, buf, pos) {
          var lo = readUint(buf, pos + off0), hi = readUint(buf, pos + off1);
          var sign = 2 * (hi >> 31) + 1, exponent = hi >>> 20 & 2047, mantissa = 4294967296 * (1048575 & hi) + lo;
          return 2047 === exponent ? mantissa ? NaN : Infinity * sign : 0 === exponent ? 5e-324 * sign * mantissa : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);
        }
        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);
        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);
      }();
      return exports;
    }
    function writeUintLE(val, buf, pos) {
      buf[pos] = 255 & val;
      buf[pos + 1] = val >>> 8 & 255;
      buf[pos + 2] = val >>> 16 & 255;
      buf[pos + 3] = val >>> 24;
    }
    function writeUintBE(val, buf, pos) {
      buf[pos] = val >>> 24;
      buf[pos + 1] = val >>> 16 & 255;
      buf[pos + 2] = val >>> 8 & 255;
      buf[pos + 3] = 255 & val;
    }
    function readUintLE(buf, pos) {
      return (buf[pos] | buf[pos + 1] << 8 | buf[pos + 2] << 16 | buf[pos + 3] << 24) >>> 0;
    }
    function readUintBE(buf, pos) {
      return (buf[pos] << 24 | buf[pos + 1] << 16 | buf[pos + 2] << 8 | buf[pos + 3]) >>> 0;
    }
  }, {} ],
  13: [ function(require, module, exports) {
    "use strict";
    module.exports = inquire;
    function inquire(moduleName) {
      try {
        var mod = eval("quire".replace(/^/, "re"))(moduleName);
        if (mod && (mod.length || Object.keys(mod).length)) return mod;
      } catch (e) {}
      return null;
    }
  }, {} ],
  14: [ function(require, module, exports) {
    "use strict";
    var path = exports;
    var isAbsolute = path.isAbsolute = function isAbsolute(path) {
      return /^(?:\/|\w+:)/.test(path);
    };
    var normalize = path.normalize = function normalize(path) {
      path = path.replace(/\\/g, "/").replace(/\/{2,}/g, "/");
      var parts = path.split("/"), absolute = isAbsolute(path), prefix = "";
      absolute && (prefix = parts.shift() + "/");
      for (var i = 0; i < parts.length; ) ".." === parts[i] ? i > 0 && ".." !== parts[i - 1] ? parts.splice(--i, 2) : absolute ? parts.splice(i, 1) : ++i : "." === parts[i] ? parts.splice(i, 1) : ++i;
      return prefix + parts.join("/");
    };
    path.resolve = function resolve(originPath, includePath, alreadyNormalized) {
      alreadyNormalized || (includePath = normalize(includePath));
      if (isAbsolute(includePath)) return includePath;
      alreadyNormalized || (originPath = normalize(originPath));
      return (originPath = originPath.replace(/(?:\/|^)[^/]+$/, "")).length ? normalize(originPath + "/" + includePath) : includePath;
    };
  }, {} ],
  15: [ function(require, module, exports) {
    "use strict";
    module.exports = pool;
    function pool(alloc, slice, size) {
      var SIZE = size || 8192;
      var MAX = SIZE >>> 1;
      var slab = null;
      var offset = SIZE;
      return function pool_alloc(size) {
        if (size < 1 || size > MAX) return alloc(size);
        if (offset + size > SIZE) {
          slab = alloc(SIZE);
          offset = 0;
        }
        var buf = slice.call(slab, offset, offset += size);
        7 & offset && (offset = 1 + (7 | offset));
        return buf;
      };
    }
  }, {} ],
  16: [ function(require, module, exports) {
    "use strict";
    var utf8 = exports;
    utf8.length = function utf8_length(string) {
      var len = 0, c = 0;
      for (var i = 0; i < string.length; ++i) {
        c = string.charCodeAt(i);
        if (c < 128) len += 1; else if (c < 2048) len += 2; else if (55296 === (64512 & c) && 56320 === (64512 & string.charCodeAt(i + 1))) {
          ++i;
          len += 4;
        } else len += 3;
      }
      return len;
    };
    utf8.read = function utf8_read(buffer, start, end) {
      var len = end - start;
      if (len < 1) return "";
      var parts = null, chunk = [], i = 0, t;
      while (start < end) {
        t = buffer[start++];
        if (t < 128) chunk[i++] = t; else if (t > 191 && t < 224) chunk[i++] = (31 & t) << 6 | 63 & buffer[start++]; else if (t > 239 && t < 365) {
          t = ((7 & t) << 18 | (63 & buffer[start++]) << 12 | (63 & buffer[start++]) << 6 | 63 & buffer[start++]) - 65536;
          chunk[i++] = 55296 + (t >> 10);
          chunk[i++] = 56320 + (1023 & t);
        } else chunk[i++] = (15 & t) << 12 | (63 & buffer[start++]) << 6 | 63 & buffer[start++];
        if (i > 8191) {
          (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));
          i = 0;
        }
      }
      if (parts) {
        i && parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));
        return parts.join("");
      }
      return String.fromCharCode.apply(String, chunk.slice(0, i));
    };
    utf8.write = function utf8_write(string, buffer, offset) {
      var start = offset, c1, c2;
      for (var i = 0; i < string.length; ++i) {
        c1 = string.charCodeAt(i);
        if (c1 < 128) buffer[offset++] = c1; else if (c1 < 2048) {
          buffer[offset++] = c1 >> 6 | 192;
          buffer[offset++] = 63 & c1 | 128;
        } else if (55296 === (64512 & c1) && 56320 === (64512 & (c2 = string.charCodeAt(i + 1)))) {
          c1 = 65536 + ((1023 & c1) << 10) + (1023 & c2);
          ++i;
          buffer[offset++] = c1 >> 18 | 240;
          buffer[offset++] = c1 >> 12 & 63 | 128;
          buffer[offset++] = c1 >> 6 & 63 | 128;
          buffer[offset++] = 63 & c1 | 128;
        } else {
          buffer[offset++] = c1 >> 12 | 224;
          buffer[offset++] = c1 >> 6 & 63 | 128;
          buffer[offset++] = 63 & c1 | 128;
        }
      }
      return offset - start;
    };
  }, {} ],
  17: [ function(require, module, exports) {
    "use strict";
    module.exports = require("./src/index");
  }, {
    "./src/index": 26
  } ],
  18: [ function(require, module, exports) {
    "use strict";
    module.exports = common;
    var commonRe = /\/|\./;
    function common(name, json) {
      if (!commonRe.test(name)) {
        name = "google/protobuf/" + name + ".proto";
        json = {
          nested: {
            google: {
              nested: {
                protobuf: {
                  nested: json
                }
              }
            }
          }
        };
      }
      common[name] = json;
    }
    common("any", {
      Any: {
        fields: {
          type_url: {
            type: "string",
            id: 1
          },
          value: {
            type: "bytes",
            id: 2
          }
        }
      }
    });
    var timeType;
    common("duration", {
      Duration: timeType = {
        fields: {
          seconds: {
            type: "int64",
            id: 1
          },
          nanos: {
            type: "int32",
            id: 2
          }
        }
      }
    });
    common("timestamp", {
      Timestamp: timeType
    });
    common("empty", {
      Empty: {
        fields: {}
      }
    });
    common("struct", {
      Struct: {
        fields: {
          fields: {
            keyType: "string",
            type: "Value",
            id: 1
          }
        }
      },
      Value: {
        oneofs: {
          kind: {
            oneof: [ "nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue" ]
          }
        },
        fields: {
          nullValue: {
            type: "NullValue",
            id: 1
          },
          numberValue: {
            type: "double",
            id: 2
          },
          stringValue: {
            type: "string",
            id: 3
          },
          boolValue: {
            type: "bool",
            id: 4
          },
          structValue: {
            type: "Struct",
            id: 5
          },
          listValue: {
            type: "ListValue",
            id: 6
          }
        }
      },
      NullValue: {
        values: {
          NULL_VALUE: 0
        }
      },
      ListValue: {
        fields: {
          values: {
            rule: "repeated",
            type: "Value",
            id: 1
          }
        }
      }
    });
    common("wrappers", {
      DoubleValue: {
        fields: {
          value: {
            type: "double",
            id: 1
          }
        }
      },
      FloatValue: {
        fields: {
          value: {
            type: "float",
            id: 1
          }
        }
      },
      Int64Value: {
        fields: {
          value: {
            type: "int64",
            id: 1
          }
        }
      },
      UInt64Value: {
        fields: {
          value: {
            type: "uint64",
            id: 1
          }
        }
      },
      Int32Value: {
        fields: {
          value: {
            type: "int32",
            id: 1
          }
        }
      },
      UInt32Value: {
        fields: {
          value: {
            type: "uint32",
            id: 1
          }
        }
      },
      BoolValue: {
        fields: {
          value: {
            type: "bool",
            id: 1
          }
        }
      },
      StringValue: {
        fields: {
          value: {
            type: "string",
            id: 1
          }
        }
      },
      BytesValue: {
        fields: {
          value: {
            type: "bytes",
            id: 1
          }
        }
      }
    });
    common("field_mask", {
      FieldMask: {
        fields: {
          paths: {
            rule: "repeated",
            type: "string",
            id: 1
          }
        }
      }
    });
    common.get = function get(file) {
      return common[file] || null;
    };
  }, {} ],
  19: [ function(require, module, exports) {
    "use strict";
    var converter = exports;
    var Enum = require("./enum"), util = require("./util");
    function genValuePartial_fromObject(gen, field, fieldIndex, prop) {
      if (field.resolvedType) if (field.resolvedType instanceof Enum) {
        gen("switch(d%s){", prop);
        for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {
          field.repeated && values[keys[i]] === field.typeDefault && gen("default:");
          gen("case%j:", keys[i])("case %i:", values[keys[i]])("m%s=%j", prop, values[keys[i]])("break");
        }
        gen("}");
      } else gen('if(typeof d%s!=="object")', prop)("throw TypeError(%j)", field.fullName + ": object expected")("m%s=types[%i].fromObject(d%s)", prop, fieldIndex, prop); else {
        var isUnsigned = false;
        switch (field.type) {
         case "double":
         case "float":
          gen("m%s=Number(d%s)", prop, prop);
          break;

         case "uint32":
         case "fixed32":
          gen("m%s=d%s>>>0", prop, prop);
          break;

         case "int32":
         case "sint32":
         case "sfixed32":
          gen("m%s=d%s|0", prop, prop);
          break;

         case "uint64":
          isUnsigned = true;

         case "int64":
         case "sint64":
         case "fixed64":
         case "sfixed64":
          gen("if(util.Long)")("(m%s=util.Long.fromValue(d%s)).unsigned=%j", prop, prop, isUnsigned)('else if(typeof d%s==="string")', prop)("m%s=parseInt(d%s,10)", prop, prop)('else if(typeof d%s==="number")', prop)("m%s=d%s", prop, prop)('else if(typeof d%s==="object")', prop)("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)", prop, prop, prop, isUnsigned ? "true" : "");
          break;

         case "bytes":
          gen('if(typeof d%s==="string")', prop)("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)", prop, prop, prop)("else if(d%s.length)", prop)("m%s=d%s", prop, prop);
          break;

         case "string":
          gen("m%s=String(d%s)", prop, prop);
          break;

         case "bool":
          gen("m%s=Boolean(d%s)", prop, prop);
        }
      }
      return gen;
    }
    converter.fromObject = function fromObject(mtype) {
      var fields = mtype.fieldsArray;
      var gen = util.codegen([ "d" ], mtype.name + "$fromObject")("if(d instanceof this.ctor)")("return d");
      if (!fields.length) return gen("return new this.ctor");
      gen("var m=new this.ctor");
      for (var i = 0; i < fields.length; ++i) {
        var field = fields[i].resolve(), prop = util.safeProp(field.name);
        if (field.map) {
          gen("if(d%s){", prop)('if(typeof d%s!=="object")', prop)("throw TypeError(%j)", field.fullName + ": object expected")("m%s={}", prop)("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){", prop);
          genValuePartial_fromObject(gen, field, i, prop + "[ks[i]]")("}")("}");
        } else if (field.repeated) {
          gen("if(d%s){", prop)("if(!Array.isArray(d%s))", prop)("throw TypeError(%j)", field.fullName + ": array expected")("m%s=[]", prop)("for(var i=0;i<d%s.length;++i){", prop);
          genValuePartial_fromObject(gen, field, i, prop + "[i]")("}")("}");
        } else {
          field.resolvedType instanceof Enum || gen("if(d%s!=null){", prop);
          genValuePartial_fromObject(gen, field, i, prop);
          field.resolvedType instanceof Enum || gen("}");
        }
      }
      return gen("return m");
    };
    function genValuePartial_toObject(gen, field, fieldIndex, prop) {
      if (field.resolvedType) field.resolvedType instanceof Enum ? gen("d%s=o.enums===String?types[%i].values[m%s]:m%s", prop, fieldIndex, prop, prop) : gen("d%s=types[%i].toObject(m%s,o)", prop, fieldIndex, prop); else {
        var isUnsigned = false;
        switch (field.type) {
         case "double":
         case "float":
          gen("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s", prop, prop, prop, prop);
          break;

         case "uint64":
          isUnsigned = true;

         case "int64":
         case "sint64":
         case "fixed64":
         case "sfixed64":
          gen('if(typeof m%s==="number")', prop)("d%s=o.longs===String?String(m%s):m%s", prop, prop, prop)("else")("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s", prop, prop, prop, prop, isUnsigned ? "true" : "", prop);
          break;

         case "bytes":
          gen("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s", prop, prop, prop, prop, prop);
          break;

         default:
          gen("d%s=m%s", prop, prop);
        }
      }
      return gen;
    }
    converter.toObject = function toObject(mtype) {
      var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);
      if (!fields.length) return util.codegen()("return {}");
      var gen = util.codegen([ "m", "o" ], mtype.name + "$toObject")("if(!o)")("o={}")("var d={}");
      var repeatedFields = [], mapFields = [], normalFields = [], i = 0;
      for (;i < fields.length; ++i) fields[i].partOf || (fields[i].resolve().repeated ? repeatedFields : fields[i].map ? mapFields : normalFields).push(fields[i]);
      if (repeatedFields.length) {
        gen("if(o.arrays||o.defaults){");
        for (i = 0; i < repeatedFields.length; ++i) gen("d%s=[]", util.safeProp(repeatedFields[i].name));
        gen("}");
      }
      if (mapFields.length) {
        gen("if(o.objects||o.defaults){");
        for (i = 0; i < mapFields.length; ++i) gen("d%s={}", util.safeProp(mapFields[i].name));
        gen("}");
      }
      if (normalFields.length) {
        gen("if(o.defaults){");
        for (i = 0; i < normalFields.length; ++i) {
          var field = normalFields[i], prop = util.safeProp(field.name);
          if (field.resolvedType instanceof Enum) gen("d%s=o.enums===String?%j:%j", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault); else if (field.long) gen("if(util.Long){")("var n=new util.Long(%i,%i,%j)", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n", prop)("}else")("d%s=o.longs===String?%j:%i", prop, field.typeDefault.toString(), field.typeDefault.toNumber()); else if (field.bytes) {
            var arrayDefault = "[" + Array.prototype.slice.call(field.typeDefault).join(",") + "]";
            gen("if(o.bytes===String)d%s=%j", prop, String.fromCharCode.apply(String, field.typeDefault))("else{")("d%s=%s", prop, arrayDefault)("if(o.bytes!==Array)d%s=util.newBuffer(d%s)", prop, prop)("}");
          } else gen("d%s=%j", prop, field.typeDefault);
        }
        gen("}");
      }
      var hasKs2 = false;
      for (i = 0; i < fields.length; ++i) {
        var field = fields[i], index = mtype._fieldsArray.indexOf(field), prop = util.safeProp(field.name);
        if (field.map) {
          if (!hasKs2) {
            hasKs2 = true;
            gen("var ks2");
          }
          gen("if(m%s&&(ks2=Object.keys(m%s)).length){", prop, prop)("d%s={}", prop)("for(var j=0;j<ks2.length;++j){");
          genValuePartial_toObject(gen, field, index, prop + "[ks2[j]]")("}");
        } else if (field.repeated) {
          gen("if(m%s&&m%s.length){", prop, prop)("d%s=[]", prop)("for(var j=0;j<m%s.length;++j){", prop);
          genValuePartial_toObject(gen, field, index, prop + "[j]")("}");
        } else {
          gen("if(m%s!=null&&m.hasOwnProperty(%j)){", prop, field.name);
          genValuePartial_toObject(gen, field, index, prop);
          field.partOf && gen("if(o.oneofs)")("d%s=%j", util.safeProp(field.partOf.name), field.name);
        }
        gen("}");
      }
      return gen("return d");
    };
  }, {
    "./enum": 22,
    "./util": 44
  } ],
  20: [ function(require, module, exports) {
    "use strict";
    module.exports = decoder;
    var Enum = require("./enum"), types = require("./types"), util = require("./util");
    function missing(field) {
      return "missing required '" + field.name + "'";
    }
    function decoder(mtype) {
      var gen = util.codegen([ "r", "l" ], mtype.name + "$decode")("if(!(r instanceof Reader))")("r=Reader.create(r)")("var c=l===undefined?r.len:r.pos+l,m=new this.ctor" + (mtype.fieldsArray.filter(function(field) {
        return field.map;
      }).length ? ",k" : ""))("while(r.pos<c){")("var t=r.uint32()");
      mtype.group && gen("if((t&7)===4)")("break");
      gen("switch(t>>>3){");
      var i = 0;
      for (;i < mtype.fieldsArray.length; ++i) {
        var field = mtype._fieldsArray[i].resolve(), type = field.resolvedType instanceof Enum ? "int32" : field.type, ref = "m" + util.safeProp(field.name);
        gen("case %i:", field.id);
        if (field.map) {
          gen("r.skip().pos++")("if(%s===util.emptyObject)", ref)("%s={}", ref)("k=r.%s()", field.keyType)("r.pos++");
          void 0 !== types.long[field.keyType] ? void 0 === types.basic[type] ? gen('%s[typeof k==="object"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())', ref, i) : gen('%s[typeof k==="object"?util.longToHash(k):k]=r.%s()', ref, type) : void 0 === types.basic[type] ? gen("%s[k]=types[%i].decode(r,r.uint32())", ref, i) : gen("%s[k]=r.%s()", ref, type);
        } else if (field.repeated) {
          gen("if(!(%s&&%s.length))", ref, ref)("%s=[]", ref);
          void 0 !== types.packed[type] && gen("if((t&7)===2){")("var c2=r.uint32()+r.pos")("while(r.pos<c2)")("%s.push(r.%s())", ref, type)("}else");
          void 0 === types.basic[type] ? gen(field.resolvedType.group ? "%s.push(types[%i].decode(r))" : "%s.push(types[%i].decode(r,r.uint32()))", ref, i) : gen("%s.push(r.%s())", ref, type);
        } else void 0 === types.basic[type] ? gen(field.resolvedType.group ? "%s=types[%i].decode(r)" : "%s=types[%i].decode(r,r.uint32())", ref, i) : gen("%s=r.%s()", ref, type);
        gen("break");
      }
      gen("default:")("r.skipType(t&7)")("break")("}")("}");
      for (i = 0; i < mtype._fieldsArray.length; ++i) {
        var rfield = mtype._fieldsArray[i];
        rfield.required && gen("if(!m.hasOwnProperty(%j))", rfield.name)("throw util.ProtocolError(%j,{instance:m})", missing(rfield));
      }
      return gen("return m");
    }
  }, {
    "./enum": 22,
    "./types": 43,
    "./util": 44
  } ],
  21: [ function(require, module, exports) {
    "use strict";
    module.exports = encoder;
    var Enum = require("./enum"), types = require("./types"), util = require("./util");
    function genTypePartial(gen, field, fieldIndex, ref) {
      return field.resolvedType.group ? gen("types[%i].encode(%s,w.uint32(%i)).uint32(%i)", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0) : gen("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()", fieldIndex, ref, (field.id << 3 | 2) >>> 0);
    }
    function encoder(mtype) {
      var gen = util.codegen([ "m", "w" ], mtype.name + "$encode")("if(!w)")("w=Writer.create()");
      var i, ref;
      var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);
      for (var i = 0; i < fields.length; ++i) {
        var field = fields[i].resolve(), index = mtype._fieldsArray.indexOf(field), type = field.resolvedType instanceof Enum ? "int32" : field.type, wireType = types.basic[type];
        ref = "m" + util.safeProp(field.name);
        if (field.map) {
          gen("if(%s!=null&&m.hasOwnProperty(%j)){", ref, field.name)("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){", ref)("w.uint32(%i).fork().uint32(%i).%s(ks[i])", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);
          void 0 === wireType ? gen("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()", index, ref) : gen(".uint32(%i).%s(%s[ks[i]]).ldelim()", 16 | wireType, type, ref);
          gen("}")("}");
        } else if (field.repeated) {
          gen("if(%s!=null&&%s.length){", ref, ref);
          if (field.packed && void 0 !== types.packed[type]) gen("w.uint32(%i).fork()", (field.id << 3 | 2) >>> 0)("for(var i=0;i<%s.length;++i)", ref)("w.%s(%s[i])", type, ref)("w.ldelim()"); else {
            gen("for(var i=0;i<%s.length;++i)", ref);
            void 0 === wireType ? genTypePartial(gen, field, index, ref + "[i]") : gen("w.uint32(%i).%s(%s[i])", (field.id << 3 | wireType) >>> 0, type, ref);
          }
          gen("}");
        } else {
          field.optional && gen("if(%s!=null&&m.hasOwnProperty(%j))", ref, field.name);
          void 0 === wireType ? genTypePartial(gen, field, index, ref) : gen("w.uint32(%i).%s(%s)", (field.id << 3 | wireType) >>> 0, type, ref);
        }
      }
      return gen("return w");
    }
  }, {
    "./enum": 22,
    "./types": 43,
    "./util": 44
  } ],
  22: [ function(require, module, exports) {
    "use strict";
    module.exports = Enum;
    var ReflectionObject = require("./object");
    ((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = "Enum";
    var Namespace = require("./namespace"), util = require("./util");
    function Enum(name, values, options, comment, comments) {
      ReflectionObject.call(this, name, options);
      if (values && "object" !== typeof values) throw TypeError("values must be an object");
      this.valuesById = {};
      this.values = Object.create(this.valuesById);
      this.comment = comment;
      this.comments = comments || {};
      this.reserved = void 0;
      if (values) for (var keys = Object.keys(values), i = 0; i < keys.length; ++i) "number" === typeof values[keys[i]] && (this.valuesById[this.values[keys[i]] = values[keys[i]]] = keys[i]);
    }
    Enum.fromJSON = function fromJSON(name, json) {
      var enm = new Enum(name, json.values, json.options, json.comment, json.comments);
      enm.reserved = json.reserved;
      return enm;
    };
    Enum.prototype.toJSON = function toJSON(toJSONOptions) {
      var keepComments = !!toJSONOptions && Boolean(toJSONOptions.keepComments);
      return util.toObject([ "options", this.options, "values", this.values, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "comment", keepComments ? this.comment : void 0, "comments", keepComments ? this.comments : void 0 ]);
    };
    Enum.prototype.add = function add(name, id, comment) {
      if (!util.isString(name)) throw TypeError("name must be a string");
      if (!util.isInteger(id)) throw TypeError("id must be an integer");
      if (void 0 !== this.values[name]) throw Error("duplicate name '" + name + "' in " + this);
      if (this.isReservedId(id)) throw Error("id " + id + " is reserved in " + this);
      if (this.isReservedName(name)) throw Error("name '" + name + "' is reserved in " + this);
      if (void 0 !== this.valuesById[id]) {
        if (!(this.options && this.options.allow_alias)) throw Error("duplicate id " + id + " in " + this);
        this.values[name] = id;
      } else this.valuesById[this.values[name] = id] = name;
      this.comments[name] = comment || null;
      return this;
    };
    Enum.prototype.remove = function remove(name) {
      if (!util.isString(name)) throw TypeError("name must be a string");
      var val = this.values[name];
      if (null == val) throw Error("name '" + name + "' does not exist in " + this);
      delete this.valuesById[val];
      delete this.values[name];
      delete this.comments[name];
      return this;
    };
    Enum.prototype.isReservedId = function isReservedId(id) {
      return Namespace.isReservedId(this.reserved, id);
    };
    Enum.prototype.isReservedName = function isReservedName(name) {
      return Namespace.isReservedName(this.reserved, name);
    };
  }, {
    "./namespace": 30,
    "./object": 31,
    "./util": 44
  } ],
  23: [ function(require, module, exports) {
    "use strict";
    module.exports = Field;
    var ReflectionObject = require("./object");
    ((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = "Field";
    var Enum = require("./enum"), types = require("./types"), util = require("./util");
    var Type;
    var ruleRe = /^required|optional|repeated$/;
    Field.fromJSON = function fromJSON(name, json) {
      return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);
    };
    function Field(name, id, type, rule, extend, options, comment) {
      if (util.isObject(rule)) {
        comment = extend;
        options = rule;
        rule = extend = void 0;
      } else if (util.isObject(extend)) {
        comment = options;
        options = extend;
        extend = void 0;
      }
      ReflectionObject.call(this, name, options);
      if (!util.isInteger(id) || id < 0) throw TypeError("id must be a non-negative integer");
      if (!util.isString(type)) throw TypeError("type must be a string");
      if (void 0 !== rule && !ruleRe.test(rule = rule.toString().toLowerCase())) throw TypeError("rule must be a string rule");
      if (void 0 !== extend && !util.isString(extend)) throw TypeError("extend must be a string");
      this.rule = rule && "optional" !== rule ? rule : void 0;
      this.type = type;
      this.id = id;
      this.extend = extend || void 0;
      this.required = "required" === rule;
      this.optional = !this.required;
      this.repeated = "repeated" === rule;
      this.map = false;
      this.message = null;
      this.partOf = null;
      this.typeDefault = null;
      this.defaultValue = null;
      this.long = !!util.Long && void 0 !== types.long[type];
      this.bytes = "bytes" === type;
      this.resolvedType = null;
      this.extensionField = null;
      this.declaringField = null;
      this._packed = null;
      this.comment = comment;
    }
    Object.defineProperty(Field.prototype, "packed", {
      get: function() {
        null === this._packed && (this._packed = false !== this.getOption("packed"));
        return this._packed;
      }
    });
    Field.prototype.setOption = function setOption(name, value, ifNotSet) {
      "packed" === name && (this._packed = null);
      return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);
    };
    Field.prototype.toJSON = function toJSON(toJSONOptions) {
      var keepComments = !!toJSONOptions && Boolean(toJSONOptions.keepComments);
      return util.toObject([ "rule", "optional" !== this.rule && this.rule || void 0, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", keepComments ? this.comment : void 0 ]);
    };
    Field.prototype.resolve = function resolve() {
      if (this.resolved) return this;
      if (void 0 === (this.typeDefault = types.defaults[this.type])) {
        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);
        this.resolvedType instanceof Type ? this.typeDefault = null : this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]];
      }
      if (this.options && null != this.options["default"]) {
        this.typeDefault = this.options["default"];
        this.resolvedType instanceof Enum && "string" === typeof this.typeDefault && (this.typeDefault = this.resolvedType.values[this.typeDefault]);
      }
      if (this.options) {
        true !== this.options.packed && (void 0 === this.options.packed || !this.resolvedType || this.resolvedType instanceof Enum) || delete this.options.packed;
        Object.keys(this.options).length || (this.options = void 0);
      }
      if (this.long) {
        this.typeDefault = util.Long.fromNumber(this.typeDefault, "u" === this.type.charAt(0));
        Object.freeze && Object.freeze(this.typeDefault);
      } else if (this.bytes && "string" === typeof this.typeDefault) {
        var buf;
        util.base64.test(this.typeDefault) ? util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0) : util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);
        this.typeDefault = buf;
      }
      this.map ? this.defaultValue = util.emptyObject : this.repeated ? this.defaultValue = util.emptyArray : this.defaultValue = this.typeDefault;
      this.parent instanceof Type && (this.parent.ctor.prototype[this.name] = this.defaultValue);
      return ReflectionObject.prototype.resolve.call(this);
    };
    Field.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {
      "function" === typeof fieldType ? fieldType = util.decorateType(fieldType).name : fieldType && "object" === typeof fieldType && (fieldType = util.decorateEnum(fieldType).name);
      return function fieldDecorator(prototype, fieldName) {
        util.decorateType(prototype.constructor).add(new Field(fieldName, fieldId, fieldType, fieldRule, {
          default: defaultValue
        }));
      };
    };
    Field._configure = function configure(Type_) {
      Type = Type_;
    };
  }, {
    "./enum": 22,
    "./object": 31,
    "./types": 43,
    "./util": 44
  } ],
  24: [ function(require, module, exports) {
    "use strict";
    var protobuf = module.exports = require("./index-minimal");
    protobuf.build = "light";
    function load(filename, root, callback) {
      if ("function" === typeof root) {
        callback = root;
        root = new protobuf.Root();
      } else root || (root = new protobuf.Root());
      return root.load(filename, callback);
    }
    protobuf.load = load;
    function loadSync(filename, root) {
      root || (root = new protobuf.Root());
      return root.loadSync(filename);
    }
    protobuf.loadSync = loadSync;
    protobuf.encoder = require("./encoder");
    protobuf.decoder = require("./decoder");
    protobuf.verifier = require("./verifier");
    protobuf.converter = require("./converter");
    protobuf.ReflectionObject = require("./object");
    protobuf.Namespace = require("./namespace");
    protobuf.Root = require("./root");
    protobuf.Enum = require("./enum");
    protobuf.Type = require("./type");
    protobuf.Field = require("./field");
    protobuf.OneOf = require("./oneof");
    protobuf.MapField = require("./mapfield");
    protobuf.Service = require("./service");
    protobuf.Method = require("./method");
    protobuf.Message = require("./message");
    protobuf.wrappers = require("./wrappers");
    protobuf.types = require("./types");
    protobuf.util = require("./util");
    protobuf.ReflectionObject._configure(protobuf.Root);
    protobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);
    protobuf.Root._configure(protobuf.Type);
    protobuf.Field._configure(protobuf.Type);
  }, {
    "./converter": 19,
    "./decoder": 20,
    "./encoder": 21,
    "./enum": 22,
    "./field": 23,
    "./index-minimal": 25,
    "./mapfield": 27,
    "./message": 28,
    "./method": 29,
    "./namespace": 30,
    "./object": 31,
    "./oneof": 32,
    "./root": 36,
    "./service": 40,
    "./type": 42,
    "./types": 43,
    "./util": 44,
    "./verifier": 47,
    "./wrappers": 48
  } ],
  25: [ function(require, module, exports) {
    "use strict";
    var protobuf = exports;
    protobuf.build = "minimal";
    protobuf.Writer = require("./writer");
    protobuf.BufferWriter = require("./writer_buffer");
    protobuf.Reader = require("./reader");
    protobuf.BufferReader = require("./reader_buffer");
    protobuf.util = require("./util/minimal");
    protobuf.rpc = require("./rpc");
    protobuf.roots = require("./roots");
    protobuf.configure = configure;
    function configure() {
      protobuf.Reader._configure(protobuf.BufferReader);
      protobuf.util._configure();
    }
    protobuf.Writer._configure(protobuf.BufferWriter);
    configure();
  }, {
    "./reader": 34,
    "./reader_buffer": 35,
    "./roots": 37,
    "./rpc": 38,
    "./util/minimal": 46,
    "./writer": 49,
    "./writer_buffer": 50
  } ],
  26: [ function(require, module, exports) {
    "use strict";
    var protobuf = module.exports = require("./index-light");
    protobuf.build = "full";
    protobuf.tokenize = require("./tokenize");
    protobuf.parse = require("./parse");
    protobuf.common = require("./common");
    protobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);
  }, {
    "./common": 18,
    "./index-light": 24,
    "./parse": 33,
    "./tokenize": 41
  } ],
  27: [ function(require, module, exports) {
    "use strict";
    module.exports = MapField;
    var Field = require("./field");
    ((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = "MapField";
    var types = require("./types"), util = require("./util");
    function MapField(name, id, keyType, type, options, comment) {
      Field.call(this, name, id, type, void 0, void 0, options, comment);
      if (!util.isString(keyType)) throw TypeError("keyType must be a string");
      this.keyType = keyType;
      this.resolvedKeyType = null;
      this.map = true;
    }
    MapField.fromJSON = function fromJSON(name, json) {
      return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);
    };
    MapField.prototype.toJSON = function toJSON(toJSONOptions) {
      var keepComments = !!toJSONOptions && Boolean(toJSONOptions.keepComments);
      return util.toObject([ "keyType", this.keyType, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", keepComments ? this.comment : void 0 ]);
    };
    MapField.prototype.resolve = function resolve() {
      if (this.resolved) return this;
      if (void 0 === types.mapKey[this.keyType]) throw Error("invalid key type: " + this.keyType);
      return Field.prototype.resolve.call(this);
    };
    MapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {
      "function" === typeof fieldValueType ? fieldValueType = util.decorateType(fieldValueType).name : fieldValueType && "object" === typeof fieldValueType && (fieldValueType = util.decorateEnum(fieldValueType).name);
      return function mapFieldDecorator(prototype, fieldName) {
        util.decorateType(prototype.constructor).add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));
      };
    };
  }, {
    "./field": 23,
    "./types": 43,
    "./util": 44
  } ],
  28: [ function(require, module, exports) {
    "use strict";
    module.exports = Message;
    var util = require("./util/minimal");
    function Message(properties) {
      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) this[keys[i]] = properties[keys[i]];
    }
    Message.create = function create(properties) {
      return this.$type.create(properties);
    };
    Message.encode = function encode(message, writer) {
      return this.$type.encode(message, writer);
    };
    Message.encodeDelimited = function encodeDelimited(message, writer) {
      return this.$type.encodeDelimited(message, writer);
    };
    Message.decode = function decode(reader) {
      return this.$type.decode(reader);
    };
    Message.decodeDelimited = function decodeDelimited(reader) {
      return this.$type.decodeDelimited(reader);
    };
    Message.verify = function verify(message) {
      return this.$type.verify(message);
    };
    Message.fromObject = function fromObject(object) {
      return this.$type.fromObject(object);
    };
    Message.toObject = function toObject(message, options) {
      return this.$type.toObject(message, options);
    };
    Message.prototype.toJSON = function toJSON() {
      return this.$type.toObject(this, util.toJSONOptions);
    };
  }, {
    "./util/minimal": 46
  } ],
  29: [ function(require, module, exports) {
    "use strict";
    module.exports = Method;
    var ReflectionObject = require("./object");
    ((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = "Method";
    var util = require("./util");
    function Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {
      if (util.isObject(requestStream)) {
        options = requestStream;
        requestStream = responseStream = void 0;
      } else if (util.isObject(responseStream)) {
        options = responseStream;
        responseStream = void 0;
      }
      if (!(void 0 === type || util.isString(type))) throw TypeError("type must be a string");
      if (!util.isString(requestType)) throw TypeError("requestType must be a string");
      if (!util.isString(responseType)) throw TypeError("responseType must be a string");
      ReflectionObject.call(this, name, options);
      this.type = type || "rpc";
      this.requestType = requestType;
      this.requestStream = !!requestStream || void 0;
      this.responseType = responseType;
      this.responseStream = !!responseStream || void 0;
      this.resolvedRequestType = null;
      this.resolvedResponseType = null;
      this.comment = comment;
    }
    Method.fromJSON = function fromJSON(name, json) {
      return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);
    };
    Method.prototype.toJSON = function toJSON(toJSONOptions) {
      var keepComments = !!toJSONOptions && Boolean(toJSONOptions.keepComments);
      return util.toObject([ "type", "rpc" !== this.type && this.type || void 0, "requestType", this.requestType, "requestStream", this.requestStream, "responseType", this.responseType, "responseStream", this.responseStream, "options", this.options, "comment", keepComments ? this.comment : void 0 ]);
    };
    Method.prototype.resolve = function resolve() {
      if (this.resolved) return this;
      this.resolvedRequestType = this.parent.lookupType(this.requestType);
      this.resolvedResponseType = this.parent.lookupType(this.responseType);
      return ReflectionObject.prototype.resolve.call(this);
    };
  }, {
    "./object": 31,
    "./util": 44
  } ],
  30: [ function(require, module, exports) {
    "use strict";
    module.exports = Namespace;
    var ReflectionObject = require("./object");
    ((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = "Namespace";
    var Field = require("./field"), util = require("./util");
    var Type, Service, Enum;
    Namespace.fromJSON = function fromJSON(name, json) {
      return new Namespace(name, json.options).addJSON(json.nested);
    };
    function arrayToJSON(array, toJSONOptions) {
      if (!(array && array.length)) return;
      var obj = {};
      for (var i = 0; i < array.length; ++i) obj[array[i].name] = array[i].toJSON(toJSONOptions);
      return obj;
    }
    Namespace.arrayToJSON = arrayToJSON;
    Namespace.isReservedId = function isReservedId(reserved, id) {
      if (reserved) for (var i = 0; i < reserved.length; ++i) if ("string" !== typeof reserved[i] && reserved[i][0] <= id && reserved[i][1] >= id) return true;
      return false;
    };
    Namespace.isReservedName = function isReservedName(reserved, name) {
      if (reserved) for (var i = 0; i < reserved.length; ++i) if (reserved[i] === name) return true;
      return false;
    };
    function Namespace(name, options) {
      ReflectionObject.call(this, name, options);
      this.nested = void 0;
      this._nestedArray = null;
    }
    function clearCache(namespace) {
      namespace._nestedArray = null;
      return namespace;
    }
    Object.defineProperty(Namespace.prototype, "nestedArray", {
      get: function() {
        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));
      }
    });
    Namespace.prototype.toJSON = function toJSON(toJSONOptions) {
      return util.toObject([ "options", this.options, "nested", arrayToJSON(this.nestedArray, toJSONOptions) ]);
    };
    Namespace.prototype.addJSON = function addJSON(nestedJson) {
      var ns = this;
      if (nestedJson) for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {
        nested = nestedJson[names[i]];
        ns.add((void 0 !== nested.fields ? Type.fromJSON : void 0 !== nested.values ? Enum.fromJSON : void 0 !== nested.methods ? Service.fromJSON : void 0 !== nested.id ? Field.fromJSON : Namespace.fromJSON)(names[i], nested));
      }
      return this;
    };
    Namespace.prototype.get = function get(name) {
      return this.nested && this.nested[name] || null;
    };
    Namespace.prototype.getEnum = function getEnum(name) {
      if (this.nested && this.nested[name] instanceof Enum) return this.nested[name].values;
      throw Error("no such enum: " + name);
    };
    Namespace.prototype.add = function add(object) {
      if (!(object instanceof Field && void 0 !== object.extend || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace)) throw TypeError("object must be a valid nested object");
      if (this.nested) {
        var prev = this.get(object.name);
        if (prev) {
          if (!(prev instanceof Namespace && object instanceof Namespace) || prev instanceof Type || prev instanceof Service) throw Error("duplicate name '" + object.name + "' in " + this);
          var nested = prev.nestedArray;
          for (var i = 0; i < nested.length; ++i) object.add(nested[i]);
          this.remove(prev);
          this.nested || (this.nested = {});
          object.setOptions(prev.options, true);
        }
      } else this.nested = {};
      this.nested[object.name] = object;
      object.onAdd(this);
      return clearCache(this);
    };
    Namespace.prototype.remove = function remove(object) {
      if (!(object instanceof ReflectionObject)) throw TypeError("object must be a ReflectionObject");
      if (object.parent !== this) throw Error(object + " is not a member of " + this);
      delete this.nested[object.name];
      Object.keys(this.nested).length || (this.nested = void 0);
      object.onRemove(this);
      return clearCache(this);
    };
    Namespace.prototype.define = function define(path, json) {
      if (util.isString(path)) path = path.split("."); else if (!Array.isArray(path)) throw TypeError("illegal path");
      if (path && path.length && "" === path[0]) throw Error("path must be relative");
      var ptr = this;
      while (path.length > 0) {
        var part = path.shift();
        if (ptr.nested && ptr.nested[part]) {
          ptr = ptr.nested[part];
          if (!(ptr instanceof Namespace)) throw Error("path conflicts with non-namespace objects");
        } else ptr.add(ptr = new Namespace(part));
      }
      json && ptr.addJSON(json);
      return ptr;
    };
    Namespace.prototype.resolveAll = function resolveAll() {
      var nested = this.nestedArray, i = 0;
      while (i < nested.length) nested[i] instanceof Namespace ? nested[i++].resolveAll() : nested[i++].resolve();
      return this.resolve();
    };
    Namespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {
      if ("boolean" === typeof filterTypes) {
        parentAlreadyChecked = filterTypes;
        filterTypes = void 0;
      } else filterTypes && !Array.isArray(filterTypes) && (filterTypes = [ filterTypes ]);
      if (util.isString(path) && path.length) {
        if ("." === path) return this.root;
        path = path.split(".");
      } else if (!path.length) return this;
      if ("" === path[0]) return this.root.lookup(path.slice(1), filterTypes);
      var found = this.get(path[0]);
      if (found) {
        if (1 === path.length) {
          if (!filterTypes || filterTypes.indexOf(found.constructor) > -1) return found;
        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true))) return found;
      } else for (var i = 0; i < this.nestedArray.length; ++i) if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true))) return found;
      if (null === this.parent || parentAlreadyChecked) return null;
      return this.parent.lookup(path, filterTypes);
    };
    Namespace.prototype.lookupType = function lookupType(path) {
      var found = this.lookup(path, [ Type ]);
      if (!found) throw Error("no such type: " + path);
      return found;
    };
    Namespace.prototype.lookupEnum = function lookupEnum(path) {
      var found = this.lookup(path, [ Enum ]);
      if (!found) throw Error("no such Enum '" + path + "' in " + this);
      return found;
    };
    Namespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {
      var found = this.lookup(path, [ Type, Enum ]);
      if (!found) throw Error("no such Type or Enum '" + path + "' in " + this);
      return found;
    };
    Namespace.prototype.lookupService = function lookupService(path) {
      var found = this.lookup(path, [ Service ]);
      if (!found) throw Error("no such Service '" + path + "' in " + this);
      return found;
    };
    Namespace._configure = function(Type_, Service_, Enum_) {
      Type = Type_;
      Service = Service_;
      Enum = Enum_;
    };
  }, {
    "./field": 23,
    "./object": 31,
    "./util": 44
  } ],
  31: [ function(require, module, exports) {
    "use strict";
    module.exports = ReflectionObject;
    ReflectionObject.className = "ReflectionObject";
    var util = require("./util");
    var Root;
    function ReflectionObject(name, options) {
      if (!util.isString(name)) throw TypeError("name must be a string");
      if (options && !util.isObject(options)) throw TypeError("options must be an object");
      this.options = options;
      this.name = name;
      this.parent = null;
      this.resolved = false;
      this.comment = null;
      this.filename = null;
    }
    Object.defineProperties(ReflectionObject.prototype, {
      root: {
        get: function() {
          var ptr = this;
          while (null !== ptr.parent) ptr = ptr.parent;
          return ptr;
        }
      },
      fullName: {
        get: function() {
          var path = [ this.name ], ptr = this.parent;
          while (ptr) {
            path.unshift(ptr.name);
            ptr = ptr.parent;
          }
          return path.join(".");
        }
      }
    });
    ReflectionObject.prototype.toJSON = function toJSON() {
      throw Error();
    };
    ReflectionObject.prototype.onAdd = function onAdd(parent) {
      this.parent && this.parent !== parent && this.parent.remove(this);
      this.parent = parent;
      this.resolved = false;
      var root = parent.root;
      root instanceof Root && root._handleAdd(this);
    };
    ReflectionObject.prototype.onRemove = function onRemove(parent) {
      var root = parent.root;
      root instanceof Root && root._handleRemove(this);
      this.parent = null;
      this.resolved = false;
    };
    ReflectionObject.prototype.resolve = function resolve() {
      if (this.resolved) return this;
      this.root instanceof Root && (this.resolved = true);
      return this;
    };
    ReflectionObject.prototype.getOption = function getOption(name) {
      if (this.options) return this.options[name];
      return;
    };
    ReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {
      ifNotSet && this.options && void 0 !== this.options[name] || ((this.options || (this.options = {}))[name] = value);
      return this;
    };
    ReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {
      if (options) for (var keys = Object.keys(options), i = 0; i < keys.length; ++i) this.setOption(keys[i], options[keys[i]], ifNotSet);
      return this;
    };
    ReflectionObject.prototype.toString = function toString() {
      var className = this.constructor.className, fullName = this.fullName;
      if (fullName.length) return className + " " + fullName;
      return className;
    };
    ReflectionObject._configure = function(Root_) {
      Root = Root_;
    };
  }, {
    "./util": 44
  } ],
  32: [ function(require, module, exports) {
    "use strict";
    module.exports = OneOf;
    var ReflectionObject = require("./object");
    ((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = "OneOf";
    var Field = require("./field"), util = require("./util");
    function OneOf(name, fieldNames, options, comment) {
      if (!Array.isArray(fieldNames)) {
        options = fieldNames;
        fieldNames = void 0;
      }
      ReflectionObject.call(this, name, options);
      if (!(void 0 === fieldNames || Array.isArray(fieldNames))) throw TypeError("fieldNames must be an Array");
      this.oneof = fieldNames || [];
      this.fieldsArray = [];
      this.comment = comment;
    }
    OneOf.fromJSON = function fromJSON(name, json) {
      return new OneOf(name, json.oneof, json.options, json.comment);
    };
    OneOf.prototype.toJSON = function toJSON(toJSONOptions) {
      var keepComments = !!toJSONOptions && Boolean(toJSONOptions.keepComments);
      return util.toObject([ "options", this.options, "oneof", this.oneof, "comment", keepComments ? this.comment : void 0 ]);
    };
    function addFieldsToParent(oneof) {
      if (oneof.parent) for (var i = 0; i < oneof.fieldsArray.length; ++i) oneof.fieldsArray[i].parent || oneof.parent.add(oneof.fieldsArray[i]);
    }
    OneOf.prototype.add = function add(field) {
      if (!(field instanceof Field)) throw TypeError("field must be a Field");
      field.parent && field.parent !== this.parent && field.parent.remove(field);
      this.oneof.push(field.name);
      this.fieldsArray.push(field);
      field.partOf = this;
      addFieldsToParent(this);
      return this;
    };
    OneOf.prototype.remove = function remove(field) {
      if (!(field instanceof Field)) throw TypeError("field must be a Field");
      var index = this.fieldsArray.indexOf(field);
      if (index < 0) throw Error(field + " is not a member of " + this);
      this.fieldsArray.splice(index, 1);
      index = this.oneof.indexOf(field.name);
      index > -1 && this.oneof.splice(index, 1);
      field.partOf = null;
      return this;
    };
    OneOf.prototype.onAdd = function onAdd(parent) {
      ReflectionObject.prototype.onAdd.call(this, parent);
      var self = this;
      for (var i = 0; i < this.oneof.length; ++i) {
        var field = parent.get(this.oneof[i]);
        if (field && !field.partOf) {
          field.partOf = self;
          self.fieldsArray.push(field);
        }
      }
      addFieldsToParent(this);
    };
    OneOf.prototype.onRemove = function onRemove(parent) {
      for (var i = 0, field; i < this.fieldsArray.length; ++i) (field = this.fieldsArray[i]).parent && field.parent.remove(field);
      ReflectionObject.prototype.onRemove.call(this, parent);
    };
    OneOf.d = function decorateOneOf() {
      var fieldNames = new Array(arguments.length), index = 0;
      while (index < arguments.length) fieldNames[index] = arguments[index++];
      return function oneOfDecorator(prototype, oneofName) {
        util.decorateType(prototype.constructor).add(new OneOf(oneofName, fieldNames));
        Object.defineProperty(prototype, oneofName, {
          get: util.oneOfGetter(fieldNames),
          set: util.oneOfSetter(fieldNames)
        });
      };
    };
  }, {
    "./field": 23,
    "./object": 31,
    "./util": 44
  } ],
  33: [ function(require, module, exports) {
    "use strict";
    module.exports = parse;
    parse.filename = null;
    parse.defaults = {
      keepCase: false
    };
    var tokenize = require("./tokenize"), Root = require("./root"), Type = require("./type"), Field = require("./field"), MapField = require("./mapfield"), OneOf = require("./oneof"), Enum = require("./enum"), Service = require("./service"), Method = require("./method"), types = require("./types"), util = require("./util");
    var base10Re = /^[1-9][0-9]*$/, base10NegRe = /^-?[1-9][0-9]*$/, base16Re = /^0[x][0-9a-fA-F]+$/, base16NegRe = /^-?0[x][0-9a-fA-F]+$/, base8Re = /^0[0-7]+$/, base8NegRe = /^-?0[0-7]+$/, numberRe = /^(?![eE])[0-9]*(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/, nameRe = /^[a-zA-Z_][a-zA-Z_0-9]*$/, typeRefRe = /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*$/, fqTypeRefRe = /^(?:\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;
    function parse(source, root, options) {
      if (!(root instanceof Root)) {
        options = root;
        root = new Root();
      }
      options || (options = parse.defaults);
      var tn = tokenize(source, options.alternateCommentMode || false), next = tn.next, push = tn.push, peek = tn.peek, skip = tn.skip, cmnt = tn.cmnt;
      var head = true, pkg, imports, weakImports, syntax, isProto3 = false;
      var ptr = root;
      var applyCase = options.keepCase ? function(name) {
        return name;
      } : util.camelCase;
      function illegal(token, name, insideTryCatch) {
        var filename = parse.filename;
        insideTryCatch || (parse.filename = null);
        return Error("illegal " + (name || "token") + " '" + token + "' (" + (filename ? filename + ", " : "") + "line " + tn.line + ")");
      }
      function readString() {
        var values = [], token;
        do {
          if ('"' !== (token = next()) && "'" !== token) throw illegal(token);
          values.push(next());
          skip(token);
          token = peek();
        } while ('"' === token || "'" === token);
        return values.join("");
      }
      function readValue(acceptTypeRef) {
        var token = next();
        switch (token) {
         case "'":
         case '"':
          push(token);
          return readString();

         case "true":
         case "TRUE":
          return true;

         case "false":
         case "FALSE":
          return false;
        }
        try {
          return parseNumber(token, true);
        } catch (e) {
          if (acceptTypeRef && typeRefRe.test(token)) return token;
          throw illegal(token, "value");
        }
      }
      function readRanges(target, acceptStrings) {
        var token, start;
        do {
          !acceptStrings || '"' !== (token = peek()) && "'" !== token ? target.push([ start = parseId(next()), skip("to", true) ? parseId(next()) : start ]) : target.push(readString());
        } while (skip(",", true));
        skip(";");
      }
      function parseNumber(token, insideTryCatch) {
        var sign = 1;
        if ("-" === token.charAt(0)) {
          sign = -1;
          token = token.substring(1);
        }
        switch (token) {
         case "inf":
         case "INF":
         case "Inf":
          return Infinity * sign;

         case "nan":
         case "NAN":
         case "Nan":
         case "NaN":
          return NaN;

         case "0":
          return 0;
        }
        if (base10Re.test(token)) return sign * parseInt(token, 10);
        if (base16Re.test(token)) return sign * parseInt(token, 16);
        if (base8Re.test(token)) return sign * parseInt(token, 8);
        if (numberRe.test(token)) return sign * parseFloat(token);
        throw illegal(token, "number", insideTryCatch);
      }
      function parseId(token, acceptNegative) {
        switch (token) {
         case "max":
         case "MAX":
         case "Max":
          return 536870911;

         case "0":
          return 0;
        }
        if (!acceptNegative && "-" === token.charAt(0)) throw illegal(token, "id");
        if (base10NegRe.test(token)) return parseInt(token, 10);
        if (base16NegRe.test(token)) return parseInt(token, 16);
        if (base8NegRe.test(token)) return parseInt(token, 8);
        throw illegal(token, "id");
      }
      function parsePackage() {
        if (void 0 !== pkg) throw illegal("package");
        pkg = next();
        if (!typeRefRe.test(pkg)) throw illegal(pkg, "name");
        ptr = ptr.define(pkg);
        skip(";");
      }
      function parseImport() {
        var token = peek();
        var whichImports;
        switch (token) {
         case "weak":
          whichImports = weakImports || (weakImports = []);
          next();
          break;

         case "public":
          next();

         default:
          whichImports = imports || (imports = []);
        }
        token = readString();
        skip(";");
        whichImports.push(token);
      }
      function parseSyntax() {
        skip("=");
        syntax = readString();
        isProto3 = "proto3" === syntax;
        if (!isProto3 && "proto2" !== syntax) throw illegal(syntax, "syntax");
        skip(";");
      }
      function parseCommon(parent, token) {
        switch (token) {
         case "option":
          parseOption(parent, token);
          skip(";");
          return true;

         case "message":
          parseType(parent, token);
          return true;

         case "enum":
          parseEnum(parent, token);
          return true;

         case "service":
          parseService(parent, token);
          return true;

         case "extend":
          parseExtension(parent, token);
          return true;
        }
        return false;
      }
      function ifBlock(obj, fnIf, fnElse) {
        var trailingLine = tn.line;
        if (obj) {
          obj.comment = cmnt();
          obj.filename = parse.filename;
        }
        if (skip("{", true)) {
          var token;
          while ("}" !== (token = next())) fnIf(token);
          skip(";", true);
        } else {
          fnElse && fnElse();
          skip(";");
          obj && "string" !== typeof obj.comment && (obj.comment = cmnt(trailingLine));
        }
      }
      function parseType(parent, token) {
        if (!nameRe.test(token = next())) throw illegal(token, "type name");
        var type = new Type(token);
        ifBlock(type, function parseType_block(token) {
          if (parseCommon(type, token)) return;
          switch (token) {
           case "map":
            parseMapField(type, token);
            break;

           case "required":
           case "optional":
           case "repeated":
            parseField(type, token);
            break;

           case "oneof":
            parseOneOf(type, token);
            break;

           case "extensions":
            readRanges(type.extensions || (type.extensions = []));
            break;

           case "reserved":
            readRanges(type.reserved || (type.reserved = []), true);
            break;

           default:
            if (!isProto3 || !typeRefRe.test(token)) throw illegal(token);
            push(token);
            parseField(type, "optional");
          }
        });
        parent.add(type);
      }
      function parseField(parent, rule, extend) {
        var type = next();
        if ("group" === type) {
          parseGroup(parent, rule);
          return;
        }
        if (!typeRefRe.test(type)) throw illegal(type, "type");
        var name = next();
        if (!nameRe.test(name)) throw illegal(name, "name");
        name = applyCase(name);
        skip("=");
        var field = new Field(name, parseId(next()), type, rule, extend);
        ifBlock(field, function parseField_block(token) {
          if ("option" !== token) throw illegal(token);
          parseOption(field, token);
          skip(";");
        }, function parseField_line() {
          parseInlineOptions(field);
        });
        parent.add(field);
        isProto3 || !field.repeated || void 0 === types.packed[type] && void 0 !== types.basic[type] || field.setOption("packed", false, true);
      }
      function parseGroup(parent, rule) {
        var name = next();
        if (!nameRe.test(name)) throw illegal(name, "name");
        var fieldName = util.lcFirst(name);
        name === fieldName && (name = util.ucFirst(name));
        skip("=");
        var id = parseId(next());
        var type = new Type(name);
        type.group = true;
        var field = new Field(fieldName, id, name, rule);
        field.filename = parse.filename;
        ifBlock(type, function parseGroup_block(token) {
          switch (token) {
           case "option":
            parseOption(type, token);
            skip(";");
            break;

           case "required":
           case "optional":
           case "repeated":
            parseField(type, token);
            break;

           default:
            throw illegal(token);
          }
        });
        parent.add(type).add(field);
      }
      function parseMapField(parent) {
        skip("<");
        var keyType = next();
        if (void 0 === types.mapKey[keyType]) throw illegal(keyType, "type");
        skip(",");
        var valueType = next();
        if (!typeRefRe.test(valueType)) throw illegal(valueType, "type");
        skip(">");
        var name = next();
        if (!nameRe.test(name)) throw illegal(name, "name");
        skip("=");
        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);
        ifBlock(field, function parseMapField_block(token) {
          if ("option" !== token) throw illegal(token);
          parseOption(field, token);
          skip(";");
        }, function parseMapField_line() {
          parseInlineOptions(field);
        });
        parent.add(field);
      }
      function parseOneOf(parent, token) {
        if (!nameRe.test(token = next())) throw illegal(token, "name");
        var oneof = new OneOf(applyCase(token));
        ifBlock(oneof, function parseOneOf_block(token) {
          if ("option" === token) {
            parseOption(oneof, token);
            skip(";");
          } else {
            push(token);
            parseField(oneof, "optional");
          }
        });
        parent.add(oneof);
      }
      function parseEnum(parent, token) {
        if (!nameRe.test(token = next())) throw illegal(token, "name");
        var enm = new Enum(token);
        ifBlock(enm, function parseEnum_block(token) {
          switch (token) {
           case "option":
            parseOption(enm, token);
            skip(";");
            break;

           case "reserved":
            readRanges(enm.reserved || (enm.reserved = []), true);
            break;

           default:
            parseEnumValue(enm, token);
          }
        });
        parent.add(enm);
      }
      function parseEnumValue(parent, token) {
        if (!nameRe.test(token)) throw illegal(token, "name");
        skip("=");
        var value = parseId(next(), true), dummy = {};
        ifBlock(dummy, function parseEnumValue_block(token) {
          if ("option" !== token) throw illegal(token);
          parseOption(dummy, token);
          skip(";");
        }, function parseEnumValue_line() {
          parseInlineOptions(dummy);
        });
        parent.add(token, value, dummy.comment);
      }
      function parseOption(parent, token) {
        var isCustom = skip("(", true);
        if (!typeRefRe.test(token = next())) throw illegal(token, "name");
        var name = token;
        if (isCustom) {
          skip(")");
          name = "(" + name + ")";
          token = peek();
          if (fqTypeRefRe.test(token)) {
            name += token;
            next();
          }
        }
        skip("=");
        parseOptionValue(parent, name);
      }
      function parseOptionValue(parent, name) {
        if (skip("{", true)) do {
          if (!nameRe.test(token = next())) throw illegal(token, "name");
          if ("{" === peek()) parseOptionValue(parent, name + "." + token); else {
            skip(":");
            "{" === peek() ? parseOptionValue(parent, name + "." + token) : setOption(parent, name + "." + token, readValue(true));
          }
          skip(",", true);
        } while (!skip("}", true)); else setOption(parent, name, readValue(true));
      }
      function setOption(parent, name, value) {
        parent.setOption && parent.setOption(name, value);
      }
      function parseInlineOptions(parent) {
        if (skip("[", true)) {
          do {
            parseOption(parent, "option");
          } while (skip(",", true));
          skip("]");
        }
        return parent;
      }
      function parseService(parent, token) {
        if (!nameRe.test(token = next())) throw illegal(token, "service name");
        var service = new Service(token);
        ifBlock(service, function parseService_block(token) {
          if (parseCommon(service, token)) return;
          if ("rpc" !== token) throw illegal(token);
          parseMethod(service, token);
        });
        parent.add(service);
      }
      function parseMethod(parent, token) {
        var type = token;
        if (!nameRe.test(token = next())) throw illegal(token, "name");
        var name = token, requestType, requestStream, responseType, responseStream;
        skip("(");
        skip("stream", true) && (requestStream = true);
        if (!typeRefRe.test(token = next())) throw illegal(token);
        requestType = token;
        skip(")");
        skip("returns");
        skip("(");
        skip("stream", true) && (responseStream = true);
        if (!typeRefRe.test(token = next())) throw illegal(token);
        responseType = token;
        skip(")");
        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);
        ifBlock(method, function parseMethod_block(token) {
          if ("option" !== token) throw illegal(token);
          parseOption(method, token);
          skip(";");
        });
        parent.add(method);
      }
      function parseExtension(parent, token) {
        if (!typeRefRe.test(token = next())) throw illegal(token, "reference");
        var reference = token;
        ifBlock(null, function parseExtension_block(token) {
          switch (token) {
           case "required":
           case "repeated":
           case "optional":
            parseField(parent, token, reference);
            break;

           default:
            if (!isProto3 || !typeRefRe.test(token)) throw illegal(token);
            push(token);
            parseField(parent, "optional", reference);
          }
        });
      }
      var token;
      while (null !== (token = next())) switch (token) {
       case "package":
        if (!head) throw illegal(token);
        parsePackage();
        break;

       case "import":
        if (!head) throw illegal(token);
        parseImport();
        break;

       case "syntax":
        if (!head) throw illegal(token);
        parseSyntax();
        break;

       case "option":
        if (!head) throw illegal(token);
        parseOption(ptr, token);
        skip(";");
        break;

       default:
        if (parseCommon(ptr, token)) {
          head = false;
          continue;
        }
        throw illegal(token);
      }
      parse.filename = null;
      return {
        package: pkg,
        imports: imports,
        weakImports: weakImports,
        syntax: syntax,
        root: root
      };
    }
  }, {
    "./enum": 22,
    "./field": 23,
    "./mapfield": 27,
    "./method": 29,
    "./oneof": 32,
    "./root": 36,
    "./service": 40,
    "./tokenize": 41,
    "./type": 42,
    "./types": 43,
    "./util": 44
  } ],
  34: [ function(require, module, exports) {
    "use strict";
    module.exports = Reader;
    var util = require("./util/minimal");
    var BufferReader;
    var LongBits = util.LongBits, utf8 = util.utf8;
    function indexOutOfRange(reader, writeLength) {
      return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);
    }
    function Reader(buffer) {
      this.buf = buffer;
      this.pos = 0;
      this.len = buffer.length;
    }
    var create_array = "undefined" !== typeof Uint8Array ? function create_typed_array(buffer) {
      if (buffer instanceof Uint8Array || Array.isArray(buffer)) return new Reader(buffer);
      throw Error("illegal buffer");
    } : function create_array(buffer) {
      if (Array.isArray(buffer)) return new Reader(buffer);
      throw Error("illegal buffer");
    };
    Reader.create = util.Buffer ? function create_buffer_setup(buffer) {
      return (Reader.create = function create_buffer(buffer) {
        return util.Buffer.isBuffer(buffer) ? new BufferReader(buffer) : create_array(buffer);
      })(buffer);
    } : create_array;
    Reader.prototype._slice = util.Array.prototype.subarray || util.Array.prototype.slice;
    Reader.prototype.uint32 = function read_uint32_setup() {
      var value = 4294967295;
      return function read_uint32() {
        value = (127 & this.buf[this.pos]) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (127 & this.buf[this.pos]) << 7) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (127 & this.buf[this.pos]) << 14) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (127 & this.buf[this.pos]) << 21) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        value = (value | (15 & this.buf[this.pos]) << 28) >>> 0;
        if (this.buf[this.pos++] < 128) return value;
        if ((this.pos += 5) > this.len) {
          this.pos = this.len;
          throw indexOutOfRange(this, 10);
        }
        return value;
      };
    }();
    Reader.prototype.int32 = function read_int32() {
      return 0 | this.uint32();
    };
    Reader.prototype.sint32 = function read_sint32() {
      var value = this.uint32();
      return value >>> 1 ^ -(1 & value) | 0;
    };
    function readLongVarint() {
      var bits = new LongBits(0, 0);
      var i = 0;
      if (!(this.len - this.pos > 4)) {
        for (;i < 3; ++i) {
          if (this.pos >= this.len) throw indexOutOfRange(this);
          bits.lo = (bits.lo | (127 & this.buf[this.pos]) << 7 * i) >>> 0;
          if (this.buf[this.pos++] < 128) return bits;
        }
        bits.lo = (bits.lo | (127 & this.buf[this.pos++]) << 7 * i) >>> 0;
        return bits;
      }
      for (;i < 4; ++i) {
        bits.lo = (bits.lo | (127 & this.buf[this.pos]) << 7 * i) >>> 0;
        if (this.buf[this.pos++] < 128) return bits;
      }
      bits.lo = (bits.lo | (127 & this.buf[this.pos]) << 28) >>> 0;
      bits.hi = (bits.hi | (127 & this.buf[this.pos]) >> 4) >>> 0;
      if (this.buf[this.pos++] < 128) return bits;
      i = 0;
      if (this.len - this.pos > 4) for (;i < 5; ++i) {
        bits.hi = (bits.hi | (127 & this.buf[this.pos]) << 7 * i + 3) >>> 0;
        if (this.buf[this.pos++] < 128) return bits;
      } else for (;i < 5; ++i) {
        if (this.pos >= this.len) throw indexOutOfRange(this);
        bits.hi = (bits.hi | (127 & this.buf[this.pos]) << 7 * i + 3) >>> 0;
        if (this.buf[this.pos++] < 128) return bits;
      }
      throw Error("invalid varint encoding");
    }
    Reader.prototype.bool = function read_bool() {
      return 0 !== this.uint32();
    };
    function readFixed32_end(buf, end) {
      return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;
    }
    Reader.prototype.fixed32 = function read_fixed32() {
      if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
      return readFixed32_end(this.buf, this.pos += 4);
    };
    Reader.prototype.sfixed32 = function read_sfixed32() {
      if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
      return 0 | readFixed32_end(this.buf, this.pos += 4);
    };
    function readFixed64() {
      if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);
      return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));
    }
    Reader.prototype.float = function read_float() {
      if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
      var value = util.float.readFloatLE(this.buf, this.pos);
      this.pos += 4;
      return value;
    };
    Reader.prototype.double = function read_double() {
      if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);
      var value = util.float.readDoubleLE(this.buf, this.pos);
      this.pos += 8;
      return value;
    };
    Reader.prototype.bytes = function read_bytes() {
      var length = this.uint32(), start = this.pos, end = this.pos + length;
      if (end > this.len) throw indexOutOfRange(this, length);
      this.pos += length;
      if (Array.isArray(this.buf)) return this.buf.slice(start, end);
      return start === end ? new this.buf.constructor(0) : this._slice.call(this.buf, start, end);
    };
    Reader.prototype.string = function read_string() {
      var bytes = this.bytes();
      return utf8.read(bytes, 0, bytes.length);
    };
    Reader.prototype.skip = function skip(length) {
      if ("number" === typeof length) {
        if (this.pos + length > this.len) throw indexOutOfRange(this, length);
        this.pos += length;
      } else do {
        if (this.pos >= this.len) throw indexOutOfRange(this);
      } while (128 & this.buf[this.pos++]);
      return this;
    };
    Reader.prototype.skipType = function(wireType) {
      switch (wireType) {
       case 0:
        this.skip();
        break;

       case 1:
        this.skip(8);
        break;

       case 2:
        this.skip(this.uint32());
        break;

       case 3:
        while (4 !== (wireType = 7 & this.uint32())) this.skipType(wireType);
        break;

       case 5:
        this.skip(4);
        break;

       default:
        throw Error("invalid wire type " + wireType + " at offset " + this.pos);
      }
      return this;
    };
    Reader._configure = function(BufferReader_) {
      BufferReader = BufferReader_;
      var fn = util.Long ? "toLong" : "toNumber";
      util.merge(Reader.prototype, {
        int64: function read_int64() {
          return readLongVarint.call(this)[fn](false);
        },
        uint64: function read_uint64() {
          return readLongVarint.call(this)[fn](true);
        },
        sint64: function read_sint64() {
          return readLongVarint.call(this).zzDecode()[fn](false);
        },
        fixed64: function read_fixed64() {
          return readFixed64.call(this)[fn](true);
        },
        sfixed64: function read_sfixed64() {
          return readFixed64.call(this)[fn](false);
        }
      });
    };
  }, {
    "./util/minimal": 46
  } ],
  35: [ function(require, module, exports) {
    "use strict";
    module.exports = BufferReader;
    var Reader = require("./reader");
    (BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;
    var util = require("./util/minimal");
    function BufferReader(buffer) {
      Reader.call(this, buffer);
    }
    util.Buffer && (BufferReader.prototype._slice = util.Buffer.prototype.slice);
    BufferReader.prototype.string = function read_string_buffer() {
      var len = this.uint32();
      return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));
    };
  }, {
    "./reader": 34,
    "./util/minimal": 46
  } ],
  36: [ function(require, module, exports) {
    "use strict";
    module.exports = Root;
    var Namespace = require("./namespace");
    ((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = "Root";
    var Field = require("./field"), Enum = require("./enum"), OneOf = require("./oneof"), util = require("./util");
    var Type, parse, common;
    function Root(options) {
      Namespace.call(this, "", options);
      this.deferred = [];
      this.files = [];
    }
    Root.fromJSON = function fromJSON(json, root) {
      root || (root = new Root());
      json.options && root.setOptions(json.options);
      return root.addJSON(json.nested);
    };
    Root.prototype.resolvePath = util.path.resolve;
    function SYNC() {}
    Root.prototype.load = function load(filename, options, callback) {
      if ("function" === typeof options) {
        callback = options;
        options = void 0;
      }
      var self = this;
      if (!callback) return util.asPromise(load, self, filename, options);
      var sync = callback === SYNC;
      function finish(err, root) {
        if (!callback) return;
        var cb = callback;
        callback = null;
        if (sync) throw err;
        cb(err, root);
      }
      function process(filename, source) {
        try {
          util.isString(source) && "{" === source.charAt(0) && (source = JSON.parse(source));
          if (util.isString(source)) {
            parse.filename = filename;
            var parsed = parse(source, self, options), resolved, i = 0;
            if (parsed.imports) for (;i < parsed.imports.length; ++i) (resolved = self.resolvePath(filename, parsed.imports[i])) && fetch(resolved);
            if (parsed.weakImports) for (i = 0; i < parsed.weakImports.length; ++i) (resolved = self.resolvePath(filename, parsed.weakImports[i])) && fetch(resolved, true);
          } else self.setOptions(source.options).addJSON(source.nested);
        } catch (err) {
          finish(err);
        }
        sync || queued || finish(null, self);
      }
      function fetch(filename, weak) {
        var idx = filename.lastIndexOf("google/protobuf/");
        if (idx > -1) {
          var altname = filename.substring(idx);
          altname in common && (filename = altname);
        }
        if (self.files.indexOf(filename) > -1) return;
        self.files.push(filename);
        if (filename in common) {
          if (sync) process(filename, common[filename]); else {
            ++queued;
            setTimeout(function() {
              --queued;
              process(filename, common[filename]);
            });
          }
          return;
        }
        if (sync) {
          var source;
          try {
            source = util.fs.readFileSync(filename).toString("utf8");
          } catch (err) {
            weak || finish(err);
            return;
          }
          process(filename, source);
        } else {
          ++queued;
          util.fetch(filename, function(err, source) {
            --queued;
            if (!callback) return;
            if (err) {
              weak ? queued || finish(null, self) : finish(err);
              return;
            }
            process(filename, source);
          });
        }
      }
      var queued = 0;
      util.isString(filename) && (filename = [ filename ]);
      for (var i = 0, resolved; i < filename.length; ++i) (resolved = self.resolvePath("", filename[i])) && fetch(resolved);
      if (sync) return self;
      queued || finish(null, self);
      return;
    };
    Root.prototype.loadSync = function loadSync(filename, options) {
      if (!util.isNode) throw Error("not supported");
      return this.load(filename, options, SYNC);
    };
    Root.prototype.resolveAll = function resolveAll() {
      if (this.deferred.length) throw Error("unresolvable extensions: " + this.deferred.map(function(field) {
        return "'extend " + field.extend + "' in " + field.parent.fullName;
      }).join(", "));
      return Namespace.prototype.resolveAll.call(this);
    };
    var exposeRe = /^[A-Z]/;
    function tryHandleExtension(root, field) {
      var extendedType = field.parent.lookup(field.extend);
      if (extendedType) {
        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, void 0, field.options);
        sisterField.declaringField = field;
        field.extensionField = sisterField;
        extendedType.add(sisterField);
        return true;
      }
      return false;
    }
    Root.prototype._handleAdd = function _handleAdd(object) {
      if (object instanceof Field) void 0 === object.extend || object.extensionField || tryHandleExtension(this, object) || this.deferred.push(object); else if (object instanceof Enum) exposeRe.test(object.name) && (object.parent[object.name] = object.values); else if (!(object instanceof OneOf)) {
        if (object instanceof Type) for (var i = 0; i < this.deferred.length; ) tryHandleExtension(this, this.deferred[i]) ? this.deferred.splice(i, 1) : ++i;
        for (var j = 0; j < object.nestedArray.length; ++j) this._handleAdd(object._nestedArray[j]);
        exposeRe.test(object.name) && (object.parent[object.name] = object);
      }
    };
    Root.prototype._handleRemove = function _handleRemove(object) {
      if (object instanceof Field) {
        if (void 0 !== object.extend) if (object.extensionField) {
          object.extensionField.parent.remove(object.extensionField);
          object.extensionField = null;
        } else {
          var index = this.deferred.indexOf(object);
          index > -1 && this.deferred.splice(index, 1);
        }
      } else if (object instanceof Enum) exposeRe.test(object.name) && delete object.parent[object.name]; else if (object instanceof Namespace) {
        for (var i = 0; i < object.nestedArray.length; ++i) this._handleRemove(object._nestedArray[i]);
        exposeRe.test(object.name) && delete object.parent[object.name];
      }
    };
    Root._configure = function(Type_, parse_, common_) {
      Type = Type_;
      parse = parse_;
      common = common_;
    };
  }, {
    "./enum": 22,
    "./field": 23,
    "./namespace": 30,
    "./oneof": 32,
    "./util": 44
  } ],
  37: [ function(require, module, exports) {
    "use strict";
    module.exports = {};
  }, {} ],
  38: [ function(require, module, exports) {
    "use strict";
    var rpc = exports;
    rpc.Service = require("./rpc/service");
  }, {
    "./rpc/service": 39
  } ],
  39: [ function(require, module, exports) {
    "use strict";
    module.exports = Service;
    var util = require("../util/minimal");
    (Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;
    function Service(rpcImpl, requestDelimited, responseDelimited) {
      if ("function" !== typeof rpcImpl) throw TypeError("rpcImpl must be a function");
      util.EventEmitter.call(this);
      this.rpcImpl = rpcImpl;
      this.requestDelimited = Boolean(requestDelimited);
      this.responseDelimited = Boolean(responseDelimited);
    }
    Service.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {
      if (!request) throw TypeError("request must be specified");
      var self = this;
      if (!callback) return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);
      if (!self.rpcImpl) {
        setTimeout(function() {
          callback(Error("already ended"));
        }, 0);
        return;
      }
      try {
        return self.rpcImpl(method, requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(), function rpcCallback(err, response) {
          if (err) {
            self.emit("error", err, method);
            return callback(err);
          }
          if (null === response) {
            self.end(true);
            return;
          }
          if (!(response instanceof responseCtor)) try {
            response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);
          } catch (err) {
            self.emit("error", err, method);
            return callback(err);
          }
          self.emit("data", response, method);
          return callback(null, response);
        });
      } catch (err) {
        self.emit("error", err, method);
        setTimeout(function() {
          callback(err);
        }, 0);
        return;
      }
    };
    Service.prototype.end = function end(endedByRPC) {
      if (this.rpcImpl) {
        endedByRPC || this.rpcImpl(null, null, null);
        this.rpcImpl = null;
        this.emit("end").off();
      }
      return this;
    };
  }, {
    "../util/minimal": 46
  } ],
  40: [ function(require, module, exports) {
    "use strict";
    module.exports = Service;
    var Namespace = require("./namespace");
    ((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = "Service";
    var Method = require("./method"), util = require("./util"), rpc = require("./rpc");
    function Service(name, options) {
      Namespace.call(this, name, options);
      this.methods = {};
      this._methodsArray = null;
    }
    Service.fromJSON = function fromJSON(name, json) {
      var service = new Service(name, json.options);
      if (json.methods) for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i) service.add(Method.fromJSON(names[i], json.methods[names[i]]));
      json.nested && service.addJSON(json.nested);
      service.comment = json.comment;
      return service;
    };
    Service.prototype.toJSON = function toJSON(toJSONOptions) {
      var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);
      var keepComments = !!toJSONOptions && Boolean(toJSONOptions.keepComments);
      return util.toObject([ "options", inherited && inherited.options || void 0, "methods", Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || {}, "nested", inherited && inherited.nested || void 0, "comment", keepComments ? this.comment : void 0 ]);
    };
    Object.defineProperty(Service.prototype, "methodsArray", {
      get: function() {
        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));
      }
    });
    function clearCache(service) {
      service._methodsArray = null;
      return service;
    }
    Service.prototype.get = function get(name) {
      return this.methods[name] || Namespace.prototype.get.call(this, name);
    };
    Service.prototype.resolveAll = function resolveAll() {
      var methods = this.methodsArray;
      for (var i = 0; i < methods.length; ++i) methods[i].resolve();
      return Namespace.prototype.resolve.call(this);
    };
    Service.prototype.add = function add(object) {
      if (this.get(object.name)) throw Error("duplicate name '" + object.name + "' in " + this);
      if (object instanceof Method) {
        this.methods[object.name] = object;
        object.parent = this;
        return clearCache(this);
      }
      return Namespace.prototype.add.call(this, object);
    };
    Service.prototype.remove = function remove(object) {
      if (object instanceof Method) {
        if (this.methods[object.name] !== object) throw Error(object + " is not a member of " + this);
        delete this.methods[object.name];
        object.parent = null;
        return clearCache(this);
      }
      return Namespace.prototype.remove.call(this, object);
    };
    Service.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {
      var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);
      for (var i = 0, method; i < this.methodsArray.length; ++i) {
        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\w_]/g, "");
        rpcService[methodName] = util.codegen([ "r", "c" ], util.isReserved(methodName) ? methodName + "_" : methodName)("return this.rpcCall(m,q,s,r,c)")({
          m: method,
          q: method.resolvedRequestType.ctor,
          s: method.resolvedResponseType.ctor
        });
      }
      return rpcService;
    };
  }, {
    "./method": 29,
    "./namespace": 30,
    "./rpc": 38,
    "./util": 44
  } ],
  41: [ function(require, module, exports) {
    "use strict";
    module.exports = tokenize;
    var delimRe = /[\s{}=;:[\],'"()<>]/g, stringDoubleRe = /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g, stringSingleRe = /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g;
    var setCommentRe = /^ *[*/]+ */, setCommentAltRe = /^\s*\*?\/*/, setCommentSplitRe = /\n/g, whitespaceRe = /\s/, unescapeRe = /\\(.?)/g;
    var unescapeMap = {
      0: "\0",
      r: "\r",
      n: "\n",
      t: "\t"
    };
    function unescape(str) {
      return str.replace(unescapeRe, function($0, $1) {
        switch ($1) {
         case "\\":
         case "":
          return $1;

         default:
          return unescapeMap[$1] || "";
        }
      });
    }
    tokenize.unescape = unescape;
    function tokenize(source, alternateCommentMode) {
      source = source.toString();
      var offset = 0, length = source.length, line = 1, commentType = null, commentText = null, commentLine = 0, commentLineEmpty = false;
      var stack = [];
      var stringDelim = null;
      function illegal(subject) {
        return Error("illegal " + subject + " (line " + line + ")");
      }
      function readString() {
        var re = "'" === stringDelim ? stringSingleRe : stringDoubleRe;
        re.lastIndex = offset - 1;
        var match = re.exec(source);
        if (!match) throw illegal("string");
        offset = re.lastIndex;
        push(stringDelim);
        stringDelim = null;
        return unescape(match[1]);
      }
      function charAt(pos) {
        return source.charAt(pos);
      }
      function setComment(start, end) {
        commentType = source.charAt(start++);
        commentLine = line;
        commentLineEmpty = false;
        var lookback;
        lookback = alternateCommentMode ? 2 : 3;
        var commentOffset = start - lookback, c;
        do {
          if (--commentOffset < 0 || "\n" === (c = source.charAt(commentOffset))) {
            commentLineEmpty = true;
            break;
          }
        } while (" " === c || "\t" === c);
        var lines = source.substring(start, end).split(setCommentSplitRe);
        for (var i = 0; i < lines.length; ++i) lines[i] = lines[i].replace(alternateCommentMode ? setCommentAltRe : setCommentRe, "").trim();
        commentText = lines.join("\n").trim();
      }
      function isDoubleSlashCommentLine(startOffset) {
        var endOffset = findEndOfLine(startOffset);
        var lineText = source.substring(startOffset, endOffset);
        var isComment = /^\s*\/{1,2}/.test(lineText);
        return isComment;
      }
      function findEndOfLine(cursor) {
        var endOffset = cursor;
        while (endOffset < length && "\n" !== charAt(endOffset)) endOffset++;
        return endOffset;
      }
      function next() {
        if (stack.length > 0) return stack.shift();
        if (stringDelim) return readString();
        var repeat, prev, curr, start, isDoc;
        do {
          if (offset === length) return null;
          repeat = false;
          while (whitespaceRe.test(curr = charAt(offset))) {
            "\n" === curr && ++line;
            if (++offset === length) return null;
          }
          if ("/" === charAt(offset)) {
            if (++offset === length) throw illegal("comment");
            if ("/" === charAt(offset)) if (alternateCommentMode) {
              start = offset;
              isDoc = false;
              if (isDoubleSlashCommentLine(offset)) {
                isDoc = true;
                do {
                  offset = findEndOfLine(offset);
                  if (offset === length) break;
                  offset++;
                } while (isDoubleSlashCommentLine(offset));
              } else offset = Math.min(length, findEndOfLine(offset) + 1);
              isDoc && setComment(start, offset);
              line++;
              repeat = true;
            } else {
              isDoc = "/" === charAt(start = offset + 1);
              while ("\n" !== charAt(++offset)) if (offset === length) return null;
              ++offset;
              isDoc && setComment(start, offset - 1);
              ++line;
              repeat = true;
            } else {
              if ("*" !== (curr = charAt(offset))) return "/";
              start = offset + 1;
              isDoc = alternateCommentMode || "*" === charAt(start);
              do {
                "\n" === curr && ++line;
                if (++offset === length) throw illegal("comment");
                prev = curr;
                curr = charAt(offset);
              } while ("*" !== prev || "/" !== curr);
              ++offset;
              isDoc && setComment(start, offset - 2);
              repeat = true;
            }
          }
        } while (repeat);
        var end = offset;
        delimRe.lastIndex = 0;
        var delim = delimRe.test(charAt(end++));
        if (!delim) while (end < length && !delimRe.test(charAt(end))) ++end;
        var token = source.substring(offset, offset = end);
        '"' !== token && "'" !== token || (stringDelim = token);
        return token;
      }
      function push(token) {
        stack.push(token);
      }
      function peek() {
        if (!stack.length) {
          var token = next();
          if (null === token) return null;
          push(token);
        }
        return stack[0];
      }
      function skip(expected, optional) {
        var actual = peek(), equals = actual === expected;
        if (equals) {
          next();
          return true;
        }
        if (!optional) throw illegal("token '" + actual + "', '" + expected + "' expected");
        return false;
      }
      function cmnt(trailingLine) {
        var ret = null;
        if (void 0 === trailingLine) commentLine === line - 1 && (alternateCommentMode || "*" === commentType || commentLineEmpty) && (ret = commentText); else {
          commentLine < trailingLine && peek();
          commentLine !== trailingLine || commentLineEmpty || !alternateCommentMode && "/" !== commentType || (ret = commentText);
        }
        return ret;
      }
      return Object.defineProperty({
        next: next,
        peek: peek,
        push: push,
        skip: skip,
        cmnt: cmnt
      }, "line", {
        get: function() {
          return line;
        }
      });
    }
  }, {} ],
  42: [ function(require, module, exports) {
    "use strict";
    module.exports = Type;
    var Namespace = require("./namespace");
    ((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = "Type";
    var Enum = require("./enum"), OneOf = require("./oneof"), Field = require("./field"), MapField = require("./mapfield"), Service = require("./service"), Message = require("./message"), Reader = require("./reader"), Writer = require("./writer"), util = require("./util"), encoder = require("./encoder"), decoder = require("./decoder"), verifier = require("./verifier"), converter = require("./converter"), wrappers = require("./wrappers");
    function Type(name, options) {
      Namespace.call(this, name, options);
      this.fields = {};
      this.oneofs = void 0;
      this.extensions = void 0;
      this.reserved = void 0;
      this.group = void 0;
      this._fieldsById = null;
      this._fieldsArray = null;
      this._oneofsArray = null;
      this._ctor = null;
    }
    Object.defineProperties(Type.prototype, {
      fieldsById: {
        get: function() {
          if (this._fieldsById) return this._fieldsById;
          this._fieldsById = {};
          for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {
            var field = this.fields[names[i]], id = field.id;
            if (this._fieldsById[id]) throw Error("duplicate id " + id + " in " + this);
            this._fieldsById[id] = field;
          }
          return this._fieldsById;
        }
      },
      fieldsArray: {
        get: function() {
          return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));
        }
      },
      oneofsArray: {
        get: function() {
          return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));
        }
      },
      ctor: {
        get: function() {
          return this._ctor || (this.ctor = Type.generateConstructor(this)());
        },
        set: function(ctor) {
          var prototype = ctor.prototype;
          if (!(prototype instanceof Message)) {
            (ctor.prototype = new Message()).constructor = ctor;
            util.merge(ctor.prototype, prototype);
          }
          ctor.$type = ctor.prototype.$type = this;
          util.merge(ctor, Message, true);
          this._ctor = ctor;
          var i = 0;
          for (;i < this.fieldsArray.length; ++i) this._fieldsArray[i].resolve();
          var ctorProperties = {};
          for (i = 0; i < this.oneofsArray.length; ++i) ctorProperties[this._oneofsArray[i].resolve().name] = {
            get: util.oneOfGetter(this._oneofsArray[i].oneof),
            set: util.oneOfSetter(this._oneofsArray[i].oneof)
          };
          i && Object.defineProperties(ctor.prototype, ctorProperties);
        }
      }
    });
    Type.generateConstructor = function generateConstructor(mtype) {
      var gen = util.codegen([ "p" ], mtype.name);
      for (var i = 0, field; i < mtype.fieldsArray.length; ++i) (field = mtype._fieldsArray[i]).map ? gen("this%s={}", util.safeProp(field.name)) : field.repeated && gen("this%s=[]", util.safeProp(field.name));
      return gen("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)")("this[ks[i]]=p[ks[i]]");
    };
    function clearCache(type) {
      type._fieldsById = type._fieldsArray = type._oneofsArray = null;
      delete type.encode;
      delete type.decode;
      delete type.verify;
      return type;
    }
    Type.fromJSON = function fromJSON(name, json) {
      var type = new Type(name, json.options);
      type.extensions = json.extensions;
      type.reserved = json.reserved;
      var names = Object.keys(json.fields), i = 0;
      for (;i < names.length; ++i) type.add(("undefined" !== typeof json.fields[names[i]].keyType ? MapField.fromJSON : Field.fromJSON)(names[i], json.fields[names[i]]));
      if (json.oneofs) for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i) type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));
      if (json.nested) for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {
        var nested = json.nested[names[i]];
        type.add((void 0 !== nested.id ? Field.fromJSON : void 0 !== nested.fields ? Type.fromJSON : void 0 !== nested.values ? Enum.fromJSON : void 0 !== nested.methods ? Service.fromJSON : Namespace.fromJSON)(names[i], nested));
      }
      json.extensions && json.extensions.length && (type.extensions = json.extensions);
      json.reserved && json.reserved.length && (type.reserved = json.reserved);
      json.group && (type.group = true);
      json.comment && (type.comment = json.comment);
      return type;
    };
    Type.prototype.toJSON = function toJSON(toJSONOptions) {
      var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);
      var keepComments = !!toJSONOptions && Boolean(toJSONOptions.keepComments);
      return util.toObject([ "options", inherited && inherited.options || void 0, "oneofs", Namespace.arrayToJSON(this.oneofsArray, toJSONOptions), "fields", Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) {
        return !obj.declaringField;
      }), toJSONOptions) || {}, "extensions", this.extensions && this.extensions.length ? this.extensions : void 0, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "group", this.group || void 0, "nested", inherited && inherited.nested || void 0, "comment", keepComments ? this.comment : void 0 ]);
    };
    Type.prototype.resolveAll = function resolveAll() {
      var fields = this.fieldsArray, i = 0;
      while (i < fields.length) fields[i++].resolve();
      var oneofs = this.oneofsArray;
      i = 0;
      while (i < oneofs.length) oneofs[i++].resolve();
      return Namespace.prototype.resolveAll.call(this);
    };
    Type.prototype.get = function get(name) {
      return this.fields[name] || this.oneofs && this.oneofs[name] || this.nested && this.nested[name] || null;
    };
    Type.prototype.add = function add(object) {
      if (this.get(object.name)) throw Error("duplicate name '" + object.name + "' in " + this);
      if (object instanceof Field && void 0 === object.extend) {
        if (this._fieldsById ? this._fieldsById[object.id] : this.fieldsById[object.id]) throw Error("duplicate id " + object.id + " in " + this);
        if (this.isReservedId(object.id)) throw Error("id " + object.id + " is reserved in " + this);
        if (this.isReservedName(object.name)) throw Error("name '" + object.name + "' is reserved in " + this);
        object.parent && object.parent.remove(object);
        this.fields[object.name] = object;
        object.message = this;
        object.onAdd(this);
        return clearCache(this);
      }
      if (object instanceof OneOf) {
        this.oneofs || (this.oneofs = {});
        this.oneofs[object.name] = object;
        object.onAdd(this);
        return clearCache(this);
      }
      return Namespace.prototype.add.call(this, object);
    };
    Type.prototype.remove = function remove(object) {
      if (object instanceof Field && void 0 === object.extend) {
        if (!this.fields || this.fields[object.name] !== object) throw Error(object + " is not a member of " + this);
        delete this.fields[object.name];
        object.parent = null;
        object.onRemove(this);
        return clearCache(this);
      }
      if (object instanceof OneOf) {
        if (!this.oneofs || this.oneofs[object.name] !== object) throw Error(object + " is not a member of " + this);
        delete this.oneofs[object.name];
        object.parent = null;
        object.onRemove(this);
        return clearCache(this);
      }
      return Namespace.prototype.remove.call(this, object);
    };
    Type.prototype.isReservedId = function isReservedId(id) {
      return Namespace.isReservedId(this.reserved, id);
    };
    Type.prototype.isReservedName = function isReservedName(name) {
      return Namespace.isReservedName(this.reserved, name);
    };
    Type.prototype.create = function create(properties) {
      return new this.ctor(properties);
    };
    Type.prototype.setup = function setup() {
      var fullName = this.fullName, types = [];
      for (var i = 0; i < this.fieldsArray.length; ++i) types.push(this._fieldsArray[i].resolve().resolvedType);
      this.encode = encoder(this)({
        Writer: Writer,
        types: types,
        util: util
      });
      this.decode = decoder(this)({
        Reader: Reader,
        types: types,
        util: util
      });
      this.verify = verifier(this)({
        types: types,
        util: util
      });
      this.fromObject = converter.fromObject(this)({
        types: types,
        util: util
      });
      this.toObject = converter.toObject(this)({
        types: types,
        util: util
      });
      var wrapper = wrappers[fullName];
      if (wrapper) {
        var originalThis = Object.create(this);
        originalThis.fromObject = this.fromObject;
        this.fromObject = wrapper.fromObject.bind(originalThis);
        originalThis.toObject = this.toObject;
        this.toObject = wrapper.toObject.bind(originalThis);
      }
      return this;
    };
    Type.prototype.encode = function encode_setup(message, writer) {
      return this.setup().encode(message, writer);
    };
    Type.prototype.encodeDelimited = function encodeDelimited(message, writer) {
      return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();
    };
    Type.prototype.decode = function decode_setup(reader, length) {
      return this.setup().decode(reader, length);
    };
    Type.prototype.decodeDelimited = function decodeDelimited(reader) {
      reader instanceof Reader || (reader = Reader.create(reader));
      return this.decode(reader, reader.uint32());
    };
    Type.prototype.verify = function verify_setup(message) {
      return this.setup().verify(message);
    };
    Type.prototype.fromObject = function fromObject(object) {
      return this.setup().fromObject(object);
    };
    Type.prototype.toObject = function toObject(message, options) {
      return this.setup().toObject(message, options);
    };
    Type.d = function decorateType(typeName) {
      return function typeDecorator(target) {
        util.decorateType(target, typeName);
      };
    };
  }, {
    "./converter": 19,
    "./decoder": 20,
    "./encoder": 21,
    "./enum": 22,
    "./field": 23,
    "./mapfield": 27,
    "./message": 28,
    "./namespace": 30,
    "./oneof": 32,
    "./reader": 34,
    "./service": 40,
    "./util": 44,
    "./verifier": 47,
    "./wrappers": 48,
    "./writer": 49
  } ],
  43: [ function(require, module, exports) {
    "use strict";
    var types = exports;
    var util = require("./util");
    var s = [ "double", "float", "int32", "uint32", "sint32", "fixed32", "sfixed32", "int64", "uint64", "sint64", "fixed64", "sfixed64", "bool", "string", "bytes" ];
    function bake(values, offset) {
      var i = 0, o = {};
      offset |= 0;
      while (i < values.length) o[s[i + offset]] = values[i++];
      return o;
    }
    types.basic = bake([ 1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2 ]);
    types.defaults = bake([ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, "", util.emptyArray, null ]);
    types.long = bake([ 0, 0, 0, 1, 1 ], 7);
    types.mapKey = bake([ 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2 ], 2);
    types.packed = bake([ 1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0 ]);
  }, {
    "./util": 44
  } ],
  44: [ function(require, module, exports) {
    "use strict";
    var util = module.exports = require("./util/minimal");
    var roots = require("./roots");
    var Type, Enum;
    util.codegen = require("@protobufjs/codegen");
    util.fetch = require("@protobufjs/fetch");
    util.path = require("@protobufjs/path");
    util.fs = util.inquire("fs");
    util.toArray = function toArray(object) {
      if (object) {
        var keys = Object.keys(object), array = new Array(keys.length), index = 0;
        while (index < keys.length) array[index] = object[keys[index++]];
        return array;
      }
      return [];
    };
    util.toObject = function toObject(array) {
      var object = {}, index = 0;
      while (index < array.length) {
        var key = array[index++], val = array[index++];
        void 0 !== val && (object[key] = val);
      }
      return object;
    };
    var safePropBackslashRe = /\\/g, safePropQuoteRe = /"/g;
    util.isReserved = function isReserved(name) {
      return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);
    };
    util.safeProp = function safeProp(prop) {
      if (!/^[$\w_]+$/.test(prop) || util.isReserved(prop)) return '["' + prop.replace(safePropBackslashRe, "\\\\").replace(safePropQuoteRe, '\\"') + '"]';
      return "." + prop;
    };
    util.ucFirst = function ucFirst(str) {
      return str.charAt(0).toUpperCase() + str.substring(1);
    };
    var camelCaseRe = /_([a-z])/g;
    util.camelCase = function camelCase(str) {
      return str.substring(0, 1) + str.substring(1).replace(camelCaseRe, function($0, $1) {
        return $1.toUpperCase();
      });
    };
    util.compareFieldsById = function compareFieldsById(a, b) {
      return a.id - b.id;
    };
    util.decorateType = function decorateType(ctor, typeName) {
      if (ctor.$type) {
        if (typeName && ctor.$type.name !== typeName) {
          util.decorateRoot.remove(ctor.$type);
          ctor.$type.name = typeName;
          util.decorateRoot.add(ctor.$type);
        }
        return ctor.$type;
      }
      Type || (Type = require("./type"));
      var type = new Type(typeName || ctor.name);
      util.decorateRoot.add(type);
      type.ctor = ctor;
      Object.defineProperty(ctor, "$type", {
        value: type,
        enumerable: false
      });
      Object.defineProperty(ctor.prototype, "$type", {
        value: type,
        enumerable: false
      });
      return type;
    };
    var decorateEnumIndex = 0;
    util.decorateEnum = function decorateEnum(object) {
      if (object.$type) return object.$type;
      Enum || (Enum = require("./enum"));
      var enm = new Enum("Enum" + decorateEnumIndex++, object);
      util.decorateRoot.add(enm);
      Object.defineProperty(object, "$type", {
        value: enm,
        enumerable: false
      });
      return enm;
    };
    Object.defineProperty(util, "decorateRoot", {
      get: function() {
        return roots["decorated"] || (roots["decorated"] = new (require("./root"))());
      }
    });
  }, {
    "./enum": 22,
    "./root": 36,
    "./roots": 37,
    "./type": 42,
    "./util/minimal": 46,
    "@protobufjs/codegen": 9,
    "@protobufjs/fetch": 11,
    "@protobufjs/path": 14
  } ],
  45: [ function(require, module, exports) {
    "use strict";
    module.exports = LongBits;
    var util = require("../util/minimal");
    function LongBits(lo, hi) {
      this.lo = lo >>> 0;
      this.hi = hi >>> 0;
    }
    var zero = LongBits.zero = new LongBits(0, 0);
    zero.toNumber = function() {
      return 0;
    };
    zero.zzEncode = zero.zzDecode = function() {
      return this;
    };
    zero.length = function() {
      return 1;
    };
    var zeroHash = LongBits.zeroHash = "\0\0\0\0\0\0\0\0";
    LongBits.fromNumber = function fromNumber(value) {
      if (0 === value) return zero;
      var sign = value < 0;
      sign && (value = -value);
      var lo = value >>> 0, hi = (value - lo) / 4294967296 >>> 0;
      if (sign) {
        hi = ~hi >>> 0;
        lo = ~lo >>> 0;
        if (++lo > 4294967295) {
          lo = 0;
          ++hi > 4294967295 && (hi = 0);
        }
      }
      return new LongBits(lo, hi);
    };
    LongBits.from = function from(value) {
      if ("number" === typeof value) return LongBits.fromNumber(value);
      if (util.isString(value)) {
        if (!util.Long) return LongBits.fromNumber(parseInt(value, 10));
        value = util.Long.fromString(value);
      }
      return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;
    };
    LongBits.prototype.toNumber = function toNumber(unsigned) {
      if (!unsigned && this.hi >>> 31) {
        var lo = 1 + ~this.lo >>> 0, hi = ~this.hi >>> 0;
        lo || (hi = hi + 1 >>> 0);
        return -(lo + 4294967296 * hi);
      }
      return this.lo + 4294967296 * this.hi;
    };
    LongBits.prototype.toLong = function toLong(unsigned) {
      return util.Long ? new util.Long(0 | this.lo, 0 | this.hi, Boolean(unsigned)) : {
        low: 0 | this.lo,
        high: 0 | this.hi,
        unsigned: Boolean(unsigned)
      };
    };
    var charCodeAt = String.prototype.charCodeAt;
    LongBits.fromHash = function fromHash(hash) {
      if (hash === zeroHash) return zero;
      return new LongBits((charCodeAt.call(hash, 0) | charCodeAt.call(hash, 1) << 8 | charCodeAt.call(hash, 2) << 16 | charCodeAt.call(hash, 3) << 24) >>> 0, (charCodeAt.call(hash, 4) | charCodeAt.call(hash, 5) << 8 | charCodeAt.call(hash, 6) << 16 | charCodeAt.call(hash, 7) << 24) >>> 0);
    };
    LongBits.prototype.toHash = function toHash() {
      return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
    };
    LongBits.prototype.zzEncode = function zzEncode() {
      var mask = this.hi >> 31;
      this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;
      this.lo = (this.lo << 1 ^ mask) >>> 0;
      return this;
    };
    LongBits.prototype.zzDecode = function zzDecode() {
      var mask = -(1 & this.lo);
      this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;
      this.hi = (this.hi >>> 1 ^ mask) >>> 0;
      return this;
    };
    LongBits.prototype.length = function length() {
      var part0 = this.lo, part1 = (this.lo >>> 28 | this.hi << 4) >>> 0, part2 = this.hi >>> 24;
      return 0 === part2 ? 0 === part1 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;
    };
  }, {
    "../util/minimal": 46
  } ],
  46: [ function(require, module, exports) {
    (function(global) {
      "use strict";
      var util = exports;
      util.asPromise = require("@protobufjs/aspromise");
      util.base64 = require("@protobufjs/base64");
      util.EventEmitter = require("@protobufjs/eventemitter");
      util.float = require("@protobufjs/float");
      util.inquire = require("@protobufjs/inquire");
      util.utf8 = require("@protobufjs/utf8");
      util.pool = require("@protobufjs/pool");
      util.LongBits = require("./longbits");
      util.global = "undefined" !== typeof window && window || "undefined" !== typeof global && global || "undefined" !== typeof self && self || this;
      util.emptyArray = Object.freeze ? Object.freeze([]) : [];
      util.emptyObject = Object.freeze ? Object.freeze({}) : {};
      util.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);
      util.isInteger = Number.isInteger || function isInteger(value) {
        return "number" === typeof value && isFinite(value) && Math.floor(value) === value;
      };
      util.isString = function isString(value) {
        return "string" === typeof value || value instanceof String;
      };
      util.isObject = function isObject(value) {
        return value && "object" === typeof value;
      };
      util.isset = util.isSet = function isSet(obj, prop) {
        var value = obj[prop];
        if (null != value && obj.hasOwnProperty(prop)) return "object" !== typeof value || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;
        return false;
      };
      util.Buffer = function() {
        try {
          var Buffer = util.inquire("buffer").Buffer;
          return Buffer.prototype.utf8Write ? Buffer : null;
        } catch (e) {
          return null;
        }
      }();
      util._Buffer_from = null;
      util._Buffer_allocUnsafe = null;
      util.newBuffer = function newBuffer(sizeOrArray) {
        return "number" === typeof sizeOrArray ? util.Buffer ? util._Buffer_allocUnsafe(sizeOrArray) : new util.Array(sizeOrArray) : util.Buffer ? util._Buffer_from(sizeOrArray) : "undefined" === typeof Uint8Array ? sizeOrArray : new Uint8Array(sizeOrArray);
      };
      util.Array = "undefined" !== typeof Uint8Array ? Uint8Array : Array;
      util.Long = util.global.dcodeIO && util.global.dcodeIO.Long || util.global.Long || util.inquire("long");
      util.key2Re = /^true|false|0|1$/;
      util.key32Re = /^-?(?:0|[1-9][0-9]*)$/;
      util.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;
      util.longToHash = function longToHash(value) {
        return value ? util.LongBits.from(value).toHash() : util.LongBits.zeroHash;
      };
      util.longFromHash = function longFromHash(hash, unsigned) {
        var bits = util.LongBits.fromHash(hash);
        if (util.Long) return util.Long.fromBits(bits.lo, bits.hi, unsigned);
        return bits.toNumber(Boolean(unsigned));
      };
      function merge(dst, src, ifNotSet) {
        for (var keys = Object.keys(src), i = 0; i < keys.length; ++i) void 0 !== dst[keys[i]] && ifNotSet || (dst[keys[i]] = src[keys[i]]);
        return dst;
      }
      util.merge = merge;
      util.lcFirst = function lcFirst(str) {
        return str.charAt(0).toLowerCase() + str.substring(1);
      };
      function newError(name) {
        function CustomError(message, properties) {
          if (!(this instanceof CustomError)) return new CustomError(message, properties);
          Object.defineProperty(this, "message", {
            get: function() {
              return message;
            }
          });
          Error.captureStackTrace ? Error.captureStackTrace(this, CustomError) : Object.defineProperty(this, "stack", {
            value: new Error().stack || ""
          });
          properties && merge(this, properties);
        }
        (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;
        Object.defineProperty(CustomError.prototype, "name", {
          get: function() {
            return name;
          }
        });
        CustomError.prototype.toString = function toString() {
          return this.name + ": " + this.message;
        };
        return CustomError;
      }
      util.newError = newError;
      util.ProtocolError = newError("ProtocolError");
      util.oneOfGetter = function getOneOf(fieldNames) {
        var fieldMap = {};
        for (var i = 0; i < fieldNames.length; ++i) fieldMap[fieldNames[i]] = 1;
        return function() {
          for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i) if (1 === fieldMap[keys[i]] && void 0 !== this[keys[i]] && null !== this[keys[i]]) return keys[i];
        };
      };
      util.oneOfSetter = function setOneOf(fieldNames) {
        return function(name) {
          for (var i = 0; i < fieldNames.length; ++i) fieldNames[i] !== name && delete this[fieldNames[i]];
        };
      };
      util.toJSONOptions = {
        longs: String,
        enums: String,
        bytes: String,
        json: true
      };
      util._configure = function() {
        var Buffer = util.Buffer;
        if (!Buffer) {
          util._Buffer_from = util._Buffer_allocUnsafe = null;
          return;
        }
        util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from || function Buffer_from(value, encoding) {
          return new Buffer(value, encoding);
        };
        util._Buffer_allocUnsafe = Buffer.allocUnsafe || function Buffer_allocUnsafe(size) {
          return new Buffer(size);
        };
      };
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    "./longbits": 45,
    "@protobufjs/aspromise": 7,
    "@protobufjs/base64": 8,
    "@protobufjs/eventemitter": 10,
    "@protobufjs/float": 12,
    "@protobufjs/inquire": 13,
    "@protobufjs/pool": 15,
    "@protobufjs/utf8": 16
  } ],
  47: [ function(require, module, exports) {
    "use strict";
    module.exports = verifier;
    var Enum = require("./enum"), util = require("./util");
    function invalid(field, expected) {
      return field.name + ": " + expected + (field.repeated && "array" !== expected ? "[]" : field.map && "object" !== expected ? "{k:" + field.keyType + "}" : "") + " expected";
    }
    function genVerifyValue(gen, field, fieldIndex, ref) {
      if (field.resolvedType) if (field.resolvedType instanceof Enum) {
        gen("switch(%s){", ref)("default:")("return%j", invalid(field, "enum value"));
        for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen("case %i:", field.resolvedType.values[keys[j]]);
        gen("break")("}");
      } else gen("{")("var e=types[%i].verify(%s);", fieldIndex, ref)("if(e)")("return%j+e", field.name + ".")("}"); else switch (field.type) {
       case "int32":
       case "uint32":
       case "sint32":
       case "fixed32":
       case "sfixed32":
        gen("if(!util.isInteger(%s))", ref)("return%j", invalid(field, "integer"));
        break;

       case "int64":
       case "uint64":
       case "sint64":
       case "fixed64":
       case "sfixed64":
        gen("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))", ref, ref, ref, ref)("return%j", invalid(field, "integer|Long"));
        break;

       case "float":
       case "double":
        gen('if(typeof %s!=="number")', ref)("return%j", invalid(field, "number"));
        break;

       case "bool":
        gen('if(typeof %s!=="boolean")', ref)("return%j", invalid(field, "boolean"));
        break;

       case "string":
        gen("if(!util.isString(%s))", ref)("return%j", invalid(field, "string"));
        break;

       case "bytes":
        gen('if(!(%s&&typeof %s.length==="number"||util.isString(%s)))', ref, ref, ref)("return%j", invalid(field, "buffer"));
      }
      return gen;
    }
    function genVerifyKey(gen, field, ref) {
      switch (field.keyType) {
       case "int32":
       case "uint32":
       case "sint32":
       case "fixed32":
       case "sfixed32":
        gen("if(!util.key32Re.test(%s))", ref)("return%j", invalid(field, "integer key"));
        break;

       case "int64":
       case "uint64":
       case "sint64":
       case "fixed64":
       case "sfixed64":
        gen("if(!util.key64Re.test(%s))", ref)("return%j", invalid(field, "integer|Long key"));
        break;

       case "bool":
        gen("if(!util.key2Re.test(%s))", ref)("return%j", invalid(field, "boolean key"));
      }
      return gen;
    }
    function verifier(mtype) {
      var gen = util.codegen([ "m" ], mtype.name + "$verify")('if(typeof m!=="object"||m===null)')("return%j", "object expected");
      var oneofs = mtype.oneofsArray, seenFirstField = {};
      oneofs.length && gen("var p={}");
      for (var i = 0; i < mtype.fieldsArray.length; ++i) {
        var field = mtype._fieldsArray[i].resolve(), ref = "m" + util.safeProp(field.name);
        field.optional && gen("if(%s!=null&&m.hasOwnProperty(%j)){", ref, field.name);
        if (field.map) {
          gen("if(!util.isObject(%s))", ref)("return%j", invalid(field, "object"))("var k=Object.keys(%s)", ref)("for(var i=0;i<k.length;++i){");
          genVerifyKey(gen, field, "k[i]");
          genVerifyValue(gen, field, i, ref + "[k[i]]")("}");
        } else if (field.repeated) {
          gen("if(!Array.isArray(%s))", ref)("return%j", invalid(field, "array"))("for(var i=0;i<%s.length;++i){", ref);
          genVerifyValue(gen, field, i, ref + "[i]")("}");
        } else {
          if (field.partOf) {
            var oneofProp = util.safeProp(field.partOf.name);
            1 === seenFirstField[field.partOf.name] && gen("if(p%s===1)", oneofProp)("return%j", field.partOf.name + ": multiple values");
            seenFirstField[field.partOf.name] = 1;
            gen("p%s=1", oneofProp);
          }
          genVerifyValue(gen, field, i, ref);
        }
        field.optional && gen("}");
      }
      return gen("return null");
    }
  }, {
    "./enum": 22,
    "./util": 44
  } ],
  48: [ function(require, module, exports) {
    "use strict";
    var wrappers = exports;
    var Message = require("./message");
    wrappers[".google.protobuf.Any"] = {
      fromObject: function(object) {
        if (object && object["@type"]) {
          var type = this.lookup(object["@type"]);
          if (type) {
            var type_url = "." === object["@type"].charAt(0) ? object["@type"].substr(1) : object["@type"];
            return this.create({
              type_url: "/" + type_url,
              value: type.encode(type.fromObject(object)).finish()
            });
          }
        }
        return this.fromObject(object);
      },
      toObject: function(message, options) {
        if (options && options.json && message.type_url && message.value) {
          var name = message.type_url.substring(message.type_url.lastIndexOf("/") + 1);
          var type = this.lookup(name);
          type && (message = type.decode(message.value));
        }
        if (!(message instanceof this.ctor) && message instanceof Message) {
          var object = message.$type.toObject(message, options);
          object["@type"] = message.$type.fullName;
          return object;
        }
        return this.toObject(message, options);
      }
    };
  }, {
    "./message": 28
  } ],
  49: [ function(require, module, exports) {
    "use strict";
    module.exports = Writer;
    var util = require("./util/minimal");
    var BufferWriter;
    var LongBits = util.LongBits, base64 = util.base64, utf8 = util.utf8;
    function Op(fn, len, val) {
      this.fn = fn;
      this.len = len;
      this.next = void 0;
      this.val = val;
    }
    function noop() {}
    function State(writer) {
      this.head = writer.head;
      this.tail = writer.tail;
      this.len = writer.len;
      this.next = writer.states;
    }
    function Writer() {
      this.len = 0;
      this.head = new Op(noop, 0, 0);
      this.tail = this.head;
      this.states = null;
    }
    Writer.create = util.Buffer ? function create_buffer_setup() {
      return (Writer.create = function create_buffer() {
        return new BufferWriter();
      })();
    } : function create_array() {
      return new Writer();
    };
    Writer.alloc = function alloc(size) {
      return new util.Array(size);
    };
    util.Array !== Array && (Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray));
    Writer.prototype._push = function push(fn, len, val) {
      this.tail = this.tail.next = new Op(fn, len, val);
      this.len += len;
      return this;
    };
    function writeByte(val, buf, pos) {
      buf[pos] = 255 & val;
    }
    function writeVarint32(val, buf, pos) {
      while (val > 127) {
        buf[pos++] = 127 & val | 128;
        val >>>= 7;
      }
      buf[pos] = val;
    }
    function VarintOp(len, val) {
      this.len = len;
      this.next = void 0;
      this.val = val;
    }
    VarintOp.prototype = Object.create(Op.prototype);
    VarintOp.prototype.fn = writeVarint32;
    Writer.prototype.uint32 = function write_uint32(value) {
      this.len += (this.tail = this.tail.next = new VarintOp((value >>>= 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;
      return this;
    };
    Writer.prototype.int32 = function write_int32(value) {
      return value < 0 ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) : this.uint32(value);
    };
    Writer.prototype.sint32 = function write_sint32(value) {
      return this.uint32((value << 1 ^ value >> 31) >>> 0);
    };
    function writeVarint64(val, buf, pos) {
      while (val.hi) {
        buf[pos++] = 127 & val.lo | 128;
        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;
        val.hi >>>= 7;
      }
      while (val.lo > 127) {
        buf[pos++] = 127 & val.lo | 128;
        val.lo = val.lo >>> 7;
      }
      buf[pos++] = val.lo;
    }
    Writer.prototype.uint64 = function write_uint64(value) {
      var bits = LongBits.from(value);
      return this._push(writeVarint64, bits.length(), bits);
    };
    Writer.prototype.int64 = Writer.prototype.uint64;
    Writer.prototype.sint64 = function write_sint64(value) {
      var bits = LongBits.from(value).zzEncode();
      return this._push(writeVarint64, bits.length(), bits);
    };
    Writer.prototype.bool = function write_bool(value) {
      return this._push(writeByte, 1, value ? 1 : 0);
    };
    function writeFixed32(val, buf, pos) {
      buf[pos] = 255 & val;
      buf[pos + 1] = val >>> 8 & 255;
      buf[pos + 2] = val >>> 16 & 255;
      buf[pos + 3] = val >>> 24;
    }
    Writer.prototype.fixed32 = function write_fixed32(value) {
      return this._push(writeFixed32, 4, value >>> 0);
    };
    Writer.prototype.sfixed32 = Writer.prototype.fixed32;
    Writer.prototype.fixed64 = function write_fixed64(value) {
      var bits = LongBits.from(value);
      return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);
    };
    Writer.prototype.sfixed64 = Writer.prototype.fixed64;
    Writer.prototype.float = function write_float(value) {
      return this._push(util.float.writeFloatLE, 4, value);
    };
    Writer.prototype.double = function write_double(value) {
      return this._push(util.float.writeDoubleLE, 8, value);
    };
    var writeBytes = util.Array.prototype.set ? function writeBytes_set(val, buf, pos) {
      buf.set(val, pos);
    } : function writeBytes_for(val, buf, pos) {
      for (var i = 0; i < val.length; ++i) buf[pos + i] = val[i];
    };
    Writer.prototype.bytes = function write_bytes(value) {
      var len = value.length >>> 0;
      if (!len) return this._push(writeByte, 1, 0);
      if (util.isString(value)) {
        var buf = Writer.alloc(len = base64.length(value));
        base64.decode(value, buf, 0);
        value = buf;
      }
      return this.uint32(len)._push(writeBytes, len, value);
    };
    Writer.prototype.string = function write_string(value) {
      var len = utf8.length(value);
      return len ? this.uint32(len)._push(utf8.write, len, value) : this._push(writeByte, 1, 0);
    };
    Writer.prototype.fork = function fork() {
      this.states = new State(this);
      this.head = this.tail = new Op(noop, 0, 0);
      this.len = 0;
      return this;
    };
    Writer.prototype.reset = function reset() {
      if (this.states) {
        this.head = this.states.head;
        this.tail = this.states.tail;
        this.len = this.states.len;
        this.states = this.states.next;
      } else {
        this.head = this.tail = new Op(noop, 0, 0);
        this.len = 0;
      }
      return this;
    };
    Writer.prototype.ldelim = function ldelim() {
      var head = this.head, tail = this.tail, len = this.len;
      this.reset().uint32(len);
      if (len) {
        this.tail.next = head.next;
        this.tail = tail;
        this.len += len;
      }
      return this;
    };
    Writer.prototype.finish = function finish() {
      var head = this.head.next, buf = this.constructor.alloc(this.len), pos = 0;
      while (head) {
        head.fn(head.val, buf, pos);
        pos += head.len;
        head = head.next;
      }
      return buf;
    };
    Writer._configure = function(BufferWriter_) {
      BufferWriter = BufferWriter_;
    };
  }, {
    "./util/minimal": 46
  } ],
  50: [ function(require, module, exports) {
    "use strict";
    module.exports = BufferWriter;
    var Writer = require("./writer");
    (BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;
    var util = require("./util/minimal");
    var Buffer = util.Buffer;
    function BufferWriter() {
      Writer.call(this);
    }
    BufferWriter.alloc = function alloc_buffer(size) {
      return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);
    };
    var writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && "set" === Buffer.prototype.set.name ? function writeBytesBuffer_set(val, buf, pos) {
      buf.set(val, pos);
    } : function writeBytesBuffer_copy(val, buf, pos) {
      if (val.copy) val.copy(buf, pos, 0, val.length); else for (var i = 0; i < val.length; ) buf[pos++] = val[i++];
    };
    BufferWriter.prototype.bytes = function write_bytes_buffer(value) {
      util.isString(value) && (value = util._Buffer_from(value, "base64"));
      var len = value.length >>> 0;
      this.uint32(len);
      len && this._push(writeBytesBuffer, len, value);
      return this;
    };
    function writeStringBuffer(val, buf, pos) {
      val.length < 40 ? util.utf8.write(val, buf, pos) : buf.utf8Write(val, pos);
    }
    BufferWriter.prototype.string = function write_string_buffer(value) {
      var len = Buffer.byteLength(value);
      this.uint32(len);
      len && this._push(writeStringBuffer, len, value);
      return this;
    };
  }, {
    "./util/minimal": 46,
    "./writer": 49
  } ],
  GrayLable: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "58e99AlN4JA27qo4O0kJGdL", "GrayLable");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu, requireComponent = _a.requireComponent, executeInEditMode = _a.executeInEditMode;
    var GrayLable = function(_super) {
      __extends(GrayLable, _super);
      function GrayLable() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      GrayLable.prototype.onEnable = function() {
        this._originalNodeColor = this.node.color;
        this.node.color = this.calcGrayColor(this.node.color);
        var outLine = this.getComponent(cc.LabelOutline);
        if (outLine) {
          this._originalOutlineColor = outLine.color;
          outLine.color = this.calcGrayColor(outLine.color);
        }
      };
      GrayLable.prototype.onDisable = function() {
        this.node.color = this._originalNodeColor;
        var outLine = this.getComponent(cc.LabelOutline);
        outLine && this._originalOutlineColor && (outLine.color = this._originalOutlineColor);
      };
      GrayLable.prototype.calcGrayColor = function(srcColor) {
        var c = .299 * srcColor.getR() + .587 * srcColor.getG() + .184 * srcColor.getB();
        c = Math.min(255, c);
        c = Math.max(0, c);
        return new cc.Color(c, c, c, srcColor.getA());
      };
      GrayLable = __decorate([ ccclass, requireComponent(cc.Label), menu("custom/GrayLable"), executeInEditMode ], GrayLable);
      return GrayLable;
    }(cc.Component);
    exports.default = GrayLable;
    cc._RF.pop();
  }, {} ],
  JsonOb: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4cc0foYT7NDrrMdVzYTd9Xk", "JsonOb");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var OP = Object.prototype;
    var types = {
      obj: "[object Object]",
      array: "[object Array]"
    };
    var OAM = [ "push", "pop", "shift", "unshift", "short", "reverse", "splice" ];
    var JsonOb = function() {
      function JsonOb(obj, callback) {
        OP.toString.call(obj) !== types.obj && OP.toString.call(obj) !== types.array && console.error("\u8bf7\u4f20\u5165\u4e00\u4e2a\u5bf9\u8c61\u6216\u6570\u7ec4");
        this._callback = callback;
        this.observe(obj);
      }
      JsonOb.prototype.observe = function(obj, path) {
        var _this = this;
        OP.toString.call(obj) === types.array && this.overrideArrayProto(obj, path);
        Object.keys(obj).forEach(function(key) {
          var self = _this;
          var oldVal = obj[key];
          var pathArray = path && path.slice();
          pathArray ? pathArray.push(key) : pathArray = [ key ];
          Object.defineProperty(obj, key, {
            get: function() {
              return oldVal;
            },
            set: function(newVal) {
              if (oldVal !== newVal) {
                "[object Object]" === OP.toString.call(newVal) && self.observe(newVal, pathArray);
                self._callback(newVal, oldVal, pathArray);
                oldVal = newVal;
              }
            }
          });
          OP.toString.call(obj[key]) !== types.obj && OP.toString.call(obj[key]) !== types.array || _this.observe(obj[key], pathArray);
        }, this);
      };
      JsonOb.prototype.overrideArrayProto = function(array, path) {
        var originalProto = Array.prototype;
        var overrideProto = Object.create(Array.prototype);
        var self = this;
        var result;
        OAM.forEach(function(method) {
          Object.defineProperty(overrideProto, method, {
            value: function() {
              var oldVal = this.slice();
              result = originalProto[method].apply(this, arguments);
              self.observe(this, path);
              self._callback(this, oldVal, path);
              return result;
            }
          });
        });
        array["__proto__"] = overrideProto;
      };
      return JsonOb;
    }();
    exports.JsonOb = JsonOb;
    cc._RF.pop();
  }, {} ],
  SdkBridge: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "55e2aeL+19OLLDNMQC3zH2X", "SdkBridge");
    "use strict";
    window.onGetPlatformMsg = function(jsonString) {
      console.log("receive message from JAVA:" + jsonString);
      var jsonObj = jsonString;
      "string" == typeof jsonString && (jsonObj = JSON.parse(jsonString));
      null != window.onHandlerPlatformMsg ? window.onHandlerPlatformMsg(jsonObj) : console.log("onHandlerPlatformMsg\u672a\u6ce8\u518c");
    };
    cc._RF.pop();
  }, {} ],
  SdkHandler: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "060044QnGlKMLxCOVFe4KKM", "SdkHandler");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var game_manager_1 = require("../manager/game_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var SdkHandler = function() {
      function SdkHandler() {
        window.onHandlerPlatformMsg = function(jsonObj) {
          var functionName = jsonObj.functionName;
          console.log("functionName:" + functionName);
          if ("onExitGame" == functionName) ; else if ("preLoadGame" == functionName) ; else if ("onHideGame" == functionName) {
            var isHideGame = jsonObj.params.isHide;
            console.log("receive message isHideGame:" + isHideGame);
          } else if ("onChangeGame" == functionName) {
            var gameName = jsonObj.params.gameName;
            game_manager_1.GameManager.changeGame(gameName);
          } else console.log("receive message :" + functionName + ", but the function unuse");
        };
      }
      SdkHandler = __decorate([ ccclass ], SdkHandler);
      return SdkHandler;
    }();
    exports.default = SdkHandler;
    cc._RF.pop();
  }, {
    "../manager/game_manager": "game_manager"
  } ],
  SdkInterface: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c5824GaGwNH+Yp9GtJBa6t0", "SdkInterface");
    "use strict";
    window.sdkInterface = {
      SDKCall: function SDKCall(jsonString) {
        var result = window.prompt(jsonString, "JsCallPlatform");
        console.log("SDKCall result:" + result);
        return result;
      },
      EnterGame: function EnterGame() {
        var jsonObj = {
          functionName: "enterGame",
          params: ""
        };
        var jsonString = JSON.stringify(jsonObj);
        return sdkInterface.SDKCall(jsonString);
      },
      ExitGame: function ExitGame() {
        var jsonObj = {
          functionName: "exitGame",
          params: ""
        };
        var jsonString = JSON.stringify(jsonObj);
        return sdkInterface.SDKCall(jsonString);
      },
      vibratePhone: function vibratePhone(time) {
        console.log("vibratePhone");
        var paramObj = {
          time: time
        };
        var jsonObj = {
          functionName: "vibrate",
          params: paramObj
        };
        var jsonString = JSON.stringify(jsonObj);
        return sdkInterface.SDKCall(jsonString);
      }
    };
    cc._RF.pop();
  }, {} ],
  SdkStorage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7fac2aWgG9GYZhEY+K5Djhd", "SdkStorage");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var local_storage_1 = require("../manager/local_storage");
    var SdkStorage = function() {
      function SdkStorage() {}
      SdkStorage.setLoginToken = function(value) {
        local_storage_1.default.setItem(this.loginType, value);
      };
      SdkStorage.getLoginToken = function(key) {
        return local_storage_1.default.getItem(key);
      };
      SdkStorage.clearLoginToken = function() {
        local_storage_1.default.delete(this.loginType);
      };
      return SdkStorage;
    }();
    exports.default = SdkStorage;
    cc._RF.pop();
  }, {
    "../manager/local_storage": "local_storage"
  } ],
  String: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d26dbt/E95ET7Ymyh8rm0az", "String");
    String.prototype.format = function(args) {
      var result = this;
      for (var i = 0; i < arguments.length; i++) if (void 0 != arguments[i]) {
        var reg = new RegExp("({)" + i + "(})", "g");
        result = result.replace(reg, arguments[i]);
      }
      return result.toString();
    };
    cc._RF.pop();
  }, {} ],
  TLabel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0425e79VPBLRKL77ZZzP2iH", "TLabel");
    "use strict";
    var configLanguageData = require("./ConfigLanguageData");
    function debounce(func, wait, immediate) {
      var timeout;
      return function() {
        var context = this, args = arguments;
        var later = function later() {
          timeout = null;
          immediate || func.apply(context, args);
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        callNow && func.apply(context, args);
      };
    }
    cc.Class({
      extends: cc.Component,
      editor: {
        executeInEditMode: true,
        menu: "UI/TLabel"
      },
      properties: {
        ULabelKey: {
          get: function get() {
            return this._ulabelKey;
          },
          set: function set(val) {
            var ulabel = this.getComponent("ULabel");
            ulabel && (ulabel.i18nKey = this._ulabelKey);
            if (this._ulabelKey !== val) {
              this._ulabelKey = val;
              ulabel && false;
            }
          }
        },
        _ulabelKey: ""
      },
      onLoad: function onLoad() {
        var ulabel;
        false;
        configLanguageData.inst || configLanguageData.init();
        this.fetchRender();
      },
      fetchRender: function fetchRender() {
        var label = this.getComponent(cc.Label);
        var ulabel = this.getComponent("ULabel");
        ulabel && (ulabel.i18nKey = this._ulabelKey);
        if (label && ulabel) {
          this.label = label;
          this.updateULabel();
          return;
        }
      },
      updateULabel: function updateULabel() {
        var ulabel = this.getComponent("ULabel");
        ulabel && (ulabel.i18nKey = this._ulabelKey);
        this.label || (this.label = this.getComponent(cc.Label));
        if (!this.label) {
          cc.error("Failed to update localized label, label component is invalid!");
          return;
        }
        if (!ulabel) {
          cc.error("Failed to update localized ULabel, ULabel component is invalid!");
          return;
        }
        var localizedString = configLanguageData.parse(ulabel.i18nKey);
        localizedString && (this.label.string = configLanguageData.parse(ulabel.i18nKey));
      }
    });
    cc._RF.pop();
  }, {
    "./ConfigLanguageData": "ConfigLanguageData"
  } ],
  ToggleObjectContral: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "82cf7Xly8dI4bdntr5gAxCB", "ToggleObjectContral");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ToggleObjectContral = function(_super) {
      __extends(ToggleObjectContral, _super);
      function ToggleObjectContral() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.activeTab = [];
        _this.deActiveTab = [];
        _this._toggle = null;
        return _this;
      }
      ToggleObjectContral.prototype.onLoad = function() {
        null == this._toggle && (this._toggle = this.getComponent(cc.Toggle));
        this._toggle.node.on("toggle", function(event) {
          var toggle = event;
          for (var i = 0; i < this.activeTab.length; i++) this.activeTab[i].active = toggle.isChecked;
          for (var i = 0; i < this.deActiveTab.length; i++) this.deActiveTab[i].active = !toggle.isChecked;
        }, this);
      };
      ToggleObjectContral.prototype.start = function() {};
      __decorate([ property([ cc.Node ]) ], ToggleObjectContral.prototype, "activeTab", void 0);
      __decorate([ property([ cc.Node ]) ], ToggleObjectContral.prototype, "deActiveTab", void 0);
      __decorate([ property(cc.Toggle) ], ToggleObjectContral.prototype, "_toggle", void 0);
      ToggleObjectContral = __decorate([ ccclass ], ToggleObjectContral);
      return ToggleObjectContral;
    }(cc.Component);
    exports.default = ToggleObjectContral;
    cc._RF.pop();
  }, {} ],
  UButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "01cc5nTAA1E3bS4424pvL3J", "UButton");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../framework/core/mvvm/view_base");
    var debug_1 = require("../manager/debug");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, property = _a.property, executeInEditMode = _a.executeInEditMode, inspector = _a.inspector;
    var UButton = function(_super) {
      __extends(UButton, _super);
      function UButton() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.viewBase = null;
        return _this;
      }
      UButton.prototype.onEnable = function() {
        var _this = this;
        if (!this._init) {
          this._init = true;
          this.viewBase && this.viewBase.cacheComponent(this.node.name, this);
          this.node.on("click", function() {
            var targetComponent;
            false;
            _this.viewBase.buttonClick(_this.node, "");
          }, this);
        }
      };
      UButton.prototype.onChangeLanguage = function() {};
      UButton.prototype.onFocusInEditor = function() {
        this.resetInEditor();
      };
      UButton.prototype.resetInEditor = function() {
        var targetComponent = this.getComponent(cc.Button);
        targetComponent.zoomScale > 1.01 && (targetComponent.zoomScale = .92);
        if (null == this.viewBase) {
          var parent = this.node;
          while (null != parent) {
            this.viewBase = parent.getComponent(view_base_1.default);
            if (null != this.viewBase) break;
            parent = parent.parent;
          }
        }
      };
      __decorate([ property(view_base_1.default) ], UButton.prototype, "viewBase", void 0);
      UButton = __decorate([ ccclass, menu("UI/UButton") ], UButton);
      return UButton;
    }(cc.Component);
    exports.default = UButton;
    cc._RF.pop();
  }, {
    "../framework/core/mvvm/view_base": "view_base",
    "../manager/debug": "debug"
  } ],
  ULabel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6b325DQJvVPo4dXNsYj36mB", "ULabel");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../framework/core/mvvm/view_base");
    var language_manager_1 = require("../manager/language_manager");
    var ConfigLanguageData = require("../lib/ConfigLanguageData");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, property = _a.property, executeInEditMode = _a.executeInEditMode, inspector = _a.inspector;
    var ULabel = function(_super) {
      __extends(ULabel, _super);
      function ULabel() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.viewBase = null;
        _this.i18nKey = "";
        return _this;
      }
      ULabel.prototype.onChangeLanguage = function() {
        this.targetComponent.string = language_manager_1.default.t(this.i18nKey);
      };
      ULabel.prototype.onEnable = function() {
        if (!this._init) {
          this._init = true;
          this.targetComponent = this.getComponent(cc.Label);
          this.viewBase && this.viewBase.cacheComponent(this.node.name, this);
        }
      };
      ULabel.prototype.resetInEditor = function() {
        if (null == this.viewBase) {
          var parent = this.node.parent;
          while (null != parent) {
            this.viewBase = parent.getComponent(view_base_1.default);
            if (null != this.viewBase) break;
            parent = parent.parent;
          }
        }
      };
      ULabel.prototype.updateLabel = function() {
        if (!this.targetComponent) {
          cc.error("Failed to update Ulabel, label component is invalid!");
          return;
        }
        var localizedString = ConfigLanguageData.parse(this.i18nKey);
        localizedString && (this.targetComponent.string = ConfigLanguageData.parse(this.i18nKey));
      };
      __decorate([ property(view_base_1.default) ], ULabel.prototype, "viewBase", void 0);
      __decorate([ property() ], ULabel.prototype, "i18nKey", void 0);
      ULabel = __decorate([ ccclass, menu("UI/ULabel"), executeInEditMode ], ULabel);
      return ULabel;
    }(cc.Component);
    exports.default = ULabel;
    cc._RF.pop();
  }, {
    "../framework/core/mvvm/view_base": "view_base",
    "../lib/ConfigLanguageData": "ConfigLanguageData",
    "../manager/language_manager": "language_manager"
  } ],
  USprite: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "dc184b8AfVOvJf3tjVZ4Vme", "USprite");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../framework/core/mvvm/view_base");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, property = _a.property, executeInEditMode = _a.executeInEditMode, inspector = _a.inspector;
    var USprite = function(_super) {
      __extends(USprite, _super);
      function USprite() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.viewBase = null;
        _this.i18nKey = "";
        return _this;
      }
      USprite.prototype.changeLanguage = function() {};
      USprite.prototype.onEnable = function() {
        if (!this._init) {
          this._init = true;
          this.targetComponent = this.getComponent(cc.Sprite);
          this.viewBase && this.viewBase.cacheComponent(this.node.name, this);
        }
      };
      USprite.prototype.resetInEditor = function() {
        if (null == this.viewBase) {
          var parent = this.node.parent;
          while (null != parent) {
            this.viewBase = parent.getComponent(view_base_1.default);
            if (null != this.viewBase) break;
            parent = parent.parent;
          }
        }
      };
      __decorate([ property(view_base_1.default) ], USprite.prototype, "viewBase", void 0);
      __decorate([ property() ], USprite.prototype, "i18nKey", void 0);
      USprite = __decorate([ ccclass, menu("UI/USprite"), executeInEditMode ], USprite);
      return USprite;
    }(cc.Component);
    exports.default = USprite;
    cc._RF.pop();
  }, {
    "../framework/core/mvvm/view_base": "view_base"
  } ],
  activityTabItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f76d4nYQglP7pgcEncAESVb", "activityTabItem");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ActivityTabItem = function(_super) {
      __extends(ActivityTabItem, _super);
      function ActivityTabItem() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      ActivityTabItem.prototype.Init = function(id, type) {
        this.m_showId = id;
        this.m_showType = type;
      };
      ActivityTabItem = __decorate([ ccclass ], ActivityTabItem);
      return ActivityTabItem;
    }(cc.Component);
    exports.default = ActivityTabItem;
    cc._RF.pop();
  }, {} ],
  activity_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7f4640JKkRNF6QctltfJFro", "activity_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../framework/core/mvvm/view_base");
    var Utility_1 = require("../../utility/Utility");
    var module_manager_1 = require("../../framework/core/module_manager");
    var activityTabItem_1 = require("./activityTabItem");
    var game_util_1 = require("../../utility/game_util");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ActivityView = function(_super) {
      __extends(ActivityView, _super);
      function ActivityView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.tabScrollContent = null;
        _this.tabItemPrefab = null;
        _this.bbsLabel = null;
        _this.bbsNode = null;
        _this.goBtn = null;
        _this.goBtnLabel = null;
        _this.image = null;
        _this.closeBtnNode = null;
        _this._taskDatas = null;
        return _this;
      }
      ActivityView.prototype.showPanel = function(taskDatas, tag) {
        this._taskDatas = taskDatas;
        if (!this._taskDatas || 0 == this._taskDatas.length) return;
        this.initTabPanel();
        this.initContentPanel(this.getDefaultShowId());
      };
      ActivityView.prototype.onCloseView = function() {
        Utility_1.default.instance.playButtonSound();
        module_manager_1.default.instance.hideModule("Activity");
      };
      ActivityView.prototype.getDefaultShowId = function() {
        return this._taskDatas[0].showId;
      };
      ActivityView.prototype.initTabPanel = function() {
        this.createTabNodes();
        this.addTabNodeClickEvent();
        this.initTabState(this.getDefaultShowId());
      };
      ActivityView.prototype.initTabState = function(name) {
        var length = this.tabScrollContent.childrenCount;
        for (var i = 0; i < length; i++) {
          var child = this.tabScrollContent.children[i];
          var choose = child.getChildByName("Choose");
          choose.active = child.name == name;
          var outLine = child.getChildByName("Label").getComponent(cc.LabelOutline);
          outLine.enabled = child.name == name;
          child.name == name ? child.getChildByName("Label").color = cc.color().fromHEX("#FFFFF1") : child.getChildByName("Label").color = cc.color().fromHEX("#38759F");
          this.showRedState(child);
        }
      };
      ActivityView.prototype.showRedState = function(child) {};
      ActivityView.prototype.addTabNodeClickEvent = function() {
        var that = this;
        var length = this.tabScrollContent.childrenCount;
        for (var i = 0; i < length; i++) {
          that.tabScrollContent.children[i].off("click", this.onClickTab, that);
          that.tabScrollContent.children[i].on("click", this.onClickTab, that);
        }
      };
      ActivityView.prototype.onClickTab = function(event) {
        Utility_1.default.instance.playButtonSound();
        var node = event.node;
        var showId = Number(node.name);
      };
      ActivityView.prototype.createTabNodes = function() {
        var datas = this._taskDatas;
        var length = datas.length;
        for (var i = 0; i < length; i++) {
          var showId = datas[i].showId;
          var taskItem = this.getTabNode(i, showId);
          this.setTabItemData(taskItem, datas[i]);
        }
        if (this.tabScrollContent.childrenCount > length) for (var i = length; i < this.tabScrollContent.childrenCount; i++) this.tabScrollContent.children[i].active = false;
      };
      ActivityView.prototype.getTabNode = function(index, showId) {
        if (this.tabScrollContent.childrenCount <= index) {
          var node = cc.instantiate(this.tabItemPrefab);
          node.position = cc.v2(0, 0);
          node.scale = 1;
          node.parent = this.tabScrollContent;
          node.active = false;
          node.name = showId + "";
          return this.getTabNode(index, showId);
        }
        var node_1 = this.tabScrollContent.children[index];
        node_1.name = showId + "";
        return node_1;
      };
      ActivityView.prototype.setTabItemData = function(itemNode, data) {
        var info = data.showTitle;
        var node = cc.find("Label", itemNode);
        var descLabel = node.getComponent(cc.Label);
        var activityTabItem = itemNode.getComponent(activityTabItem_1.default);
        activityTabItem.Init(data.showId, data.showType);
        descLabel.string = info;
        itemNode.active = true;
      };
      ActivityView.prototype.initContentPanel = function(showId) {
        this.initTabState("" + showId);
        var data = this._taskDatas.find(function(d) {
          return d.showId == showId;
        });
        var showType = data.showType;
        this.initJump(data);
        if (1 == showType) {
          this.bbsLabel.node.active = false;
          this.bbsNode.active = false;
          this.image.node.active = true;
          this.startDownLoadHeadIcon(this.image, data.imgUrl);
          this.goBtnLabel.string = data.jumpText;
          return;
        }
        if (2 == showType) {
          this.bbsLabel.node.active = true;
          this.bbsNode.active = true;
          this.image.node.active = false;
          this.bbsLabel.string = data.remark;
          return;
        }
        if (3 == showType) {
          this.bbsLabel.node.active = false;
          this.bbsNode.active = false;
          this.image.node.active = true;
          this.startDownLoadHeadIcon(this.image, data.imgUrl);
          this.goBtnLabel.string = data.jumpText;
          return;
        }
      };
      ActivityView.prototype.initJump = function(data) {
        if (data.jumpUrl && "" != data.jumpUrl) {
          this.goBtn.node.name = data.showId + "";
          this.goBtn.node.active = true;
          this.goBtn.node.off("click", this.ClickJumpUrl, this);
          this.goBtn.node.on("click", this.ClickJumpUrl, this);
        } else this.goBtn.node.active = false;
      };
      ActivityView.prototype.ClickJumpUrl = function(event) {
        Utility_1.default.instance.playButtonSound();
        var node = event.node;
        var showId = Number(node.name);
        var data = this._taskDatas.find(function(d) {
          return d.showId == showId;
        });
        this.onCloseView();
        var jumpUrl = data.jumpUrl;
        this.jumpView(jumpUrl);
      };
      ActivityView.prototype.startDownLoadHeadIcon = function(icon, url, maxWH, realScale) {
        game_util_1.default.loadTexture(url, function(err, texture) {
          if (!icon.isValid || null == texture) return;
          var frame = new cc.SpriteFrame(texture);
          icon.spriteFrame = frame;
          if (maxWH) {
            var v2 = frame.getOriginalSize();
            var max = Math.max(v2.width, v2.height);
            var scale = 1;
            max > maxWH && (scale = maxWH / max);
            icon.node.setContentSize(v2.width * scale, v2.height * scale);
          } else if (realScale) {
            var v2 = frame.getOriginalSize();
            icon.node.setContentSize(v2.width * realScale, v2.height * realScale);
          }
        });
      };
      ActivityView.prototype.jumpView = function(type) {
        "shoping" == type ? module_manager_1.default.instance.showModuleName("ShopModule") : "gold" == type ? module_manager_1.default.instance.showModuleName("GoldEntranceModule") : "match" == type ? module_manager_1.default.instance.showModuleName("Match") : "friend_room" == type ? module_manager_1.default.instance.showModuleName("CreatRoom") : "realNameAuth" == type || "share" == type || "http://match_1.com" == type || "http://match_2.com" == type;
      };
      __decorate([ property(cc.Node) ], ActivityView.prototype, "tabScrollContent", void 0);
      __decorate([ property(cc.Node) ], ActivityView.prototype, "tabItemPrefab", void 0);
      __decorate([ property(cc.Label) ], ActivityView.prototype, "bbsLabel", void 0);
      __decorate([ property(cc.Node) ], ActivityView.prototype, "bbsNode", void 0);
      __decorate([ property(cc.Button) ], ActivityView.prototype, "goBtn", void 0);
      __decorate([ property(cc.Label) ], ActivityView.prototype, "goBtnLabel", void 0);
      __decorate([ property(cc.Sprite) ], ActivityView.prototype, "image", void 0);
      __decorate([ property(cc.Node) ], ActivityView.prototype, "closeBtnNode", void 0);
      ActivityView = __decorate([ ccclass ], ActivityView);
      return ActivityView;
    }(view_base_1.default);
    exports.default = ActivityView;
    cc._RF.pop();
  }, {
    "../../framework/core/module_manager": "module_manager",
    "../../framework/core/mvvm/view_base": "view_base",
    "../../utility/Utility": "utility",
    "../../utility/game_util": "game_util",
    "./activityTabItem": "activityTabItem"
  } ],
  activity: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "78330fbDpBIMb/SMCBKw+gl", "activity");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../framework/core/mvvm/module_base");
    var activity_view_1 = require("./activity_view");
    var Utility_1 = require("../../utility/Utility");
    var auto_dialog_manager_1 = require("../../manager/auto_dialog_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var Activity = function(_super) {
      __extends(Activity, _super);
      function Activity() {
        var _this = _super.call(this) || this;
        _this._taskDatas = null;
        _this._isTips = false;
        _this._data = null;
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/activity/activity";
        _this.viewType = activity_view_1.default;
        _this.modelType = null;
        _this.needAnim = true;
        _this.needViewMask = true;
        return _this;
      }
      Activity.prototype.onInit = function() {
        this.view.closeBtnNode.on("click", this.onCloseBtnClick, this);
      };
      Activity.prototype.onShow = function(data) {
        var self = this;
        this._data = data;
      };
      Activity.prototype.onCloseBtnClick = function() {
        Utility_1.default.instance.playButtonSound();
        this.hide();
        this._data && this._data.auto && auto_dialog_manager_1.AutoDialogManager.openPriorityDialog();
      };
      Activity.prototype.getDataCallback = function(datas) {
        var self = this;
        datas && datas.length > 0 && this.view.showPanel(datas, 2);
      };
      Activity.prototype.getTaskData = function(userCallback) {};
      Activity = __decorate([ ccclass, module_base_1.moduleInit("Activity") ], Activity);
      return Activity;
    }(module_base_1.default);
    exports.default = Activity;
    cc._RF.pop();
  }, {
    "../../framework/core/mvvm/module_base": "module_base",
    "../../manager/auto_dialog_manager": "auto_dialog_manager",
    "../../utility/Utility": "utility",
    "./activity_view": "activity_view"
  } ],
  aes: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9d22fIBAuhOe7vQJIGyIBog", "aes");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var AES = function() {
      function AES() {}
      AES.encrypt = function(key, word) {};
      AES.decrypt = function(key, word) {};
      AES.key = "JDh3d2z8MO0Ps";
      return AES;
    }();
    exports.default = AES;
    cc._RF.pop();
  }, {} ],
  app_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "df8feY7SXJKspJnkFeg+bDY", "app_data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var game_manager_1 = require("../../../manager/game_manager");
    var AppData = function() {
      function AppData() {}
      AppData.setServerByData = function() {
        if (AppData.isTest) {
          AppData.ip = "127.0.0.1";
          AppData.port = 8686;
        } else {
          AppData.ip = "47.99.50.101";
          AppData.port = 8686;
        }
        game_manager_1.GameManager.loginServer = "ws://" + AppData.ip + ":" + AppData.port;
      };
      AppData.appVersion = "1.0.19";
      AppData.appName = "TM";
      AppData.gameid = 15;
      AppData.apiGameName = "TM_LHD";
      AppData.ip = "api.slddz.sincebest.com";
      AppData.proxyHost = "http://test.api.h5international.sincebest.com:8080/proxy?url=";
      AppData.isIphoneX = false;
      AppData.iphonexOffset = 50;
      AppData.isTest = false;
      return AppData;
    }();
    exports.default = AppData;
    cc._RF.pop();
  }, {
    "../../../manager/game_manager": "game_manager"
  } ],
  audio_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5da939ViqRDsLKyBpaSrM8B", "audio_manager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var local_storage_1 = require("./local_storage");
    var debug_1 = require("../manager/debug");
    var game_util_1 = require("../utility/game_util");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var AudioManager = function(_super) {
      __extends(AudioManager, _super);
      function AudioManager() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.audioSource = null;
        _this._audioPool = [];
        _this._musicOpen = "music_volume";
        _this._soundOpen = "sound_volume";
        _this._vibrateOpen = "vibrate";
        _this._musicVolume = "music_volume_number";
        _this._soundVolume = "sound_volume_number";
        _this._musicId = -1;
        _this._lastMusicId = -1;
        _this._soundUrls = [];
        _this._curMusicIndex = 0;
        _this._isLoadingMusic = false;
        _this.soundCtxPool = [];
        _this.maxSoundNum = 8;
        _this._index = 0;
        _this._musicUrl = "";
        return _this;
      }
      AudioManager_1 = AudioManager;
      AudioManager.prototype.onLoad = function() {
        this._audioPool = [];
        this._soundUrls = [];
        this._musicId = -1;
        this._lastMusicId = -1;
        this._isLoadingMusic = false;
        var self = this;
        var musicLocalVo = Number(local_storage_1.default.getNumber(this._musicVolume, 1));
        cc.audioEngine.setMusicVolume(musicLocalVo);
        var soundLocalVo = Number(local_storage_1.default.getNumber(this._soundVolume, 1));
        cc.audioEngine.setEffectsVolume(soundLocalVo);
      };
      AudioManager.prototype.getAudio = function(key, success) {
        game_util_1.default.loadRes(key, function(err, clip) {
          if (err) {
            cc.warn(err);
            return;
          }
          clip && success(clip);
        });
      };
      AudioManager.prototype.playMusicLoop = function() {
        this.playHallBgMusic();
      };
      AudioManager.prototype.playHallBgMusic = function(resume) {
        if (1 == this._curMusicIndex && !resume) return;
        var url = "sound/bgm/bg_zhujiem";
        this._curMusicIndex = 1;
        this.playMusic(url, true);
      };
      AudioManager.prototype.playFightMusic = function(resume) {
        if (2 == this._curMusicIndex && !resume) return;
        var url = "sound/bgm/bg_zhandou1";
        this._curMusicIndex = 2;
        this.playMusic(url, true);
      };
      AudioManager.prototype.playFightMusic2 = function(resume) {
        if (3 == this._curMusicIndex && !resume) return;
        var url = "sound/bgm/bg_zhandou2";
        this._curMusicIndex = 3;
        this.playMusic(url, true);
      };
      AudioManager.prototype.playMusic = function(url, loop, resetSame) {
        void 0 === loop && (loop = true);
        void 0 === resetSame && (resetSame = false);
        if (this._musicUrl == url && !resetSame) return;
        this._musicUrl = url;
        this._curMusicIndex = -1;
        var self = this;
        this.getAudio(url, function(clip) {
          cc.audioEngine.stopMusic();
          self._musicId = cc.audioEngine.playMusic(clip, true);
          debug_1.default.log("\u64ad\u653e\u97f3\u4e50\uff1a", url);
        });
      };
      AudioManager.prototype.pauseMusic = function() {
        cc.audioEngine.pauseMusic();
      };
      AudioManager.prototype.stopAllMusic = function() {
        cc.audioEngine.stopAll();
      };
      AudioManager.prototype.isMusicOpen = function() {
        return 0 == local_storage_1.default.getNumber(this._musicOpen, 0);
      };
      AudioManager.prototype.setMusicOpen = function(isOpen) {
        void 0 === isOpen && (isOpen = true);
        local_storage_1.default.setNumber(this._musicOpen, isOpen ? 0 : 1);
      };
      AudioManager.prototype.setMusicVolume = function(volume) {
        volume = Math.max(0, volume);
        volume = Math.min(1, volume);
        cc.audioEngine.setMusicVolume(volume);
        local_storage_1.default.setNumber(this._musicVolume, volume);
      };
      AudioManager.prototype.isSoundOpen = function() {
        return 0 == local_storage_1.default.getNumber(this._soundOpen, 0);
      };
      AudioManager.prototype.isNeedPlaySound = function() {
        return this.isSoundOpen() && cc.audioEngine.getEffectsVolume() > 0;
      };
      AudioManager.prototype.setSoundOpen = function(isOpen) {
        void 0 === isOpen && (isOpen = true);
        local_storage_1.default.setNumber(this._soundOpen, isOpen ? 0 : 1);
      };
      AudioManager.prototype.setSoundVolume = function(volume) {
        volume = Math.max(0, volume);
        volume = Math.min(1, volume);
        cc.audioEngine.setEffectsVolume(volume);
        local_storage_1.default.setNumber(this._soundVolume, volume);
      };
      AudioManager.prototype.isVibrateOpen = function() {
        return 0 == local_storage_1.default.getNumber(this._vibrateOpen, 0);
      };
      AudioManager.prototype.setVibrateOpen = function(isOpen) {
        void 0 === isOpen && (isOpen = true);
        local_storage_1.default.setNumber(this._vibrateOpen, isOpen ? 0 : 1);
      };
      AudioManager.prototype.resumeMusic = function() {
        var state = cc.audioEngine.getState(this._musicId);
        debug_1.default.log(this._musicId, state, this.isMusicOpen());
        if (Number(state) >= 0) cc.audioEngine.resumeMusic(); else {
          cc.audioEngine.stop(this._musicId);
          0 == this._curMusicIndex && (this._curMusicIndex = 1);
          this.startMusic();
        }
      };
      AudioManager.prototype.startMusic = function() {
        1 == this._curMusicIndex ? this.playHallBgMusic(true) : 2 == this._curMusicIndex ? this.playFightMusic(true) : 3 == this._curMusicIndex && this.playFightMusic2(true);
      };
      AudioManager.prototype.playSound = function(url, loop, onFinish) {
        void 0 === loop && (loop = false);
        this.isNeedPlaySound() && this.getAudio(url, function(clip) {
          var id = cc.audioEngine.playEffect(clip, false);
          onFinish && cc.audioEngine.setFinishCallback(id, onFinish);
        });
      };
      AudioManager.prototype.release = function() {
        this.stopAllSound();
      };
      AudioManager.prototype.vibrate = function() {
        this.isVibrateOpen();
      };
      AudioManager.prototype.onDestroy = function() {
        this.unscheduleAllCallbacks();
      };
      AudioManager.prototype.stopAllSound = function() {
        this.soundCtxPool.forEach(function(soundCtx) {
          soundCtx.paused || soundCtx.stop();
        });
      };
      var AudioManager_1;
      AudioManager.instance = new AudioManager_1();
      __decorate([ property(cc.AudioSource) ], AudioManager.prototype, "audioSource", void 0);
      AudioManager = AudioManager_1 = __decorate([ ccclass ], AudioManager);
      return AudioManager;
    }(cc.Component);
    exports.default = AudioManager;
    cc._RF.pop();
  }, {
    "../manager/debug": "debug",
    "../utility/game_util": "game_util",
    "./local_storage": "local_storage"
  } ],
  auth_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "81d51fgQHdGaLonHtGxbdPp", "auth_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var auth_view_1 = require("./auth_view");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var Utility_1 = require("../../../../utility/Utility");
    var local_storage_1 = require("../../../../manager/local_storage");
    var audio_manager_1 = require("../../../../manager/audio_manager");
    var language_manager_1 = require("../../../../manager/language_manager");
    var login_server_1 = require("../../../server/loginserver/login_server");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var AuthModule = function(_super) {
      __extends(AuthModule, _super);
      function AuthModule() {
        var _this = _super.call(this) || this;
        _this._startBtn = null;
        _this._assets = null;
        _this._loadCount = 0;
        _this._httpRequestCount = 0;
        _this.windowPrefabResPath = "package/hall/module/auth/AuthModule";
        _this.viewType = auth_view_1.default;
        _this.modelType = null;
        return _this;
      }
      AuthModule_1 = AuthModule;
      AuthModule.prototype.onInit = function() {
        audio_manager_1.default.instance.playMusicLoop();
        null != local_storage_1.default.getNumber("loginUserID") && "null" != local_storage_1.default.getNumber("loginUserID") ? this.view.editBoxAccount.string = local_storage_1.default.getNumber("loginUserID") : this.view.editBoxAccount.string = (Math.floor(900 * Math.random()) + 100).toString();
      };
      AuthModule.prototype.changeLanguage = function() {
        language_manager_1.default.change();
        module_manager_1.default.instance.destroyAllModule();
        module_manager_1.default.instance.showModule(AuthModule_1);
      };
      AuthModule.prototype.test = function() {};
      AuthModule.prototype.onLoginBtnClick = function() {
        var account = parseInt(this.view.editBoxAccount.string);
        if (account) {
          Utility_1.default.instance.playButtonSound();
          module_manager_1.default.instance.showModuleName("NetPrompt", {
            showImmediately: true
          });
          login_server_1.default.instance.accountLogin(this.view.editBoxAccount.string);
          local_storage_1.default.setNumber("loginUserID", account);
        } else module_manager_1.default.instance.toast("\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u6d4b\u8bd5\u8d26\u53f7");
      };
      AuthModule.prototype.onShow = function() {
        this._loadCount = 0;
        this._httpRequestCount = 0;
        module_manager_1.default.instance.preLoadRes();
      };
      var AuthModule_1;
      __decorate([ module_base_1.bindButtonClickEvent("ButtonChangeLanguage") ], AuthModule.prototype, "changeLanguage", null);
      __decorate([ module_base_1.bindButtonClickEvent("ButtonTest") ], AuthModule.prototype, "test", null);
      __decorate([ module_base_1.bindButtonClickEvent("Button_Login") ], AuthModule.prototype, "onLoginBtnClick", null);
      AuthModule = AuthModule_1 = __decorate([ ccclass, menu("package/hall/auth/auth"), module_base_1.moduleInit("AuthModule") ], AuthModule);
      return AuthModule;
    }(module_base_1.default);
    exports.default = AuthModule;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/module_base": "module_base",
    "../../../../manager/audio_manager": "audio_manager",
    "../../../../manager/language_manager": "language_manager",
    "../../../../manager/local_storage": "local_storage",
    "../../../../utility/Utility": "utility",
    "../../../server/loginserver/login_server": "login_server",
    "./auth_view": "auth_view"
  } ],
  auth_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "51d06+UA7tPKp7zIVQPb2pK", "auth_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var AuthView = function(_super) {
      __extends(AuthView, _super);
      function AuthView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.browserLoginNode = null;
        _this.editBoxAccount = null;
        _this.buttonLogin = null;
        return _this;
      }
      AuthView.prototype.onLoad = function() {
        this.browserLoginNode.active = true;
      };
      __decorate([ property(cc.Node) ], AuthView.prototype, "browserLoginNode", void 0);
      __decorate([ property(cc.EditBox) ], AuthView.prototype, "editBoxAccount", void 0);
      __decorate([ property(cc.Node) ], AuthView.prototype, "buttonLogin", void 0);
      AuthView = __decorate([ ccclass, menu("package/hall/auth/authView") ], AuthView);
      return AuthView;
    }(view_base_1.default);
    exports.default = AuthView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/view_base": "view_base"
  } ],
  auto_dialog_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "775a45k1+xA3poq06lQmM8T", "auto_dialog_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("./debug");
    var dialogQueue = [];
    dialogQueue.push("RankingMatchAward");
    dialogQueue.push("Activity");
    dialogQueue.push("DailySign");
    dialogQueue.push("NoobGiftBeforeModule");
    dialogQueue.push("PayForModule");
    dialogQueue.push("BeginnerGuide");
    dialogQueue.push("SpecialQrcode");
    var AutoDialogManager = function() {
      function AutoDialogManager() {}
      AutoDialogManager.openPriorityDialog = function() {
        var length = dialogQueue.length;
        if (0 == length) return;
        var moduleName = dialogQueue[length - 1];
        dialogQueue.pop();
        this.dealModules(moduleName);
      };
      AutoDialogManager.dealModules = function(moduleName) {
        if (!moduleName) return;
        debug_1.default.warn("\u6253\u5f00\u6a21\u5757\uff1a", moduleName);
        moduleName;
      };
      return AutoDialogManager;
    }();
    exports.AutoDialogManager = AutoDialogManager;
    cc._RF.pop();
  }, {
    "./debug": "debug"
  } ],
  base64: [ function(require, module, exports) {
    (function(global) {
      "use strict";
      cc._RF.push(module, "3d2fdxgZzNGCots9cHyO56V", "base64");
      "use strict";
      var _typeof = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
      (function(global, factory) {
        "object" === ("undefined" === typeof exports ? "undefined" : _typeof(exports)) && "undefined" !== typeof module ? module.exports = factory(global) : "function" === typeof define && define.amd ? define(factory) : factory(global);
      })("undefined" !== typeof self ? self : "undefined" !== typeof window ? window : "undefined" !== typeof global ? global : void 0, function(global) {
        global = global || {};
        var _Base64 = global.Base64;
        var version = "2.5.1";
        var buffer;
        if ("undefined" !== typeof module && module.exports) try {
          buffer = eval("require('buffer').Buffer");
        } catch (err) {
          buffer = void 0;
        }
        var b64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var b64tab = function(bin) {
          var t = {};
          for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;
          return t;
        }(b64chars);
        var fromCharCode = String.fromCharCode;
        var cb_utob = function cb_utob(c) {
          if (c.length < 2) {
            var cc = c.charCodeAt(0);
            return cc < 128 ? c : cc < 2048 ? fromCharCode(192 | cc >>> 6) + fromCharCode(128 | 63 & cc) : fromCharCode(224 | cc >>> 12 & 15) + fromCharCode(128 | cc >>> 6 & 63) + fromCharCode(128 | 63 & cc);
          }
          var cc = 65536 + 1024 * (c.charCodeAt(0) - 55296) + (c.charCodeAt(1) - 56320);
          return fromCharCode(240 | cc >>> 18 & 7) + fromCharCode(128 | cc >>> 12 & 63) + fromCharCode(128 | cc >>> 6 & 63) + fromCharCode(128 | 63 & cc);
        };
        var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
        var utob = function utob(u) {
          return u.replace(re_utob, cb_utob);
        };
        var cb_encode = function cb_encode(ccc) {
          var padlen = [ 0, 2, 1 ][ccc.length % 3], ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0), chars = [ b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? "=" : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? "=" : b64chars.charAt(63 & ord) ];
          return chars.join("");
        };
        var btoa = global.btoa ? function(b) {
          return global.btoa(b);
        } : function(b) {
          return b.replace(/[\s\S]{1,3}/g, cb_encode);
        };
        var _encode = function _encode(u) {
          var isUint8Array = "[object Uint8Array]" === Object.prototype.toString.call(u);
          return isUint8Array ? u.toString("base64") : btoa(utob(String(u)));
        };
        var encode = function encode(u, urisafe) {
          return urisafe ? _encode(String(u)).replace(/[+\/]/g, function(m0) {
            return "+" == m0 ? "-" : "_";
          }).replace(/=/g, "") : _encode(u);
        };
        var encodeURI = function encodeURI(u) {
          return encode(u, true);
        };
        var re_btou = new RegExp([ "[\xc0-\xdf][\x80-\xbf]", "[\xe0-\xef][\x80-\xbf]{2}", "[\xf0-\xf7][\x80-\xbf]{3}" ].join("|"), "g");
        var cb_btou = function cb_btou(cccc) {
          switch (cccc.length) {
           case 4:
            var cp = (7 & cccc.charCodeAt(0)) << 18 | (63 & cccc.charCodeAt(1)) << 12 | (63 & cccc.charCodeAt(2)) << 6 | 63 & cccc.charCodeAt(3), offset = cp - 65536;
            return fromCharCode(55296 + (offset >>> 10)) + fromCharCode(56320 + (1023 & offset));

           case 3:
            return fromCharCode((15 & cccc.charCodeAt(0)) << 12 | (63 & cccc.charCodeAt(1)) << 6 | 63 & cccc.charCodeAt(2));

           default:
            return fromCharCode((31 & cccc.charCodeAt(0)) << 6 | 63 & cccc.charCodeAt(1));
          }
        };
        var btou = function btou(b) {
          return b.replace(re_btou, cb_btou);
        };
        var cb_decode = function cb_decode(cccc) {
          var len = cccc.length, padlen = len % 4, n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0), chars = [ fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 255), fromCharCode(255 & n) ];
          chars.length -= [ 0, 0, 2, 1 ][padlen];
          return chars.join("");
        };
        var _atob = global.atob ? function(a) {
          return global.atob(a);
        } : function(a) {
          return a.replace(/\S{1,4}/g, cb_decode);
        };
        var atob = function atob(a) {
          return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g, ""));
        };
        var _decode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function(a) {
          return (a.constructor === buffer.constructor ? a : buffer.from(a, "base64")).toString();
        } : function(a) {
          return (a.constructor === buffer.constructor ? a : new buffer(a, "base64")).toString();
        } : function(a) {
          return btou(_atob(a));
        };
        var decode = function decode(a) {
          return _decode(String(a).replace(/[-_]/g, function(m0) {
            return "-" == m0 ? "+" : "/";
          }).replace(/[^A-Za-z0-9\+\/]/g, ""));
        };
        var noConflict = function noConflict() {
          var Base64 = global.Base64;
          global.Base64 = _Base64;
          return Base64;
        };
        global.Base64 = {
          VERSION: version,
          atob: atob,
          btoa: btoa,
          fromBase64: decode,
          toBase64: encode,
          utob: utob,
          encode: encode,
          encodeURI: encodeURI,
          btou: btou,
          decode: decode,
          noConflict: noConflict,
          __buffer__: buffer
        };
        if ("function" === typeof Object.defineProperty) {
          var noEnum = function noEnum(v) {
            return {
              value: v,
              enumerable: false,
              writable: true,
              configurable: true
            };
          };
          global.Base64.extendString = function() {
            Object.defineProperty(String.prototype, "fromBase64", noEnum(function() {
              return decode(this);
            }));
            Object.defineProperty(String.prototype, "toBase64", noEnum(function(urisafe) {
              return encode(this, urisafe);
            }));
            Object.defineProperty(String.prototype, "toBase64URI", noEnum(function() {
              return encode(this, true);
            }));
          };
        }
        global["Meteor"] && (Base64 = global.Base64);
        "undefined" !== typeof module && module.exports ? module.exports.Base64 = global.Base64 : "function" === typeof define && define.amd && define([], function() {
          return global.Base64;
        });
        return {
          Base64: global.Base64
        };
      });
      cc._RF.pop();
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {} ],
  blur_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c78c1Z6I1VNgKlQ7hJFxyXT", "blur_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var BlurShader = function(_super) {
      __extends(BlurShader, _super);
      function BlurShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Blur";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    uniform float num;\n    varying vec2 uv0;\n    void main () {\n        vec4 sum = vec4(0.0);\n        vec2 size = vec2(num,num);\n        sum += texture2D(texture, uv0 - 0.4 * size) * 0.05;\n        sum += texture2D(texture, uv0 - 0.3 * size) * 0.09;\n        sum += texture2D(texture, uv0 - 0.2 * size) * 0.12;\n        sum += texture2D(texture, uv0 - 0.1 * size) * 0.15;\n        sum += texture2D(texture, uv0             ) * 0.16;\n        sum += texture2D(texture, uv0 + 0.1 * size) * 0.15;\n        sum += texture2D(texture, uv0 + 0.2 * size) * 0.12;\n        sum += texture2D(texture, uv0 + 0.3 * size) * 0.09;\n        sum += texture2D(texture, uv0 + 0.4 * size) * 0.05;\n        \n        vec4 vectemp = vec4(0,0,0,0);\n        vec4 substract = vec4(0,0,0,0);\n        vectemp = (sum - substract) * color;\n    \n        float alpha = texture2D(texture, uv0).a;\n        if(alpha < 0.05) { gl_FragColor = vec4(0 , 0 , 0 , 0); }\n        else { gl_FragColor = vectemp; }\n    }\n    ";
        return _this;
      }
      BlurShader.prototype.setParamValue = function(material) {
        material.setNum(.03);
      };
      BlurShader = __decorate([ ccclass, menu("custom/Shader/Blur") ], BlurShader);
      return BlurShader;
    }(shader_component_1.default);
    exports.default = BlurShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  center_horizont_layout: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7d0c07VCqpI/6Yu4m2iJBmD", "center_horizont_layout");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var app_data_1 = require("../pacakge/public/const/app_data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var CenterHorizontLayout = function(_super) {
      __extends(CenterHorizontLayout, _super);
      function CenterHorizontLayout() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.scrollView = null;
        _this.layout = null;
        _this.cellWidth = 100;
        _this.offsetX = 0;
        _this._scrollWidth = 0;
        return _this;
      }
      CenterHorizontLayout.prototype.setLength = function(length) {
        var widget = this.scrollView.node.getComponent(cc.Widget);
        if (!widget) return;
        app_data_1.default.isIphoneX ? widget.right = 15 + app_data_1.default.iphonexOffset : widget.right = 15;
      };
      __decorate([ property(cc.ScrollView) ], CenterHorizontLayout.prototype, "scrollView", void 0);
      __decorate([ property(cc.Layout) ], CenterHorizontLayout.prototype, "layout", void 0);
      __decorate([ property ], CenterHorizontLayout.prototype, "cellWidth", void 0);
      __decorate([ property ], CenterHorizontLayout.prototype, "offsetX", void 0);
      CenterHorizontLayout = __decorate([ ccclass ], CenterHorizontLayout);
      return CenterHorizontLayout;
    }(cc.Component);
    exports.default = CenterHorizontLayout;
    cc._RF.pop();
  }, {
    "../pacakge/public/const/app_data": "app_data"
  } ],
  chat_action_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7541eMHEyxLsZZqjArt65iU", "chat_action_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var move_item_1 = require("./move_item");
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ChatActionView = function(_super) {
      __extends(ChatActionView, _super);
      function ChatActionView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.caches = null;
        return _this;
      }
      ChatActionView.prototype.moveAction = function(content) {
        for (var _i = 0, _a = this.caches.children; _i < _a.length; _i++) {
          var move_item = _a[_i];
          var move = move_item.getComponent(move_item_1.default);
          move.setContent(content);
          move.beginMove();
        }
      };
      __decorate([ property(cc.Node) ], ChatActionView.prototype, "caches", void 0);
      ChatActionView = __decorate([ ccclass ], ChatActionView);
      return ChatActionView;
    }(view_base_1.default);
    exports.default = ChatActionView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/view_base": "view_base",
    "./move_item": "move_item"
  } ],
  chat_action: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "91a394dGS1K3YAzLjiKX1bw", "chat_action");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var chat_action_view_1 = require("./chat_action_view");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ChatAction = function(_super) {
      __extends(ChatAction, _super);
      function ChatAction() {
        var _this = _super.call(this) || this;
        _this.cd = 6;
        _this.layer = module_base_1.ViewLayer.Mid;
        _this.windowPrefabResPath = "package/public/public_chat_action";
        _this.viewType = chat_action_view_1.default;
        _this.modelType = null;
        _this.needAnim = false;
        return _this;
      }
      ChatAction.prototype.onShow = function(msg) {
        this.view.moveAction(msg.content);
      };
      ChatAction = __decorate([ ccclass, module_base_1.moduleInit("ChatAction") ], ChatAction);
      return ChatAction;
    }(module_base_1.default);
    exports.default = ChatAction;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/module_base": "module_base",
    "./chat_action_view": "chat_action_view"
  } ],
  chat_config: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0314257XdVPv7VOF+1IJZzd", "chat_config");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ChatCfg;
    (function(ChatCfg) {
      ChatCfg.speedChat = [ "\u51fa\u724c\u8fd9\u4e48\u6162\u4f60\u5c5e\u4e4c\u9f9f...", "\u8001\u94c1,\u624e\u5fc3\u4e86\uff01", "\u8fd9\u724c...\u6211\u4e5f\u662f\u9189\u4e86", "\u6765\u554a\uff0c\u4e92\u76f8\u4f24\u5bb3", "\u4eba\u751f\u5982\u620f\uff0c\u5168\u9760\u6f14\u6280", "\u7ea6\u5417\uff1f\u6211\u662f\u8bf4\u7ea6\u724c\u5417\uff1f", "\u4f60\u7684\u724c\u6280\u8ba9\u6211\u5f88\u96be...", "\u5389\u5bb3\u4e86\uff0c\u6211\u7684\u54e5", "\u4f60\u770b\u6211\u60f3\u7406\u4f60\u5417\uff1f" ];
    })(ChatCfg = exports.ChatCfg || (exports.ChatCfg = {}));
    cc._RF.pop();
  }, {} ],
  chat_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cc701z6o/JFsbj1E1v7wG7A", "chat_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../../framework/core/mvvm/model_base");
    var chat_route_1 = require("./chat_route");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ChatModel = function(_super) {
      __extends(ChatModel, _super);
      function ChatModel() {
        return _super.call(this) || this;
      }
      ChatModel.prototype.sendChat = function(targetId, content) {
        this.send(chat_route_1.ChatNetRoute.tableChat, {
          targetId: targetId,
          content: content
        });
      };
      ChatModel = __decorate([ ccclass ], ChatModel);
      return ChatModel;
    }(model_base_1.default);
    exports.ChatModel = ChatModel;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/model_base": "model_base",
    "./chat_route": "chat_route"
  } ],
  chat_route: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "11936yb5UNJtLI+QEVJJva4", "chat_route");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ChatNetRoute = function() {
      function ChatNetRoute() {}
      ChatNetRoute.tableChat = "table.tableHandler.tableChat";
      return ChatNetRoute;
    }();
    exports.ChatNetRoute = ChatNetRoute;
    cc._RF.pop();
  }, {} ],
  chat_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "506aboHlDhNiZqv7lXRKgJI", "chat_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../framework/core/mvvm/view_base");
    var listview_1 = require("../../../framework/tools/scrollview/listview");
    var chat_config_1 = require("./chat_config");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ChatView = function(_super) {
      __extends(ChatView, _super);
      function ChatView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.chatNode = null;
        _this.mask = null;
        _this.itemListScrollView = null;
        _this.itemListView = null;
        _this.nodeItemListConent = null;
        _this.prefab_item = null;
        _this.clickFunc = null;
        return _this;
      }
      ChatView.prototype.onLoad = function() {
        var list = new listview_1.ListView({
          scrollview: this.itemListScrollView,
          view: this.itemListView,
          content: this.nodeItemListConent,
          item_prefab: this.prefab_item,
          cb_host: this,
          item_update_func: this.update_list_item,
          item_click_func: this.on_item_select,
          column: 1,
          row: 1,
          gap_y: 4,
          gap_x: 100,
          direction: listview_1.ListViewDir.Vertical
        });
        this.m_list = list;
        this.m_list.set_data(chat_config_1.ChatCfg.speedChat);
      };
      ChatView.prototype.onInit = function() {
        var self = this;
      };
      ChatView.prototype.on_item_select = function(item) {
        var content = item.getComponent(cc.Label).string;
        if (this.clickFunc) {
          this.clickFunc(content);
          this.doChatMove(false);
        }
      };
      ChatView.prototype.update_list_item = function(itemNode, data, index) {
        var lab = itemNode.getComponent(cc.Label);
        lab.string = data;
      };
      ChatView.prototype.doChatMove = function(isShow) {
        this.chatNode.stopAllActions();
        var x = -103;
        isShow || (x = 103);
        var move = cc.moveTo(.5, cc.v2(x, 0));
        this.chatNode.runAction(move);
      };
      __decorate([ property(cc.Node) ], ChatView.prototype, "chatNode", void 0);
      __decorate([ property(cc.Node) ], ChatView.prototype, "mask", void 0);
      __decorate([ property(cc.ScrollView) ], ChatView.prototype, "itemListScrollView", void 0);
      __decorate([ property(cc.Node) ], ChatView.prototype, "itemListView", void 0);
      __decorate([ property(cc.Node) ], ChatView.prototype, "nodeItemListConent", void 0);
      __decorate([ property(cc.Node) ], ChatView.prototype, "prefab_item", void 0);
      ChatView = __decorate([ ccclass ], ChatView);
      return ChatView;
    }(view_base_1.default);
    exports.default = ChatView;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/view_base": "view_base",
    "../../../framework/tools/scrollview/listview": "listview",
    "./chat_config": "chat_config"
  } ],
  chat: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "efbf2Na5GhGboK3GxTbAFbc", "chat");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../framework/core/mvvm/module_base");
    var chat_view_1 = require("./chat_view");
    var game_server_1 = require("../../server/gameserver/game_server");
    var chat_model_1 = require("./chat_model");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var Chat = function(_super) {
      __extends(Chat, _super);
      function Chat() {
        var _this = _super.call(this) || this;
        _this.layer = module_base_1.ViewLayer.Mid;
        _this.windowPrefabResPath = "package/public/public_chat";
        _this.viewType = chat_view_1.default;
        _this.modelType = chat_model_1.ChatModel;
        _this.needAnim = false;
        return _this;
      }
      Chat.prototype.onInit = function() {
        this.view.clickFunc = this.clickChatLab.bind(this);
      };
      Chat.prototype.onShow = function(id) {
        this.targetid = id;
        this.model.netClient = game_server_1.default.instance.netClient;
        this.view.doChatMove(true);
      };
      Chat.prototype.clickChatLab = function(content) {
        this.model.sendChat(this.targetid, content);
      };
      Chat = __decorate([ ccclass, module_base_1.moduleInit("Chat") ], Chat);
      return Chat;
    }(module_base_1.default);
    exports.default = Chat;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/module_base": "module_base",
    "../../server/gameserver/game_server": "game_server",
    "./chat_model": "chat_model",
    "./chat_view": "chat_view"
  } ],
  clubList_item: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f3195ZuUkVPE7DT5MihE3j/", "clubList_item");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var texture_manager_1 = require("../../../manager/texture_manager");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var club_module_1 = require("../../club/club_module");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubListItem = function(_super) {
      __extends(ClubListItem, _super);
      function ClubListItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.Sprite_flag = null;
        _this.Sprite_head = null;
        _this.Label_clubName = null;
        _this.Button_enterClub = null;
        _this.Label_offer = null;
        _this.Label_invate = null;
        _this.Label_totalCount = null;
        _this.Label_onlineCount = null;
        _this.clubListData = null;
        return _this;
      }
      ClubListItem.prototype.onLoad = function() {
        this.Button_enterClub.on("click", this.enterClub, this);
      };
      ClubListItem.prototype.enterClub = function() {
        var clubId = this.clubListData.clubId;
        module_manager_1.default.instance.showModule(club_module_1.ClubModule, clubId);
      };
      ClubListItem.prototype.initUI = function(data) {
        var _this = this;
        this.clubListData = data;
        var myMemInfo = data.myMemInfo;
        if (0 == myMemInfo.lastId) {
          texture_manager_1.default.instance.getLocalSprite("offer_1", function(spriteFrame) {
            _this.Sprite_flag.spriteFrame = spriteFrame;
          });
          this.Label_offer.string = "\u76df\u4e3b";
        } else if (0 != myMemInfo.invateCode) {
          texture_manager_1.default.instance.getLocalSprite("offer_2", function(spriteFrame) {
            _this.Sprite_flag.spriteFrame = spriteFrame;
          });
          this.Label_offer.string = "\u5408\u4f19\u4eba";
        } else {
          this.Sprite_flag.node.active = false;
          this.Label_offer.string = "\u6210\u5458";
        }
        texture_manager_1.default.instance.getSprite(data.leaderUrl, function(sp) {
          _this.Sprite_head.spriteFrame = sp;
        });
        0 == myMemInfo.invateCode ? this.Label_invate.string = "\u65e0" : this.Label_invate.string = myMemInfo.invateCode;
        this.Label_clubName.string = data.clubName;
        this.Label_totalCount.string = data.totalPlayerNum;
        this.Label_onlineCount.string = data.onlinePlayerNum;
      };
      __decorate([ property(cc.Sprite) ], ClubListItem.prototype, "Sprite_flag", void 0);
      __decorate([ property(cc.Sprite) ], ClubListItem.prototype, "Sprite_head", void 0);
      __decorate([ property(cc.Label) ], ClubListItem.prototype, "Label_clubName", void 0);
      __decorate([ property(cc.Node) ], ClubListItem.prototype, "Button_enterClub", void 0);
      __decorate([ property(cc.Label) ], ClubListItem.prototype, "Label_offer", void 0);
      __decorate([ property(cc.Label) ], ClubListItem.prototype, "Label_invate", void 0);
      __decorate([ property(cc.Label) ], ClubListItem.prototype, "Label_totalCount", void 0);
      __decorate([ property(cc.Label) ], ClubListItem.prototype, "Label_onlineCount", void 0);
      ClubListItem = __decorate([ ccclass ], ClubListItem);
      return ClubListItem;
    }(cc.Component);
    exports.ClubListItem = ClubListItem;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../manager/texture_manager": "texture_manager",
    "../../club/club_module": "club_module"
  } ],
  clubMemList_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c2797RFHDtMko/eBlUC3YTa", "clubMemList_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../../framework/core/mvvm/model_base");
    var net_clubRoute_1 = require("../net_clubRoute");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubMemListModel = function(_super) {
      __extends(ClubMemListModel, _super);
      function ClubMemListModel() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.curPageNum = 0;
        _this.totalPageNum = 0;
        _this.pageCeilNum = 25;
        _this.clubId = 0;
        return _this;
      }
      ClubMemListModel.prototype.send_getClubMember = function(clubId, pageIdx, pageNum, isOutPartner) {
        var data = {
          clubId: clubId,
          pageIdx: pageIdx,
          pageNum: pageNum,
          isOutPartner: isOutPartner
        };
        this.send(net_clubRoute_1.ClubRoute.getClubMember, data);
      };
      ClubMemListModel = __decorate([ ccclass ], ClubMemListModel);
      return ClubMemListModel;
    }(model_base_1.default);
    exports.ClubMemListModel = ClubMemListModel;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/model_base": "model_base",
    "../net_clubRoute": "net_clubRoute"
  } ],
  clubMemList_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3d2b6FJZaJB0b/5JOmR1PCk", "clubMemList_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var clubMemList_view_1 = require("./clubMemList_view");
    var module_base_1 = require("../../../framework/core/mvvm/module_base");
    var clubMemList_model_1 = require("./clubMemList_model");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var toast_1 = require("../../public/module/toast/toast");
    var hall_server_1 = require("../../server/hallserver/hall_server");
    var net_clubRoute_1 = require("../net_clubRoute");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubMemListModule = function(_super) {
      __extends(ClubMemListModule, _super);
      function ClubMemListModule() {
        var _this = _super.call(this) || this;
        _this.windowPrefabResPath = "package/club/clubMemList";
        _this.viewType = clubMemList_view_1.default;
        _this.modelType = clubMemList_model_1.ClubMemListModel;
        _this.needAnim = true;
        _this.clickAnywhereClose = false;
        _this.needViewMask = true;
        return _this;
      }
      ClubMemListModule.prototype.onLoad = function() {};
      ClubMemListModule.prototype.onShow = function(clubInfo) {
        this.model.netClient = hall_server_1.default.instance.netClient;
        this.model.clearMsgEvent();
        this.registerMsg();
        this.model.clubId = clubInfo.clubId;
        this.model.curPageNum = 1;
        this.model.send_getClubMember(this.model.clubId, this.model.curPageNum, this.model.pageCeilNum, false);
      };
      ClubMemListModule.prototype.registerMsg = function() {
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.getClubMember, this.retGetClubMember.bind(this));
      };
      ClubMemListModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        switch (pName) {
         case "Button_close":
          module_manager_1.default.instance.destroyModule("ClubMemListModule");
          break;

         case "Button_add":
          module_manager_1.default.instance.showModule(toast_1.default, "\u6682\u672a\u5f00\u653e!");
          break;

         case "Button_find":
          module_manager_1.default.instance.showModule(toast_1.default, "\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u7528\u6237ID!");
          break;

         case "Button_leftPage":
          if (this.model.curPageNum > 1) {
            this.model.curPageNum = this.model.curPageNum - 1;
            this.model.send_getClubMember(this.model.clubId, this.model.curPageNum, this.model.pageCeilNum, false);
          }
          break;

         case "Button_rightPage":
          if (this.model.curPageNum < this.model.totalPageNum) {
            this.model.curPageNum = this.model.curPageNum + 1;
            this.model.send_getClubMember(this.model.clubId, this.model.curPageNum, this.model.pageCeilNum, false);
          }
        }
      };
      ClubMemListModule.prototype.retGetClubMember = function(data) {
        if (0 == data.code) {
          var totalNum = Math.ceil(data.totalNum / this.model.pageCeilNum);
          this.model.totalPageNum = totalNum;
          this.view.loadMemList(data.members, this.model.curPageNum, totalNum);
        } else module_manager_1.default.instance.showModule(toast_1.default, "\u83b7\u53d6\u6210\u5458\u5217\u8868\u9519\u8befcode=" + data.code);
      };
      ClubMemListModule = __decorate([ ccclass, module_base_1.moduleInit("ClubMemListModule") ], ClubMemListModule);
      return ClubMemListModule;
    }(module_base_1.default);
    exports.default = ClubMemListModule;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../framework/core/mvvm/module_base": "module_base",
    "../../public/module/toast/toast": "toast",
    "../../server/hallserver/hall_server": "hall_server",
    "../net_clubRoute": "net_clubRoute",
    "./clubMemList_model": "clubMemList_model",
    "./clubMemList_view": "clubMemList_view"
  } ],
  clubMemList_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "94ddcoMcWlH9Z8ZYMwnMED7", "clubMemList_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../framework/core/mvvm/view_base");
    var texture_manager_1 = require("../../../manager/texture_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubMemListView = function(_super) {
      __extends(ClubMemListView, _super);
      function ClubMemListView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.EditBox_id = null;
        _this.Label_pageIdx = null;
        _this.Sprite_memNode = null;
        _this.Button_item = null;
        return _this;
      }
      ClubMemListView.prototype.onShow = function() {};
      ClubMemListView.prototype.onLoad = function() {};
      ClubMemListView.prototype.loadMemList = function(data, curPage, totalPage) {
        this.Label_pageIdx.string = curPage + "/" + totalPage;
        this.Sprite_memNode.node.removeAllChildren();
        var _loop_1 = function(i) {
          var mem = data[i];
          var Button_item = cc.instantiate(this_1.Button_item);
          Button_item.active = true;
          Button_item.parent = this_1.Sprite_memNode.node;
          var col = (i + 1) % 5;
          0 == col && (col = 5);
          var row = Math.ceil((i + 1) / 5);
          Button_item.x = 250 * (col - 1) - 501;
          Button_item.y = -58 - 98 * (row - 1);
          var Sprite_head = Button_item.getChildByName("Sprite_head").getComponent(cc.Sprite);
          var Label_name = Button_item.getChildByName("Label_name").getComponent(cc.Label);
          var Label_state = Button_item.getChildByName("Label_state").getComponent(cc.Label);
          texture_manager_1.default.instance.getSprite(mem.avatarUrl, function(sp) {
            Sprite_head.spriteFrame = sp;
          });
          Label_name.string = mem.name;
          if (0 == mem.lastOfflineTime) {
            Label_state.string = "\u5728\u7ebf";
            Label_state.node.color = cc.color(33, 197, 40, 255);
          } else {
            Label_state.string = "\u79bb\u7ebf";
            Label_state.node.color = cc.color(170, 170, 170, 255);
          }
        };
        var this_1 = this;
        for (var i = 0; i < data.length; i++) _loop_1(i);
      };
      __decorate([ property(cc.EditBox) ], ClubMemListView.prototype, "EditBox_id", void 0);
      __decorate([ property(cc.Label) ], ClubMemListView.prototype, "Label_pageIdx", void 0);
      __decorate([ property(cc.Sprite) ], ClubMemListView.prototype, "Sprite_memNode", void 0);
      __decorate([ property(cc.Node) ], ClubMemListView.prototype, "Button_item", void 0);
      ClubMemListView = __decorate([ ccclass ], ClubMemListView);
      return ClubMemListView;
    }(view_base_1.default);
    exports.default = ClubMemListView;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/view_base": "view_base",
    "../../../manager/texture_manager": "texture_manager"
  } ],
  clubRank_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "32d07kxfHdNJK+o02MCZKqr", "clubRank_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../../framework/core/mvvm/model_base");
    var net_clubRoute_1 = require("../net_clubRoute");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubRankModel = function(_super) {
      __extends(ClubRankModel, _super);
      function ClubRankModel() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.curPageNum = 1;
        _this.pageCeilNum = 6;
        _this.totalPageNum = 0;
        return _this;
      }
      ClubRankModel.prototype.send_getRankList = function(rankType, pageIdx, pageNum) {
        var data = {
          rankType: rankType,
          pageIdx: pageIdx,
          pageNum: pageNum
        };
        this.send(net_clubRoute_1.ClubRoute.getRankList, data);
      };
      ClubRankModel = __decorate([ ccclass ], ClubRankModel);
      return ClubRankModel;
    }(model_base_1.default);
    exports.ClubRankModel = ClubRankModel;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/model_base": "model_base",
    "../net_clubRoute": "net_clubRoute"
  } ],
  clubRank_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5d0451DYWNHfKjM8fQ1c5p6", "clubRank_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../framework/core/mvvm/module_base");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var toast_1 = require("../../public/module/toast/toast");
    var hall_server_1 = require("../../server/hallserver/hall_server");
    var net_clubRoute_1 = require("../net_clubRoute");
    var clubRank_view_1 = require("./clubRank_view");
    var clubRank_model_1 = require("./clubRank_model");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubRankModule = function(_super) {
      __extends(ClubRankModule, _super);
      function ClubRankModule() {
        var _this = _super.call(this) || this;
        _this.windowPrefabResPath = "package/club/clubRank";
        _this.viewType = clubRank_view_1.default;
        _this.modelType = clubRank_model_1.ClubRankModel;
        _this.needAnim = true;
        _this.clickAnywhereClose = false;
        _this.needViewMask = true;
        return _this;
      }
      ClubRankModule.prototype.onLoad = function() {};
      ClubRankModule.prototype.onShow = function() {
        this.model.netClient = hall_server_1.default.instance.netClient;
        this.model.clearMsgEvent();
        this.registerMsg();
        this.model.curPageNum = 1;
        this.model.send_getRankList(0, this.model.curPageNum, this.model.pageCeilNum);
      };
      ClubRankModule.prototype.registerMsg = function() {
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.getRankList, this.retGetRankList.bind(this));
      };
      ClubRankModule.prototype.retGetRankList = function(data) {
        if (0 == data.code) {
          var totalNum = Math.ceil(data.totalNum / this.model.pageCeilNum);
          this.model.totalPageNum = totalNum;
          this.view.loadRankList(data.list, this.model.curPageNum, this.model.pageCeilNum, data.myRank);
        } else module_manager_1.default.instance.showModule(toast_1.default, "\u83b7\u53d6\u6392\u884c\u699c\u9519\u8befcode=" + data.code);
      };
      ClubRankModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        switch (pName) {
         case "Button_close":
          module_manager_1.default.instance.destroyModule("ClubRankModule");
          break;

         case "Button_leftPage":
          if (this.model.curPageNum > 1) {
            this.model.curPageNum = this.model.curPageNum - 1;
            this.model.send_getRankList(0, this.model.curPageNum, this.model.pageCeilNum);
          }
          break;

         case "Button_rightPage":
          if (this.model.curPageNum < this.model.totalPageNum) {
            this.model.curPageNum = this.model.curPageNum + 1;
            this.model.send_getRankList(0, this.model.curPageNum, this.model.pageCeilNum);
          }
        }
      };
      ClubRankModule = __decorate([ ccclass, module_base_1.moduleInit("ClubRankModule") ], ClubRankModule);
      return ClubRankModule;
    }(module_base_1.default);
    exports.default = ClubRankModule;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../framework/core/mvvm/module_base": "module_base",
    "../../public/module/toast/toast": "toast",
    "../../server/hallserver/hall_server": "hall_server",
    "../net_clubRoute": "net_clubRoute",
    "./clubRank_model": "clubRank_model",
    "./clubRank_view": "clubRank_view"
  } ],
  clubRank_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "32f75H5tTdIMZQmvnKbOAEa", "clubRank_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../framework/core/mvvm/view_base");
    var texture_manager_1 = require("../../../manager/texture_manager");
    var user_manager_1 = require("../../../manager/user_manager");
    var Utility_1 = require("../../../utility/Utility");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubRankView = function(_super) {
      __extends(ClubRankView, _super);
      function ClubRankView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.Label_rank = null;
        _this.Sprite_head = null;
        _this.Label_name = null;
        _this.Label_coins = null;
        _this.Label_pageIdx = null;
        _this.Sprite_rankNode = null;
        _this.Sprite_item = null;
        return _this;
      }
      ClubRankView.prototype.onShow = function() {
        var _this = this;
        var data = user_manager_1.default.instance.getUserData();
        this.Label_name.string = data.name;
        this.Label_coins.string = Utility_1.default.instance.formateNumb(data.coin).toString();
        texture_manager_1.default.instance.getSprite(data.avatarUrl, function(sp) {
          _this.Sprite_head.spriteFrame = sp;
        });
      };
      ClubRankView.prototype.loadRankList = function(data, curPageNum, pageCeilNum, myRank) {
        this.Label_rank.string = 0 == myRank ? "\u699c\u5916" : myRank.toString();
        this.Label_pageIdx.string = curPageNum.toString();
        this.Sprite_rankNode.node.removeAllChildren();
        var _loop_1 = function(i) {
          var item = data[i];
          var Sprite_item = cc.instantiate(this_1.Sprite_item);
          Sprite_item.active = true;
          Sprite_item.parent = this_1.Sprite_rankNode.node;
          Sprite_item.x = 0;
          Sprite_item.y = -50 - 82 * i;
          var Sprite_front = Sprite_item.getChildByName("Sprite_front").getComponent(cc.Sprite);
          var Label_before = Sprite_item.getChildByName("Label_before").getComponent(cc.Label);
          var Sprite_head = Sprite_item.getChildByName("Sprite_head").getComponent(cc.Sprite);
          var Label_name = Sprite_item.getChildByName("Label_name").getComponent(cc.Label);
          var Label_coins = cc.find("Sprite_coinIcon/Label_coins", Sprite_item).getComponent(cc.Label);
          texture_manager_1.default.instance.getSprite(item.avatarUrl, function(sp) {
            Sprite_head.spriteFrame = sp;
          });
          Label_name.string = item.name;
          Label_coins.string = Utility_1.default.instance.formateNumb(item.coin).toString();
          var rank = i + 1 + (curPageNum - 1) * pageCeilNum;
          if (rank < 4) {
            Sprite_front.node.active = true;
            Label_before.node.active = false;
            texture_manager_1.default.instance.getLocalSprite("club_rank{0}.png".format(rank), function(spriteFrame) {
              Sprite_front.spriteFrame = spriteFrame;
            });
          } else {
            Sprite_front.node.active = false;
            Label_before.node.active = true;
            Label_before.string = rank.toString();
          }
        };
        var this_1 = this;
        for (var i = 0; i < data.length; i++) _loop_1(i);
      };
      __decorate([ property(cc.Label) ], ClubRankView.prototype, "Label_rank", void 0);
      __decorate([ property(cc.Sprite) ], ClubRankView.prototype, "Sprite_head", void 0);
      __decorate([ property(cc.Label) ], ClubRankView.prototype, "Label_name", void 0);
      __decorate([ property(cc.Label) ], ClubRankView.prototype, "Label_coins", void 0);
      __decorate([ property(cc.Label) ], ClubRankView.prototype, "Label_pageIdx", void 0);
      __decorate([ property(cc.Sprite) ], ClubRankView.prototype, "Sprite_rankNode", void 0);
      __decorate([ property(cc.Node) ], ClubRankView.prototype, "Sprite_item", void 0);
      ClubRankView = __decorate([ ccclass ], ClubRankView);
      return ClubRankView;
    }(view_base_1.default);
    exports.default = ClubRankView;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/view_base": "view_base",
    "../../../manager/texture_manager": "texture_manager",
    "../../../manager/user_manager": "user_manager",
    "../../../utility/Utility": "utility"
  } ],
  clubRecord_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "95cf7op5c1GRLVUHTFPI156", "clubRecord_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../../framework/core/mvvm/model_base");
    var net_clubRoute_1 = require("../net_clubRoute");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubRecordModel = function(_super) {
      __extends(ClubRecordModel, _super);
      function ClubRecordModel() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.curPageNum = 1;
        _this.pageCeilNum = 6;
        _this.totalPageNum = 0;
        _this.clubId = 0;
        _this.curSelTimePage = 0;
        return _this;
      }
      ClubRecordModel.prototype.send_getGameRecord = function(clubId, timeIdx, pageIdx, pageNum) {
        var data = {
          clubId: clubId,
          timeIdx: timeIdx,
          pageIdx: pageIdx,
          pageNum: pageNum
        };
        this.send(net_clubRoute_1.ClubRoute.getGameRecord, data);
      };
      ClubRecordModel = __decorate([ ccclass ], ClubRecordModel);
      return ClubRecordModel;
    }(model_base_1.default);
    exports.ClubRecordModel = ClubRecordModel;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/model_base": "model_base",
    "../net_clubRoute": "net_clubRoute"
  } ],
  clubRecord_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5bbda/tyhtIpZngWpbT4oE1", "clubRecord_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../framework/core/mvvm/module_base");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var toast_1 = require("../../public/module/toast/toast");
    var hall_server_1 = require("../../server/hallserver/hall_server");
    var net_clubRoute_1 = require("../net_clubRoute");
    var clubRecord_view_1 = require("./clubRecord_view");
    var clubRecord_model_1 = require("./clubRecord_model");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubRecordModule = function(_super) {
      __extends(ClubRecordModule, _super);
      function ClubRecordModule() {
        var _this = _super.call(this) || this;
        _this.windowPrefabResPath = "package/club/clubRecord";
        _this.viewType = clubRecord_view_1.default;
        _this.modelType = clubRecord_model_1.ClubRecordModel;
        _this.needAnim = true;
        _this.clickAnywhereClose = false;
        _this.needViewMask = true;
        return _this;
      }
      ClubRecordModule.prototype.onLoad = function() {};
      ClubRecordModule.prototype.onShow = function(clubInfo) {
        this.model.netClient = hall_server_1.default.instance.netClient;
        this.model.clearMsgEvent();
        this.registerMsg();
        this.view.clickFunc = this.selectTimePage.bind(this);
        this.model.clubId = clubInfo.clubId;
        this.model.curPageNum = 1;
        this.model.curSelTimePage = 0;
        this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
      };
      ClubRecordModule.prototype.registerMsg = function() {
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.getGameRecord, this.retGetGameRecord.bind(this));
      };
      ClubRecordModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        switch (pName) {
         case "Button_close":
          module_manager_1.default.instance.destroyModule("ClubRecordModule");
          break;

         case "Button_find":
          module_manager_1.default.instance.showModule(toast_1.default, "\u6682\u65e0\u6570\u636e!");
          break;

         case "Button_record":
          this.view.Sprite_selTimeFrame.active ? this.view.Sprite_selTimeFrame.active = false : this.view.Sprite_selTimeFrame.active = true;
          break;

         case "Button_leftPage":
          if (this.model.curPageNum > 1) {
            this.model.curPageNum = this.model.curPageNum - 1;
            this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
          }
          break;

         case "Button_rightPage":
          if (this.model.curPageNum < this.model.totalPageNum) {
            this.model.curPageNum = this.model.curPageNum + 1;
            this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
          }
        }
      };
      ClubRecordModule.prototype.selectTimePage = function(idx) {
        if (0 == idx) {
          this.model.curPageNum = 1;
          this.model.curSelTimePage = 4;
          this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
        } else if (1 == idx) {
          this.model.curPageNum = 1;
          this.model.curSelTimePage = 3;
          this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
        } else if (2 == idx) {
          this.model.curPageNum = 1;
          this.model.curSelTimePage = 2;
          this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
        } else if (3 == idx) {
          this.model.curPageNum = 1;
          this.model.curSelTimePage = 1;
          this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
        } else if (4 == idx) {
          this.model.curPageNum = 1;
          this.model.curSelTimePage = 0;
          this.model.send_getGameRecord(this.model.clubId, this.model.curSelTimePage, this.model.curPageNum, this.model.pageCeilNum);
        }
      };
      ClubRecordModule.prototype.retGetGameRecord = function(data) {
        if (0 != data.code) {
          module_manager_1.default.instance.showModule(toast_1.default, "\u83b7\u53d6\u6e38\u620f\u8bb0\u5f55\u5931\u8d25! code=", data.code);
          return;
        }
        if (data.totalNum <= 0) {
          module_manager_1.default.instance.showModule(toast_1.default, "\u6682\u65e0\u6570\u636e!");
          return;
        }
        var totalNum = Math.ceil(data.totalNum / this.model.pageCeilNum);
        this.model.totalPageNum = totalNum;
        this.view.loadRecordList(data.records, this.model.curPageNum, totalNum, this.model.pageCeilNum);
      };
      ClubRecordModule = __decorate([ ccclass, module_base_1.moduleInit("ClubRecordModule") ], ClubRecordModule);
      return ClubRecordModule;
    }(module_base_1.default);
    exports.default = ClubRecordModule;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../framework/core/mvvm/module_base": "module_base",
    "../../public/module/toast/toast": "toast",
    "../../server/hallserver/hall_server": "hall_server",
    "../net_clubRoute": "net_clubRoute",
    "./clubRecord_model": "clubRecord_model",
    "./clubRecord_view": "clubRecord_view"
  } ],
  clubRecord_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0dbdaLxTbFGgrDSvJKS0ji/", "clubRecord_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../framework/core/mvvm/view_base");
    var texture_manager_1 = require("../../../manager/texture_manager");
    var Utility_1 = require("../../../utility/Utility");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubRecordView = function(_super) {
      __extends(ClubRecordView, _super);
      function ClubRecordView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.Label_pageIdx = null;
        _this.Sprite_recordNode = null;
        _this.Sprite_item = null;
        _this.Label_curTime = null;
        _this.Sprite_selTimeFrame = null;
        _this.clickFunc = null;
        return _this;
      }
      ClubRecordView.prototype.onShow = function() {};
      ClubRecordView.prototype.onLoad = function() {
        var items = this.Sprite_selTimeFrame.children;
        var _loop_1 = function(i) {
          var node = items[i];
          node.on("click", function(event) {
            Utility_1.default.instance.playButtonSound();
            var curTime = this.Label_curTime.string;
            0 == i ? curTime = "\u524d\u4e09\u5929" : 1 == i ? curTime = "\u524d\u4e24\u5929" : 2 == i ? curTime = "\u524d\u5929" : 3 == i ? curTime = "\u6628\u5929" : 4 == i && (curTime = "\u4eca\u5929");
            if (this.Label_curTime.string == curTime) return;
            this.Label_curTime.string = curTime;
            this.Sprite_selTimeFrame.active = false;
            this.Sprite_recordNode.node.removeAllChildren();
            this.clickFunc(i);
          }, this_1);
        };
        var this_1 = this;
        for (var i = 0; i < items.length; i++) _loop_1(i);
      };
      ClubRecordView.prototype.loadRecordList = function(records, curPageNum, totalPageNum, pageCeilNum) {
        this.Label_pageIdx.string = curPageNum + "/" + totalPageNum;
        this.Sprite_recordNode.node.removeAllChildren();
        var _loop_2 = function(i) {
          var data = records[i];
          var Sprite_item = cc.instantiate(this_2.Sprite_item);
          Sprite_item.active = true;
          Sprite_item.parent = this_2.Sprite_recordNode.node;
          Sprite_item.x = 0;
          Sprite_item.y = -46 - 79 * i;
          var Label_index = Sprite_item.getChildByName("Label_index").getComponent(cc.Label);
          var Label_id = Sprite_item.getChildByName("Label_id").getComponent(cc.Label);
          var Sprite_head = Sprite_item.getChildByName("Sprite_head").getComponent(cc.Sprite);
          var Label_name = Sprite_item.getChildByName("Label_name").getComponent(cc.Label);
          var Label_winCount = Sprite_item.getChildByName("Label_winCount").getComponent(cc.Label);
          var Label_gameCount = Sprite_item.getChildByName("Label_gameCount").getComponent(cc.Label);
          var Label_score = Sprite_item.getChildByName("Label_score").getComponent(cc.Label);
          texture_manager_1.default.instance.getSprite(data.avatarUrl, function(sp) {
            Sprite_head.spriteFrame = sp;
          });
          Label_name.string = data.name;
          Label_id.string = data.uid;
          var idx = i + 1 + (curPageNum - 1) * pageCeilNum;
          Label_index.string = idx.toString();
          Label_winCount.string = data.winCount;
          Label_gameCount.string = data.gameCount;
          Label_score.string = data.totalSorce;
          data.totalSorce >= 0 ? Label_score.node.color = cc.color(255, 0, 0, 255) : Label_score.node.color = cc.color(33, 197, 40, 255);
        };
        var this_2 = this;
        for (var i = 0; i < records.length; i++) _loop_2(i);
      };
      __decorate([ property(cc.Label) ], ClubRecordView.prototype, "Label_pageIdx", void 0);
      __decorate([ property(cc.Sprite) ], ClubRecordView.prototype, "Sprite_recordNode", void 0);
      __decorate([ property(cc.Node) ], ClubRecordView.prototype, "Sprite_item", void 0);
      __decorate([ property(cc.Label) ], ClubRecordView.prototype, "Label_curTime", void 0);
      __decorate([ property(cc.Node) ], ClubRecordView.prototype, "Sprite_selTimeFrame", void 0);
      ClubRecordView = __decorate([ ccclass ], ClubRecordView);
      return ClubRecordView;
    }(view_base_1.default);
    exports.default = ClubRecordView;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/view_base": "view_base",
    "../../../manager/texture_manager": "texture_manager",
    "../../../utility/Utility": "utility"
  } ],
  club_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6296e8dguVH7bh9GtGgd2px", "club_data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var Club;
    (function(Club) {
      var TableType;
      (function(TableType) {
        TableType[TableType["PWTable"] = 0] = "PWTable";
        TableType[TableType["GameTable"] = 1] = "GameTable";
      })(TableType = Club.TableType || (Club.TableType = {}));
      function rank(allTables) {
        allTables.sort(function(a, b) {
          return getSortIndex(a) - getSortIndex(b);
        });
      }
      Club.rank = rank;
      function getSortIndex(tableData) {
        return tableData.tbType == Club.TableType.GameTable ? tableData.gameInfo.chairCount > tableData.gameInfo.players.length ? -1 : 999 : 0;
      }
    })(Club = exports.Club || (exports.Club = {}));
    cc._RF.pop();
  }, {} ],
  club_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ae68fQklP5GPpS8z64klx0N", "club_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var net_clubRoute_1 = require("./net_clubRoute");
    var model_base_1 = require("../../framework/core/mvvm/model_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubModel = function(_super) {
      __extends(ClubModel, _super);
      function ClubModel() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.selectClub = null;
        _this.playWays = [];
        return _this;
      }
      ClubModel.prototype.send_enterClub = function(clubId) {
        var data = {
          clubId: clubId
        };
        this.send(net_clubRoute_1.ClubRoute.enterClub, data);
      };
      ClubModel.prototype.send_setClubPlayway = function(data) {
        this.send(net_clubRoute_1.ClubRoute.setClubPlayway, data);
      };
      ClubModel.prototype.send_getClubTable = function(clubId, gameMode, gameId, playwayId) {
        var data = {
          clubId: clubId,
          gameMode: gameMode || 0,
          gameId: gameId || 0,
          playwayId: playwayId || "0"
        };
        this.send(net_clubRoute_1.ClubRoute.getClubTable, data);
      };
      ClubModel.prototype.send_getClubPlayway = function(clubId, gameMode, gameId, playwayId) {
        var data = {
          clubId: clubId,
          gameMode: gameMode || 0,
          gameId: gameId || 0,
          playwayId: playwayId || "0"
        };
        this.send(net_clubRoute_1.ClubRoute.getClubPlayway, data);
      };
      ClubModel.prototype.reset = function() {};
      ClubModel = __decorate([ ccclass ], ClubModel);
      return ClubModel;
    }(model_base_1.default);
    exports.ClubModel = ClubModel;
    cc._RF.pop();
  }, {
    "../../framework/core/mvvm/model_base": "model_base",
    "./net_clubRoute": "net_clubRoute"
  } ],
  club_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2d741++vGpL0o+CMKqwabI7", "club_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../framework/core/mvvm/module_base");
    var club_view_1 = require("./club_view");
    var hall_server_1 = require("../server/hallserver/hall_server");
    var net_clubRoute_1 = require("./net_clubRoute");
    var module_manager_1 = require("../../framework/core/module_manager");
    var local_storage_1 = require("../../manager/local_storage");
    var toast_1 = require("../public/module/toast/toast");
    var event_manager_1 = require("../../manager/event_manager");
    var club_data_1 = require("./club_data");
    var club_model_1 = require("./club_model");
    var hall_module_1 = require("../hall/hall_module");
    var clubMemList_module_1 = require("./mem/clubMemList_module");
    var clubRank_module_1 = require("./rank/clubRank_module");
    var clubRecord_module_1 = require("./record/clubRecord_module");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubModule = function(_super) {
      __extends(ClubModule, _super);
      function ClubModule() {
        var _this = _super.call(this) || this;
        _this.windowPrefabResPath = "package/club/club";
        _this.viewType = club_view_1.ClubView;
        _this.modelType = club_model_1.ClubModel;
        return _this;
      }
      ClubModule.prototype.onShow = function(clubId) {
        this.model.netClient = hall_server_1.default.instance.netClient;
        this.model.clearMsgEvent();
        this.view.clickToggleFunc = this.clickToggleFunc.bind(this);
        this.registerMsg();
        var select = local_storage_1.default.getNumber("_select_club_id");
        if (clubId || select) {
          clubId = clubId || select;
          this.model.send_enterClub(clubId);
        } else module_manager_1.default.instance.showModule(hall_module_1.default, null, function() {
          module_manager_1.default.instance.destroyModule("ClubModule");
        });
      };
      ClubModule.prototype.registerMsg = function() {
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.enterClub, this.retRefreshCLub.bind(this));
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.getClubPlayway, this.retGetClubPlayway.bind(this));
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.getClubTable, this.retGetClubTable.bind(this));
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.onRefreshClubTable, this.retRefreshClubTable.bind(this));
        this.model.registerNetMsg(net_clubRoute_1.ClubRoute.onRemoveClubTable, this.onRemoveClubTable.bind(this));
      };
      ClubModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        switch (pName) {
         case "Button_close":
          module_manager_1.default.instance.showModule(hall_module_1.default, null, function() {
            module_manager_1.default.instance.destroyModule("ClubModule");
          });
          break;

         case "Button_mode":
          var gameMode = local_storage_1.default.getNumber("_club_gameMode", 0);
          if (0 == gameMode) {
            local_storage_1.default.setNumber("_club_gameMode", 1);
            this.view.enterClubAction(1);
          } else {
            local_storage_1.default.setNumber("_club_gameMode", 0);
            this.view.enterClubAction(0);
          }
          local_storage_1.default.setNumber("_club_gameId", 0);
          this.enterClubAllTable();
          break;

         case "Button_memList":
          module_manager_1.default.instance.showModule(clubMemList_module_1.default, this.model.selectClub);
          break;

         case "Button_rank":
          module_manager_1.default.instance.showModule(clubRank_module_1.default);
          break;

         case "Button_record":
          module_manager_1.default.instance.showModule(clubRecord_module_1.default, this.model.selectClub);
        }
      };
      ClubModule.prototype.clickToggleFunc = function(toggle) {
        if ("alltoggle<Toggle>" == toggle.name) {
          local_storage_1.default.setNumber("_club_gameId", 0);
          this.enterClubAllTable();
        } else if ("pdk<Toggle>" == toggle.name) {
          local_storage_1.default.setNumber("_club_gameId", 15);
          this.enterClubSingleGame();
        }
      };
      ClubModule.prototype.updateSelectClub = function(data) {
        local_storage_1.default.setNumber("_select_club_id", data.clubInfo.clubId);
        this.model.selectClub = data.clubInfo;
        this.view.updateClubInfo(data.clubInfo);
        var str = {
          content: "<color=#00ffff>{0}</color>".format(data.clubInfo.announcement),
          tag: "",
          showCount: 1e3
        };
        event_manager_1.default.instance.dispatch("Event_Notify_Data", str);
        var gameId = local_storage_1.default.getNumber("_club_gameId", 0);
        0 == gameId ? this.enterClubAllTable() : this.enterClubSingleGame();
        var gameMode = local_storage_1.default.getNumber("_club_gameMode", 0);
        this.view.enterClubAction(gameMode);
      };
      ClubModule.prototype.enterClubAllTable = function() {
        var gameMode = local_storage_1.default.getNumber("_club_gameMode", 0);
        this.view.clearTableList();
        this.view.mTables = [];
        this.model.playWays = [];
        this.model.send_getClubTable(this.model.selectClub.clubId, gameMode, 0, "0");
      };
      ClubModule.prototype.enterClubSingleGame = function() {
        var clubId = local_storage_1.default.getNumber("_select_club_id");
        var gameMode = local_storage_1.default.getNumber("_club_gameMode", 0);
        var gameId = local_storage_1.default.getNumber("_club_gameId", 0);
        var playwayId = local_storage_1.default.getString("_club_playwayId", "0");
        this.view.clearTableList();
        this.view.mTables = [];
        this.model.playWays = [];
        this.model.send_getClubPlayway(clubId, gameMode, gameId, playwayId);
      };
      ClubModule.prototype.retRefreshCLub = function(data) {
        0 == data.code ? this.updateSelectClub(data) : module_manager_1.default.instance.showModule(toast_1.default, "\u5f02\u5e38\u9519\u8befcode=" + data.code);
      };
      ClubModule.prototype.retGetClubPlayway = function(data) {
        if (0 == data.code) {
          var playwayNum = data.playways.length;
          if (playwayNum <= 0) module_manager_1.default.instance.showModule(toast_1.default, "\u5f53\u524d\u5927\u5385\u6682\u672a\u8bbe\u7f6e\u73a9\u6cd5."); else {
            var ways = [];
            for (var idx = 0; idx < playwayNum; idx++) {
              var way = {
                playWay: data.playways[idx],
                tbType: club_data_1.Club.TableType.PWTable,
                tableid: data.playways[idx].id
              };
              ways.push(way);
            }
            this.model.playWays = this.model.playWays.concat(ways);
            this.view.appendTable(ways, true);
            var gameMode = local_storage_1.default.getNumber("_club_gameMode", 0);
            var gameId = local_storage_1.default.getNumber("_club_gameId", 0);
            var playwayId = local_storage_1.default.getString("_club_playwayId", "0");
            this.model.send_getClubTable(this.model.selectClub.clubId, gameMode, gameId, playwayId);
          }
        } else module_manager_1.default.instance.showModule(toast_1.default, "\u83b7\u53d6\u4ff1\u4e50\u90e8\u73a9\u6cd5\u5931\u8d25.");
      };
      ClubModule.prototype.retGetClubTable = function(data) {
        if (0 == data.code) {
          var gtable = [];
          for (var idx = 0; idx < data.tableInfos.length; idx++) {
            var gtb = data.tableInfos[idx];
            var gData = {
              gameInfo: gtb,
              tableid: gtb.tableId,
              tbType: club_data_1.Club.TableType.GameTable
            };
            gtable.push(gData);
          }
          this.view.appendTable(gtable, true);
        } else module_manager_1.default.instance.showModule(toast_1.default, "\u83b7\u53d6\u4ff1\u4e50\u90e8\u684c\u5b50\u5931\u8d25.");
      };
      ClubModule.prototype.onRemoveClubTable = function(data) {
        this.view.removeTableItem(data.tableId);
        cc.log("----------\x3e>>>onremove", data);
      };
      ClubModule.prototype.retRefreshClubTable = function(data) {
        var gameMode = local_storage_1.default.getNumber("_club_gameMode", 0);
        if (data.gameMode != gameMode) return;
        var gameTable = {
          tbType: club_data_1.Club.TableType.GameTable,
          gameInfo: data,
          tableid: data.tableId
        };
        this.view.appendTable([ gameTable ], false);
      };
      ClubModule = __decorate([ ccclass, module_base_1.moduleInit("ClubModule") ], ClubModule);
      return ClubModule;
    }(module_base_1.default);
    exports.ClubModule = ClubModule;
    cc._RF.pop();
  }, {
    "../../framework/core/module_manager": "module_manager",
    "../../framework/core/mvvm/module_base": "module_base",
    "../../manager/event_manager": "event_manager",
    "../../manager/local_storage": "local_storage",
    "../hall/hall_module": "hall_module",
    "../public/module/toast/toast": "toast",
    "../server/hallserver/hall_server": "hall_server",
    "./club_data": "club_data",
    "./club_model": "club_model",
    "./club_view": "club_view",
    "./mem/clubMemList_module": "clubMemList_module",
    "./net_clubRoute": "net_clubRoute",
    "./rank/clubRank_module": "clubRank_module",
    "./record/clubRecord_module": "clubRecord_module"
  } ],
  club_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bf3cd6WSgZBJZhvZ4G5HyOK", "club_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../framework/core/mvvm/view_base");
    var listview_1 = require("../../framework/tools/scrollview/listview");
    var scene_manager_1 = require("../../manager/scene_manager");
    var local_storage_1 = require("../../manager/local_storage");
    var component_table_1 = require("./component_table");
    var hall_server_1 = require("../server/hallserver/hall_server");
    var club_data_1 = require("./club_data");
    var texture_manager_1 = require("../../manager/texture_manager");
    var user_manager_1 = require("../../manager/user_manager");
    var Utility_1 = require("../../utility/Utility");
    var module_manager_1 = require("../../framework/core/module_manager");
    var toast_1 = require("../public/module/toast/toast");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubView = function(_super) {
      __extends(ClubView, _super);
      function ClubView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.scrollview = null;
        _this.view = null;
        _this.content = null;
        _this.prefab = null;
        _this.m_tablelist = null;
        _this.clubName = null;
        _this.mTables = [];
        _this.Sprite_leftFrame = null;
        _this.Node_top = null;
        _this.Sprite_modeIcon = null;
        _this.Node_tips = null;
        _this.Sprite_scolle = null;
        _this.Toggle_all = null;
        _this.Toggle_pdk = null;
        _this.clickClubFunc = null;
        _this.clickToggleFunc = null;
        return _this;
      }
      ClubView.prototype.onShow = function() {
        var gameId = local_storage_1.default.getNumber("_club_gameId", 0);
        0 == gameId ? this.Toggle_all.isChecked = true : this.Toggle_pdk.isChecked = true;
        this.Node_top.active = false;
        this.Node_top.y = 80;
        this.Sprite_leftFrame.active = false;
        this.Sprite_leftFrame.x = -767;
      };
      ClubView.prototype.onLoad = function() {
        var list = new listview_1.ListView({
          scrollview: this.scrollview,
          view: this.view,
          content: this.content,
          item_prefab: this.prefab,
          cb_host: this,
          item_update_func: this.update_table_list_item,
          row: 2,
          gap_x: 18,
          direction: listview_1.ListViewDir.Horizontal
        });
        this.m_tablelist = list;
        this.Toggle_all.node.on("toggle", this.toggleCB, this);
        this.Toggle_pdk.node.on("toggle", this.toggleCB, this);
      };
      ClubView.prototype.setClickClubFunc = function(func) {
        this.clickClubFunc = func;
      };
      ClubView.prototype.toggleCB = function(toggle) {
        this.clickToggleFunc && this.clickToggleFunc(toggle);
      };
      ClubView.prototype.removeTable = function(data) {
        for (var i = 0; i < data.length; i++) {
          var tbData = data[i];
          for (var idx = 0; idx < this.m_tablelist.datas.length; idx++) {
            var tb = this.m_tablelist.datas[idx];
            if (tb.tableid == tbData.tableid) {
              this.m_tablelist.remove_data(idx, 1);
              this.mTables = this.mTables.splice(idx, 1);
              break;
            }
          }
        }
      };
      ClubView.prototype.appendTable = function(datas, isSort) {
        if (!datas || datas.length <= 0) return;
        var adds = [];
        for (var idx = 0; idx < datas.length; idx++) {
          var tb = datas[idx];
          var isadd = true;
          for (var i = 0; i < this.mTables.length; i++) {
            var mtb = this.mTables[i];
            if (tb.tableid == mtb.tableid) {
              this.mTables[i] = tb;
              isadd = false;
              break;
            }
          }
          if (isadd) {
            cc.log("-----\x3e>>>>>\u65b0\u589e", tb);
            adds.push(tb);
          }
        }
        if (adds.length > 0) {
          this.mTables = this.mTables.concat(datas);
          for (var i = 0; i < adds.length; i++) this.m_tablelist.append_data(adds[i]);
        }
        isSort && club_data_1.Club.rank(this.mTables);
        this.refreshTableItem();
      };
      ClubView.prototype.refreshTableItem = function() {
        for (var idx = 0; idx < this.m_tablelist.datas.length; idx++) {
          var tb = this.mTables[idx];
          this.m_tablelist.refresh_item(idx, tb);
        }
      };
      ClubView.prototype.removeTableItem = function(tableid) {
        for (var idx = 0; idx < this.m_tablelist.datas.length; idx++) {
          var tb = this.mTables[idx];
          if (tb.tableid == tableid) {
            this.m_tablelist.remove_data(idx, 1);
            this.mTables.splice(idx, 1);
          }
        }
      };
      ClubView.prototype.updateClubInfo = function(data) {
        this.clubName.string = data.clubName;
        var Sprite_coinFrame = cc.find("Sprite_topFrame/Sprite_coinFrame", this.Node_top);
        var Label_coin = Sprite_coinFrame.getChildByName("Label_coin").getComponent(cc.Label);
        var userData = user_manager_1.default.instance.getUserData();
        Label_coin.string = Utility_1.default.instance.formateNumb(userData.coin).toString();
      };
      ClubView.prototype.enterClubAction = function(gameMode) {
        var _this = this;
        0 == gameMode ? texture_manager_1.default.instance.getLocalSprite("club_111", function(spriteFrame) {
          _this.Sprite_modeIcon.spriteFrame = spriteFrame;
        }) : texture_manager_1.default.instance.getLocalSprite("club_118", function(spriteFrame) {
          _this.Sprite_modeIcon.spriteFrame = spriteFrame;
        });
        if (0 == gameMode) {
          var Sprite_scoreFrame = cc.find("Sprite_topFrame/Sprite_scoreFrame", this.Node_top);
          var Sprite_coinFrame = cc.find("Sprite_topFrame/Sprite_coinFrame", this.Node_top);
          Sprite_scoreFrame.active = false;
          Sprite_coinFrame.active = true;
          var Sprite_butomFrame = this.node.getChildByName("Sprite_butomFrame");
          var Node_vector = Sprite_butomFrame.getChildByName("Node_vector");
          var vector = Node_vector.children;
          for (var i = 0; i < vector.length; i++) {
            var node = vector[i];
            node.active = false;
          }
          this.Node_tips.active = false;
          var Button_rank = Node_vector.getChildByName("Button_rank");
          var Button_personCard = Node_vector.getChildByName("Button_personCard");
          var Button_partner = Node_vector.getChildByName("Button_partner");
          Button_rank.active = true;
          Button_personCard.active = true;
          Button_partner.active = true;
          Button_partner.x = 346;
        } else {
          var Sprite_scoreFrame = cc.find("Sprite_topFrame/Sprite_scoreFrame", this.Node_top);
          var Sprite_coinFrame = cc.find("Sprite_topFrame/Sprite_coinFrame", this.Node_top);
          Sprite_scoreFrame.active = true;
          Sprite_coinFrame.active = false;
          var Sprite_butomFrame = this.node.getChildByName("Sprite_butomFrame");
          var Node_vector = Sprite_butomFrame.getChildByName("Node_vector");
          var vector = Node_vector.children;
          for (var i = 0; i < vector.length; i++) {
            var node = vector[i];
            node.active = true;
          }
          this.Node_tips.active = true;
          var Button_rank = Node_vector.getChildByName("Button_rank");
          Button_rank.active = false;
          var Button_partner = Node_vector.getChildByName("Button_partner");
          Button_partner.x = 116;
        }
        this.Node_top.active = true;
        this.Node_top.stopAllActions();
        this.Node_top.y = 80;
        this.Node_top.runAction(cc.moveTo(.3, this.Node_top.x, 0));
        this.Sprite_leftFrame.active = true;
        this.Sprite_leftFrame.stopAllActions();
        this.Sprite_leftFrame.x = -767;
        this.Sprite_leftFrame.runAction(cc.moveTo(.3, -667, this.Sprite_leftFrame.y));
      };
      ClubView.prototype.clearTableList = function() {
        this.m_tablelist.set_data([]);
      };
      ClubView.prototype.update_table_list_item = function(item, data, index, item_intact) {
        if (data) {
          var tableInfo = item.getComponent(component_table_1.TableInfo);
          tableInfo.clickFunc = this.clickTableItem.bind(this);
          tableInfo.setData(data, index);
        }
      };
      ClubView.prototype.checkIsCanMoney = function(data) {
        var isCan = false;
        if (0 == data.gameMode) {
          var userData = user_manager_1.default.instance.getUserData();
          var coin = userData.coin;
          var lowerLimit = data.lowerLimit;
          var upperLimit = data.upperLimit;
          0 == upperLimit ? coin >= lowerLimit && (isCan = true) : coin >= lowerLimit && coin <= upperLimit && (isCan = true);
        }
        return isCan;
      };
      ClubView.prototype.clickTableItem = function(data) {
        cc.log("data", data);
        scene_manager_1.default.lastEntranceOpenModuleName = "ClubModule";
        if (data.tbType == club_data_1.Club.TableType.PWTable) {
          if (!this.checkIsCanMoney(data.playWay)) {
            module_manager_1.default.instance.showModule(toast_1.default, "\u60a8\u91d1\u5e01\u4e0d\u8db3, \u5f53\u524d\u684c\u5b50\u9650\u5236{0}.".format(data.playWay.lowerLimit));
            return;
          }
          var pwInfo = data.playWay;
          hall_server_1.default.instance.createGame(pwInfo.gameId, pwInfo.clubId, pwInfo.id.toString());
        } else if (data.tbType == club_data_1.Club.TableType.GameTable) {
          if (data.gameInfo.players.length >= data.gameInfo.chairCount) {
            module_manager_1.default.instance.showModule(toast_1.default, "\u5f53\u524d\u684c\u5b50\u4eba\u6570\u5df2\u6ee1.");
            return;
          }
          if (!this.checkIsCanMoney(data.gameInfo)) {
            module_manager_1.default.instance.showModule(toast_1.default, "\u60a8\u91d1\u5e01\u4e0d\u8db3, \u5f53\u524d\u684c\u5b50\u9650\u5236{0}.".format(data.gameInfo.lowerLimit));
            return;
          }
          var gamInfo = data.gameInfo;
          hall_server_1.default.instance.enterGame(gamInfo);
        }
      };
      ClubView.prototype.onDisable = function() {};
      ClubView.prototype.on_destroy = function() {};
      __decorate([ property(cc.ScrollView) ], ClubView.prototype, "scrollview", void 0);
      __decorate([ property(cc.Node) ], ClubView.prototype, "view", void 0);
      __decorate([ property(cc.Node) ], ClubView.prototype, "content", void 0);
      __decorate([ property(cc.Node) ], ClubView.prototype, "prefab", void 0);
      __decorate([ property(cc.Label) ], ClubView.prototype, "clubName", void 0);
      __decorate([ property(cc.Node) ], ClubView.prototype, "Sprite_leftFrame", void 0);
      __decorate([ property(cc.Node) ], ClubView.prototype, "Node_top", void 0);
      __decorate([ property(cc.Sprite) ], ClubView.prototype, "Sprite_modeIcon", void 0);
      __decorate([ property(cc.Node) ], ClubView.prototype, "Node_tips", void 0);
      __decorate([ property(cc.Sprite) ], ClubView.prototype, "Sprite_scolle", void 0);
      __decorate([ property(cc.Toggle) ], ClubView.prototype, "Toggle_all", void 0);
      __decorate([ property(cc.Toggle) ], ClubView.prototype, "Toggle_pdk", void 0);
      ClubView = __decorate([ ccclass ], ClubView);
      return ClubView;
    }(view_base_1.default);
    exports.ClubView = ClubView;
    cc._RF.pop();
  }, {
    "../../framework/core/module_manager": "module_manager",
    "../../framework/core/mvvm/view_base": "view_base",
    "../../framework/tools/scrollview/listview": "listview",
    "../../manager/local_storage": "local_storage",
    "../../manager/scene_manager": "scene_manager",
    "../../manager/texture_manager": "texture_manager",
    "../../manager/user_manager": "user_manager",
    "../../utility/Utility": "utility",
    "../public/module/toast/toast": "toast",
    "../server/hallserver/hall_server": "hall_server",
    "./club_data": "club_data",
    "./component_table": "component_table"
  } ],
  component_club: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "84395DVG41H15xIada5Rx+/", "component_club");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var texture_manager_1 = require("../../manager/texture_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ClubInfo = function(_super) {
      __extends(ClubInfo, _super);
      function ClubInfo() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.avatar = null;
        _this.clubName = null;
        _this.member = null;
        _this.clickBtn = null;
        _this.clubData = null;
        _this.clubInfCall = null;
        return _this;
      }
      ClubInfo.prototype.onLoad = function() {
        this.clickBtn.on("click", this.clickItem, this);
      };
      ClubInfo.prototype.clickItem = function() {
        if (this.clubData) {
          cc.log("-----------\x3e>>>\u9009\u62e9\u4ff1\u4e50\u90e8");
          this.clubInfCall && this.clubInfCall(this.clubData, this);
        }
      };
      ClubInfo.prototype.setClubName = function(name) {
        this.clubName.string = name;
      };
      ClubInfo.prototype.setBgOpacity = function(p) {
        this.clickBtn.opacity = p;
      };
      ClubInfo.prototype.setAvatar = function(url) {
        var _this = this;
        texture_manager_1.default.instance.getSprite(url, function(spriteFrame) {
          _this.node && !_this.node.isValid && (_this.avatar.spriteFrame = spriteFrame);
        });
      };
      __decorate([ property(cc.Sprite) ], ClubInfo.prototype, "avatar", void 0);
      __decorate([ property(cc.Label) ], ClubInfo.prototype, "clubName", void 0);
      __decorate([ property(cc.Label) ], ClubInfo.prototype, "member", void 0);
      __decorate([ property(cc.Node) ], ClubInfo.prototype, "clickBtn", void 0);
      ClubInfo = __decorate([ ccclass ], ClubInfo);
      return ClubInfo;
    }(cc.Component);
    exports.ClubInfo = ClubInfo;
    cc._RF.pop();
  }, {
    "../../manager/texture_manager": "texture_manager"
  } ],
  component_marquee: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8213dU4cZhCUZ+YAN6B4wei", "component_marquee");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var event_manager_1 = require("../../manager/event_manager");
    var MarqueeComponent = function(_super) {
      __extends(MarqueeComponent, _super);
      function MarqueeComponent() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.root = null;
        _this.labelPrefab = null;
        _this.mask = null;
        _this.offset = 0;
        _this.startOffset = 0;
        _this.endOffset = 0;
        _this.speed = 100;
        _this.tag = "";
        _this.m_availableLabelQueue = [];
        _this.m_playingLabelQueue = [];
        _this.m_isEmpty = false;
        _this.m_max_count = 10;
        _this.m_index = 0;
        _this.m_message_queue = [];
        _this.m_playing_queue = [];
        return _this;
      }
      MarqueeComponent.prototype.onload = function() {};
      MarqueeComponent.prototype.start = function() {
        this.m_isEmpty = true;
        this.bindEvent();
      };
      MarqueeComponent.prototype.reset = function() {
        for (var index = 0; index < this.m_playingLabelQueue.length; index++) {
          var element = this.m_playingLabelQueue[index];
          element.node.active = false;
          this.m_availableLabelQueue.push(element);
        }
        this.m_playingLabelQueue = [];
      };
      MarqueeComponent.prototype.showMarquee = function(show) {
        this.root.active = show;
      };
      MarqueeComponent.prototype.play = function(msg) {
        var self = this;
        self.m_playing_queue.push(msg);
        self.showMarquee(true);
        var text = msg.content;
        var message = msg;
        self.playMessage(text, self.on_next_play.bind(self), function() {
          if (self && self.root.active) {
            self.m_playing_queue.shift();
            var data = message.content;
            var count = message.showCount;
            if (count > 1) {
              message.showCount--;
              self.play(message);
            }
            0 == self.m_playing_queue.length && self.showMarquee(false);
          }
        });
      };
      MarqueeComponent.prototype.on_next_play = function() {
        var self = this;
        if (self && self.root.active) {
          var msg = self.m_message_queue.shift();
          if (msg) {
            self.play(msg);
            self.m_isEmpty = false;
          } else self.m_isEmpty = true;
        }
      };
      MarqueeComponent.prototype.playMessage = function(text, next, onFinish) {
        var self = this;
        var maskWidth = self.mask.node.width;
        var label = self.getAvailableLabel();
        label.string = text;
        var startPosX = .5 * maskWidth + self.startOffset;
        label.node.position = cc.v2(startPosX, label.node.position.y);
        label.node.active = true;
        this.scheduleOnce(function() {
          var labelWidth = self.calcLabelWidth(label);
          var totalDis = labelWidth + maskWidth + self.startOffset - self.endOffset;
          var dis1 = labelWidth + self.offset;
          var duration1 = self.calcDuration(dis1);
          var duration2 = self.calcDuration(totalDis - dis1);
          var targetPos1 = startPosX - dis1;
          var targetPos2 = -totalDis + startPosX;
          var callFun1 = cc.callFunc(function() {
            next && next();
          }.bind(self));
          var callFun2 = cc.callFunc(function() {
            label.node.active = false;
            self.addToAvailableLabel(label);
            onFinish && onFinish();
          }.bind(self));
          var move1 = cc.moveTo(duration1, targetPos1, 0);
          var move2 = cc.moveTo(duration2, targetPos2, 0);
          var seq = cc.sequence([ move1, callFun1, move2, callFun2 ]);
          label.node.runAction(seq);
        });
      };
      MarqueeComponent.prototype.messageFilter = function(msg) {
        return msg.tag == this.tag;
      };
      MarqueeComponent.prototype.getAvailableLabel = function() {
        var label = this.m_availableLabelQueue.shift();
        label || (label = this.cloneLabel());
        return label;
      };
      MarqueeComponent.prototype.cloneLabel = function() {
        var node = cc.instantiate(this.labelPrefab.node);
        node.parent = this.labelPrefab.node.parent;
        node.position = this.labelPrefab.node.position;
        node.scale = this.labelPrefab.node.scale;
        return node.getComponent(cc.RichText);
      };
      MarqueeComponent.prototype.addToAvailableLabel = function(label) {
        this.m_availableLabelQueue.push(label);
      };
      MarqueeComponent.prototype.calcLabelWidth = function(label) {
        return label.node.width;
      };
      MarqueeComponent.prototype.calcDuration = function(dis) {
        return dis / this.speed;
      };
      MarqueeComponent.prototype.on_msg_coming = function(msg) {
        if (this.m_isEmpty) {
          this.m_isEmpty = false;
          cc.log("paly__msg");
          this.play(msg);
        } else {
          this.m_index++;
          msg._index = this.m_index;
          cc.log("push__msg");
          this.m_message_queue.push(msg);
          this.sortQueue();
          this.cutQueue();
        }
      };
      MarqueeComponent.prototype.cutQueue = function() {
        this.m_message_queue.length > this.m_max_count && this.m_message_queue.splice(this.m_max_count, this.m_message_queue.length - this.m_max_count);
      };
      MarqueeComponent.prototype.sortQueue = function() {
        this.m_message_queue.sort(function(a, b) {
          if (a.level == b.level) return a._index - b._index;
          return a.level - b.level;
        });
      };
      MarqueeComponent.prototype.bindEvent = function() {
        event_manager_1.default.instance.on("Event_Notify_Data", this.on_msg_coming, this, true);
      };
      MarqueeComponent.prototype.unbindEvent = function() {
        event_manager_1.default.instance.off("Event_Notify_Data", this.on_msg_coming, this);
      };
      MarqueeComponent.prototype.onDisable = function() {
        this.unbindEvent();
      };
      MarqueeComponent.prototype.onDestroy = function() {
        this.unbindEvent();
      };
      __decorate([ property(cc.Node) ], MarqueeComponent.prototype, "root", void 0);
      __decorate([ property(cc.RichText) ], MarqueeComponent.prototype, "labelPrefab", void 0);
      __decorate([ property(cc.Mask) ], MarqueeComponent.prototype, "mask", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "offset", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "startOffset", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "endOffset", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "speed", void 0);
      __decorate([ property(cc.String) ], MarqueeComponent.prototype, "tag", void 0);
      MarqueeComponent = __decorate([ ccclass ], MarqueeComponent);
      return MarqueeComponent;
    }(cc.Component);
    exports.default = MarqueeComponent;
    cc._RF.pop();
  }, {
    "../../manager/event_manager": "event_manager"
  } ],
  component_table: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "11af1lxn05K0oAQ97fntOm8", "component_table");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var texture_manager_1 = require("../../manager/texture_manager");
    var custom_ui_state_switcher_1 = require("../public/ui/custom_ui_state_switcher");
    var club_data_1 = require("./club_data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var TableInfo = function(_super) {
      __extends(TableInfo, _super);
      function TableInfo() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.seatStyle = null;
        _this.seatNode = [];
        _this.avatar = [];
        _this.playWayName = null;
        _this.spriteJuShu = null;
        _this.lab_JuShu = null;
        _this.tableData = null;
        _this.clickBtn = null;
        _this.clickFunc = null;
        return _this;
      }
      TableInfo.prototype.onLoad = function() {
        this.clickBtn.on("click", this.clickItem, this);
      };
      TableInfo.prototype.clickItem = function() {
        cc.log("-----------\x3e>>>item", this.node.name);
        if (this.tableData) {
          cc.log("-----------\x3e>>>\u8fdb\u5165\u6e38\u620f\u4e86");
          this.clickFunc && this.clickFunc(this.tableData);
        }
      };
      TableInfo.prototype.setData = function(data, idx) {
        this.tableData = data;
        if (data.tbType == club_data_1.Club.TableType.GameTable) {
          this.setPlayWayName(data.gameInfo.playwayName);
          this.setStyle(data.gameInfo.players.length);
          this.updatePlayerAvatar(data);
          this.setPlayCount(data.gameInfo.gameCount, data.gameInfo.currentCount);
        } else if (data.tbType == club_data_1.Club.TableType.PWTable) {
          this.setStyle(5);
          this.setPlayWayName(data.playWay.playwayName);
          this.setPlayCount(0, 0);
        }
      };
      TableInfo.prototype.setPlayCount = function(gameCount, countCount) {
        this.spriteJuShu.active = countCount > 0;
        countCount > 0 && (this.lab_JuShu.string = "{0} {1}/{2}".format("\u5df2\u5f00\u5c40", countCount, gameCount));
      };
      TableInfo.prototype.setPlayWayName = function(name) {
        this.playWayName.string = name;
      };
      TableInfo.prototype.updatePlayerAvatar = function(data) {
        var activeAvatar = [];
        for (var i = 0; i < this.avatar.length; i++) {
          var node = this.avatar[i];
          if (node.active) {
            var sp = node.getChildByName("SpriteAvatar");
            activeAvatar.push(sp.getComponent(cc.Sprite));
          }
        }
        for (var idx = 0; idx < data.gameInfo.players.length; idx++) {
          var player = data.gameInfo.players[idx];
          var avatar = activeAvatar[idx];
          avatar && this.setAvatar(player.avatarUrl, avatar);
        }
      };
      TableInfo.prototype.setAvatar = function(url, avatar) {
        var _this = this;
        texture_manager_1.default.instance.getSprite(url, function(spriteFrame) {
          _this.node && _this.node.isValid && (avatar.spriteFrame = spriteFrame);
        });
      };
      TableInfo.prototype.setStyle = function(style) {
        var st = "two";
        switch (style) {
         case 1:
          st = "one";
          break;

         case 2:
          st = "two";
          break;

         case 3:
          st = "three";
          break;

         case 4:
          st = "four";
          break;

         case 5:
          st = "none";
        }
        this.seatStyle.SwitchState(st);
      };
      __decorate([ property(custom_ui_state_switcher_1.default) ], TableInfo.prototype, "seatStyle", void 0);
      __decorate([ property([ cc.Node ]) ], TableInfo.prototype, "seatNode", void 0);
      __decorate([ property([ cc.Node ]) ], TableInfo.prototype, "avatar", void 0);
      __decorate([ property(cc.Label) ], TableInfo.prototype, "playWayName", void 0);
      __decorate([ property(cc.Node) ], TableInfo.prototype, "spriteJuShu", void 0);
      __decorate([ property(cc.Label) ], TableInfo.prototype, "lab_JuShu", void 0);
      __decorate([ property(cc.Node) ], TableInfo.prototype, "clickBtn", void 0);
      TableInfo = __decorate([ ccclass ], TableInfo);
      return TableInfo;
    }(cc.Component);
    exports.TableInfo = TableInfo;
    cc._RF.pop();
  }, {
    "../../manager/texture_manager": "texture_manager",
    "../public/ui/custom_ui_state_switcher": "custom_ui_state_switcher",
    "./club_data": "club_data"
  } ],
  const_code: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "71cfde+/nNFhbFL2moNu7Xk", "const_code");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ServerCode;
    (function(ServerCode) {
      var ClubCode;
      (function(ClubCode) {
        ClubCode[ClubCode["OK"] = 0] = "OK";
      })(ClubCode = ServerCode.ClubCode || (ServerCode.ClubCode = {}));
      var GameStatus;
      (function(GameStatus) {
        GameStatus[GameStatus["GAME_FREE"] = 0] = "GAME_FREE";
        GameStatus[GameStatus["GAME_PLAYING"] = 1] = "GAME_PLAYING";
      })(GameStatus = ServerCode.GameStatus || (ServerCode.GameStatus = {}));
      var ServerAdrCode;
      (function(ServerAdrCode) {
        ServerAdrCode[ServerAdrCode["OK"] = 0] = "OK";
        ServerAdrCode[ServerAdrCode["GAME_SERVER_NO_OPEN"] = 1] = "GAME_SERVER_NO_OPEN";
        ServerAdrCode[ServerAdrCode["GAME_SERVER_NO_EXIST"] = 2] = "GAME_SERVER_NO_EXIST";
      })(ServerAdrCode = ServerCode.ServerAdrCode || (ServerCode.ServerAdrCode = {}));
      var EnterTableCode;
      (function(EnterTableCode) {
        EnterTableCode[EnterTableCode["OK"] = 0] = "OK";
        EnterTableCode[EnterTableCode["NO_EXIST_ROOM"] = 1] = "NO_EXIST_ROOM";
        EnterTableCode[EnterTableCode["FULL_PLAYER_ROOM"] = 2] = "FULL_PLAYER_ROOM";
        EnterTableCode[EnterTableCode["GAME_MAINTAIN"] = 3] = "GAME_MAINTAIN";
        EnterTableCode[EnterTableCode["GAME_RELAY"] = 4] = "GAME_RELAY";
        EnterTableCode[EnterTableCode["OTHER_FAIL"] = 5] = "OTHER_FAIL";
      })(EnterTableCode = ServerCode.EnterTableCode || (ServerCode.EnterTableCode = {}));
    })(ServerCode = exports.ServerCode || (exports.ServerCode = {}));
    cc._RF.pop();
  }, {} ],
  countUp: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "22042FnFpdNGqvZ0J0O0wm9", "countUp");
    "use strict";
    var __assign = (void 0, function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
        }
        return t;
      };
      return __assign.apply(this, arguments);
    });
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var CountUp = function() {
      function CountUp(target, endVal, options) {
        var _this = this;
        this.target = target;
        this.endVal = endVal;
        this.options = options;
        this.version = "2.0.3";
        this.defaults = {
          startVal: 0,
          decimalPlaces: 0,
          duration: 2,
          useEasing: true,
          useGrouping: true,
          smartEasingThreshold: 999,
          smartEasingAmount: 333,
          separator: ",",
          decimal: ".",
          prefix: "",
          suffix: ""
        };
        this.finalEndVal = null;
        this.useEasing = true;
        this.countDown = false;
        this.error = "";
        this.startVal = 0;
        this.paused = true;
        this.count = function(timestamp) {
          _this.startTime || (_this.startTime = timestamp);
          var progress = timestamp - _this.startTime;
          _this.remaining = _this.duration - progress;
          _this.useEasing ? _this.countDown ? _this.frameVal = _this.startVal - _this.easingFn(progress, 0, _this.startVal - _this.endVal, _this.duration) : _this.frameVal = _this.easingFn(progress, _this.startVal, _this.endVal - _this.startVal, _this.duration) : _this.countDown ? _this.frameVal = _this.startVal - (_this.startVal - _this.endVal) * (progress / _this.duration) : _this.frameVal = _this.startVal + (_this.endVal - _this.startVal) * (progress / _this.duration);
          _this.countDown ? _this.frameVal = _this.frameVal < _this.endVal ? _this.endVal : _this.frameVal : _this.frameVal = _this.frameVal > _this.endVal ? _this.endVal : _this.frameVal;
          _this.frameVal = Math.round(_this.frameVal * _this.decimalMult) / _this.decimalMult;
          _this.printValue(_this.frameVal);
          progress < _this.duration ? _this.rAF = requestAnimationFrame(_this.count) : null !== _this.finalEndVal ? _this.update(_this.finalEndVal) : _this.callback && _this.callback();
        };
        this.formatNumber = function(num) {
          var neg = num < 0 ? "-" : "";
          var result, x, x1, x2, x3;
          result = Math.abs(num).toFixed(_this.options.decimalPlaces);
          result += "";
          x = result.split(".");
          x1 = x[0];
          x2 = x.length > 1 ? _this.options.decimal + x[1] : "";
          if (_this.options.useGrouping) {
            x3 = "";
            for (var i = 0, len = x1.length; i < len; ++i) {
              0 !== i && i % 3 === 0 && (x3 = _this.options.separator + x3);
              x3 = x1[len - i - 1] + x3;
            }
            x1 = x3;
          }
          if (_this.options.numerals && _this.options.numerals.length) {
            x1 = x1.replace(/[0-9]/g, function(w) {
              return _this.options.numerals[+w];
            });
            x2 = x2.replace(/[0-9]/g, function(w) {
              return _this.options.numerals[+w];
            });
          }
          return neg + _this.options.prefix + x1 + x2 + _this.options.suffix;
        };
        this.easeOutExpo = function(t, b, c, d) {
          return c * (1 - Math.pow(2, -10 * t / d)) * 1024 / 1023 + b;
        };
        this.options = __assign({}, this.defaults, options);
        this.formattingFn = this.options.formattingFn ? this.options.formattingFn : this.formatNumber;
        this.easingFn = this.options.easingFn ? this.options.easingFn : this.easeOutExpo;
        this.startVal = this.validateValue(this.options.startVal);
        this.frameVal = this.startVal;
        this.endVal = this.validateValue(endVal);
        this.options.decimalPlaces = Math.max((0, this.options.decimalPlaces));
        this.decimalMult = Math.pow(10, this.options.decimalPlaces);
        this.resetDuration();
        this.options.separator = String(this.options.separator);
        this.useEasing = this.options.useEasing;
        "" === this.options.separator && (this.options.useGrouping = false);
        this.el = target;
        this.printValue(this.startVal);
      }
      CountUp.prototype.determineDirectionAndSmartEasing = function() {
        var end = this.finalEndVal ? this.finalEndVal : this.endVal;
        this.countDown = this.startVal > end;
        var animateAmount = end - this.startVal;
        if (Math.abs(animateAmount) > this.options.smartEasingThreshold) {
          this.finalEndVal = end;
          var up = this.countDown ? 1 : -1;
          this.endVal = end + up * this.options.smartEasingAmount;
          this.duration = this.duration / 2;
        } else {
          this.endVal = end;
          this.finalEndVal = null;
        }
        this.finalEndVal ? this.useEasing = false : this.useEasing = this.options.useEasing;
      };
      CountUp.prototype.start = function(updateCallback, callback) {
        if (this.error) return;
        this.callback = callback;
        this.updateCallback = updateCallback;
        if (this.duration > 0) {
          this.determineDirectionAndSmartEasing();
          this.paused = false;
          this.rAF = requestAnimationFrame(this.count);
        } else this.printValue(this.endVal);
      };
      CountUp.prototype.pauseResume = function() {
        if (this.paused) {
          this.startTime = null;
          this.duration = this.remaining;
          this.startVal = this.frameVal;
          this.determineDirectionAndSmartEasing();
          this.rAF = requestAnimationFrame(this.count);
        } else cancelAnimationFrame(this.rAF);
        this.paused = !this.paused;
      };
      CountUp.prototype.reset = function() {
        cancelAnimationFrame(this.rAF);
        this.paused = true;
        this.resetDuration();
        this.startVal = this.validateValue(this.options.startVal);
        this.frameVal = this.startVal;
        this.printValue(this.startVal);
      };
      CountUp.prototype.update = function(newEndVal) {
        cancelAnimationFrame(this.rAF);
        this.startTime = null;
        this.endVal = this.validateValue(newEndVal);
        if (this.endVal === this.frameVal) return;
        this.startVal = this.frameVal;
        this.finalEndVal || this.resetDuration();
        this.determineDirectionAndSmartEasing();
        this.rAF = requestAnimationFrame(this.count);
      };
      CountUp.prototype.printValue = function(val) {
        var result = this.formattingFn(val);
        this.updateCallback && this.updateCallback(result);
        this.el && this.el.isValid && (this.el.string = result);
      };
      CountUp.prototype.ensureNumber = function(n) {
        return "number" === typeof n && !isNaN(n);
      };
      CountUp.prototype.validateValue = function(value) {
        var newValue = Number(value);
        if (this.ensureNumber(newValue)) return newValue;
        this.error = "[CountUp] invalid start or end value: " + value;
        return null;
      };
      CountUp.prototype.resetDuration = function() {
        this.startTime = null;
        this.duration = 1e3 * Number(this.options.duration);
        this.remaining = this.duration;
      };
      return CountUp;
    }();
    exports.CountUp = CountUp;
    cc._RF.pop();
  }, {} ],
  createroom_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "64b60z65AxLV4XbIEUl3c0f", "createroom_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../../../framework/core/mvvm/model_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var CreateRoomModel = function(_super) {
      __extends(CreateRoomModel, _super);
      function CreateRoomModel() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      CreateRoomModel = __decorate([ ccclass ], CreateRoomModel);
      return CreateRoomModel;
    }(model_base_1.default);
    exports.CreateRoomModel = CreateRoomModel;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/model_base": "model_base"
  } ],
  createroom_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "10c59Jj5/1GCapOU0sa3KQN", "createroom_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var createroom_model_1 = require("./createroom_model");
    var createroom_view_1 = require("./createroom_view");
    var room_config_1 = require("../../../pdk/module/room_config");
    var rule_factory_1 = require("./data/rule_factory");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var CreateRoomModule = function(_super) {
      __extends(CreateRoomModule, _super);
      function CreateRoomModule() {
        var _this = _super.call(this) || this;
        _this.lineHeight = 1;
        _this.windowPrefabResPath = "package/public/public_createroom";
        _this.viewType = createroom_view_1.CreateRoomView;
        _this.modelType = createroom_model_1.CreateRoomModel;
        _this.needAnim = true;
        _this.clickAnywhereClose = false;
        _this.needViewMask = true;
        return _this;
      }
      CreateRoomModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        switch (pName) {
         case "closeview":
          module_manager_1.default.instance.destroyModule("CreateRoomModule");
        }
      };
      CreateRoomModule.prototype.onInit = function() {
        var d = rule_factory_1.RuleFactory.instance.getConfig(room_config_1.PdkRoomConfig.config);
      };
      CreateRoomModule = __decorate([ ccclass, module_base_1.moduleInit("CreateRoomModule") ], CreateRoomModule);
      return CreateRoomModule;
    }(module_base_1.default);
    exports.CreateRoomModule = CreateRoomModule;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/module_base": "module_base",
    "../../../pdk/module/room_config": "room_config",
    "./createroom_model": "createroom_model",
    "./createroom_view": "createroom_view",
    "./data/rule_factory": "rule_factory"
  } ],
  createroom_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5b4f1H8xYJAzbeN4kvxGjLM", "createroom_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var CreateRoomView = function(_super) {
      __extends(CreateRoomView, _super);
      function CreateRoomView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.startPos = 0;
        return _this;
      }
      __decorate([ property(cc.Float) ], CreateRoomView.prototype, "startPos", void 0);
      CreateRoomView = __decorate([ ccclass ], CreateRoomView);
      return CreateRoomView;
    }(view_base_1.default);
    exports.CreateRoomView = CreateRoomView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/view_base": "view_base"
  } ],
  custom_ui_state_switcher: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bacefPPZnNGqYcS+Ay2s0CQ", "custom_ui_state_switcher");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, executeInEditMode = _a.executeInEditMode, menu = _a.menu, inspector = _a.inspector;
    var SelectState;
    (function(SelectState) {
      SelectState[SelectState["UnSelect"] = 0] = "UnSelect";
      SelectState[SelectState["Select"] = 1] = "Select";
    })(SelectState || (SelectState = {}));
    var SaveState;
    (function(SaveState) {
      SaveState[SaveState["None"] = 0] = "None";
      SaveState[SaveState["Save"] = 1] = "Save";
    })(SaveState || (SaveState = {}));
    var CustomStyle = function() {
      function CustomStyle() {
        this.name = "";
        this.value = 0;
        this.select = 0;
        this.lastSelectState = SelectState.UnSelect;
      }
      __decorate([ property(cc.String) ], CustomStyle.prototype, "name", void 0);
      __decorate([ property({
        type: cc.Enum(SaveState),
        displayName: "\u4fdd\u5b58"
      }) ], CustomStyle.prototype, "value", void 0);
      __decorate([ property({
        type: cc.Enum(SelectState),
        displayName: "\u9009\u62e9"
      }) ], CustomStyle.prototype, "select", void 0);
      CustomStyle = __decorate([ ccclass("CustomStyleClass") ], CustomStyle);
      return CustomStyle;
    }();
    var CustomUIStateSwitcher = function(_super) {
      __extends(CustomUIStateSwitcher, _super);
      function CustomUIStateSwitcher() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.styleList = [];
        _this.nodeList = [];
        return _this;
      }
      CustomUIStateSwitcher.prototype.update = function() {
        cc.sys.platform == cc.sys.EDITOR_PAGE && this._updateEditor();
      };
      CustomUIStateSwitcher.prototype._updateEditor = function() {
        this._checkSave();
        this._checkSelect();
      };
      CustomUIStateSwitcher.prototype._checkSelect = function() {
        var styleName = null;
        for (var index = 0; index < this.styleList.length; index++) {
          var element = this.styleList[index];
          if (element.select == SelectState.Select && element.lastSelectState == SelectState.UnSelect) {
            styleName = element.name;
            element.lastSelectState = SelectState.Select;
            break;
          }
        }
        if (null == styleName || "" == styleName) return;
        for (var index = 0; index < this.styleList.length; index++) {
          var element = this.styleList[index];
          if (element.name != styleName) {
            element.lastSelectState = SelectState.UnSelect;
            element.select = SelectState.UnSelect;
          }
        }
        this.SwitchState(styleName);
      };
      CustomUIStateSwitcher.prototype._checkSave = function() {
        var styleName = null;
        for (var index = 0; index < this.styleList.length; index++) {
          var element = this.styleList[index];
          if (element.value == SaveState.Save) {
            styleName = element.name;
            element.value = SaveState.None;
          }
        }
        if (null == styleName || "" == styleName) return;
        var nodeList = this.nodeList;
        for (var index = 0; index < nodeList.length; index++) {
          var element = nodeList[index];
          null != element && this._refreshBrother(element, styleName);
        }
      };
      CustomUIStateSwitcher.prototype._refreshBrother = function(node, uiStyleName) {
        var brother = this._findBrother(node, uiStyleName);
        if (null == brother) {
          brother = this._instantiateBrother(node.parent);
          brother.name = this._getBrotherName(node, uiStyleName);
        }
        this._cloneBrotherTransform(brother, node);
        this._cloneBrotherActive(brother, node);
      };
      CustomUIStateSwitcher.prototype._findBrother = function(node, uiStyleName) {
        var brother = node.parent.getChildByName(this._getBrotherName(node, uiStyleName));
        return brother;
      };
      CustomUIStateSwitcher.prototype._getBrotherName = function(node, uiStyleName) {
        return "_" + uiStyleName + "_" + node.name;
      };
      CustomUIStateSwitcher.prototype._instantiateBrother = function(parent) {
        var node = new cc.Node();
        node.position = cc.v2(0, 0);
        node.scale = 1;
        node.parent = parent;
        return node;
      };
      CustomUIStateSwitcher.prototype._cloneBrotherTransform = function(node, brother) {
        node.setPosition(brother.position);
        node.setScale(brother.scaleX, brother.scaleY);
        node.angle = brother.angle;
        node.setAnchorPoint(brother.getAnchorPoint());
        node.setContentSize(brother.getContentSize());
        node.color = brother.color;
        node.opacity = brother.opacity;
        node.skewX = brother.skewX;
        node.skewY = brother.skewY;
        node.group = brother.group;
      };
      CustomUIStateSwitcher.prototype._cloneBrotherActive = function(node, brother) {
        node.active = brother.active;
      };
      CustomUIStateSwitcher.prototype.SwitchState = function(styleName) {
        if (null == styleName || "" == styleName) return;
        var nodeList = this.nodeList;
        for (var index = 0; index < nodeList.length; index++) {
          var node = nodeList[index];
          if (node) {
            var brother = this._findBrother(node, styleName);
            if (null != brother) {
              this._cloneBrotherTransform(node, brother);
              this._cloneBrotherActive(node, brother);
            }
          }
        }
      };
      __decorate([ property([ CustomStyle ]) ], CustomUIStateSwitcher.prototype, "styleList", void 0);
      __decorate([ property([ cc.Node ]) ], CustomUIStateSwitcher.prototype, "nodeList", void 0);
      CustomUIStateSwitcher = __decorate([ ccclass, executeInEditMode, menu("custom/CustomUIStateSwitcher") ], CustomUIStateSwitcher);
      return CustomUIStateSwitcher;
    }(cc.Component);
    exports.default = CustomUIStateSwitcher;
    cc._RF.pop();
  }, {} ],
  debug: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5fc64DL+g9IT50MSR03jgH/", "debug");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ccclass = cc._decorator.ccclass;
    var LogType;
    (function(LogType) {
      LogType[LogType["GoldTable"] = 0] = "GoldTable";
      LogType[LogType["MatchTable"] = 1] = "MatchTable";
      LogType[LogType["Table"] = 2] = "Table";
      LogType[LogType["Hall"] = 3] = "Hall";
      LogType[LogType["Recharge"] = 4] = "Recharge";
    })(LogType = exports.LogType || (exports.LogType = {}));
    var Debug = function() {
      function Debug() {}
      Debug.getLogStr = function(values) {
        var result = Date.now() + ": ";
        if (values) {
          var length = values.length;
          for (var i = 0; i < length; i++) values[i] ? result = "object" == typeof values[i] ? result + " " + i + ": " + JSON.stringify(values[i]) : result + " " + i + ": " + values[i].toString() : result += ": null ";
        } else result += ": null ";
        return result;
      };
      Debug.log = function() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) values[_i] = arguments[_i];
        if (!this.logOpen) return;
        if (!values || 0 == values.length) return;
        var length = values.length;
        1 == length ? console.log(values[0]) : 2 == length ? console.log(values[0], values[1]) : 3 == length ? console.log(values[0], values[1], values[2]) : 4 == length ? console.log(values[0], values[1], values[2], values[3]) : 5 == length ? console.log(values[0], values[1], values[2], values[3], values[4]) : 6 == length ? console.log(values[0], values[1], values[2], values[3], values[4], values[5]) : 7 == length ? console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6]) : 8 == length ? console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7]) : 9 == length ? console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8]) : console.log(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8], values[9]);
      };
      Debug.warn = function() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) values[_i] = arguments[_i];
        if (!this.logOpen) return;
        if (!values || 0 == values.length) return;
        var length = values.length;
        1 == length ? console.warn(values[0]) : 2 == length ? console.warn(values[0], values[1]) : 3 == length ? console.warn(values[0], values[1], values[2]) : 4 == length ? console.warn(values[0], values[1], values[2], values[3]) : 5 == length ? console.warn(values[0], values[1], values[2], values[3], values[4]) : 6 == length ? console.warn(values[0], values[1], values[2], values[3], values[4], values[5]) : 7 == length ? console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6]) : 8 == length ? console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7]) : 9 == length ? console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8]) : console.warn(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8], values[9]);
      };
      Debug.error = function() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) values[_i] = arguments[_i];
        if (!this.logOpen) return;
        if (!values || 0 == values.length) return;
        var length = values.length;
        1 == length ? console.error(values) : 2 == length ? console.error(values[0], values[1]) : 3 == length ? console.error(values[0], values[1], values[2]) : 4 == length ? console.error(values[0], values[1], values[2], values[3]) : 5 == length ? console.error(values[0], values[1], values[2], values[3], values[4]) : 6 == length ? console.error(values[0], values[1], values[2], values[3], values[4], values[5]) : 7 == length ? console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6]) : 8 == length ? console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7]) : 9 == length ? console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8]) : console.error(values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7], values[8], values[9]);
      };
      Debug._curIndex = 0;
      Debug._isUploading = false;
      Debug._uploadArray = [];
      Debug.logOpen = true;
      Debug = __decorate([ ccclass ], Debug);
      return Debug;
    }();
    exports.default = Debug;
    cc._RF.pop();
  }, {} ],
  descriptor: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d9668JBOxlOULG3dzfAVoI4", "descriptor");
    cc._RF.pop();
  }, {} ],
  dialog_tips_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "186c1oV1i1GFrE8arNvm29P", "dialog_tips_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var NetPromptView = function(_super) {
      __extends(NetPromptView, _super);
      function NetPromptView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.tipsLab = null;
        return _this;
      }
      NetPromptView.prototype.showTips = function(str) {
        this.tipsLab.string = str;
      };
      __decorate([ property(cc.Label) ], NetPromptView.prototype, "tipsLab", void 0);
      NetPromptView = __decorate([ ccclass ], NetPromptView);
      return NetPromptView;
    }(view_base_1.default);
    exports.default = NetPromptView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/view_base": "view_base"
  } ],
  dialog_tips: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "702ddwNuWhHCZ6Wa1vl3Z12", "dialog_tips");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var dialog_tips_view_1 = require("./dialog_tips_view");
    var DialogTips = function(_super) {
      __extends(DialogTips, _super);
      function DialogTips() {
        var _this = _super.call(this) || this;
        _this.package = "public";
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/public/dialog_tips";
        _this.viewType = dialog_tips_view_1.default;
        _this.needAnim = true;
        _this.needViewMask = true;
        return _this;
      }
      DialogTips.prototype.onShow = function(intentData) {
        null != intentData.Content && this.view.showTips(intentData.Content);
        null != intentData.EnterCallBack && (this.enterCallback = intentData.EnterCallBack);
        null != intentData.CloseCallBack && (this.closeCallback = intentData.EnterCallBack);
      };
      DialogTips.prototype.onButtonClickName = function(name) {
        switch (name) {
         case "CloseBtn":
          this.hide();
          null != this.closeCallback && this.closeCallback();
          break;

         case "EnterBtn":
          this.hide();
          null != this.enterCallback && this.enterCallback();
        }
      };
      DialogTips.prototype.onHide = function() {
        _super.prototype.onHide.call(this);
      };
      DialogTips.prototype.onDisable = function() {
        this.unscheduleAllCallbacks();
      };
      DialogTips.prototype.onDestroy = function() {
        this.unscheduleAllCallbacks();
      };
      DialogTips = __decorate([ ccclass, module_base_1.moduleInit("dialogtips") ], DialogTips);
      return DialogTips;
    }(module_base_1.default);
    exports.default = DialogTips;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/module_base": "module_base",
    "./dialog_tips_view": "dialog_tips_view"
  } ],
  dialog_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c256avMs5NKBK3mWPDo2QtC", "dialog_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var NetPromptView = function(_super) {
      __extends(NetPromptView, _super);
      function NetPromptView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.label_title = null;
        _this.label_content = null;
        _this.button_center = null;
        _this.button_left = null;
        _this.button_right = null;
        return _this;
      }
      NetPromptView.prototype.show = function() {
        module_manager_1.default.instance.playAnim(true, this.node);
      };
      NetPromptView.prototype.hide = function() {
        module_manager_1.default.instance.playAnim(false, this.node);
      };
      __decorate([ property(cc.Label) ], NetPromptView.prototype, "label_title", void 0);
      __decorate([ property(cc.Label) ], NetPromptView.prototype, "label_content", void 0);
      __decorate([ property(cc.Button) ], NetPromptView.prototype, "button_center", void 0);
      __decorate([ property(cc.Button) ], NetPromptView.prototype, "button_left", void 0);
      __decorate([ property(cc.Button) ], NetPromptView.prototype, "button_right", void 0);
      NetPromptView = __decorate([ ccclass ], NetPromptView);
      return NetPromptView;
    }(view_base_1.default);
    exports.default = NetPromptView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/view_base": "view_base"
  } ],
  diaolog: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bf477b6+1lNrrFwF76t4yWn", "diaolog");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var dialog_view_1 = require("./dialog_view");
    var Utility_1 = require("../../../../utility/Utility");
    var Dialog = function(_super) {
      __extends(Dialog, _super);
      function Dialog() {
        var _this = _super.call(this) || this;
        _this.package = "public";
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/public/public_dialog";
        _this.viewType = dialog_view_1.default;
        return _this;
      }
      Dialog.prototype.onInit = function(arg) {
        _super.prototype.onInit.call(this, arg);
        var self = this;
        this.view.button_left.node.on("click", function(event) {
          Utility_1.default.instance.playButtonSound();
          self._clickLeftBtnNotHideView || self.view.hide();
          self._leftBtnCallback && self._leftBtnCallback();
        });
        this.view.button_right.node.on("click", function(event) {
          Utility_1.default.instance.playButtonSound();
          self._clickRightBtnNotHideView || self.view.hide();
          self._rightBtnCallback && self._rightBtnCallback();
        });
        this.view.button_center.node.on("click", function(event) {
          Utility_1.default.instance.playButtonSound();
          self._clickCenterBtnNotHideView || self.view.hide();
          self._centerBtnCallback && self._centerBtnCallback();
        });
      };
      Dialog.prototype.show_center_button = function(title, text, callback, clickButtonConfirmNotHideView) {
        callback = callback || function() {};
        this.show_custom_dialog(title, text, null, null, callback, null, null, clickButtonConfirmNotHideView);
      };
      Dialog.prototype.show_common = function(title, text, confirmCallback, cancelCallback, clickButtonConfirmNotHideView) {
        confirmCallback = confirmCallback || function() {};
        cancelCallback = cancelCallback || function() {};
        this.show_custom_dialog(title, text, cancelCallback, confirmCallback, null, null, clickButtonConfirmNotHideView);
      };
      Dialog.prototype.show_custom_dialog = function(title, text, leftBtnCallback, rightBtnCallback, centerBtnCallback, clickLeftBtnNotHideView, clickRightBtnNotHideView, clickCenterBtnNotHideView) {
        if (!this.view) {
          var data = {
            title: title,
            text: text,
            leftBtnCallback: leftBtnCallback,
            rightBtnCallback: rightBtnCallback,
            centerBtnCallback: centerBtnCallback,
            clickLeftBtnNotHideView: clickLeftBtnNotHideView,
            clickRightBtnNotHideView: clickRightBtnNotHideView,
            clickCenterBtnNotHideView: clickCenterBtnNotHideView
          };
          this.AddHandleToWaitDealQueue(this.show_custom, data, this);
          return;
        }
        if (title) this.view.label_title.node.active = true; else {
          this.view.label_title.node.active = false;
          title = "";
        }
        text || (text = "");
        this.view.label_title.string = title;
        this.view.label_content.string = text;
        if (leftBtnCallback) {
          this.view.button_left.node.active = true;
          this._leftBtnCallback = leftBtnCallback;
          this._clickLeftBtnNotHideView = clickLeftBtnNotHideView;
        } else {
          this.view.button_left.node.active = false;
          this._leftBtnCallback = null;
          this._clickLeftBtnNotHideView = null;
        }
        if (rightBtnCallback) {
          this.view.button_right.node.active = true;
          this._rightBtnCallback = rightBtnCallback;
          this._clickRightBtnNotHideView = clickRightBtnNotHideView;
        } else {
          this.view.button_right.node.active = false;
          this._rightBtnCallback = null;
          this._clickRightBtnNotHideView = null;
        }
        if (centerBtnCallback) {
          this.view.button_center.node.active = true;
          this._centerBtnCallback = centerBtnCallback;
          this._clickCenterBtnNotHideView = clickCenterBtnNotHideView;
        } else {
          this.view.button_center.node.active = false;
          this._centerBtnCallback = null;
          this._clickCenterBtnNotHideView = null;
        }
        this.view.show();
      };
      Dialog.prototype.show_custom = function(data) {
        this.show_custom_dialog(data.title, data.text, data.leftBtnCallback, data.rightBtnCallback, data.centerBtnCallback, data.clickLeftBtnNotHideView, data.clickRightBtnNotHideView, data.clickCenterBtnNotHideView);
      };
      Dialog = __decorate([ ccclass, module_base_1.moduleInit("Dialog") ], Dialog);
      return Dialog;
    }(module_base_1.default);
    exports.default = Dialog;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/module_base": "module_base",
    "../../../../utility/Utility": "utility",
    "./dialog_view": "dialog_view"
  } ],
  dissolve_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fbfc8m7Ci5O5YX835OTVjwv", "dissolve_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var DissolveShader = function(_super) {
      __extends(DissolveShader, _super);
      function DissolveShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Dissolve";
        _this._needUpdate = true;
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    uniform float time;\n    varying vec2 uv0;\n    \n    void main()\n    {\n        vec4 c = color * texture2D(texture,uv0);\n        float height = c.r;\n        if(height < time)\n        {\n            discard;\n        }\n        if(height < time+0.04)\n        {\n            // \u6eb6\u89e3\u989c\u8272\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\n            c = vec4(.9,.6,0.3,c.a);\n        }\n        gl_FragColor = c;\n    }\n    ";
        return _this;
      }
      DissolveShader = __decorate([ ccclass, menu("custom/Shader/Dissolve") ], DissolveShader);
      return DissolveShader;
    }(shader_component_1.default);
    exports.default = DissolveShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  editor_box_center: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6a7c0ckv7BNsbKXEvY8Xm/N", "editor_box_center");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var EditorBoxCenter = function(_super) {
      __extends(EditorBoxCenter, _super);
      function EditorBoxCenter() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.editorBox = null;
        _this.charWidth = 25;
        _this.bgWidth = 319;
        _this.resetX = 0;
        return _this;
      }
      EditorBoxCenter.prototype.setString = function(str) {
        this.editorBox.string = str;
        this.onTextChange();
      };
      EditorBoxCenter.prototype.onTextChange = function() {
        var size = this.editorBox.node.getContentSize();
        if (0 == this.editorBox.string.length) {
          size.width = this.bgWidth;
          this.resetX > 0 && (size.width = this.resetX);
        } else size.width = this.charWidth * this.editorBox.string.length;
        this.editorBox.node.setContentSize(size);
      };
      __decorate([ property(cc.EditBox) ], EditorBoxCenter.prototype, "editorBox", void 0);
      __decorate([ property() ], EditorBoxCenter.prototype, "charWidth", void 0);
      __decorate([ property() ], EditorBoxCenter.prototype, "bgWidth", void 0);
      __decorate([ property() ], EditorBoxCenter.prototype, "resetX", void 0);
      EditorBoxCenter = __decorate([ ccclass ], EditorBoxCenter);
      return EditorBoxCenter;
    }(cc.Component);
    exports.default = EditorBoxCenter;
    cc._RF.pop();
  }, {} ],
  event_config: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e6feceo1nxHub7Ef+UhH8Xf", "event_config");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var EventCfg = function() {
      function EventCfg() {}
      EventCfg.showChat = "showChat";
      return EventCfg;
    }();
    exports.EventCfg = EventCfg;
    cc._RF.pop();
  }, {} ],
  event_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1bb5cC0WQNP+469ulGIE859", "event_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("./debug");
    var EventManager = function() {
      function EventManager() {
        this.handles = {};
      }
      EventManager.prototype.dispatch = function(eventName) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) data[_i - 1] = arguments[_i];
        var returns = [];
        for (var findEvenName in this.handles) if (findEvenName == eventName) for (var i = 0; i < this.handles[findEvenName].length; i++) {
          var returnValue = null;
          var length = 0;
          var eventData = this.handles[findEvenName][i];
          var callback = eventData.callback;
          var target = eventData.target;
          var once = eventData.once;
          data && (length = data.length);
          returnValue = 0 == length ? callback.call(target) : 1 == length ? callback.call(target, data[0]) : 2 == length ? callback.call(target, data[0], data[1]) : 3 == length ? callback.call(target, data[0], data[1], data[2]) : 4 == length ? callback.call(target, data[0], data[1], data[2], data[3]) : 5 == length ? callback.call(target, data[0], data[1], data[2], data[3], data[4]) : 6 == length ? callback.call(target, data[0], data[1], data[2], data[3], data[4], data[5]) : 7 == length ? callback.call(target, data[0], data[1], data[2], data[3], data[4], data[5], data[6]) : callback.call(target, data);
          returns.push(returnValue);
          once && this.off(eventName, callback, target);
        }
        return returns;
      };
      EventManager.prototype.has = function(eventName, callback, target) {
        if (null == this.handles[eventName]) return false;
        var length = this.handles[eventName].length;
        for (var i = 0; i < length; i++) if (this.handles[eventName][i].callback == callback && this.handles[eventName][i].target == target) return true;
        return false;
      };
      EventManager.prototype.on = function(eventName, callback, target, directCall, onceCall) {
        void 0 === onceCall && (onceCall = false);
        if (!directCall) {
          debug_1.default.error("\u7981\u6b62\u76f4\u63a5\u8c03\u7528EventManager.instance.on\u4e8b\u4ef6\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u8bf7\u4f7f\u7528\u57fa\u7c7b\u7684\u4e8b\u4ef6\u7ed1\u5b9a\u65b9\u6cd5");
          return;
        }
        null == this.handles[eventName] && (this.handles[eventName] = []);
        var data = {
          callback: callback,
          target: target,
          once: onceCall
        };
        if (this.has(eventName, callback, target)) {
          debug_1.default.warn("\u91cd\u590d\u6ce8\u518c\u4e8b\u4ef6:", eventName, target);
          var length = this.handles[eventName].length;
          for (var i = 0; i < length; i++) this.handles[eventName][i].callback == callback && this.handles[eventName][i].target == target && (this.handles[eventName][i] = data);
        } else this.handles[eventName].push(data);
      };
      EventManager.prototype.off = function(eventName, callback, target) {
        if (null == this.handles[eventName]) return;
        for (var i = 0; i < this.handles[eventName].length; i++) if (this.handles[eventName][i].callback === callback && this.handles[eventName][i].target === target) {
          this.handles[eventName].splice(i, 1);
          break;
        }
      };
      EventManager.prototype.clearAll = function() {
        this.handles = {};
      };
      EventManager.instance = new EventManager();
      return EventManager;
    }();
    exports.default = EventManager;
    cc._RF.pop();
  }, {
    "./debug": "debug"
  } ],
  flash_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "46aa4kMxw1JAK6odOKjymDe", "flash_shader");
    cc._RF.pop();
  }, {} ],
  fluxay_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f639apUUHhOZZdlwFpNmgQD", "fluxay_shader");
    cc._RF.pop();
  }, {} ],
  fluxay_super_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a03ccVFx0RI36MwtTb9XMqy", "fluxay_super_shader");
    cc._RF.pop();
  }, {} ],
  frozen_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "49207UuGQpJmKBumuz6BIWN", "frozen_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var FrozenShader = function(_super) {
      __extends(FrozenShader, _super);
      function FrozenShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Frozen";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    varying vec2 uv0;\n    void main () {\n        vec4 c = color * texture2D(texture, uv0);\n        c *= vec4(0.8, 1, 0.8, 1);\n        c.b += c.a * 0.2;\n        gl_FragColor = c;\n    }\n    ";
        return _this;
      }
      FrozenShader = __decorate([ ccclass, menu("custom/Shader/Frozen") ], FrozenShader);
      return FrozenShader;
    }(shader_component_1.default);
    exports.default = FrozenShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  gamePlayerinfo_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e42d4+M1Y9Ear9+eNhec41p", "gamePlayerinfo_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var magicEmojWidget_1 = require("./magicEmojWidget");
    var view_base_1 = require("../../../framework/core/mvvm/view_base");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var texture_manager_1 = require("../../../manager/texture_manager");
    var Utility_1 = require("../../../utility/Utility");
    var GamePlayerInfoView = function(_super) {
      __extends(GamePlayerInfoView, _super);
      function GamePlayerInfoView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.root1 = null;
        _this.bg1Root = null;
        _this.bg2Root = null;
        _this.magicEmojWidget = null;
        _this.emojs = [];
        _this.btn_back = null;
        _this.spriteMale = null;
        _this.vipFrame = null;
        _this.spriteAvatar = null;
        _this.labelName = null;
        _this.labelID = null;
        _this.labelTotalCount = null;
        _this.labelTotalWinRate = null;
        _this.labelMatchList = [];
        _this.eggRootNode = null;
        _this.eggBtnNode = null;
        _this.debugBtnNode = null;
        _this.sexFrames = [];
        _this.copyBtnNode = null;
        _this.updateUserBtn = null;
        _this.updateTipsNode = null;
        _this._onTestBtnClickCount = 0;
        _this._firstClickTime = 0;
        _this._lastPlayerId = 0;
        return _this;
      }
      GamePlayerInfoView.prototype.start = function() {
        this.eggBtnNode.on("click", this.onEggBtnClick, this);
        this.debugBtnNode.on("click", this.onDebugBtnClick, this);
        this.testEmoj();
      };
      GamePlayerInfoView.prototype.testEmoj = function() {
        for (var i = 0; i < this.emojs.length; ++i) {
          var emoj = this.emojs[i];
          emoj.name = i + "";
          emoj.on("click", this.onClickEmoj, this);
        }
      };
      GamePlayerInfoView.prototype.onClickEmoj = function(obj) {
        var type = Number(obj.node.name);
      };
      GamePlayerInfoView.prototype.onEnable = function() {};
      GamePlayerInfoView.prototype.onEggBtnClick = function() {
        if (!module_manager_1.default.instance.moduleHasActive("Hall")) return;
        0 == this._onTestBtnClickCount && (this._firstClickTime = new Date().getTime());
        this._onTestBtnClickCount++;
        if (this._onTestBtnClickCount >= 6) {
          var now = new Date().getTime();
          now - this._firstClickTime < 2e3 && (this.eggRootNode.active = true);
        }
      };
      GamePlayerInfoView.prototype.onDebugBtnClick = function() {};
      GamePlayerInfoView.prototype.resetInfoLabels = function(playerId) {
        if (playerId != this._lastPlayerId) {
          this.labelName.string = "";
          this.labelID.string = "";
          this.spriteAvatar.node.active = false;
          this.labelTotalCount.string = "";
          this.labelTotalWinRate.string = "";
          var length = this.labelMatchList.length;
          for (var i = 0; i < length; i++) this.labelMatchList[i].string = "";
        }
      };
      GamePlayerInfoView.prototype.init = function(data) {};
      GamePlayerInfoView.prototype.updatePlayerInfoView = function(userInfo) {
        var self = this;
        this.labelName.string = Utility_1.default.instance.filterPlayerName(userInfo.nickname, 14);
        this.labelID.string = "ID:" + userInfo.userId;
        var namePath = Utility_1.default.instance.getUserHeadImagePath(userInfo.headImg);
        texture_manager_1.default.instance.getSprite(namePath, function(frame) {
          if (self && self.isValid && frame) {
            frame.setOriginalSize(cc.size(70, 70));
            self.spriteAvatar.spriteFrame = frame;
            self.spriteAvatar.node.active = true;
          }
        });
        1 == userInfo.gender ? self.spriteMale.spriteFrame = this.sexFrames[0] : 2 == userInfo.gender && (self.spriteMale.spriteFrame = this.sexFrames[1]);
        var totalCount = userInfo.winCount + userInfo.lostCount;
        var winCount = userInfo.winCount;
        var winRate = "0";
        if (0 == totalCount) winRate = "0"; else {
          var temp = 100 * winCount / totalCount;
          winRate = temp.toFixed(0);
        }
        this.labelTotalCount.string = "" + totalCount;
        this.labelTotalWinRate.string = winRate + "%";
      };
      GamePlayerInfoView.prototype.updateRankView = function() {
        var _this = this;
        var length = this.labelMatchList.length;
        for (var i = 0; i < length; i++) this.labelMatchList[i].string = "x0";
        if (!this.rankInfoList) return;
        this.rankInfoList.forEach(function(rankInfoTemp) {
          1 == rankInfoTemp.rank ? _this.labelMatchList[0].string = "\xd7" + rankInfoTemp.num : 2 == rankInfoTemp.rank ? _this.labelMatchList[1].string = "\xd7" + rankInfoTemp.num : 3 == rankInfoTemp.rank && (_this.labelMatchList[2].string = "\xd7" + rankInfoTemp.num);
        });
      };
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "root1", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "bg1Root", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "bg2Root", void 0);
      __decorate([ property(magicEmojWidget_1.default) ], GamePlayerInfoView.prototype, "magicEmojWidget", void 0);
      __decorate([ property([ cc.Node ]) ], GamePlayerInfoView.prototype, "emojs", void 0);
      __decorate([ property(cc.Button) ], GamePlayerInfoView.prototype, "btn_back", void 0);
      __decorate([ property(cc.Sprite) ], GamePlayerInfoView.prototype, "spriteMale", void 0);
      __decorate([ property(cc.Sprite) ], GamePlayerInfoView.prototype, "vipFrame", void 0);
      __decorate([ property(cc.Sprite) ], GamePlayerInfoView.prototype, "spriteAvatar", void 0);
      __decorate([ property(cc.Label) ], GamePlayerInfoView.prototype, "labelName", void 0);
      __decorate([ property(cc.Label) ], GamePlayerInfoView.prototype, "labelID", void 0);
      __decorate([ property(cc.Label) ], GamePlayerInfoView.prototype, "labelTotalCount", void 0);
      __decorate([ property(cc.Label) ], GamePlayerInfoView.prototype, "labelTotalWinRate", void 0);
      __decorate([ property([ cc.Label ]) ], GamePlayerInfoView.prototype, "labelMatchList", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "eggRootNode", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "eggBtnNode", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "debugBtnNode", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], GamePlayerInfoView.prototype, "sexFrames", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "copyBtnNode", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "updateUserBtn", void 0);
      __decorate([ property(cc.Node) ], GamePlayerInfoView.prototype, "updateTipsNode", void 0);
      GamePlayerInfoView = __decorate([ ccclass ], GamePlayerInfoView);
      return GamePlayerInfoView;
    }(view_base_1.default);
    exports.default = GamePlayerInfoView;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../framework/core/mvvm/view_base": "view_base",
    "../../../manager/texture_manager": "texture_manager",
    "../../../utility/Utility": "utility",
    "./magicEmojWidget": "magicEmojWidget"
  } ],
  gamePlayerinfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5ce622LXJRJZ5IvCuI/43zV", "gamePlayerinfo");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../framework/core/mvvm/module_base");
    var gamePlayerinfo_view_1 = require("./gamePlayerinfo_view");
    var Utility_1 = require("../../../utility/Utility");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var GamePlayerInfoModule = function(_super) {
      __extends(GamePlayerInfoModule, _super);
      function GamePlayerInfoModule() {
        var _this = _super.call(this) || this;
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/public/gamePlayerInfo";
        _this.viewType = gamePlayerinfo_view_1.default;
        _this.needAnim = true;
        _this.needViewMask = true;
        return _this;
      }
      GamePlayerInfoModule.prototype.onInit = function(intentData) {
        _super.prototype.onInit.call(this, intentData);
        this._viewMask.on("click", this.onClickBtnClose, this);
      };
      GamePlayerInfoModule.prototype.refreshAuth = function(userInfo) {
        this.view.updatePlayerInfoView(userInfo);
      };
      GamePlayerInfoModule.prototype.setInfoPanelPos = function(node) {
        var pos = Number(node.parent.name);
        var worlPos = node.parent.convertToWorldSpaceAR(node.position);
        var localPos = this.view.root1.parent.convertToNodeSpaceAR(worlPos);
        if (0 == pos) {
          localPos.x += 305;
          localPos.y += 50;
          this.view.bg1Root.active = false;
          this.view.bg2Root.active = true;
          this.view.magicEmojWidget.node.active = false;
        } else if (1 == pos) {
          localPos.x -= 290;
          localPos.y -= 90;
          this.view.bg1Root.active = true;
          this.view.bg2Root.active = false;
          this.view.magicEmojWidget.node.active = true;
        } else {
          localPos.x += 305;
          localPos.y -= 90;
          this.view.bg1Root.active = true;
          this.view.bg2Root.active = false;
          this.view.magicEmojWidget.node.active = true;
        }
        this.view.root1.setPosition(localPos);
      };
      GamePlayerInfoModule.prototype.onShow = function(data) {
        this.view.bg1Root.active = true;
        this.view.bg2Root.active = false;
        this.view.magicEmojWidget.node.active = true;
        this.view.root1.setPosition(cc.v2(0, 0));
      };
      GamePlayerInfoModule.prototype.onClickBtnClose = function() {
        Utility_1.default.instance.playButtonSound();
        this.hide();
      };
      GamePlayerInfoModule = __decorate([ ccclass, module_base_1.moduleInit("GamePlayerInfoModule") ], GamePlayerInfoModule);
      return GamePlayerInfoModule;
    }(module_base_1.default);
    exports.default = GamePlayerInfoModule;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/module_base": "module_base",
    "../../../utility/Utility": "utility",
    "./gamePlayerinfo_view": "gamePlayerinfo_view"
  } ],
  game_cfg: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3f7c2+uCvBKj5yJaFTHnavx", "game_cfg");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a;
    exports.GameCfg = (_a = {}, _a[15] = {
      gName: "10m\u8dd1\u5f97\u5feb",
      module: "PdkModule"
    }, _a[16] = {
      gName: "\u672a\u77e5",
      module: ""
    }, _a);
    cc._RF.pop();
  }, {} ],
  game_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a2114STeaZDyJVwOKoKADGz", "game_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var GameManager = function() {
      function GameManager() {}
      GameManager.setGameServer = function(ip, port) {
        GameManager.gameServer = "ws://{0}:{1}".format(ip, port);
      };
      GameManager.setHallServer = function(ip, port) {
        GameManager.hallServer = "ws://{0}:{1}".format(ip, port);
      };
      return GameManager;
    }();
    exports.GameManager = GameManager;
    cc._RF.pop();
  }, {} ],
  game_net_route: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "772a6PTN0BEvK4ZAY9YSf6U", "game_net_route");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var GameServerRoute = function() {
      function GameServerRoute() {}
      GameServerRoute.enter = "table.entryHandler.enter";
      return GameServerRoute;
    }();
    exports.GameServerRoute = GameServerRoute;
    cc._RF.pop();
  }, {} ],
  game_server: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "529aaFVvtlKi6bFuxRYeYze", "game_server");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var server_base_1 = require("../server_base");
    var app_data_1 = require("../../public/const/app_data");
    var module_data_1 = require("../../public/const/module_data");
    var scene_manager_1 = require("../../../manager/scene_manager");
    var netprompt_1 = require("../../public/module/netprompt/netprompt");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var game_net_route_1 = require("./game_net_route");
    var const_code_1 = require("../../public/const/const_code");
    var user_manager_1 = require("../../../manager/user_manager");
    var model_data_1 = require("../../public/model_data");
    var game_cfg_1 = require("../../public/const/game_cfg");
    var ccclass = cc._decorator.ccclass;
    var GameServer = function(_super) {
      __extends(GameServer, _super);
      function GameServer() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      GameServer_1 = GameServer;
      GameServer.prototype.onLoad = function() {
        GameServer_1.instance = this;
        this.init("GameServer");
      };
      GameServer.prototype._init = function() {
        var self = this;
        this.model.registerNetMsg(game_net_route_1.GameServerRoute.enter, function(data) {
          self.loginRsp(data);
        }, true);
      };
      GameServer.prototype.loginRsp = function(data) {
        data.code == const_code_1.ServerCode.EnterTableCode.OK || scene_manager_1.default.gotoHall();
      };
      GameServer.prototype.connectServer = function(url) {
        module_manager_1.default.instance.showModule(netprompt_1.default, {
          showImmediately: true
        });
        this.connect(url, function(state) {
          "handshake" == state && this.startCheckPing();
          cc.log("connect server state:", state);
        });
      };
      GameServer.prototype.onConnected = function() {
        module_manager_1.default.instance.hideModule("NetPrompt");
        this._init();
        var self = this;
        var cf = game_cfg_1.GameCfg[app_data_1.default.gameid].gName;
        cc.log("\u8fde\u63a5\u6e38\u620f\u670d\u6210\u529f " + cf + "\uff1a", module_data_1.default.instance.isTableModuleActive());
        scene_manager_1.default.gotoSubGame(null, function() {
          self.login();
        });
      };
      GameServer.prototype.connectTimes = function(times) {
        this._reconTimes >= 1 && module_manager_1.default.instance.showModule(netprompt_1.default, {
          showImmediately: true,
          reconnect: true
        });
        if (this._reconTimes > this._maxReconTimes) {
          cc.warn("\u767b\u9646\u670d\u91cd\u8fde\u6b21\u6570\u7528\u5b8c\uff0c\u63d0\u793a\u767b\u9646\u5931\u8d25");
          scene_manager_1.default.gotoHall();
        }
      };
      GameServer.prototype.login = function() {
        var data = {
          openid: user_manager_1.default.instance.getUserData().openid,
          clubId: model_data_1.default.instance.clubID,
          playwayId: model_data_1.default.instance.playwayId,
          tableId: model_data_1.default.instance.tableId
        };
        this.model.send(game_net_route_1.GameServerRoute.enter, data);
      };
      GameServer.prototype.reconnectServerFail = function() {
        scene_manager_1.default.gotoHall();
      };
      GameServer.prototype.onReconnectServer = function() {
        module_manager_1.default.instance.showModule(netprompt_1.default, {
          showImmediately: true,
          reconnect: true
        });
      };
      var GameServer_1;
      GameServer = GameServer_1 = __decorate([ ccclass ], GameServer);
      return GameServer;
    }(server_base_1.default);
    exports.default = GameServer;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../manager/scene_manager": "scene_manager",
    "../../../manager/user_manager": "user_manager",
    "../../public/const/app_data": "app_data",
    "../../public/const/const_code": "const_code",
    "../../public/const/game_cfg": "game_cfg",
    "../../public/const/module_data": "module_data",
    "../../public/model_data": "model_data",
    "../../public/module/netprompt/netprompt": "netprompt",
    "../server_base": "server_base",
    "./game_net_route": "game_net_route"
  } ],
  game_util: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "84e0caEeoNO7JTzEdL/aReF", "game_util");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var protobufjs_1 = require("protobufjs");
    var md5_1 = require("./md5");
    var debug_1 = require("../manager/debug");
    var memory_storage_1 = require("../manager/memory_storage");
    var GameUtil = function() {
      function GameUtil() {}
      GameUtil._http_get = function(requestData, responeSuccessCallback, responeErrorCallback) {
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
          if (4 == xhr.readyState) if (200 == xhr.status) {
            var response = JSON.parse(xhr.responseText);
            if (!response) {
              debug_1.default.error("http\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef\uff1a", xhr.responseURL, xhr.responseText);
              return;
            }
            requestData.useCache && memory_storage_1.default.setJson(requestData.cacheKey, response);
            responeSuccessCallback && responeSuccessCallback(response);
          } else {
            if (xhr.responseText && "" != xhr.responseText) {
              var response = JSON.parse(xhr.responseText);
              responeErrorCallback(response);
            } else responeErrorCallback(null);
            debug_1.default.warn("http request error:", xhr.responseText);
          }
        };
        xhr.onerror = function(err) {
          cc.log(err);
          if (err && "string" == typeof err && -1 !== err.indexOf("timeout")) {
            requestData.requestCount < 6 && GameUtil._http_get(requestData, responeSuccessCallback, responeErrorCallback);
            requestData.requestCount += 1;
          }
        };
        xhr.ontimeout = function(err) {
          cc.log("ontimeout");
          requestData.requestCount < 6 && GameUtil._http_get(requestData, responeSuccessCallback, responeErrorCallback);
          requestData.requestCount += 1;
        };
        xhr.timeout = 5e3;
        xhr.open("GET", requestData.url, true);
        xhr.send();
      };
      GameUtil.signature = function(params) {
        var sortedObjKeys = Object.keys(params).sort();
        var text = params["token"];
        for (var _i = 0, sortedObjKeys_1 = sortedObjKeys; _i < sortedObjKeys_1.length; _i++) {
          var key = sortedObjKeys_1[_i];
          "token" != key && (text += key + params[key]);
        }
        text += "LGCSBnMznC8IO5L1";
        var md5 = new md5_1.default();
        return md5.hex_md5(text);
      };
      GameUtil.loadTexture = function(url, callback) {
        if (url.length <= 0) return;
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
          if (4 == xhr.readyState) if (200 == xhr.status) {
            var blob = new Uint8Array(this.response);
            var img = new Image();
            var strinsdf = protobufjs_1.util.base64.encode(blob, 0, blob.length);
            var base = "data:image/png;base64," + strinsdf;
            img.src = base;
            img.onload = function() {
              var texture = new cc.Texture2D();
              texture.initWithElement(img);
              texture.handleLoadedTexture();
              callback(null, texture);
            };
          } else {
            callback(xhr.statusText, null);
            debug_1.default.warn("load texture error:", xhr.statusText);
          }
        };
        xhr.open("get", url);
        xhr.responseType = "arraybuffer";
        xhr.send(null);
      };
      GameUtil.formatParamsForHttp = function(data) {
        var url = "";
        var baseUrl = data.baseUrl;
        var index = 0;
        for (var key in data.params) {
          data.params[key] || debug_1.default.warn("key not in params:", key, data.params);
          url = 0 == index ? baseUrl + key + "=" + this.encodeURL(data.params[key].toString()) : url + "&" + key + "=" + this.encodeURL(data.params[key].toString());
          index += 1;
        }
        return url;
      };
      GameUtil.getQueryString = function(seach, keyName) {
        var reg = new RegExp("(^|&)" + keyName + "=([^&]*)(&|$)", "i");
        var r = seach.substr(1).match(reg);
        if (null != r) return unescape(r[2]);
        return null;
      };
      GameUtil.encodeURL = function(s) {
        return encodeURIComponent(s);
      };
      GameUtil.string2point = function(s) {
        var l = s.charCodeAt(0);
        var e = l.toString(16);
        return "%" + e;
      };
      GameUtil.get_now_timestamp = function() {
        var d = new Date();
        var timestamp = Date.parse(d.toString());
        return timestamp / 1e3;
      };
      GameUtil.get_md5 = function(timestamp, userId, salt_a, salt_b) {
        var md5 = new md5_1.default();
        var s1 = md5.hex_md5(salt_a + userId.toString());
        var s2 = s1.replace("-", "").toLowerCase();
        var s3 = md5.hex_md5(timestamp.toString() + s2 + salt_b);
        var s4 = s3.replace("-", "").toLowerCase();
        return s4;
      };
      GameUtil.stringBytesLength = function(str) {
        var length = 0;
        for (var i = 0; i < str.length; i++) {
          var iCode = str.charCodeAt(i);
          length += iCode >= 0 && iCode <= 255 || iCode >= 65377 && iCode <= 65439 ? 1 : 2;
        }
        return length;
      };
      GameUtil.str2UTF8Byte = function(str) {
        var bytes = new Array();
        var len, c;
        len = str.length;
        for (var i = 0; i < len; i++) {
          c = str.charCodeAt(i);
          if (c >= 65536 && c <= 1114111) {
            bytes.push(c >> 18 & 7 | 240);
            bytes.push(c >> 12 & 63 | 128);
            bytes.push(c >> 6 & 63 | 128);
            bytes.push(63 & c | 128);
          } else if (c >= 2048 && c <= 65535) {
            bytes.push(c >> 12 & 15 | 224);
            bytes.push(c >> 6 & 63 | 128);
            bytes.push(63 & c | 128);
          } else if (c >= 128 && c <= 2047) {
            bytes.push(c >> 6 & 31 | 192);
            bytes.push(63 & c | 128);
          } else bytes.push(255 & c);
        }
        return bytes;
      };
      GameUtil.loadRes = function(url, completeCallback, type, connect) {
        var res = GameUtil._ResCaches[url];
        if (res) {
          completeCallback(null, res);
          return;
        }
        connect || (connect = 1);
        cc.loader.loadRes(url, type, function(error, resource) {
          if (error) {
            connect += 1;
            if (connect < 10) {
              GameUtil.loadRes(url, completeCallback, type, connect);
              debug_1.default.warn("loadRes\u5931\u8d25\uff0c\u91cd\u8bd5\uff1a", url, error);
            } else completeCallback(error, resource);
          } else {
            GameUtil._ResCaches[url] = resource;
            completeCallback(error, resource);
          }
        });
      };
      GameUtil.loadResArray = function(url, completeCallback, connect) {
        connect || (connect = 1);
        cc.loader.loadResArray(url, function(error, resource) {
          if (error) {
            connect += 1;
            if (connect < 10) {
              GameUtil.loadResArray(url, completeCallback, connect);
              debug_1.default.warn("loadRes\u5931\u8d25\uff0c\u91cd\u8bd5\uff1a", url, error);
            } else completeCallback(error, resource);
          } else completeCallback(error, resource);
        });
      };
      GameUtil.cutStr = function(str, len) {
        void 0 === len && (len = 7);
        var str_length = 0;
        var str_len = 0;
        var str_cut = new String();
        str_len = str.length;
        for (var i = 0; i < str_len; i++) {
          var a = str.charAt(i);
          str_length++;
          escape(a).length > 4 && str_length++;
          str_cut = str_cut.concat(a);
          if (str_length >= len) {
            str_cut = str_cut.concat("...");
            return str_cut;
          }
        }
        if (str_length <= len) return str;
      };
      GameUtil.currencyFormatting = function(money, fixedNumb) {
        void 0 === fixedNumb && (fixedNumb = 2);
        if (null == money) return "";
        if (money <= .001) return "0";
        var unit = [ "", "K", "M", "B", "T" ];
        var unitIndex = 0;
        var i = money;
        for (;i >= 1e3; ) {
          i /= 1e3;
          unitIndex++;
        }
        if (unitIndex < unit.length) {
          var num = Math.floor(1e3 * i / 10) / 100;
          return num.toFixed(fixedNumb) + unit[unitIndex];
        }
        return (money / 1e12).toFixed(fixedNumb) + "T";
      };
      GameUtil.getRightMount = function(mount) {
        if (void 0 == mount) {
          cc.warn("mount \u5f02\u5e38", mount);
          return 0;
        }
        var r = /^[0-9]*[1-9][0-9]*$/;
        var m = mount;
        r.test(mount.toString()) || (m = parseFloat(mount.toFixed(2)));
        return m;
      };
      GameUtil.addThousands = function(number) {
        if (void 0 == number) return "0";
        if (0 == number) return number;
        if (0 == number) return number;
        var num = number + "";
        num = num.replace(new RegExp(",", "g"), "");
        var symble = "";
        if (/^([-+]).*$/.test(num)) {
          symble = num.replace(/^([-+]).*$/, "$1");
          num = num.replace(/^([-+])(.*)$/, "$2");
        }
        if (/^[0-9]+(\.[0-9]+)?$/.test(num)) {
          var num = num.replace(new RegExp("^[0]+", "g"), "");
          /^\./.test(num) && (num = "0" + num);
          var decimal = num.replace(/^[0-9]+(\.[0-9]+)?$/, "$1");
          var integer = num.replace(/^([0-9]+)(\.[0-9]+)?$/, "$1");
          var re = /(\d+)(\d{3})/;
          while (re.test(integer)) integer = integer.replace(re, "$1,$2");
          return symble + integer + decimal;
        }
        return number;
      };
      GameUtil.AddChild = function(prefab, parent) {
        if (null === parent || null === prefab) {
          cc.log("prefab or parent is null");
          return null;
        }
        var node = cc.instantiate(prefab);
        node.position = cc.Vec2.ZERO;
        node.angle = 0;
        node.scale = 1;
        node.active = true;
        parent.addChild(node);
        return node;
      };
      GameUtil.setNodeString = function(item, str) {
        var richComp = item.getComponent(cc.RichText);
        if (richComp) richComp.string = str; else {
          var labelComp = item.getComponent(cc.Label);
          labelComp && (labelComp.string = str);
        }
      };
      GameUtil._ResCaches = {};
      return GameUtil;
    }();
    exports.default = GameUtil;
    cc._RF.pop();
  }, {
    "../manager/debug": "debug",
    "../manager/memory_storage": "memory_storage",
    "./md5": "md5",
    protobufjs: 17
  } ],
  gauss_blur_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "064bc1MKXpNkYVOSEPslK0r", "gauss_blur_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var GaussBlurShader = function(_super) {
      __extends(GaussBlurShader, _super);
      function GaussBlurShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "GaussBlur";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    #define repeats 5.\n    uniform sampler2D texture;\n    uniform vec4 color;\n    uniform float num;\n    varying vec2 uv0;\n    \n    vec4 draw(vec2 uv) {\n        return color * texture2D(texture,uv).rgba; \n    }\n    float grid(float var, float size) {\n        return floor(var*size)/size;\n    }\n    float rand(vec2 co){\n        return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main()\n    {\n        vec4 blurred_image = vec4(0.);\n        for (float i = 0.; i < repeats; i++) { \n            vec2 q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i,uv0.x+uv0.y))+num); \n            vec2 uv2 = uv0+(q*num);\n            blurred_image += draw(uv2)/2.;\n            q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i+2.,uv0.x+uv0.y+24.))+num); \n            uv2 = uv0+(q*num);\n            blurred_image += draw(uv2)/2.;\n        }\n        blurred_image /= repeats;\n        gl_FragColor = vec4(blurred_image);\n    }\n    ";
        return _this;
      }
      GaussBlurShader.prototype.setParamValue = function(material) {
        material.setNum(.03);
      };
      GaussBlurShader = __decorate([ ccclass, menu("custom/Shader/GaussBlur") ], GaussBlurShader);
      return GaussBlurShader;
    }(shader_component_1.default);
    exports.default = GaussBlurShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  glowing_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "89fe4zjTVFGcauDdI31kX8F", "glowing_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var renderEngine = cc.renderer.renderEngine;
    var renderer = renderEngine.renderer;
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var GlowingShader = function(_super) {
      __extends(GlowingShader, _super);
      function GlowingShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Glowing";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "uniform sampler2D texture;\n    uniform vec3 iResolution;\n    uniform float time;\n    uniform vec4 color;\n    varying vec2 uv0;\n\n    const float radius = 6.0;\n    // const vec3 color = vec3(0.9, 0.9, 0.0);\n\n    float coefficient()\n    {\n        float v = mod(time, 3.0);\n        if(v > 1.5)\n            v = 3.0 - v;\n        return v;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        vec2 uv = fragCoord.xy;\n        vec2 unit = 1.0 / iResolution.xy;\n        vec4 texel = texture2D(texture, uv);\n        vec4 finalColor = vec4(0.0);\n        float density = 0.0;\n\n        if(texel.a >= 1.0)\n        {\n            finalColor = texel;\n        }\n        else\n        {\n            for(int i = 0; i < int(radius); ++i)\n            {\n                density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y + unit.y * float(i))).a;\n                density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y + unit.y * float(i))).a;\n                density += texture2D(texture, vec2(uv.x - unit.x * float(i), uv.y - unit.y * float(i))).a;\n                density += texture2D(texture, vec2(uv.x + unit.x * float(i), uv.y - unit.y * float(i))).a;\n            }\n            density = density / radius;\n            finalColor = vec4(color.rgb * density, density);\n            finalColor += vec4(texel.rgb * texel.a, texel.a);\n        }\n        fragColor = finalColor;\n    }\n\n    void main()\n    {\n        mainImage(gl_FragColor, uv0.xy);\n    }";
        _this._defines = [];
        _this._params = [ {
          name: "iResolution",
          type: renderer.PARAM_FLOAT3
        } ];
        return _this;
      }
      GlowingShader.prototype.setParamValue = function(material) {
        this.node.color = new cc.Color().fromHEX("#1A7ADC");
        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);
        material.setParamValue("iResolution", iResolution);
      };
      GlowingShader = __decorate([ ccclass, menu("custom/Shader/Glowing") ], GlowingShader);
      return GlowingShader;
    }(shader_component_1.default);
    exports.default = GlowingShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  hall_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "66827g98OFNKLJTRFGukGAm", "hall_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../framework/core/mvvm/model_base");
    var hall_route_1 = require("./hall_route");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var HllModel = function(_super) {
      __extends(HllModel, _super);
      function HllModel() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      HllModel.prototype.send_enterClub = function(clubid) {
        var data = {
          clubId: clubid
        };
        this.send(hall_route_1.HallNetRoute.enterClub, data);
      };
      HllModel.prototype.send_getclubList = function() {
        this.send(hall_route_1.HallNetRoute.getClubList);
      };
      HllModel = __decorate([ ccclass ], HllModel);
      return HllModel;
    }(model_base_1.default);
    exports.HllModel = HllModel;
    cc._RF.pop();
  }, {
    "../../framework/core/mvvm/model_base": "model_base",
    "./hall_route": "hall_route"
  } ],
  hall_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e2a200NHiJJsqsGStVg2VSk", "hall_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var hall_view_1 = require("./hall_view");
    var module_base_1 = require("../../framework/core/mvvm/module_base");
    var module_manager_1 = require("../../framework/core/module_manager");
    var game_server_1 = require("../server/gameserver/game_server");
    var hall_server_1 = require("../server/hallserver/hall_server");
    var local_storage_1 = require("../../manager/local_storage");
    var hall_model_1 = require("./hall_model");
    var hall_route_1 = require("./hall_route");
    var game_manager_1 = require("../../manager/game_manager");
    var club_module_1 = require("../club/club_module");
    var toast_1 = require("../public/module/toast/toast");
    var joinClub_module_1 = require("../joinClub/joinClub_module");
    var setting_1 = require("../public/setting/setting");
    var public_rule_1 = require("../pdk/module/rule/public_rule");
    var activity_1 = require("../activity/activity");
    var playerinfo_1 = require("../playerinfo/playerinfo");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var HallModule = function(_super) {
      __extends(HallModule, _super);
      function HallModule() {
        var _this = _super.call(this) || this;
        _this.windowPrefabResPath = "package/hall/hall";
        _this.viewType = hall_view_1.default;
        _this.modelType = hall_model_1.HllModel;
        return _this;
      }
      HallModule.prototype.onLoad = function() {};
      HallModule.prototype.onShow = function() {
        this.model.netClient = hall_server_1.default.instance.netClient;
        this.model.clearMsgEvent();
        this.registerMsg();
        this.view.updateUserInfo();
        this.model.send_getclubList();
      };
      HallModule.prototype.registerMsg = function() {
        this.model.registerNetMsg(hall_route_1.HallNetRoute.getClubList, this.retGetClubList.bind(this));
      };
      HallModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        var clubId = local_storage_1.default.getNumber("_select_club_id");
        switch (pName) {
         case "Button_createClub":
          module_manager_1.default.instance.showModule(toast_1.default, "\u60a8\u672a\u83b7\u5f97\u521b\u5efa\u8054\u76df\u6743\u9650!");
          break;

         case "Button_joinClub":
          module_manager_1.default.instance.showModule(joinClub_module_1.default, null);
          break;

         case "game_15":
          local_storage_1.default.setNumber("_club_gameId", 15);
          module_manager_1.default.instance.showModule(club_module_1.ClubModule, clubId);
          break;

         case "game_16":
         case "game_20":
         case "game_21":
         case "game_22":
         case "game_30":
         case "game_31":
          local_storage_1.default.setNumber("_club_gameId", 0);
          module_manager_1.default.instance.showModule(club_module_1.ClubModule, clubId);
          break;

         case "game_23":
          module_manager_1.default.instance.showModule(toast_1.default, "\u656c\u8bf7\u671f\u5f85!");
          break;

         case "Button_set":
          module_manager_1.default.instance.showModule(setting_1.default);
          break;

         case "Button_rule":
          module_manager_1.default.instance.showModule(public_rule_1.default);
          break;

         case "Button_notice":
          module_manager_1.default.instance.showModule(activity_1.default);
          break;

         case "Sprite_head":
          module_manager_1.default.instance.showModule(playerinfo_1.default);
        }
      };
      HallModule.prototype.gotoPdk = function() {
        hall_server_1.default.instance.close();
        game_server_1.default.instance.connectServer(game_manager_1.GameManager.hallServer);
      };
      HallModule.prototype.retGetClubList = function(data) {
        0 != data.code ? this.view.showClubList(null) : data.clubList.length <= 0 ? this.view.showClubList(null) : this.view.showClubList(data);
      };
      HallModule = __decorate([ ccclass, module_base_1.moduleInit("HallModule") ], HallModule);
      return HallModule;
    }(module_base_1.default);
    exports.default = HallModule;
    cc._RF.pop();
  }, {
    "../../framework/core/module_manager": "module_manager",
    "../../framework/core/mvvm/module_base": "module_base",
    "../../manager/game_manager": "game_manager",
    "../../manager/local_storage": "local_storage",
    "../activity/activity": "activity",
    "../club/club_module": "club_module",
    "../joinClub/joinClub_module": "joinClub_module",
    "../pdk/module/rule/public_rule": "public_rule",
    "../playerinfo/playerinfo": "playerinfo",
    "../public/module/toast/toast": "toast",
    "../public/setting/setting": "setting",
    "../server/gameserver/game_server": "game_server",
    "../server/hallserver/hall_server": "hall_server",
    "./hall_model": "hall_model",
    "./hall_route": "hall_route",
    "./hall_view": "hall_view"
  } ],
  hall_net_route: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2b58293OZdMrZusLXDsNIBG", "hall_net_route");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var HallServerRoute = function() {
      function HallServerRoute() {}
      HallServerRoute.enter = "connector.entryHandler.enter";
      HallServerRoute.joinRoom = "connector.lobbyHandler.joinRoom";
      HallServerRoute.getGameServerInfo = "connector.lobbyHandler.getGameServerInfo";
      return HallServerRoute;
    }();
    exports.HallServerRoute = HallServerRoute;
    cc._RF.pop();
  }, {} ],
  hall_route: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "05980cJy25Esb0w8JZ0g53g", "hall_route");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var HallNetRoute = function() {
      function HallNetRoute() {}
      HallNetRoute.enterClub = "connector.clubHandler.enterClub";
      HallNetRoute.getClubList = "connector.clubHandler.getClubList";
      HallNetRoute.onRefreshClub = "connector.clubHandler.onRefreshClub";
      return HallNetRoute;
    }();
    exports.HallNetRoute = HallNetRoute;
    cc._RF.pop();
  }, {} ],
  hall_server: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "303a4yBiJxJiLYryM7lJUj4", "hall_server");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var time_manager_1 = require("../../../manager/time_manager");
    var game_manager_1 = require("../../../manager/game_manager");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var netprompt_1 = require("../../public/module/netprompt/netprompt");
    var game_server_1 = require("../gameserver/game_server");
    var model_data_1 = require("../../public/model_data");
    var app_data_1 = require("../../public/const/app_data");
    var server_base_1 = require("../server_base");
    var scene_manager_1 = require("../../../manager/scene_manager");
    var hall_net_route_1 = require("./hall_net_route");
    var const_code_1 = require("../../public/const/const_code");
    var user_manager_1 = require("../../../manager/user_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var HallServer = function(_super) {
      __extends(HallServer, _super);
      function HallServer() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.isNeedCheck = true;
        return _this;
      }
      HallServer_1 = HallServer;
      HallServer.prototype.onLoad = function() {
        HallServer_1.instance = this;
        this.init("HallServer");
      };
      HallServer.prototype._init = function() {
        var self = this;
        this.model.registerNetMsg(hall_net_route_1.HallServerRoute.enter, function(data) {
          self.loginRsp(data);
        }, true);
        this.model.registerNetMsg(hall_net_route_1.HallServerRoute.joinRoom, function(data) {
          self.joinRoom(data);
        }, true);
        this.model.registerNetMsg(hall_net_route_1.HallServerRoute.getGameServerInfo, function(data) {
          self.enterTable(data);
        }, true);
      };
      HallServer.prototype.loginRsp = function(data) {
        if (200 == data.code) {
          user_manager_1.default.instance.setUserData(data.info);
          var info = data.info.gameInfo;
          if (info && this.isNeedCheck) if (info.code == const_code_1.ServerCode.GameStatus.GAME_PLAYING) {
            model_data_1.default.instance.tableId = info.gameInfo.tableId || 0;
            model_data_1.default.instance.clubID = info.gameInfo.clubId || 0;
            model_data_1.default.instance.playwayId = info.gameInfo.playwayId || "0";
            this._enterGameServer(info.gameInfo.host, info.gameInfo.port);
          } else scene_manager_1.default.showHallUI(); else scene_manager_1.default.showHallUI();
          this.isNeedCheck = true;
        }
      };
      HallServer.prototype.enterTable = function(data) {
        data.code == const_code_1.ServerCode.ServerAdrCode.OK ? this._enterGameServer(data.host, data.port) : scene_manager_1.default.showHallUI();
      };
      HallServer.prototype._enterGameServer = function(ip, port) {
        module_manager_1.default.instance.showModule(netprompt_1.default);
        this.close();
        game_manager_1.GameManager.setGameServer(ip, port);
        game_server_1.default.instance.connectServer(game_manager_1.GameManager.gameServer);
      };
      HallServer.prototype.checkIsPlaying = function(data) {
        module_manager_1.default.instance.showModule(netprompt_1.default);
        if (data.code == const_code_1.ServerCode.GameStatus.GAME_PLAYING) {
          this.close();
          var info = data.gameInfo;
          game_manager_1.GameManager.setGameServer(info.ip, info.port);
          game_server_1.default.instance.connectServer(game_manager_1.GameManager.gameServer);
        } else scene_manager_1.default.showHallUI();
      };
      HallServer.prototype.createGame = function(gameid, clubid, playwayid) {
        this._joinGame(gameid, 0, clubid, playwayid);
      };
      HallServer.prototype.enterGame = function(gameInfo) {
        module_manager_1.default.instance.showModule(netprompt_1.default);
        app_data_1.default.gameid = gameInfo.gameId;
        model_data_1.default.instance.tableId = gameInfo.tableId;
        model_data_1.default.instance.clubID = 0;
        model_data_1.default.instance.playwayId = "";
        this._enterGameServer(gameInfo.host, gameInfo.port);
      };
      HallServer.prototype._joinGame = function(gameid, tableid, clubid, playwayid) {
        module_manager_1.default.instance.showModule(netprompt_1.default);
        app_data_1.default.gameid = gameid;
        model_data_1.default.instance.tableId = tableid;
        model_data_1.default.instance.clubID = clubid;
        model_data_1.default.instance.playwayId = playwayid;
        this.model.send(hall_net_route_1.HallServerRoute.getGameServerInfo, {
          gameId: gameid
        });
      };
      HallServer.prototype.joinRoom = function(data) {
        if (0 == data.code) {
          this.close();
          module_manager_1.default.instance.showModule(netprompt_1.default, {
            showImmediately: true
          });
          game_server_1.default.instance.connectServer(game_manager_1.GameManager.hallServer);
        }
      };
      HallServer.prototype.loginHallServer = function() {
        var _this = this;
        module_manager_1.default.instance.showModule(netprompt_1.default);
        this.connectServer(game_manager_1.GameManager.hallServer, function(state) {
          if ("handshake" == state) {
            var data = {
              code: app_data_1.default.code,
              userInfo: {
                name: app_data_1.default.code,
                avatarUrl: "http://sincebest-bull-test.oss-cn-hangzhou.aliyuncs.com/20180723_e852c0d11edf47529de8e7c69c848ca8.jpg",
                gender: 1
              },
              platform: "win"
            };
            _this.model.send(hall_net_route_1.HallServerRoute.enter, data);
            _this.startCheckPing();
          }
        });
      };
      HallServer.prototype.connectServer = function(url, callback) {
        this.connect(url, callback);
        cc.log("\u5927\u5385\u670d\u8fde\u63a5\u65f6\u95f4\uff1a", time_manager_1.default.instance.getServerTime());
      };
      HallServer.prototype.connectTimes = function(times) {
        this._reconTimes >= 1 && module_manager_1.default.instance.showModule(netprompt_1.default, {
          showImmediately: true,
          reconnect: true
        });
        if (this._reconTimes > this._maxReconTimes) {
          cc.warn("\u767b\u9646\u670d\u91cd\u8fde\u6b21\u6570\u7528\u5b8c\uff0c\u63d0\u793a\u767b\u9646\u5931\u8d25");
          scene_manager_1.default.gotoLogin();
        }
      };
      HallServer.prototype.onConnected = function() {
        this._init();
        module_manager_1.default.instance.hideModule("NetPrompt");
      };
      var HallServer_1;
      HallServer = HallServer_1 = __decorate([ ccclass ], HallServer);
      return HallServer;
    }(server_base_1.default);
    exports.default = HallServer;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../manager/game_manager": "game_manager",
    "../../../manager/scene_manager": "scene_manager",
    "../../../manager/time_manager": "time_manager",
    "../../../manager/user_manager": "user_manager",
    "../../public/const/app_data": "app_data",
    "../../public/const/const_code": "const_code",
    "../../public/model_data": "model_data",
    "../../public/module/netprompt/netprompt": "netprompt",
    "../gameserver/game_server": "game_server",
    "../server_base": "server_base",
    "./hall_net_route": "hall_net_route"
  } ],
  hall_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ca968dp/vpIPr3dFpw9bJBl", "hall_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../framework/core/mvvm/view_base");
    var module_manager_1 = require("../../framework/core/module_manager");
    var user_manager_1 = require("../../manager/user_manager");
    var Utility_1 = require("../../utility/Utility");
    var game_util_1 = require("../../utility/game_util");
    var scene_manager_1 = require("../../manager/scene_manager");
    var texture_manager_1 = require("../../manager/texture_manager");
    var clubList_item_1 = require("./component/clubList_item");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var HallView = function(_super) {
      __extends(HallView, _super);
      function HallView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.userIDLab = null;
        _this.userNameLab = null;
        _this.avatar = null;
        _this.Sprite_noClubFlag = null;
        _this.Label_noClubFlag = null;
        _this.PageView_clubList = null;
        _this.Sprite_clubFrame = null;
        _this.Node_gameItem = null;
        return _this;
      }
      HallView.prototype.onShow = function() {
        scene_manager_1.default.lastEntranceOpenModuleName = "";
      };
      HallView.prototype.onLoad = function() {
        module_manager_1.default.instance.hideModule("NetPrompt");
      };
      HallView.prototype.updateUserInfo = function() {
        var _this = this;
        var data = user_manager_1.default.instance.getUserData();
        game_util_1.default.setNodeString(this.userIDLab, "ID:" + data.uid);
        var subName = Utility_1.default.instance.playerNameClamp(data.name, 5, "...");
        game_util_1.default.setNodeString(this.userNameLab, subName);
        texture_manager_1.default.instance.getSprite(data.avatarUrl, function(sp) {
          _this.avatar.spriteFrame = sp;
        });
      };
      HallView.prototype.showClubList = function(data) {
        if (data) {
          this.Sprite_noClubFlag.node.active = false;
          this.Label_noClubFlag.node.active = false;
          this.Node_gameItem.active = true;
          this.PageView_clubList.removeAllPages();
          for (var i = 0; i < data.clubList.length; i++) {
            var clubData = data.clubList[i];
            var Sprite_clubFrame = cc.instantiate(this.Sprite_clubFrame);
            Sprite_clubFrame.active = true;
            this.PageView_clubList.addPage(Sprite_clubFrame);
            var item = Sprite_clubFrame.getComponent(clubList_item_1.ClubListItem);
            item.initUI(clubData);
          }
        } else {
          this.Sprite_noClubFlag.node.active = true;
          this.Label_noClubFlag.node.active = true;
          this.Node_gameItem.active = false;
        }
      };
      __decorate([ property(cc.Node) ], HallView.prototype, "userIDLab", void 0);
      __decorate([ property(cc.Node) ], HallView.prototype, "userNameLab", void 0);
      __decorate([ property(cc.Sprite) ], HallView.prototype, "avatar", void 0);
      __decorate([ property(cc.Sprite) ], HallView.prototype, "Sprite_noClubFlag", void 0);
      __decorate([ property(cc.Label) ], HallView.prototype, "Label_noClubFlag", void 0);
      __decorate([ property(cc.PageView) ], HallView.prototype, "PageView_clubList", void 0);
      __decorate([ property(cc.Node) ], HallView.prototype, "Sprite_clubFrame", void 0);
      __decorate([ property(cc.Node) ], HallView.prototype, "Node_gameItem", void 0);
      HallView = __decorate([ ccclass ], HallView);
      return HallView;
    }(view_base_1.default);
    exports.default = HallView;
    cc._RF.pop();
  }, {
    "../../framework/core/module_manager": "module_manager",
    "../../framework/core/mvvm/view_base": "view_base",
    "../../manager/scene_manager": "scene_manager",
    "../../manager/texture_manager": "texture_manager",
    "../../manager/user_manager": "user_manager",
    "../../utility/Utility": "utility",
    "../../utility/game_util": "game_util",
    "./component/clubList_item": "clubList_item"
  } ],
  ice_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8038fyWbzRJk6xJf044tlgp", "ice_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var IceShader = function(_super) {
      __extends(IceShader, _super);
      function IceShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Ice";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    varying vec2 uv0;\n    void main () {\n        vec4 clrx = color * texture2D(texture, uv0);\n        float brightness = (clrx.r + clrx.g + clrx.b) * (1. / 3.);\n        float gray = (1.5)*brightness;\n        clrx = vec4(gray, gray, gray, clrx.a)*vec4(0.8,1.2,1.5,1);\n        gl_FragColor =clrx;\n    }\n    ";
        return _this;
      }
      IceShader = __decorate([ ccclass, menu("custom/Shader/Ice") ], IceShader);
      return IceShader;
    }(shader_component_1.default);
    exports.default = IceShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  image_font: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fb322lbfy1HPrISjPuEBK0o", "image_font");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ImageFont = function(_super) {
      __extends(ImageFont, _super);
      function ImageFont() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.sourceSprites = [];
        _this.numSprites = [];
        return _this;
      }
      ImageFont.prototype.setNum = function(num) {
        if (num < 10) {
          this.showCount(1);
          this.numSprites[0].spriteFrame = this.sourceSprites[num];
        } else if (num < 99) {
          this.showCount(2);
          var ge = Math.floor(num % 10);
          var shi = Math.floor(num / 10);
          this.numSprites[0].spriteFrame = this.sourceSprites[shi];
          this.numSprites[1].spriteFrame = this.sourceSprites[ge];
        } else if (num < 999) {
          this.showCount(3);
          var bai = Math.floor(num / 100);
          var shi = Math.floor(num / 10 % 10);
          var ge = Math.floor(num % 10);
          this.numSprites[0].spriteFrame = this.sourceSprites[bai];
          this.numSprites[1].spriteFrame = this.sourceSprites[shi];
          this.numSprites[2].spriteFrame = this.sourceSprites[ge];
        }
      };
      ImageFont.prototype.showCount = function(count) {
        var length = this.numSprites.length;
        for (var i = 0; i < length; i++) this.numSprites[i].node.active = i < count;
      };
      __decorate([ property([ cc.SpriteFrame ]) ], ImageFont.prototype, "sourceSprites", void 0);
      __decorate([ property([ cc.Sprite ]) ], ImageFont.prototype, "numSprites", void 0);
      ImageFont = __decorate([ ccclass ], ImageFont);
      return ImageFont;
    }(cc.Component);
    exports.default = ImageFont;
    cc._RF.pop();
  }, {} ],
  init_config_test: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "92dc1On29JAioF8OtLS1t9h", "init_config_test");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var InitConfigTest = function() {
      function InitConfigTest() {}
      return InitConfigTest;
    }();
    exports.default = InitConfigTest;
    cc._RF.pop();
  }, {} ],
  init_plugins: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "07708LzDV5GCZwBk4TMmLQc", "init_plugins");
    "use strict";
    window.appData = window.appData ? window.appData : {};
    window.appData.constHostDevelop = "h5international.znuogame.com:8080";
    cc._RF.pop();
  }, {} ],
  init: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bda9bM1WxxDsbMlWcBCIg8L", "init");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_manager_1 = require("../framework/core/module_manager");
    var app_data_1 = require("../pacakge/public/const/app_data");
    var auth_module_1 = require("../pacakge/hall/module/auth/auth_module");
    var scene_manager_1 = require("../manager/scene_manager");
    var loading_1 = require("../pacakge/public/loading/loading");
    var game_util_1 = require("../utility/game_util");
    var event_manager_1 = require("../manager/event_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var Init = function(_super) {
      __extends(Init, _super);
      function Init() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.canvas = null;
        return _this;
      }
      Init.prototype.onLoad = function() {
        var _this = this;
        this.resize();
        cc.view.setResizeCallback(function() {
          cc.log("setResizeCallback", cc.view.getFrameSize());
          event_manager_1.default.instance.dispatch("_resize_");
          _this.resize();
        });
        scene_manager_1.default.init();
        app_data_1.default.setServerByData();
        false;
        game_util_1.default.loadResArray([ "package/hall/module/auth/AuthModule" ], function(error, resource) {
          error || module_manager_1.default.instance.showModule(auth_module_1.default);
        });
      };
      Init.prototype.resize = function() {
        var canvas = this.canvas;
        this.curDR || (this.curDR = canvas.designResolution);
        var dr = this.curDR;
        var s = cc.view.getFrameSize();
        var rw = s.width;
        var rh = s.height;
        var finalW = rw;
        var finalH = rh;
        if (rw / rh > dr.width / dr.height) {
          finalH = dr.height;
          finalW = finalH * rw / rh;
        } else {
          finalW = dr.width;
          finalH = rh / rw * finalW;
        }
        canvas.designResolution = cc.size(finalW, finalH);
        canvas.node.width = finalW;
        canvas.node.height = finalH;
        true;
        var frameSize = s;
        app_data_1.default.isIphoneX = frameSize.width / frameSize.height >= 2;
        app_data_1.default.designResolution = canvas.designResolution;
        app_data_1.default.iphonexOffset = app_data_1.default.designResolution.width * (44 / 812);
        cc.log("canvas", canvas.designResolution, app_data_1.default.iphonexOffset);
      };
      Init.prototype.loadiPhoneX = function() {
        false;
      };
      __decorate([ property(cc.Canvas) ], Init.prototype, "canvas", void 0);
      Init = __decorate([ ccclass ], Init);
      return Init;
    }(cc.Component);
    exports.default = Init;
    cc._RF.pop();
  }, {
    "../framework/core/module_manager": "module_manager",
    "../manager/event_manager": "event_manager",
    "../manager/scene_manager": "scene_manager",
    "../pacakge/hall/module/auth/auth_module": "auth_module",
    "../pacakge/public/const/app_data": "app_data",
    "../pacakge/public/loading/loading": "loading",
    "../utility/game_util": "game_util"
  } ],
  joinClub_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e3675B2ya5M7ZQW4PMzZS+n", "joinClub_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../framework/core/mvvm/model_base");
    var joinClub_route_1 = require("./joinClub_route");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var JoinClubModel = function(_super) {
      __extends(JoinClubModel, _super);
      function JoinClubModel() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      JoinClubModel.prototype.send_joinClubByCode = function(invateCode) {
        var data = {
          invateCode: invateCode
        };
        this.send(joinClub_route_1.JoinClubNetRoute.joinClubByCode, data);
      };
      JoinClubModel = __decorate([ ccclass ], JoinClubModel);
      return JoinClubModel;
    }(model_base_1.default);
    exports.JoinClubModel = JoinClubModel;
    cc._RF.pop();
  }, {
    "../../framework/core/mvvm/model_base": "model_base",
    "./joinClub_route": "joinClub_route"
  } ],
  joinClub_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9fda59H9MtDrIWtGqbRxi8b", "joinClub_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var joinClub_view_1 = require("./joinClub_view");
    var joinClub_model_1 = require("./joinClub_model");
    var module_base_1 = require("../../framework/core/mvvm/module_base");
    var module_manager_1 = require("../../framework/core/module_manager");
    var toast_1 = require("../public/module/toast/toast");
    var joinClub_route_1 = require("./joinClub_route");
    var hall_server_1 = require("../server/hallserver/hall_server");
    var club_module_1 = require("../club/club_module");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var JoinClubModule = function(_super) {
      __extends(JoinClubModule, _super);
      function JoinClubModule() {
        var _this = _super.call(this) || this;
        _this.windowPrefabResPath = "package/joinClub/joinClub";
        _this.viewType = joinClub_view_1.default;
        _this.modelType = joinClub_model_1.JoinClubModel;
        _this.needAnim = true;
        _this.clickAnywhereClose = false;
        _this.needViewMask = true;
        return _this;
      }
      JoinClubModule.prototype.onLoad = function() {};
      JoinClubModule.prototype.onShow = function() {
        this.model.netClient = hall_server_1.default.instance.netClient;
        this.model.clearMsgEvent();
        this.registerMsg();
        this.view.emitBindFunc(this.joinClubByCode.bind(this));
      };
      JoinClubModule.prototype.registerMsg = function() {
        this.model.registerNetMsg(joinClub_route_1.JoinClubNetRoute.joinClubByCode, this.retJoinClubByCode.bind(this));
        this.model.registerNetMsg(joinClub_route_1.JoinClubNetRoute.onjoinClub, this.retOnJoinClub.bind(this));
      };
      JoinClubModule.prototype.joinClubByCode = function(invateCode) {
        this.model.send_joinClubByCode(invateCode);
      };
      JoinClubModule.prototype.retJoinClubByCode = function(data) {
        0 != data.code && module_manager_1.default.instance.showModule(toast_1.default, "\u4eb2\u53cb\u5708\u4e0d\u5b58\u5728");
      };
      JoinClubModule.prototype.retOnJoinClub = function(data) {
        var clubId = data.clubId;
        module_manager_1.default.instance.showModule(club_module_1.ClubModule, clubId);
      };
      JoinClubModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        cc.log(pName);
        switch (pName) {
         case "Button_close":
          module_manager_1.default.instance.destroyModule("JoinClubModule");
          break;

         case "Button_copy":
          module_manager_1.default.instance.showModule(toast_1.default, "\u7c98\u8d34\u677f\u4e2d\u6682\u65e0\u6b63\u786e\u7684\u9080\u8bf7\u7801!");
          break;

         case "Button_0":
          this.view.inputNumber(0);
          break;

         case "Button_1":
          this.view.inputNumber(1);
          break;

         case "Button_2":
          this.view.inputNumber(2);
          break;

         case "Button_3":
          this.view.inputNumber(3);
          break;

         case "Button_4":
          this.view.inputNumber(4);
          break;

         case "Button_5":
          this.view.inputNumber(5);
          break;

         case "Button_6":
          this.view.inputNumber(6);
          break;

         case "Button_7":
          this.view.inputNumber(7);
          break;

         case "Button_8":
          this.view.inputNumber(8);
          break;

         case "Button_9":
          this.view.inputNumber(9);
          break;

         case "Button_10":
          this.view.resetNumber();
          break;

         case "Button_11":
          this.view.deleteNumber();
        }
      };
      JoinClubModule = __decorate([ ccclass, module_base_1.moduleInit("JoinClubModule") ], JoinClubModule);
      return JoinClubModule;
    }(module_base_1.default);
    exports.default = JoinClubModule;
    cc._RF.pop();
  }, {
    "../../framework/core/module_manager": "module_manager",
    "../../framework/core/mvvm/module_base": "module_base",
    "../club/club_module": "club_module",
    "../public/module/toast/toast": "toast",
    "../server/hallserver/hall_server": "hall_server",
    "./joinClub_model": "joinClub_model",
    "./joinClub_route": "joinClub_route",
    "./joinClub_view": "joinClub_view"
  } ],
  joinClub_route: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "401e0hZrVlP1bU4Xi/krpUL", "joinClub_route");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var JoinClubNetRoute = function() {
      function JoinClubNetRoute() {}
      JoinClubNetRoute.joinClubByCode = "connector.clubHandler.joinClubByCode";
      JoinClubNetRoute.onjoinClub = "onjoinClub";
      return JoinClubNetRoute;
    }();
    exports.JoinClubNetRoute = JoinClubNetRoute;
    cc._RF.pop();
  }, {} ],
  joinClub_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "08bb3fA3PFERq1vuJaftWYp", "joinClub_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../framework/core/mvvm/view_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var JoinClubView = function(_super) {
      __extends(JoinClubView, _super);
      function JoinClubView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.Label_input = null;
        _this.Node_num = null;
        _this.sendJoinClubCallBack = null;
        return _this;
      }
      JoinClubView.prototype.onShow = function() {};
      JoinClubView.prototype.onLoad = function() {};
      JoinClubView.prototype.emitBindFunc = function(cb) {
        this.sendJoinClubCallBack = cb;
      };
      JoinClubView.prototype.inputNumber = function(num) {
        var subStr = "";
        var items = this.Node_num.getComponentsInChildren(cc.Label);
        for (var i = 0; i < items.length; i++) {
          var item = items[i];
          if ("" == item.string) {
            item.string = num.toString();
            subStr += item.string;
            7 == i && this.sendJoinClubCallBack && this.sendJoinClubCallBack(parseInt(subStr));
            break;
          }
          subStr += item.string;
        }
        this.Label_input.node.active = false;
      };
      JoinClubView.prototype.deleteNumber = function() {
        var items = this.Node_num.getComponentsInChildren(cc.Label);
        for (var i = items.length - 1; i >= 0; i--) {
          var item = items[i];
          if ("" != item.string) {
            item.string = "";
            0 == i && (this.Label_input.node.active = true);
            break;
          }
        }
      };
      JoinClubView.prototype.resetNumber = function() {
        var items = this.Node_num.getComponentsInChildren(cc.Label);
        for (var i = 0; i < items.length; i++) {
          var item = items[i];
          item.string = "";
        }
        this.Label_input.node.active = true;
      };
      __decorate([ property(cc.Label) ], JoinClubView.prototype, "Label_input", void 0);
      __decorate([ property(cc.Node) ], JoinClubView.prototype, "Node_num", void 0);
      JoinClubView = __decorate([ ccclass ], JoinClubView);
      return JoinClubView;
    }(view_base_1.default);
    exports.default = JoinClubView;
    cc._RF.pop();
  }, {
    "../../framework/core/mvvm/view_base": "view_base"
  } ],
  language_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3cce4iqgodFs4ooORk8zT18", "language_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var game_util_1 = require("../utility/game_util");
    var LanguageManager = function() {
      function LanguageManager() {}
      LanguageManager.init = function(language) {
        if (language === LanguageManager._curLang) return;
        LanguageManager._curLang = language;
        LanguageManager.loadLanguageData(language);
      };
      LanguageManager.change = function() {
        var ch = "zh-cn" == LanguageManager._curLang ? "en" : "zh-cn";
        this.init(ch);
      };
      LanguageManager.loadLanguageData = function(language) {
        game_util_1.default.loadRes("i18n/" + language, function(error, asset) {
          if (error) {
            cc.log(error);
            return;
          }
          LanguageManager._polyInst = asset.json;
        });
      };
      LanguageManager.t = function(key, opt) {
        return LanguageManager._polyInst[key] || "";
      };
      LanguageManager._curLang = "zh-cn";
      return LanguageManager;
    }();
    exports.default = LanguageManager;
    cc._RF.pop();
  }, {
    "../utility/game_util": "game_util"
  } ],
  layout_grid: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ec173oAbDxEGaVcPfd1TRMx", "layout_grid");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var LayoutGrid = function(_super) {
      __extends(LayoutGrid, _super);
      function LayoutGrid() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.cellSize = cc.Vec2.ZERO;
        _this.colNum = 8;
        _this.spacingX = 0;
        _this.spacingY = 0;
        _this.prefabNode = null;
        _this.horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
        return _this;
      }
      LayoutGrid.prototype.getChilds = function(count, defaultActive) {
        void 0 === defaultActive && (defaultActive = true);
        var childs = [];
        for (var i = 0; i < count; i++) {
          var node = this._getNode(i, this.node);
          node.name = i.toString();
          childs.push(node);
        }
        if (count < this.node.childrenCount) for (var i = count; i < this.node.childrenCount; i++) this.node.children[i].active = false;
        for (var i = 0; i < count; i++) this._setPosByIndex(i, defaultActive);
        this.node.sortAllChildren();
        return childs;
      };
      LayoutGrid.prototype._setPosByIndex = function(index, defaultActive) {
        if (this.horizontalDirection == cc.Layout.HorizontalDirection.RIGHT_TO_LEFT) {
          var xIndex = Math.floor(index % this.colNum);
          var yIndex = Math.floor(index / this.colNum);
          var xPos = -this.cellSize.x / 2 - Math.abs(this.spacingX * xIndex);
          var yPos = -Math.abs(this.spacingY * yIndex);
          var child = this.node.children[index];
          child.position = cc.v2(xPos, yPos);
          child.zIndex = this.colNum - xIndex + yIndex * this.colNum;
          child.active = defaultActive;
        } else {
          var xIndex = Math.floor(index % this.colNum);
          var yIndex = Math.floor(index / this.colNum);
          var xPos = this.cellSize.x / 2 + Math.abs(this.spacingX * xIndex);
          var yPos = -Math.abs(this.spacingY * yIndex);
          var child = this.node.children[index];
          child.position = cc.v2(xPos, yPos);
          child.zIndex = index;
          child.active = defaultActive;
        }
      };
      LayoutGrid.prototype._getNode = function(index, parent) {
        if (parent.childrenCount <= index) {
          var node = cc.instantiate(this.prefabNode);
          node.position = cc.v2(0, 0);
          node.scale = 1;
          node.parent = parent;
          return this._getNode(index, parent);
        }
        return parent.children[index];
      };
      __decorate([ property(cc.Vec2) ], LayoutGrid.prototype, "cellSize", void 0);
      __decorate([ property(Number) ], LayoutGrid.prototype, "colNum", void 0);
      __decorate([ property(Number) ], LayoutGrid.prototype, "spacingX", void 0);
      __decorate([ property(Number) ], LayoutGrid.prototype, "spacingY", void 0);
      __decorate([ property(cc.Node) ], LayoutGrid.prototype, "prefabNode", void 0);
      __decorate([ property({
        type: cc.Enum(cc.Layout.HorizontalDirection),
        displayName: "\u6c34\u5e73\u65b9\u5411",
        serializable: true
      }) ], LayoutGrid.prototype, "horizontalDirection", void 0);
      LayoutGrid = __decorate([ ccclass ], LayoutGrid);
      return LayoutGrid;
    }(cc.Component);
    exports.default = LayoutGrid;
    cc._RF.pop();
  }, {} ],
  listview_demo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6e3falSadhI6p8SIQEvEsTR", "listview_demo");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var listview_1 = require("./listview");
    var debug_1 = require("../../../manager/debug");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ListView_Demo = function(_super) {
      __extends(ListView_Demo, _super);
      function ListView_Demo() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.scrollview = null;
        _this.view = null;
        _this.content = null;
        _this.prefab = null;
        _this.m_list = null;
        return _this;
      }
      ListView_Demo.prototype.onLoad = function() {
        var list = new listview_1.ListView({
          scrollview: this.scrollview,
          view: this.view,
          content: this.content,
          item_prefab: this.prefab,
          cb_host: this,
          item_update_func: this.update_list_item,
          select_cb: this.on_item_select,
          column: 2,
          row: 5,
          gap_y: 2,
          direction: listview_1.ListViewDir.Vertical
        });
        var length = 100;
        var datas = [];
        for (var i = 0; i < length; i++) datas.push("\u6211\u662f\u7b2c" + i + "\u6761\u6570\u636e\uff01");
        this.m_list = list;
        list.set_data(datas);
        list.select_item(55);
        list.scroll_to(55);
      };
      ListView_Demo.prototype.on_item_select = function(data, index) {
        debug_1.default.log(data, index);
      };
      ListView_Demo.prototype.update_list_item = function(item, data, index) {
        item.getComponent(cc.Label).string = data.toString();
        index == this.m_list.selected_index ? item.color = cc.Color.RED : item.color = cc.Color.WHITE;
      };
      __decorate([ property(cc.ScrollView) ], ListView_Demo.prototype, "scrollview", void 0);
      __decorate([ property(cc.Node) ], ListView_Demo.prototype, "view", void 0);
      __decorate([ property(cc.Node) ], ListView_Demo.prototype, "content", void 0);
      __decorate([ property(cc.Node) ], ListView_Demo.prototype, "prefab", void 0);
      ListView_Demo = __decorate([ ccclass ], ListView_Demo);
      return ListView_Demo;
    }(cc.Component);
    exports.default = ListView_Demo;
    cc._RF.pop();
  }, {
    "../../../manager/debug": "debug",
    "./listview": "listview"
  } ],
  listview: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6bb60iI4glJLJxY0y1Dw/xT", "listview");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var event_manager_1 = require("../../../manager/event_manager");
    var ListView = function() {
      function ListView(params) {
        var _this = this;
        this.m_selected_index = -1;
        this.m_scrollview = params.scrollview;
        this.m_view = params.view;
        this.m_content = params.content;
        this.m_item_prefab = params.item_prefab;
        this.m_item_prefab.active = false;
        this.m_item_width = this.m_item_prefab.width;
        this.m_item_height = this.m_item_prefab.height;
        this.m_dir = params.direction || ListViewDir.Vertical;
        this.m_width = params.width || this.m_view.width;
        this.m_height = params.height || this.m_view.height;
        this.m_gap_x = params.gap_x || 0;
        this.m_gap_y = params.gap_y || 0;
        this.m_row = params.row || 1;
        this.m_col = params.column || 1;
        this.m_cb_host = params.cb_host;
        this.item_update_func = params.item_update_func;
        this.recycle_cb = params.recycle_cb;
        this.select_cb = params.select_cb;
        this.item_select_func = params.item_select_func;
        this.scroll_to_end_cb = params.scroll_to_end_cb;
        this.item_click_func = params.item_click_func;
        this.item_click_ex_func = params.item_click_ex_func;
        this.m_auto_scrolling = params.auto_scrolling || false;
        this.m_node_pool = [];
        if (this.m_dir == ListViewDir.Vertical) {
          var real_width = (this.m_item_width + this.m_gap_x) * this.m_col - this.m_gap_x;
          if (real_width > this.m_width) {
            cc.log("real width > width, resize scrollview to realwidth,", this.m_width, "->", real_width);
            this.m_width = real_width;
          }
          this.m_content.width = this.m_width;
        } else {
          var real_height = (this.m_item_height + this.m_gap_y) * this.m_row - this.m_gap_y;
          if (real_height > this.m_height) {
            cc.log("real height > height, resize scrollview to realheight,", this.m_height, "->", real_height);
            this.m_height = real_height;
          }
          this.m_content.height = this.m_height;
        }
        this.m_view.setContentSize(this.m_width, this.m_height);
        this.m_scrollview.vertical = this.m_dir == ListViewDir.Vertical;
        this.m_scrollview.horizontal = this.m_dir == ListViewDir.Horizontal;
        this.m_scrollview.inertia = true;
        this.m_scrollview.node.on("scrolling", this.on_scrolling, this);
        this.m_scrollview.node.on("scroll-to-bottom", this.on_scroll_to_end, this);
        this.m_scrollview.node.on("scroll-to-right", this.on_scroll_to_end, this);
        var beforDestroy = this.m_scrollview._onPreDestroy.bind(this.m_scrollview);
        this.m_scrollview._onPreDestroy = function() {
          beforDestroy && beforDestroy();
          _this.destroy();
        };
        event_manager_1.default.instance.on("_resize_", this.resize, this, true);
      }
      ListView.prototype.resize = function() {
        var _this = this;
        if (this.m_scrollview.node && this.m_scrollview.node.isValid) {
          var node = this.m_scrollview.node;
          var sequence = cc.sequence(cc.delayTime(0), cc.callFunc(function() {
            _this.resize_content();
            _this.on_scrolling();
          }));
          node.stopAllActions();
          node.runAction(sequence);
        }
      };
      Object.defineProperty(ListView.prototype, "datas", {
        get: function() {
          return this.m_datas;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(ListView.prototype, "selected_index", {
        get: function() {
          return this.m_selected_index;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(ListView.prototype, "selectd_data", {
        get: function() {
          var item = this.m_items[this.m_selected_index];
          if (item) return item.data;
          return null;
        },
        enumerable: true,
        configurable: true
      });
      ListView.prototype.set_data = function(datas) {
        var _this = this;
        this.clear_items();
        this.m_items = [];
        this.m_datas = datas;
        this.m_selected_index = -1;
        datas.forEach(function(data) {
          var item = _this.pack_item(data);
          _this.m_items.push(item);
        });
        this.layout_items(0);
        this.resize_content();
        this.m_start_index = -1;
        this.m_stop_index = -1;
        this.m_dir == ListViewDir.Vertical ? this.m_content.y = 0 : this.m_content.x = 0;
        this.m_items.length > 0 && this.on_scrolling();
      };
      ListView.prototype.insert_data = function(index) {
        var _this = this;
        var datas = [];
        for (var _i = 1; _i < arguments.length; _i++) datas[_i - 1] = arguments[_i];
        var _a, _b;
        if (0 == datas.length) {
          cc.log("nothing to insert");
          return;
        }
        this.m_items || (this.m_items = []);
        this.m_datas || (this.m_datas = []);
        if (index < 0 || index > this.m_items.length) {
          cc.warn("invalid index", index);
          return;
        }
        var is_append = index == this.m_items.length;
        var items = [];
        datas.forEach(function(data) {
          var item = _this.pack_item(data);
          items.push(item);
        });
        (_a = this.m_datas).splice.apply(_a, [ index, 0 ].concat(datas));
        (_b = this.m_items).splice.apply(_b, [ index, 0 ].concat(items));
        this.layout_items(index);
        this.resize_content();
        this.m_start_index = -1;
        this.m_stop_index = -1;
        this.m_auto_scrolling && is_append && this.scroll_to_end();
        this.on_scrolling();
      };
      ListView.prototype.remove_data = function(index, count) {
        var _this = this;
        void 0 === count && (count = 1);
        if (!this.m_items) {
          cc.log("call set_data before call this method");
          return;
        }
        if (index < 0 || index >= this.m_items.length) {
          cc.warn("invalid index", index);
          return;
        }
        if (count < 1) {
          cc.log("nothing to remove");
          return;
        }
        var old_length = this.m_items.length;
        var del_items = this.m_items.splice(index, count);
        this.m_datas.splice(index, count);
        del_items.forEach(function(item) {
          _this.recycle_item(item);
        });
        index + count < old_length && this.layout_items(index);
        this.resize_content();
        if (this.m_items.length > 0) {
          this.m_start_index = -1;
          this.m_stop_index = -1;
          this.on_scrolling();
        }
      };
      ListView.prototype.append_data = function() {
        var datas = [];
        for (var _i = 0; _i < arguments.length; _i++) datas[_i] = arguments[_i];
        this.m_items || (this.m_items = []);
        this.insert_data.apply(this, [ this.m_items.length ].concat(datas));
      };
      ListView.prototype.scroll_to = function(index) {
        if (this.m_dir == ListViewDir.Vertical) {
          var min_y = this.m_height - this.m_content.height;
          if (min_y >= 0) {
            cc.log("no need to scroll");
            return;
          }
          var _a = this.vertical_layout(index, this.m_item_width, this.m_item_height, this.m_col, this.m_gap_x, this.m_gap_y, false), _ = _a[0], y = _a[1];
          if (y < min_y) {
            y = min_y;
            cc.log("content reach bottom");
          }
          if (y > 0) {
            y = 0;
            cc.log("content reach top");
          }
          this.m_scrollview.setContentPosition(cc.v2(this.m_content.x, -y));
          this.on_scrolling();
        } else {
          var max_x = this.m_content.width - this.m_width;
          if (max_x <= 0) {
            cc.log("no need to scroll");
            return;
          }
          var _b = this.horizontal_layout(index, this.m_item_width, this.m_item_height, this.m_row, this.m_gap_x, this.m_gap_y, false), x = _b[0], _ = _b[1];
          if (x > max_x) {
            x = max_x;
            cc.log("content reach right");
          }
          if (x < 0) {
            x = 0;
            cc.log("content reach left");
          }
          this.m_scrollview.setContentPosition(cc.v2(-x, this.m_content.y));
          this.on_scrolling();
        }
      };
      ListView.prototype.scroll_to_end = function() {
        this.m_dir == ListViewDir.Vertical ? this.m_scrollview.scrollToBottom() : this.m_scrollview.scrollToRight();
      };
      ListView.prototype.refresh_item = function(index, data) {
        if (!this.m_items) {
          cc.log("call set_data before call this method");
          return;
        }
        if (index < 0 || index >= this.m_items.length) {
          cc.warn("invalid index", index);
          return;
        }
        var item = this.m_items[index];
        item.data = data;
        this.m_datas[index] = data;
        if (item.node) {
          this.recycle_cb && this.recycle_cb.call(this.m_cb_host, item.node);
          this.item_update_func.call(this.m_cb_host, item.node, item.data, index, item);
        }
      };
      ListView.prototype.select_item = function(index) {
        if (index == this.m_selected_index) return;
        -1 != this.m_selected_index && this.inner_select_item(this.m_selected_index, false);
        this.inner_select_item(index, true);
      };
      ListView.prototype.destroy = function() {
        this.clear_items();
        this.m_node_pool.forEach(function(node) {
          node.destroy();
        });
        this.m_node_pool = null;
        this.m_items = null;
        this.m_datas = null;
        if (cc.isValid(this.m_scrollview.node)) {
          this.m_scrollview.node.off("scrolling", this.on_scrolling, this);
          this.m_scrollview.node.off("scroll-to-bottom", this.on_scroll_to_end, this);
          this.m_scrollview.node.off("scroll-to-right", this.on_scroll_to_end, this);
        }
        event_manager_1.default.instance.off("_resize_", this.resize, this);
      };
      ListView.prototype.on_scroll_to_end = function() {
        this.scroll_to_end_cb && this.scroll_to_end_cb.call(this.m_cb_host);
      };
      ListView.prototype.on_scrolling = function() {
        if (!this.m_items || !this.m_items.length) return;
        if (this.m_dir == ListViewDir.Vertical) {
          var posy = this.m_content.y;
          posy < 0 && (posy = 0);
          posy > this.m_content.height - this.m_height && (posy = this.m_content.height - this.m_height);
          var start = 0;
          var stop = this.m_items.length - 1;
          var viewport_start = -posy;
          var viewport_stop = viewport_start - 1.5 * this.m_height;
          while (this.m_items[start].y - this.m_item_height > viewport_start) start++;
          while (this.m_items[stop].y + this.m_item_height < viewport_stop) stop--;
          if (start != this.m_start_index && stop != this.m_stop_index) {
            this.m_start_index = start;
            this.m_stop_index = stop;
            this.render_items();
          }
        } else {
          var posx = this.m_content.x;
          posx > 0 && (posx = 0);
          posx < this.m_width - this.m_content.width && (posx = this.m_width - this.m_content.width);
          var start = 0;
          var stop = this.m_items.length - 1;
          var viewport_start = -posx;
          var viewport_stop = viewport_start + this.m_width;
          while (this.m_items[start].x + this.m_item_width < viewport_start) start++;
          while (this.m_items[stop].x - this.m_item_width > viewport_stop) stop--;
          if (start != this.m_start_index && stop != this.m_stop_index) {
            this.m_start_index = start;
            this.m_stop_index = stop;
            this.render_items();
          }
        }
      };
      ListView.prototype.inner_select_item = function(index, is_select) {
        var item = this.m_items[index];
        if (!item) {
          cc.warn("inner_select_item index is out of range{", 0, this.m_items.length - 1, "}", index);
          return;
        }
        item.is_select = is_select;
        item.node && this.item_select_func && this.item_select_func.call(this.m_cb_host, item.node, is_select, index);
        if (is_select) {
          this.m_selected_index = index;
          this.select_cb && this.select_cb.call(this.m_cb_host, item.data, index);
        }
      };
      ListView.prototype.spawn_node = function(index) {
        var node = this.m_node_pool.pop();
        if (!node) {
          node = cc.instantiate(this.m_item_prefab);
          node.active = true;
        }
        node.parent = this.m_content;
        if (this.item_click_func || this.item_click_ex_func) {
          node.off("click", this.item_click, this);
          node.on("click", this.item_click, this);
        }
        return node;
      };
      ListView.prototype.item_click = function(event) {
        var node = event.node;
        this.item_click_func && this.item_click_func.call(this.m_cb_host, node);
        if (null != this.item_click_ex_func) {
          var item = void 0;
          for (var i = 0, len = this.m_items.length; i < len; i++) if (this.m_items[i].node == node) {
            item = this.m_items[i];
            break;
          }
          null != item && this.item_click_ex_func.call(this.m_cb_host, item.data);
        }
      };
      ListView.prototype.recycle_item = function(item) {
        if (item.node && cc.isValid(item.node)) {
          this.recycle_cb && this.recycle_cb.call(this.m_cb_host, item.node);
          item.node.removeFromParent();
          this.m_node_pool.push(item.node);
          item.node = null;
        }
      };
      ListView.prototype.clear_items = function() {
        var _this = this;
        this.m_items && this.m_items.forEach(function(item) {
          _this.recycle_item(item);
        });
      };
      ListView.prototype.render_items = function() {
        var item;
        for (var i = 0; i < this.m_start_index; i++) {
          item = this.m_items[i];
          item.node && this.recycle_item(item);
        }
        for (var i = this.m_items.length - 1; i > this.m_stop_index; i--) {
          item = this.m_items[i];
          item.node && this.recycle_item(item);
        }
        for (var i = this.m_start_index; i <= this.m_stop_index; i++) {
          item = this.m_items[i];
          if (!item.node) {
            item.node = this.spawn_node(i);
            this.item_update_func.call(this.m_cb_host, item.node, item.data, i, item);
            this.item_select_func && this.item_select_func.call(this.m_cb_host, item.node, item.is_select, i);
          }
          item.node.setPosition(item.x, item.y);
        }
      };
      ListView.prototype.pack_item = function(data) {
        return {
          x: 0,
          y: 0,
          data: data,
          node: null,
          is_select: false
        };
      };
      ListView.prototype.layout_items = function(start) {
        var _a, _b;
        for (var index = start, stop = this.m_items.length; index < stop; index++) {
          var item = this.m_items[index];
          this.m_dir == ListViewDir.Vertical ? (_a = this.vertical_layout(index, this.m_item_width, this.m_item_height, this.m_col, this.m_gap_x, this.m_gap_y), 
          item.x = _a[0], item.y = _a[1]) : (_b = this.horizontal_layout(index, this.m_item_width, this.m_item_height, this.m_row, this.m_gap_x, this.m_gap_y), 
          item.x = _b[0], item.y = _b[1]);
        }
      };
      ListView.prototype.resize_content = function() {
        if (!this.m_items || !this.m_items.length) return;
        if (this.m_items.length <= 0) {
          this.m_content.width = 0;
          this.m_content.height = 0;
          return;
        }
        var last_item = this.m_items[this.m_items.length - 1];
        this.m_dir == ListViewDir.Vertical ? this.m_content.height = Math.max(this.m_height, this.m_item_height / 2 - last_item.y) : this.m_content.width = Math.max(this.m_width, last_item.x + this.m_item_width / 2);
      };
      ListView.prototype.vertical_layout = function(index, item_width, item_height, column, gap_x, gap_y, halfOffset) {
        void 0 === column && (column = 1);
        void 0 === gap_x && (gap_x = 0);
        void 0 === gap_y && (gap_y = 0);
        void 0 === halfOffset && (halfOffset = true);
        var x = index % column * (item_width + gap_x);
        var y = -Math.floor(index / column) * (item_height + gap_y);
        return halfOffset ? [ x + item_width / 2, y - item_height / 2 ] : [ x, y ];
      };
      ListView.prototype.horizontal_layout = function(index, item_width, item_height, row, gap_x, gap_y, halfOffset) {
        void 0 === row && (row = 1);
        void 0 === gap_x && (gap_x = 0);
        void 0 === gap_y && (gap_y = 0);
        void 0 === halfOffset && (halfOffset = true);
        var x = Math.floor(index / row) * (item_width + gap_x);
        var y = -index % row * (item_height + gap_y);
        return halfOffset ? [ x + item_width / 2, y - item_height / 2 ] : [ x, y ];
      };
      return ListView;
    }();
    exports.ListView = ListView;
    var ListViewDir;
    (function(ListViewDir) {
      ListViewDir[ListViewDir["Vertical"] = 1] = "Vertical";
      ListViewDir[ListViewDir["Horizontal"] = 2] = "Horizontal";
    })(ListViewDir = exports.ListViewDir || (exports.ListViewDir = {}));
    cc._RF.pop();
  }, {
    "../../../manager/event_manager": "event_manager"
  } ],
  loader_wrap: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cff28sIHCpOY6v35SFUDra0", "loader_wrap");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var canRelease = function(key, caches) {
      for (var tmpId in caches) if (caches.hasOwnProperty(tmpId)) {
        var element = caches[tmpId];
        var deps = element.dependKeys;
        if (deps) for (var i = 0; i < deps.length; i++) {
          var d = deps[i];
          if (d == key) return false;
        }
      }
      return true;
    };
    var LoaderWrap = function() {
      function LoaderWrap() {}
      LoaderWrap.init = function() {
        var release = cc.loader.release;
        cc.loader.release = function(asset) {
          var dependKeys = null;
          if (Array.isArray(asset)) ; else if (asset) {
            var id = this._getReferenceKey(asset);
            var item = this.getItem(id);
            item && (dependKeys = item.dependKeys);
          }
          release.call(this, asset);
          if (Array.isArray(asset)) ; else if (asset && dependKeys) for (var i = 0; i < dependKeys.length; i++) {
            var element = dependKeys[i];
            canRelease(element, this._cache) && this.release(element);
          }
        };
      };
      LoaderWrap = __decorate([ ccclass ], LoaderWrap);
      return LoaderWrap;
    }();
    exports.default = LoaderWrap;
    cc._RF.pop();
  }, {} ],
  loading_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cfdee+sKiZPGJMuE6PqPEq7", "loading_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../framework/core/mvvm/view_base");
    var version_manager_1 = require("../../../manager/version_manager");
    var local_storage_1 = require("../../../manager/local_storage");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var LoadingView = function(_super) {
      __extends(LoadingView, _super);
      function LoadingView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.progressBar = null;
        _this.barRightNode = null;
        _this.textLabel = null;
        _this.versionLabel = null;
        return _this;
      }
      LoadingView.prototype.onLoad = function() {};
      LoadingView.prototype.onShow = function() {
        _super.prototype.onShow.call(this);
        cc.sys.isNative, this.showTextLabel("\u7248\u672c\u68c0\u6d4b\u4e2d,\u8bf7\u7a0d\u540e...");
        this.updateVersion(local_storage_1.default.getNumber("version"));
        version_manager_1.default.instance.checkVersion();
      };
      LoadingView.prototype.updateVersion = function(version) {
        version && (this.versionLabel.string = "v:" + version);
      };
      LoadingView.prototype.showTextLabel = function(content) {
        this.textLabel.string = content;
      };
      LoadingView.prototype.updatePercent = function(value) {
        this.progressBar.node.active = true;
        this.progressBar.progress = value;
        var bar = this.progressBar.node.getChildByName("SpriteBar");
        var barSprite = bar.getComponent(cc.Sprite);
        var width = barSprite.spriteFrame.getRect().width;
        this.barRightNode.position = new cc.Vec2(bar.position.x + width * value, this.barRightNode.position.y);
        this.barRightNode.active = value > 0;
        this.showTextLabel("\u8d44\u6e90\u52a0\u8f7d\u4e2d: " + (100 * value).toFixed(0) + "%");
      };
      __decorate([ property(cc.ProgressBar) ], LoadingView.prototype, "progressBar", void 0);
      __decorate([ property(cc.Node) ], LoadingView.prototype, "barRightNode", void 0);
      __decorate([ property(cc.Label) ], LoadingView.prototype, "textLabel", void 0);
      __decorate([ property(cc.Label) ], LoadingView.prototype, "versionLabel", void 0);
      LoadingView = __decorate([ ccclass ], LoadingView);
      return LoadingView;
    }(view_base_1.default);
    exports.default = LoadingView;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/view_base": "view_base",
    "../../../manager/local_storage": "local_storage",
    "../../../manager/version_manager": "version_manager"
  } ],
  loading: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2db967D6pFHcKpm0trEd4I/", "loading");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../framework/core/mvvm/module_base");
    var loading_view_1 = require("./loading_view");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var debug_1 = require("../../../manager/debug");
    var game_util_1 = require("../../../utility/game_util");
    var auth_module_1 = require("../../hall/module/auth/auth_module");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var LoadingModule = function(_super) {
      __extends(LoadingModule, _super);
      function LoadingModule() {
        var _this = _super.call(this) || this;
        _this.layer = module_base_1.ViewLayer.Highest;
        _this.windowPrefabResPath = "package/public/public_loading";
        _this.viewType = loading_view_1.default;
        _this.modelType = null;
        _this.bindEvent();
        return _this;
      }
      LoadingModule.prototype.bindEvent = function() {
        this.eventBind("already_up_to_date", this.already_up_to_date);
        this.eventBind("new_version_found", this.on_new_version_found);
        this.eventBind("update_progress", this.on_update_progress);
        this.eventBind("update_finished", this.on_update_finished);
        this.eventBind("get_app_version", this.on_get_app_version);
        this.eventBind("error_no_local_manifest", this.on_update_finished);
        this.eventBind("error_download_manifest_file.", this.on_update_finished);
      };
      LoadingModule.prototype.show = function() {
        _super.prototype.show.call(this);
        if (cc.sys.os === cc.sys.OS_ANDROID) {
          var className = "org/cocos2dx/javascript/AppActivity";
          var methodName = "removeSplashImage";
          var methodSignature = "()V";
          jsb.reflection.callStaticMethod(className, methodName, methodSignature);
        }
      };
      LoadingModule.prototype.already_up_to_date = function() {
        if (!this.view) {
          this.AddHandleToWaitDealQueue(this.already_up_to_date, null, this);
          return;
        }
        this.loadAuth();
      };
      LoadingModule.prototype.on_new_version_found = function() {
        if (!this.view) {
          this.AddHandleToWaitDealQueue(this.on_new_version_found, null, this);
          return;
        }
      };
      LoadingModule.prototype.on_update_progress = function(data) {
        if (!this.view) {
          this.AddHandleToWaitDealQueue(this.on_update_progress, data, this);
          return;
        }
        this.updatePercent(data);
      };
      LoadingModule.prototype.on_update_finished = function() {
        this.loadAuth();
      };
      LoadingModule.prototype.on_get_app_version = function(version) {
        this.view.updateVersion(version);
      };
      LoadingModule.prototype.loadAuth = function() {
        var self = this;
        game_util_1.default.loadResArray([ "package/hall/module/auth/AuthModule", "package/hall/module/hall/hall_base" ], function(error, resource) {
          if (error) ; else {
            debug_1.default.log("\u52a0\u8f7d\u5b8c\u6210");
            module_manager_1.default.instance.showModule(auth_module_1.default, null, function() {
              self.hide();
            });
          }
        });
      };
      LoadingModule.prototype.onInit = function() {};
      LoadingModule.prototype.updatePercent = function(percent) {
        this.view.updatePercent(percent);
      };
      LoadingModule = __decorate([ ccclass, module_base_1.moduleInit("LoadingModule") ], LoadingModule);
      return LoadingModule;
    }(module_base_1.default);
    exports.default = LoadingModule;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../framework/core/mvvm/module_base": "module_base",
    "../../../manager/debug": "debug",
    "../../../utility/game_util": "game_util",
    "../../hall/module/auth/auth_module": "auth_module",
    "./loading_view": "loading_view"
  } ],
  local_storage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6a017b2Vq1O+5jDptKm6peg", "local_storage");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("./debug");
    var LoaclStorage = function() {
      function LoaclStorage() {}
      LoaclStorage.setStorageNumber = function(key, data) {
        false;
        LoaclStorage.setNumber(key, data);
      };
      LoaclStorage.setStorageString = function(key, data) {
        false;
        LoaclStorage.setString(key, data);
      };
      LoaclStorage.setStorage = function(key, data) {
        false;
        LoaclStorage.setItem(key, data);
      };
      LoaclStorage.setNumber = function(key, data) {
        try {
          cc.sys.localStorage.setItem(key, data.toString());
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.getNumber = function(key, defaultValue) {
        try {
          var value = cc.sys.localStorage.getItem(key);
          if (null == value || "null" == value) {
            if (null != defaultValue) return defaultValue;
            return null;
          }
          return value;
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.setJson = function(key, data) {
        try {
          cc.sys.localStorage.setItem(key, JSON.stringify(data));
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.getJson = function(key) {
        try {
          var str = cc.sys.localStorage.getItem(key);
          if (null == str || "" == str || "null" == str) return null;
          var data = JSON.parse(str);
          return data;
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.setString = function(key, data) {
        try {
          cc.sys.localStorage.setItem(key, data.toString());
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.getString = function(key, defaultValue) {
        try {
          var str = cc.sys.localStorage.getItem(key);
          if (null == str || "" == str || "null" == str) {
            if (null != defaultValue) return defaultValue;
            return null;
          }
          return str;
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.setItem = function(key, data) {
        try {
          cc.sys.localStorage.setItem(key, data);
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.getItem = function(key) {
        try {
          var str = cc.sys.localStorage.getItem(key);
          if (null == str || "null" == str) return null;
          return str;
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      LoaclStorage.hasItem = function(key) {
        var str = cc.sys.localStorage.getItem(key);
        return null != str;
      };
      LoaclStorage.delete = function(key) {
        var str = cc.sys.localStorage.setItem(key, null);
      };
      return LoaclStorage;
    }();
    exports.default = LoaclStorage;
    cc._RF.pop();
  }, {
    "./debug": "debug"
  } ],
  log_report_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6659aadWO5KNbPnwKv2zo91", "log_report_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var game_util_1 = require("../utility/game_util");
    var debug_1 = require("./debug");
    var LogReportManager = function() {
      function LogReportManager() {}
      LogReportManager.init = function(uid) {
        null == uid && (uid = 0);
        LogReportManager._httpUrl = LogReportManager._baseHttpUrl + "&appinit_time=" + Math.ceil(new Date().getTime() / 1e3) + "&uid=" + uid + "&os=" + cc.sys.os + "&";
      };
      LogReportManager.report = function(text) {
        var requestData = {
          baseUrl: LogReportManager._httpUrl,
          params: {
            text: text
          }
        };
        LogReportManager.http(requestData);
      };
      LogReportManager.report_cmd = function(cmd, text) {
        var requestData = {
          baseUrl: LogReportManager._httpUrl,
          params: {
            cmd: cmd,
            text: text
          }
        };
        LogReportManager.http(requestData);
      };
      LogReportManager.report_data = function(cmd, data) {
        var requestData = {
          baseUrl: LogReportManager._httpUrl,
          params: {
            cmd: cmd,
            text: JSON.stringify(data)
          }
        };
        LogReportManager.http(requestData);
      };
      LogReportManager.report_msg_cmd = function(cmd, msg, isRequest) {
        var requestData = {
          baseUrl: LogReportManager._httpUrl,
          params: {
            msg: msg
          }
        };
        isRequest ? requestData.params["request_cmd"] = cmd : requestData.params["response_cmd"] = cmd;
        LogReportManager.http(requestData);
      };
      LogReportManager.http = function(data) {
        LogReportManager._serialNumber = LogReportManager._serialNumber + 1;
        data.params["sn"] = LogReportManager._serialNumber;
        data.params["time"] = new Date().getTime();
        var requestUrl = game_util_1.default.formatParamsForHttp(data);
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
          if (4 == xhr.readyState) if (200 == xhr.status) debug_1.default.log(requestUrl); else {
            data.requestCount < 2 && LogReportManager.http(data);
            debug_1.default.log("http request error:", xhr.status);
          }
        };
        null == data.requestCount && (data.requestCount = 0);
        ++data.requestCount;
        xhr.timeout = 1e4;
        xhr.open("GET", requestUrl, true);
        xhr.send();
      };
      LogReportManager._baseHttpUrl = "https://dhqp-h5-log.cn-hangzhou.log.aliyuncs.com/logstores/h5log/track?APIVersion=0.6.0";
      LogReportManager._serialNumber = 0;
      LogReportManager._reportFailureHttpUrls = [];
      return LogReportManager;
    }();
    exports.default = LogReportManager;
    cc._RF.pop();
  }, {
    "../utility/game_util": "game_util",
    "./debug": "debug"
  } ],
  login_net_route: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4bdffFaOKxLxbnbutO20Qew", "login_net_route");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var LoginNetRoute = function() {
      function LoginNetRoute() {}
      LoginNetRoute.queryEntry = "gate.gateHandler.queryEntry";
      return LoginNetRoute;
    }();
    exports.LoginNetRoute = LoginNetRoute;
    cc._RF.pop();
  }, {} ],
  login_server: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ec0d4u5LRpBeLxbiNfOL5W9", "login_server");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var time_manager_1 = require("../../../manager/time_manager");
    var game_manager_1 = require("../../../manager/game_manager");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var netprompt_1 = require("../../public/module/netprompt/netprompt");
    var app_data_1 = require("../../public/const/app_data");
    var login_net_route_1 = require("./login_net_route");
    var hall_server_1 = require("../hallserver/hall_server");
    var server_base_1 = require("../server_base");
    var scene_manager_1 = require("../../../manager/scene_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var LoginServer = function(_super) {
      __extends(LoginServer, _super);
      function LoginServer() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      LoginServer_1 = LoginServer;
      LoginServer.prototype.onLoad = function() {
        LoginServer_1.instance = this;
        this.init("LoginServer");
      };
      LoginServer.prototype._init = function() {
        var self = this;
        this.model.registerNetMsg(login_net_route_1.LoginNetRoute.queryEntry, function(data) {
          self.loginRsp(data);
        }, true);
      };
      LoginServer.prototype.loginRsp = function(data) {
        cc.log("-------------\x3e>>", data);
        this.close();
        game_manager_1.GameManager.setHallServer(data.host, data.port);
        hall_server_1.default.instance.loginHallServer();
      };
      LoginServer.prototype.accountLogin = function(account) {
        var _this = this;
        this.connectServer(game_manager_1.GameManager.loginServer, function(state) {
          if ("handshake" == state) {
            _this.startCheckPing();
            var data = {
              code: account
            };
            app_data_1.default.code = account;
            _this.model.send(login_net_route_1.LoginNetRoute.queryEntry, data);
          }
        });
      };
      LoginServer.prototype.connectServer = function(url, callback) {
        this.connect(url, callback);
        cc.log("\u767b\u9646\u670d\u8fde\u63a5\u65f6\u95f4\uff1a", time_manager_1.default.instance.getServerTime());
      };
      LoginServer.prototype.onConnected = function() {
        this._init();
      };
      LoginServer.prototype.connectTimes = function(times) {
        this._reconTimes >= 1 && module_manager_1.default.instance.showModule(netprompt_1.default, {
          showImmediately: true,
          reconnect: true
        });
        if (this._reconTimes > this._maxReconTimes) {
          cc.warn("\u767b\u9646\u670d\u91cd\u8fde\u6b21\u6570\u7528\u5b8c\uff0c\u63d0\u793a\u767b\u9646\u5931\u8d25");
          scene_manager_1.default.gotoLogin();
        }
      };
      var LoginServer_1;
      LoginServer = LoginServer_1 = __decorate([ ccclass ], LoginServer);
      return LoginServer;
    }(server_base_1.default);
    exports.default = LoginServer;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../manager/game_manager": "game_manager",
    "../../../manager/scene_manager": "scene_manager",
    "../../../manager/time_manager": "time_manager",
    "../../public/const/app_data": "app_data",
    "../../public/module/netprompt/netprompt": "netprompt",
    "../hallserver/hall_server": "hall_server",
    "../server_base": "server_base",
    "./login_net_route": "login_net_route"
  } ],
  magicEmojWidget: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cd857EdP5tIgI68txlo8VTf", "magicEmojWidget");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_manager_1 = require("../../../framework/core/module_manager");
    var event_manager_1 = require("../../../manager/event_manager");
    var Utility_1 = require("../../../utility/Utility");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var MagicEmojWidget = function(_super) {
      __extends(MagicEmojWidget, _super);
      function MagicEmojWidget() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.itemParent = null;
        _this.awardItem = null;
        _this.iconSprs = [];
        _this.remain = 0;
        _this.cd = 0;
        _this.lastTime = 0;
        _this._playerId = 0;
        _this._configs = null;
        _this.state_timers = [];
        _this.timerLabels = [];
        return _this;
      }
      MagicEmojWidget.prototype.init = function(playerId) {
        this._playerId = playerId;
        var offset = (new Date().valueOf() - this.lastTime) / 1e3;
        if (offset > this.remain || 0 == this.remain) {
          this.remain = 0;
          this.showTimers(0);
        } else {
          this.remain -= Math.floor(offset);
          this.showCountDown();
        }
        var that = this;
      };
      MagicEmojWidget.prototype.showTimers = function(remain) {
        for (var i = 0; i < this.state_timers.length; ++i) {
          var timerObj = this.state_timers[i];
          var timerLabel = this.timerLabels[i];
          if (timerObj && timerObj.isValid && timerLabel && timerLabel.isValid) {
            timerObj.active = remain > 0;
            timerLabel.string = remain + "s";
          }
        }
      };
      MagicEmojWidget.prototype.onEnable = function() {};
      MagicEmojWidget.prototype.onDisable = function() {
        this.lastTime = new Date().valueOf();
        this.showTimers(0);
      };
      MagicEmojWidget.prototype.showCountDown = function() {
        if (this.remain > 0) {
          this.countDown();
          this.unschedule(this.countDown);
          this.schedule(this.countDown, 1, this.remain);
        } else {
          this.remain = 0;
          this.unschedule(this.countDown);
          this.showTimers(0);
        }
      };
      MagicEmojWidget.prototype.countDown = function() {
        var countTime = this.remain - 1;
        this.remain = countTime;
        this.showTimers(this.remain);
        if (!this || !this.isValid || !this.node || !this.node.isValid) {
          this.remain = 0;
          this.unschedule(this.countDown);
          this.showTimers(0);
        }
        if (countTime <= 0) {
          this.remain = 0;
          this.unschedule(this.countDown);
          this.showTimers(0);
        }
      };
      MagicEmojWidget.prototype.showItems = function(datas) {
        this.setItemData(datas);
      };
      MagicEmojWidget.prototype.setItemData = function(datas) {
        var self = this;
        var length = datas.length;
        for (var i = 0; i < length; i++) {
          var item = this.instantiateAwardNode(i + 2);
          item.active = true;
          var data = datas[i];
          this.setItemState(item, false, i);
          self.setItemInfo(item, data);
          item.name = data.emojiId + "";
          item.off("click", this.onClickItem, self);
          item.on("click", this.onClickItem, self);
        }
        if (this.itemParent.childrenCount > length + 2) for (var i = length + 2; i < this.itemParent.childrenCount; i++) this.itemParent.children[i].active = false;
      };
      MagicEmojWidget.prototype.onClickItem = function(obj) {
        var emojId = Number(obj.node.name);
        var emojIndex = this.getEmojIndexById(emojId);
        var targetId = this._playerId;
        this.remain <= 0 ? this.onClickSend(emojIndex, emojId, targetId) : module_manager_1.default.instance.toastLong("cd\u4e2d....");
      };
      MagicEmojWidget.prototype.onSend = function(emojIndex, emojId, targetId) {
        this.remain = this.cd;
        this.showCountDown();
        event_manager_1.default.instance.dispatch("tablechat_sendMagicEmoj", emojIndex, targetId);
        module_manager_1.default.instance.hideModule("GamePlayerInfoModule");
        this.onCostSend(emojId);
      };
      MagicEmojWidget.prototype.onClickSend = function(emojIndex, emojId, targetId) {
        var _this = this;
        var that = this;
        var data = this.getEmojDataById(emojId);
        if (this.showFree(data)) this.onSend(emojIndex, emojId, targetId); else {
          var coinType = data.coinType;
          var needNum_1 = data.consumeNum;
          var itemId = data.itemId;
          if (10 != coinType) {
            var ownNum = this.getCoinNumByType(coinType);
            ownNum >= needNum_1 && this.onSend(emojIndex, emojId, targetId);
          } else that.getItemNumByType(itemId, function(d) {
            if (that && that.isValid && that.node && that.node.isValid) {
              var ownNum = 0;
              d && (ownNum = d);
              ownNum >= needNum_1 && _this.onSend(emojIndex, emojId, targetId);
            }
          });
        }
      };
      MagicEmojWidget.prototype.onCostSend = function(emojiId, success, error) {};
      MagicEmojWidget.prototype.setSpriteGray = function(sps) {
        for (var i = 0; i < sps.length; ++i) {
          var sp = sps[i];
          sp.setState(cc.Sprite.State.GRAY);
        }
      };
      MagicEmojWidget.prototype.resetSpriteGray = function(sps) {
        for (var i = 0; i < sps.length; ++i) {
          var sp = sps[i];
          sp.setState(cc.Sprite.State.NORMAL);
        }
      };
      MagicEmojWidget.prototype.setSpriteGrayState = function(sprites, data) {
        var that = this;
        if (this.showFree(data)) this.resetSpriteGray(sprites); else {
          var coinType = data.coinType;
          var needNum_2 = data.consumeNum;
          var itemId = data.itemId;
          if (10 != coinType) {
            var ownNum = this.getCoinNumByType(coinType);
            ownNum >= needNum_2 ? that.resetSpriteGray(sprites) : that.setSpriteGray(sprites);
          } else that.getItemNumByType(itemId, function(d) {
            if (that && that.isValid && that.node && that.node.isValid) {
              var ownNum = 0;
              d && (ownNum = d);
              ownNum >= needNum_2 ? that.resetSpriteGray(sprites) : that.setSpriteGray(sprites);
            }
          });
        }
      };
      MagicEmojWidget.prototype.getCoinNumByType = function(type) {
        var num = 1;
        return num;
      };
      MagicEmojWidget.prototype.getItemNumByType = function(itemId, cb) {};
      MagicEmojWidget.prototype.showFree = function(data) {
        var isFree = data.isFree;
        if (isFree && this._data.userFreeTimes > 0) return true;
        return false;
      };
      MagicEmojWidget.prototype.setItemInfo = function(item, data) {
        var that = this;
        var freeRoot = item.getChildByName("freeRoot");
        var costRoot = item.getChildByName("costRoot");
        freeRoot.active = this.showFree(data);
        costRoot.active = !this.showFree(data);
        if (this.showFree(data)) {
          var free = freeRoot.getChildByName("free");
          free.getComponent(cc.Label).string = "\u514d\u8d39:" + that._data.userFreeTimes;
        } else {
          var costImg = costRoot.getChildByName("costImg");
          var coinType = data.coinType;
          var icon = costImg.getComponent(cc.Sprite);
          10 == coinType;
          var cost = costRoot.getChildByName("cost");
          cost.getComponent(cc.Label).string = data.consumeNum;
        }
        var sprite_icon = item.getChildByName("Icon").getComponent(cc.Sprite);
        var spriteFrame = this.iconSprs[this.getEmojiIndexByCode(data.emojiCode)];
        spriteFrame || (spriteFrame = this.iconSprs[0]);
        Utility_1.default.instance.scaleSpriteToSize(sprite_icon, spriteFrame, 60);
        var sprite_bg = item.getChildByName("bg").getComponent(cc.Sprite);
        var sprite_costBg = cc.find("costRoot/bg", item).getComponent(cc.Sprite);
        var sprite_freeBg = cc.find("freeRoot/bg", item).getComponent(cc.Sprite);
        var sprites = [ sprite_icon, sprite_bg, sprite_costBg, sprite_freeBg ];
        this.setSpriteGrayState(sprites, data);
      };
      MagicEmojWidget.prototype.getEmojiIndexByCode = function(code) {
        return code.slice(6);
      };
      MagicEmojWidget.prototype.getEmojIndexById = function(id) {
        var config = this._configs.find(function(config) {
          return config.emojiId == id;
        });
        if (config) return this.getEmojiIndexByCode(config.emojiCode);
        return 0;
      };
      MagicEmojWidget.prototype.getEmojDataById = function(id) {
        var config = this._configs.find(function(config) {
          return config.emojiId == id;
        });
        return config;
      };
      MagicEmojWidget.prototype.setItemState = function(item, state, index) {
        var state_timer = item.getChildByName("state_timer");
        var timerLabel = state_timer.getChildByName("timerLabel").getComponent(cc.Label);
        this.state_timers.push(state_timer);
        this.timerLabels.push(timerLabel);
      };
      MagicEmojWidget.prototype.instantiateAwardNode = function(index, parent) {
        void 0 === parent && (parent = this.itemParent);
        if (parent.childrenCount <= index) {
          var node = cc.instantiate(this.awardItem);
          node.position = cc.v2(0, 0);
          node.scale = 1;
          node.parent = parent;
          node.active = false;
          return this.instantiateAwardNode(index, parent);
        }
        return parent.children[index];
      };
      __decorate([ property(cc.Node) ], MagicEmojWidget.prototype, "itemParent", void 0);
      __decorate([ property(cc.Node) ], MagicEmojWidget.prototype, "awardItem", void 0);
      __decorate([ property(cc.SpriteFrame) ], MagicEmojWidget.prototype, "iconSprs", void 0);
      MagicEmojWidget = __decorate([ ccclass ], MagicEmojWidget);
      return MagicEmojWidget;
    }(cc.Component);
    exports.default = MagicEmojWidget;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../manager/event_manager": "event_manager",
    "../../../utility/Utility": "utility"
  } ],
  make_points_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "32805NOALhMYZN9kmY3XW89", "make_points_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("../manager/debug");
    var app_data_1 = require("../pacakge/public/const/app_data");
    var model_data_1 = require("../pacakge/public/model_data");
    var game_util_1 = require("../utility/game_util");
    var MakePointType;
    (function(MakePointType) {
      MakePointType[MakePointType["SHARE_GIFT"] = 1003] = "SHARE_GIFT";
      MakePointType[MakePointType["SHARE_SELF"] = 1005] = "SHARE_SELF";
      MakePointType[MakePointType["SHARE_SIGN_MATCH"] = 1006] = "SHARE_SIGN_MATCH";
      MakePointType[MakePointType["SHARE_FRIEND_INVITE"] = 1007] = "SHARE_FRIEND_INVITE";
      MakePointType[MakePointType["SHARE_FRIEND_BIG_ACCOUNT"] = 1008] = "SHARE_FRIEND_BIG_ACCOUNT";
      MakePointType[MakePointType["SHARE_MATCH_GIFT"] = 1009] = "SHARE_MATCH_GIFT";
      MakePointType[MakePointType["SHARE_GOLD_WIN"] = 1010] = "SHARE_GOLD_WIN";
      MakePointType[MakePointType["SHARE_GOLD_LOSE"] = 1011] = "SHARE_GOLD_LOSE";
      MakePointType[MakePointType["SHARE_MATCH_WIN"] = 1012] = "SHARE_MATCH_WIN";
      MakePointType[MakePointType["SHARE_MATCH_LOSE"] = 1013] = "SHARE_MATCH_LOSE";
      MakePointType[MakePointType["SHARE_OTHER"] = 1014] = "SHARE_OTHER";
      MakePointType[MakePointType["SHARE_ACTIVE_SIGN"] = 1015] = "SHARE_ACTIVE_SIGN";
      MakePointType[MakePointType["SHARE_FREE_COIN"] = 1016] = "SHARE_FREE_COIN";
      MakePointType[MakePointType["SHARE_RELIEF"] = 1017] = "SHARE_RELIEF";
      MakePointType[MakePointType["SHARE_PAYFOR"] = 1018] = "SHARE_PAYFOR";
      MakePointType[MakePointType["SHARE_RANKING_MATCH_WIN"] = 1019] = "SHARE_RANKING_MATCH_WIN";
      MakePointType[MakePointType["SHARE_RANKING_MATCH_LOSE"] = 1020] = "SHARE_RANKING_MATCH_LOSE";
      MakePointType[MakePointType["SHARE_RANKING_MATCH_WINS"] = 1021] = "SHARE_RANKING_MATCH_WINS";
      MakePointType[MakePointType["SHARE_RANKING_MATCH_SCREEN_SHOOT"] = 1022] = "SHARE_RANKING_MATCH_SCREEN_SHOOT";
      MakePointType[MakePointType["SHARE_GOLD_SHOW_CARDS"] = 1023] = "SHARE_GOLD_SHOW_CARDS";
      MakePointType[MakePointType["SHARE_GOLD_GAME_TASK"] = 1024] = "SHARE_GOLD_GAME_TASK";
      MakePointType[MakePointType["BANKRUP_OTHER"] = 2e3] = "BANKRUP_OTHER";
      MakePointType[MakePointType["BANKRUP_GOLD"] = 2001] = "BANKRUP_GOLD";
      MakePointType[MakePointType["BANKRUP_MATCH"] = 2002] = "BANKRUP_MATCH";
      MakePointType[MakePointType["BANKRUP_RANKING_MATCH_WIN"] = 2003] = "BANKRUP_RANKING_MATCH_WIN";
      MakePointType[MakePointType["BANKRUP_RANKING_MATCH_LOSE"] = 2004] = "BANKRUP_RANKING_MATCH_LOSE";
      MakePointType[MakePointType["ORDER_SHOP"] = 3e3] = "ORDER_SHOP";
      MakePointType[MakePointType["ORDER_FIRST"] = 3001] = "ORDER_FIRST";
      MakePointType[MakePointType["ORDER_BANKRUP_FIRST"] = 3002] = "ORDER_BANKRUP_FIRST";
      MakePointType[MakePointType["ORDER_BANKRUP_EVERY_DAY"] = 3003] = "ORDER_BANKRUP_EVERY_DAY";
      MakePointType[MakePointType["ORDER_EVERY_DAY"] = 3004] = "ORDER_EVERY_DAY";
      MakePointType[MakePointType["ORDER_LIMIT"] = 3005] = "ORDER_LIMIT";
      MakePointType[MakePointType["ORDER_BANKRUP_LIMIT"] = 3006] = "ORDER_BANKRUP_LIMIT";
      MakePointType[MakePointType["ORDER_BANKRUP_FAST"] = 3007] = "ORDER_BANKRUP_FAST";
    })(MakePointType = exports.MakePointType || (exports.MakePointType = {}));
    var AppBuriedDataBankruptcyVo = function() {
      function AppBuriedDataBankruptcyVo() {
        this.bankruptcyCount = 0;
        this.bankruptcyGiveGold = 0;
        this.buriedDataEnum = 0;
        this.goldId = 0;
        this.matchId = 0;
      }
      return AppBuriedDataBankruptcyVo;
    }();
    var AppBuriedDataOrderVo = function() {
      function AppBuriedDataOrderVo() {
        this.createCount = 0;
        this.orderDataType = 0;
        this.orderSourceType = 0;
        this.payOutOrderId = "";
        this.showCount = 0;
      }
      return AppBuriedDataOrderVo;
    }();
    var AppBuriedDataShareVo = function() {
      function AppBuriedDataShareVo() {
        this.backCount = 0;
        this.buriedDataEnum = 0;
        this.shareCount = 0;
        this.goldId = 0;
        this.matchId = 0;
        this.shareSmallId = 0;
        this.channelId = 0;
      }
      return AppBuriedDataShareVo;
    }();
    var MakePointsManager = function() {
      function MakePointsManager() {}
      MakePointsManager.getUrl = function() {
        var requestData = {
          baseUrl: app_data_1.default.httpCurApiUrl + "data/buried?",
          params: {
            uid: model_data_1.default.instance.roleData.id,
            gameId: app_data_1.default.apiGameName
          }
        };
        var t = game_util_1.default.get_tokenAndTimestamp(requestData.params["uid"]);
        if (t) {
          requestData.params["token"] = t[0];
          requestData.params["timestamp"] = t[1];
        }
        return game_util_1.default.formatParamsForHttp(requestData);
      };
      MakePointsManager.shareRecord = function(type, id, backCount, shareSmallId, channelId) {
        void 0 === id && (id = 0);
        void 0 === backCount && (backCount = 0);
        void 0 === shareSmallId && (shareSmallId = 0);
        void 0 === channelId && (channelId = 0);
        var data = {};
        data["buriedDataEnum"] = type;
        backCount > 0 ? data["backCount"] = backCount : data["shareCount"] = 1;
        type == MakePointType.SHARE_MATCH_LOSE || type == MakePointType.SHARE_SIGN_MATCH || type == MakePointType.SHARE_MATCH_WIN ? data["matchId"] = id : type != MakePointType.SHARE_GOLD_WIN && type != MakePointType.SHARE_GOLD_LOSE && type != MakePointType.SHARE_RANKING_MATCH_WIN && type != MakePointType.SHARE_RANKING_MATCH_LOSE && type != MakePointType.SHARE_GOLD_SHOW_CARDS || (data["goldId"] = id);
        shareSmallId && (data["shareSmallId"] = shareSmallId);
        channelId && (data["channelId"] = channelId);
        if (this.AppBuriedDataComplexVo.shareList.length >= this.maxLength) {
          debug_1.default.warn("\u5206\u4eab\u5b58\u6ee1\u4e86\uff0c\u5148\u4e0a\u4f20\u5427");
          this.tempData.shareList.push(data);
          this.uploadAll();
          return;
        }
        if (this.isUploading) this.tempData.shareList.push(data); else {
          if (this.tempData.shareList.length > 0) {
            var length = this.tempData.shareList.length;
            for (var i = 0; i < length; i++) this.AppBuriedDataComplexVo.shareList.push(this.tempData.shareList[i]);
            this.tempData.shareList = [];
          }
          this.AppBuriedDataComplexVo.shareList.push(data);
        }
        debug_1.default.warn("\u5206\u4eab\u8bb0\u5f55\uff1a", this.AppBuriedDataComplexVo.shareList);
        this.checkLength();
      };
      MakePointsManager.bankrupRecord = function(type, count, id, bankruptcyGiveGold) {
        void 0 === id && (id = 0);
        void 0 === bankruptcyGiveGold && (bankruptcyGiveGold = 0);
        var data = {};
        data["buriedDataEnum"] = type;
        count && (data["bankruptcyCount"] = count);
        bankruptcyGiveGold && (data["bankruptcyGiveGold"] = bankruptcyGiveGold);
        type == MakePointType.BANKRUP_MATCH ? data["matchId"] = id : type != MakePointType.BANKRUP_GOLD && type != MakePointType.BANKRUP_RANKING_MATCH_LOSE && type != MakePointType.BANKRUP_RANKING_MATCH_WIN || (data["goldId"] = id);
        if (this.AppBuriedDataComplexVo.bankruptcyList.length >= this.maxLength) {
          debug_1.default.warn("\u7834\u4ea7\u5b58\u6ee1\u4e86\uff0c\u5148\u4e0a\u4f20\u5427");
          this.tempData.bankruptcyList.push(data);
          this.uploadAll();
          return;
        }
        if (this.isUploading) this.tempData.bankruptcyList.push(data); else {
          if (this.tempData.bankruptcyList.length > 0) {
            var length = this.tempData.bankruptcyList.length;
            for (var i = 0; i < length; i++) this.AppBuriedDataComplexVo.bankruptcyList.push(this.tempData.bankruptcyList[i]);
            this.tempData.bankruptcyList = [];
          }
          this.AppBuriedDataComplexVo.bankruptcyList.push(data);
        }
        debug_1.default.warn("\u7834\u4ea7\u8bb0\u5f55\uff1a", this.AppBuriedDataComplexVo.bankruptcyList);
        this.checkLength();
      };
      MakePointsManager.orderRecord = function(type, showCount, orderSourceType, createCount, payOutOrderId) {
        void 0 === showCount && (showCount = 0);
        void 0 === orderSourceType && (orderSourceType = 0);
        void 0 === createCount && (createCount = 0);
        void 0 === payOutOrderId && (payOutOrderId = "");
        var data = {};
        createCount && (data["createCount"] = createCount);
        showCount && (data["showCount"] = showCount);
        data["orderSourceType"] = orderSourceType;
        "" != payOutOrderId && (data["payOutOrderId"] = payOutOrderId);
        data["orderDataType"] = type;
        if (this.AppBuriedDataComplexVo.orderList.length >= this.maxLength) {
          debug_1.default.warn("\u8ba2\u5355\u5b58\u6ee1\u4e86\uff0c\u5148\u4e0a\u4f20\u5427");
          this.tempData.orderList.push(data);
          this.uploadAll();
          return;
        }
        if (this.isUploading) this.tempData.orderList.push(data); else {
          if (this.tempData.orderList.length > 0) {
            var length = this.tempData.orderList.length;
            for (var i = 0; i < length; i++) this.AppBuriedDataComplexVo.orderList.push(this.tempData.orderList[i]);
            this.tempData.orderList = [];
          }
          this.AppBuriedDataComplexVo.orderList.push(data);
        }
        debug_1.default.warn("\u8ba2\u5355\u8bb0\u5f55\uff1a", this.AppBuriedDataComplexVo.orderList);
        this.checkLength();
      };
      MakePointsManager.checkLength = function() {
        var length = this.AppBuriedDataComplexVo.shareList.length + this.AppBuriedDataComplexVo.bankruptcyList.length + this.AppBuriedDataComplexVo.orderList.length;
        length >= this.maxLength && this.uploadAll();
      };
      MakePointsManager.uploadAll = function() {
        if (!model_data_1.default.instance.roleData.id) return;
        if (this.isUploading) return;
        if (0 == this.AppBuriedDataComplexVo.bankruptcyList.length && 0 == this.AppBuriedDataComplexVo.shareList.length && 0 == this.AppBuriedDataComplexVo.orderList.length) return;
        this.isUploading = true;
        var self = this;
        var url = this.getUrl();
        var data = JSON.stringify(this.AppBuriedDataComplexVo);
        self.http(url, data, function(res) {
          self.isUploading = false;
          self.AppBuriedDataComplexVo.bankruptcyList = [];
          self.AppBuriedDataComplexVo.orderList = [];
          self.AppBuriedDataComplexVo.shareList = [];
          debug_1.default.warn("\u4e0a\u4f20\u5168\u90e8\u6253\u70b9\u6210\u529f\uff01");
        }, function() {
          self.isUploading = false;
          debug_1.default.warn("\u4e0a\u4f20\u5168\u90e8\u6253\u70b9\u5931\u8d25\uff01");
        });
      };
      MakePointsManager.http = function(url, data, success, fail) {
        debug_1.default.warn(url, data);
        var xhr = new XMLHttpRequest();
        xhr.open("POST", url, true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.onreadystatechange = function() {
          if (4 == xhr.readyState) if (200 == xhr.status) if (xhr.responseText && "" != xhr.responseText) {
            var response = JSON.parse(xhr.responseText);
            debug_1.default.log("\u6253\u70b9\u4e0a\u4f20\u8fd4\u56de\uff1a", response);
            if (!response) {
              fail();
              debug_1.default.error("http\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef\uff1a", xhr.responseURL, xhr.responseText);
              return;
            }
            success(response);
          } else success(); else {
            fail();
            debug_1.default.log("http request error:", xhr.status);
          }
        };
        xhr.send(data);
      };
      MakePointsManager.AppBuriedDataComplexVo = {
        bankruptcyList: [],
        orderList: [],
        shareList: []
      };
      MakePointsManager.maxLength = 30;
      MakePointsManager.isUploading = false;
      MakePointsManager.tempData = {
        bankruptcyList: [],
        orderList: [],
        shareList: []
      };
      return MakePointsManager;
    }();
    exports.default = MakePointsManager;
    cc._RF.pop();
  }, {
    "../manager/debug": "debug",
    "../pacakge/public/const/app_data": "app_data",
    "../pacakge/public/model_data": "model_data",
    "../utility/game_util": "game_util"
  } ],
  marquee_component: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6133aMImVFC84TEy7yVTiaI", "marquee_component");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var event_manager_1 = require("../../../../manager/event_manager");
    var MarqueeComponent = function(_super) {
      __extends(MarqueeComponent, _super);
      function MarqueeComponent() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.root = null;
        _this.labelPrefab = null;
        _this.mask = null;
        _this.offset = 0;
        _this.startOffset = 0;
        _this.endOffset = 0;
        _this.speed = 100;
        _this.tag = "";
        _this.m_availableLabelQueue = [];
        _this.m_playingLabelQueue = [];
        _this.m_isEmpty = false;
        _this.m_max_count = 10;
        _this.m_index = 0;
        _this.m_message_queue = [];
        _this.m_playing_queue = [];
        return _this;
      }
      MarqueeComponent.prototype.onload = function() {};
      MarqueeComponent.prototype.start = function() {
        this.m_isEmpty = true;
        this.bindEvent();
      };
      MarqueeComponent.prototype.reset = function() {
        for (var index = 0; index < this.m_playingLabelQueue.length; index++) {
          var element = this.m_playingLabelQueue[index];
          element.node.active = false;
          this.m_availableLabelQueue.push(element);
        }
        this.m_playingLabelQueue = [];
      };
      MarqueeComponent.prototype.showMarquee = function(show) {
        this.root.active = show;
      };
      MarqueeComponent.prototype.play = function(msg) {
        var self = this;
        self.m_playing_queue.push(msg);
        self.showMarquee(true);
        var text = msg.content;
        var message = msg;
        self.playMessage(text, self.on_next_play.bind(self), function() {
          if (self && self.root.active) {
            self.m_playing_queue.shift();
            var data = message.content;
            var count = message.showCount;
            if (count > 1) {
              message.showCount--;
              self.play(message);
            }
            0 == self.m_playing_queue.length && self.showMarquee(false);
          }
        });
      };
      MarqueeComponent.prototype.on_next_play = function() {
        var self = this;
        if (self && self.root.active) {
          var msg = self.m_message_queue.shift();
          if (msg) {
            self.play(msg);
            self.m_isEmpty = false;
          } else self.m_isEmpty = true;
        }
      };
      MarqueeComponent.prototype.playMessage = function(text, next, onFinish) {
        var self = this;
        var maskWidth = self.mask.node.width;
        var label = self.getAvailableLabel();
        label.string = text;
        var startPosX = .5 * maskWidth + self.startOffset;
        label.node.position = cc.v2(startPosX, label.node.position.y);
        label.node.active = true;
        this.scheduleOnce(function() {
          var labelWidth = self.calcLabelWidth(label);
          var totalDis = labelWidth + maskWidth + self.startOffset - self.endOffset;
          var dis1 = labelWidth + self.offset;
          var duration1 = self.calcDuration(dis1);
          var duration2 = self.calcDuration(totalDis - dis1);
          var targetPos1 = startPosX - dis1;
          var targetPos2 = -totalDis + startPosX;
          var callFun1 = cc.callFunc(function() {
            next && next();
          }.bind(self));
          var callFun2 = cc.callFunc(function() {
            label.node.active = false;
            self.addToAvailableLabel(label);
            onFinish && onFinish();
          }.bind(self));
          var move1 = cc.moveTo(duration1, targetPos1, 0);
          var move2 = cc.moveTo(duration2, targetPos2, 0);
          var seq = cc.sequence([ move1, callFun1, move2, callFun2 ]);
          label.node.runAction(seq);
        });
      };
      MarqueeComponent.prototype.messageFilter = function(msg) {
        return msg.tag == this.tag;
      };
      MarqueeComponent.prototype.getAvailableLabel = function() {
        var label = this.m_availableLabelQueue.shift();
        label || (label = this.cloneLabel());
        return label;
      };
      MarqueeComponent.prototype.cloneLabel = function() {
        var node = cc.instantiate(this.labelPrefab.node);
        node.parent = this.labelPrefab.node.parent;
        node.position = this.labelPrefab.node.position;
        node.scale = this.labelPrefab.node.scale;
        return node.getComponent(cc.RichText);
      };
      MarqueeComponent.prototype.addToAvailableLabel = function(label) {
        this.m_availableLabelQueue.push(label);
      };
      MarqueeComponent.prototype.calcLabelWidth = function(label) {
        return label.node.width;
      };
      MarqueeComponent.prototype.calcDuration = function(dis) {
        return dis / this.speed;
      };
      MarqueeComponent.prototype.on_msg_coming = function(msg) {
        if (this.m_isEmpty) {
          this.m_isEmpty = false;
          cc.log("paly__msg");
          this.play(msg);
        } else {
          this.m_index++;
          msg._index = this.m_index;
          cc.log("push__msg");
          this.m_message_queue.push(msg);
          this.sortQueue();
          this.cutQueue();
        }
      };
      MarqueeComponent.prototype.cutQueue = function() {
        this.m_message_queue.length > this.m_max_count && this.m_message_queue.splice(this.m_max_count, this.m_message_queue.length - this.m_max_count);
      };
      MarqueeComponent.prototype.sortQueue = function() {
        this.m_message_queue.sort(function(a, b) {
          if (a.level == b.level) return a._index - b._index;
          return a.level - b.level;
        });
      };
      MarqueeComponent.prototype.bindEvent = function() {
        event_manager_1.default.instance.on("Event_Notify_Data", this.on_msg_coming, this, true);
      };
      MarqueeComponent.prototype.unbindEvent = function() {
        event_manager_1.default.instance.off("Event_Notify_Data", this.on_msg_coming, this);
      };
      MarqueeComponent.prototype.onDisable = function() {
        this.unbindEvent();
      };
      MarqueeComponent.prototype.onDestroy = function() {
        this.unbindEvent();
      };
      __decorate([ property(cc.Node) ], MarqueeComponent.prototype, "root", void 0);
      __decorate([ property(cc.RichText) ], MarqueeComponent.prototype, "labelPrefab", void 0);
      __decorate([ property(cc.Mask) ], MarqueeComponent.prototype, "mask", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "offset", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "startOffset", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "endOffset", void 0);
      __decorate([ property(cc.Float) ], MarqueeComponent.prototype, "speed", void 0);
      __decorate([ property(cc.String) ], MarqueeComponent.prototype, "tag", void 0);
      MarqueeComponent = __decorate([ ccclass ], MarqueeComponent);
      return MarqueeComponent;
    }(cc.Component);
    exports.default = MarqueeComponent;
    cc._RF.pop();
  }, {
    "../../../../manager/event_manager": "event_manager"
  } ],
  md5: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "52eb7EciQ5DNKBHipWzNpaq", "md5");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var MD5 = function() {
      function MD5() {
        this.hexcase = 0;
        this.b64pad = "";
      }
      MD5.prototype.hex_md5 = function(s) {
        return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(s)));
      };
      MD5.prototype.b64_md5 = function(s) {
        return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(s)));
      };
      MD5.prototype.any_md5 = function(s, e) {
        return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(s)), e);
      };
      MD5.prototype.hex_hmac_md5 = function(k, d) {
        return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)));
      };
      MD5.prototype.b64_hmac_md5 = function(k, d) {
        return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)));
      };
      MD5.prototype.any_hmac_md5 = function(k, d, e) {
        return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)), e);
      };
      MD5.prototype.md5_vm_test = function() {
        return "900150983cd24fb0d6963f7d28e17f72" == this.hex_md5("abc").toLowerCase();
      };
      MD5.prototype.rstr_md5 = function(s) {
        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), 8 * s.length));
      };
      MD5.prototype.rstr_hmac_md5 = function(key, data) {
        var bkey = this.rstr2binl(key);
        bkey.length > 16 && (bkey = this.binl_md5(bkey, 8 * key.length));
        var ipad = Array(16), opad = Array(16);
        for (var i = 0; i < 16; i++) {
          ipad[i] = 909522486 ^ bkey[i];
          opad[i] = 1549556828 ^ bkey[i];
        }
        var hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + 8 * data.length);
        return this.binl2rstr(this.binl_md5(opad.concat(hash), 640));
      };
      MD5.prototype.rstr2hex = function(input) {
        try {
          this.hexcase;
        } catch (e) {
          this.hexcase = 0;
        }
        var hex_tab = this.hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
        var output = "";
        var x;
        for (var i = 0; i < input.length; i++) {
          x = input.charCodeAt(i);
          output += hex_tab.charAt(x >>> 4 & 15) + hex_tab.charAt(15 & x);
        }
        return output;
      };
      MD5.prototype.rstr2b64 = function(input) {
        try {
          this.b64pad;
        } catch (e) {
          this.b64pad = "";
        }
        var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var output = "";
        var len = input.length;
        for (var i = 0; i < len; i += 3) {
          var triplet = input.charCodeAt(i) << 16 | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);
          for (var j = 0; j < 4; j++) 8 * i + 6 * j > 8 * input.length ? output += this.b64pad : output += tab.charAt(triplet >>> 6 * (3 - j) & 63);
        }
        return output;
      };
      MD5.prototype.rstr2any = function(input, encoding) {
        var divisor = encoding.length;
        var i, j, q, x, quotient;
        var dividend = Array(Math.ceil(input.length / 2));
        for (i = 0; i < dividend.length; i++) dividend[i] = input.charCodeAt(2 * i) << 8 | input.charCodeAt(2 * i + 1);
        var full_length = Math.ceil(8 * input.length / (Math.log(encoding.length) / Math.log(2)));
        var remainders = Array(full_length);
        for (j = 0; j < full_length; j++) {
          quotient = Array();
          x = 0;
          for (i = 0; i < dividend.length; i++) {
            x = (x << 16) + dividend[i];
            q = Math.floor(x / divisor);
            x -= q * divisor;
            (quotient.length > 0 || q > 0) && (quotient[quotient.length] = q);
          }
          remainders[j] = x;
          dividend = quotient;
        }
        var output = "";
        for (i = remainders.length - 1; i >= 0; i--) output += encoding.charAt(remainders[i]);
        return output;
      };
      MD5.prototype.str2rstr_utf8 = function(input) {
        var output = "";
        var i = -1;
        var x, y;
        while (++i < input.length) {
          x = input.charCodeAt(i);
          y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;
          if (55296 <= x && x <= 56319 && 56320 <= y && y <= 57343) {
            x = 65536 + ((1023 & x) << 10) + (1023 & y);
            i++;
          }
          x <= 127 ? output += String.fromCharCode(x) : x <= 2047 ? output += String.fromCharCode(192 | x >>> 6 & 31, 128 | 63 & x) : x <= 65535 ? output += String.fromCharCode(224 | x >>> 12 & 15, 128 | x >>> 6 & 63, 128 | 63 & x) : x <= 2097151 && (output += String.fromCharCode(240 | x >>> 18 & 7, 128 | x >>> 12 & 63, 128 | x >>> 6 & 63, 128 | 63 & x));
        }
        return output;
      };
      MD5.prototype.str2rstr_utf16le = function(input) {
        var output = "";
        for (var i = 0; i < input.length; i++) output += String.fromCharCode(255 & input.charCodeAt(i), input.charCodeAt(i) >>> 8 & 255);
        return output;
      };
      MD5.prototype.str2rstr_utf16be = function(input) {
        var output = "";
        for (var i = 0; i < input.length; i++) output += String.fromCharCode(input.charCodeAt(i) >>> 8 & 255, 255 & input.charCodeAt(i));
        return output;
      };
      MD5.prototype.rstr2binl = function(input) {
        var output = Array(input.length >> 2);
        for (var i = 0; i < output.length; i++) output[i] = 0;
        for (var i = 0; i < 8 * input.length; i += 8) output[i >> 5] |= (255 & input.charCodeAt(i / 8)) << i % 32;
        return output;
      };
      MD5.prototype.binl2rstr = function(input) {
        var output = "";
        for (var i = 0; i < 32 * input.length; i += 8) output += String.fromCharCode(input[i >> 5] >>> i % 32 & 255);
        return output;
      };
      MD5.prototype.binl_md5 = function(x, len) {
        x[len >> 5] |= 128 << len % 32;
        x[14 + (len + 64 >>> 9 << 4)] = len;
        var a = 1732584193;
        var b = -271733879;
        var c = -1732584194;
        var d = 271733878;
        for (var i = 0; i < x.length; i += 16) {
          var olda = a;
          var oldb = b;
          var oldc = c;
          var oldd = d;
          a = this.md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
          d = this.md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
          c = this.md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
          b = this.md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
          a = this.md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
          d = this.md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
          c = this.md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
          b = this.md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
          a = this.md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
          d = this.md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
          c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);
          b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
          a = this.md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
          d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
          c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
          b = this.md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
          a = this.md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
          d = this.md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
          c = this.md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
          b = this.md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
          a = this.md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
          d = this.md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
          c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
          b = this.md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
          a = this.md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
          d = this.md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
          c = this.md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
          b = this.md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
          a = this.md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
          d = this.md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
          c = this.md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
          b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
          a = this.md5_hh(a, b, c, d, x[i + 5], 4, -378558);
          d = this.md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
          c = this.md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
          b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
          a = this.md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
          d = this.md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
          c = this.md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
          b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
          a = this.md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
          d = this.md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
          c = this.md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
          b = this.md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
          a = this.md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
          d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
          c = this.md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
          b = this.md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
          a = this.md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
          d = this.md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
          c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
          b = this.md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
          a = this.md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
          d = this.md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
          c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
          b = this.md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
          a = this.md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
          d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
          c = this.md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
          b = this.md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
          a = this.md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
          d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
          c = this.md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
          b = this.md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
          a = this.safe_add(a, olda);
          b = this.safe_add(b, oldb);
          c = this.safe_add(c, oldc);
          d = this.safe_add(d, oldd);
        }
        return [ a, b, c, d ];
      };
      MD5.prototype.md5_cmn = function(q, a, b, x, s, t) {
        return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);
      };
      MD5.prototype.md5_ff = function(a, b, c, d, x, s, t) {
        return this.md5_cmn(b & c | ~b & d, a, b, x, s, t);
      };
      MD5.prototype.md5_gg = function(a, b, c, d, x, s, t) {
        return this.md5_cmn(b & d | c & ~d, a, b, x, s, t);
      };
      MD5.prototype.md5_hh = function(a, b, c, d, x, s, t) {
        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);
      };
      MD5.prototype.md5_ii = function(a, b, c, d, x, s, t) {
        return this.md5_cmn(c ^ (b | ~d), a, b, x, s, t);
      };
      MD5.prototype.safe_add = function(x, y) {
        var lsw = (65535 & x) + (65535 & y);
        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return msw << 16 | 65535 & lsw;
      };
      MD5.prototype.bit_rol = function(num, cnt) {
        return num << cnt | num >>> 32 - cnt;
      };
      return MD5;
    }();
    exports.default = MD5;
    cc._RF.pop();
  }, {} ],
  memory_storage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1cb3buY7ipK8K9rO7CHKztj", "memory_storage");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("./debug");
    var MemoryStorage = function() {
      function MemoryStorage() {}
      MemoryStorage.setKeyValue = function(key, data) {
        this.m_map[key] = data;
      };
      MemoryStorage.getValue = function(key) {
        return this.m_map[key];
      };
      MemoryStorage.setStorageNumber = function(key, data) {
        this.m_map[key] = data;
      };
      MemoryStorage.setStorageString = function(key, data) {
        this.setKeyValue(key, data);
      };
      MemoryStorage.setStorage = function(key, data) {
        this.setKeyValue(key, data);
      };
      MemoryStorage.setNumber = function(key, data) {
        this.setKeyValue(key, data);
      };
      MemoryStorage.getNumber = function(key, defaultValue) {
        try {
          var value = this.getValue(key);
          return value || defaultValue;
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      MemoryStorage.setJson = function(key, data) {
        try {
          this.setKeyValue(key, JSON.stringify(data));
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      MemoryStorage.getJson = function(key) {
        try {
          var str = this.getString(key);
          if (null == str || "" == str) return null;
          var data = JSON.parse(str);
          return data;
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      MemoryStorage.setString = function(key, data) {
        try {
          this.setKeyValue(key, data);
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      MemoryStorage.getString = function(key, defaultValue) {
        try {
          var str = this.getValue(key);
          if (null == str || "" == str) {
            if (null != defaultValue) return defaultValue;
            return null;
          }
          return str;
        } catch (error) {}
      };
      MemoryStorage.setItem = function(key, data) {
        try {
          this.setKeyValue(key, data);
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      MemoryStorage.getItem = function(key) {
        try {
          var str = this.getValue(key);
          return str;
        } catch (error) {
          debug_1.default.warn(key, error);
        }
      };
      MemoryStorage.hasItem = function(key) {
        var str = this.getValue(key);
        return !!str;
      };
      MemoryStorage.m_map = {};
      return MemoryStorage;
    }();
    exports.default = MemoryStorage;
    cc._RF.pop();
  }, {
    "./debug": "debug"
  } ],
  menu_scroll_widget: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ce80ezWIChCiaUGNIGYWy5W", "menu_scroll_widget");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var app_data_1 = require("../const/app_data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var MenuScrollWidget = function(_super) {
      __extends(MenuScrollWidget, _super);
      function MenuScrollWidget() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.moduleNode = null;
        _this.leftWidget = null;
        _this.scrollWidget = null;
        _this._leftWidget_left = 0;
        _this._scrollWidget_left = 0;
        _this._scrollWidget_right = 0;
        return _this;
      }
      MenuScrollWidget.prototype.onLoad = function() {
        this._leftWidget_left = this.leftWidget.left;
        this._scrollWidget_left = this.scrollWidget.left;
        this._scrollWidget_right = this.scrollWidget.right;
      };
      MenuScrollWidget.prototype.refreshUI = function() {
        if (!app_data_1.default.isIphoneX) return;
        var widget = this.moduleNode.getComponent(cc.Widget);
        widget && widget.updateAlignment();
        this.leftWidget.left = this._leftWidget_left + app_data_1.default.iphonexOffset;
        this.scrollWidget.left = this._scrollWidget_left + app_data_1.default.iphonexOffset;
        this.scrollWidget.right = this._scrollWidget_right + app_data_1.default.iphonexOffset;
        this.leftWidget.updateAlignment();
        this.scrollWidget.updateAlignment();
      };
      __decorate([ property(cc.Node) ], MenuScrollWidget.prototype, "moduleNode", void 0);
      __decorate([ property(cc.Widget) ], MenuScrollWidget.prototype, "leftWidget", void 0);
      __decorate([ property(cc.Widget) ], MenuScrollWidget.prototype, "scrollWidget", void 0);
      MenuScrollWidget = __decorate([ ccclass ], MenuScrollWidget);
      return MenuScrollWidget;
    }(cc.Component);
    exports.default = MenuScrollWidget;
    cc._RF.pop();
  }, {
    "../const/app_data": "app_data"
  } ],
  mirror_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f985dUYgMNIh5IyNopN/Fhf", "mirror_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var MirrorShader = function(_super) {
      __extends(MirrorShader, _super);
      function MirrorShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Mirror";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    varying vec2 uv0;\n    void main () {\n        vec4 c = color * texture2D(texture, uv0);\n        c.r *= 0.5;\n        c.g *= 0.8;\n        c.b += c.a * 0.2;\n        gl_FragColor = c;\n    }\n    ";
        return _this;
      }
      MirrorShader = __decorate([ ccclass, menu("custom/Shader/Mirror") ], MirrorShader);
      return MirrorShader;
    }(shader_component_1.default);
    exports.default = MirrorShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  model_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c62f3zvzC5DlIQRt0wwayzr", "model_base");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_manager_1 = require("../module_manager");
    var ModelBase = function() {
      function ModelBase() {
        this._msgEventMap = {};
        this.isDestroyed = false;
      }
      ModelBase.prototype.send = function(route, message) {
        var time = new Date();
        cc.log(time.getHours() + ":" + time.getMinutes() + ":" + time.getSeconds() + " [pomelo]:\u53d1\u9001\u6d88\u606f:", route, message);
        this.netClient.send(route, message || {});
      };
      ModelBase.prototype.registerNetMsg = function(route, callback, ignoreModuleActive) {
        void 0 === ignoreModuleActive && (ignoreModuleActive = true);
        var self = this;
        var eventDataList = this._msgEventMap[route];
        if (!eventDataList) {
          eventDataList = [];
          this._msgEventMap[route] = eventDataList;
        }
        var cb = function(receiveMessageData) {
          callback && (ignoreModuleActive ? callback(receiveMessageData) : self.isDestroyed || callback(receiveMessageData));
        };
        var eventData = {
          msgName: route,
          callback: cb
        };
        eventDataList.push(eventData);
        this.netClient.on(route, cb);
      };
      ModelBase.prototype.clearMsgEvent = function() {
        for (var key in this._msgEventMap) if (this._msgEventMap.hasOwnProperty(key)) {
          var element = this._msgEventMap[key];
          for (var index = 0; index < element.length; index++) {
            var e = element[index];
            this.netClient.off(e.msgName, e.callback);
          }
        }
        this._msgEventMap = {};
      };
      ModelBase.prototype.destroyModel = function() {
        this.clearMsgEvent();
      };
      ModelBase.prototype.showNetPrompt = function(show) {
        show ? module_manager_1.default.instance.showModuleName("NetPrompt") : module_manager_1.default.instance.hideModule("NetPrompt");
      };
      return ModelBase;
    }();
    exports.default = ModelBase;
    cc._RF.pop();
  }, {
    "../module_manager": "module_manager"
  } ],
  model_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8c591+J8GRIj682CwTdouRO", "model_data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ModelData = function() {
      function ModelData() {
        this.clubID = null;
        this.playwayId = null;
        this.tableId = null;
      }
      ModelData.instance = new ModelData();
      return ModelData;
    }();
    exports.default = ModelData;
    cc._RF.pop();
  }, {} ],
  module_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8ab65/rzfxAr6d+ndd40Yan", "module_base");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var game_util_1 = require("../../../utility/game_util");
    var module_manager_1 = require("../module_manager");
    var debug_1 = require("../../../manager/debug");
    var mvvm_base_1 = require("./mvvm_base");
    var Utility_1 = require("../../../utility/Utility");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ViewLayer;
    (function(ViewLayer) {
      ViewLayer[ViewLayer["Low"] = 0] = "Low";
      ViewLayer[ViewLayer["Mid"] = 1] = "Mid";
      ViewLayer[ViewLayer["High"] = 2] = "High";
      ViewLayer[ViewLayer["Highest"] = 3] = "Highest";
    })(ViewLayer = exports.ViewLayer || (exports.ViewLayer = {}));
    exports.moduleTypeNames = {};
    exports.preloadResUrls = [];
    function bindButtonClickEvent(nodeName, closeSound) {
      return function bind(target, propertyName, descriptor) {
        target.onButtonClickEventFunctions = target.onButtonClickEventFunctions ? target.onButtonClickEventFunctions : {};
        target.onButtonClickEventFunctions[nodeName] = {};
        target.onButtonClickEventFunctions[nodeName].func = propertyName;
        target.onButtonClickEventFunctions[nodeName].closeSound = closeSound;
      };
    }
    exports.bindButtonClickEvent = bindButtonClickEvent;
    function moduleInit(moduleClassName, packageName, preloadResUrls) {
      return function bind(target) {
        target.moduleClassName = moduleClassName;
        target.packageName = packageName;
        exports.moduleTypeNames[moduleClassName] = target;
      };
    }
    exports.moduleInit = moduleInit;
    function subscribeMsg(msgData, ignoreModuleActive) {
      void 0 === ignoreModuleActive && (ignoreModuleActive = false);
      return function(target, propertyName, descriptor) {
        var data = {};
        data.ignoreModuleActive = ignoreModuleActive;
        data.mapData = msgData;
        data.propertyName = propertyName;
        target.subscribeMsgList = target.subscribeMsgList ? target.subscribeMsgList : [];
        target.subscribeMsgList.push(data);
      };
    }
    exports.subscribeMsg = subscribeMsg;
    function propertyEvent(eventName) {
      return function(target, propertyName) {
        target.string = eventName;
      };
    }
    function implementFunction(funName) {
      return function(target, propertyName) {
        target[funName] = target[propertyName];
      };
    }
    exports.implementFunction = implementFunction;
    var Module = function(_super) {
      __extends(Module, _super);
      function Module() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.clickAnywhereClose = true;
        _this.needAnim = false;
        _this.needViewMask = false;
        _this._viewMask = null;
        _this.needViewBaseBg = false;
        _this._viewBaseBg = null;
        _this.needViewBaseCloseBtn = false;
        _this._viewBaseCloseBtn = null;
        _this.needViewBaseTitleBg = false;
        _this._viewBaseTitleBg = null;
        _this.layer = ViewLayer.Low;
        _this.waitDealQueue = [];
        _this.mPrefab = null;
        _this.autoShowAnim = true;
        return _this;
      }
      Object.defineProperty(Module.prototype, "showId", {
        get: function() {
          return this.moduleType._showId;
        },
        enumerable: true,
        configurable: true
      });
      Module.prototype.onShow = function(intentData) {
        this.DealAllWaitDealQueue();
      };
      Module.prototype.onHide = function() {};
      Module.prototype.resetModule = function() {};
      Module.prototype.onInit = function(intentData) {};
      Module.prototype.onModuleInit = function(intentData) {};
      Module.prototype.on_destroy = function() {};
      Module.prototype.resetInit = function(viewNode, intentData, completeCallback) {
        var self = this;
        this.intentData = intentData;
        if (null != this.modelType) {
          this.model = new this.modelType();
          this.model.module = this;
        }
        var viewBase = viewNode.getComponent(self.viewType);
        self.view = viewBase;
        viewBase._moduleBase = self;
        self.isInited = true;
        self.onInit(self.intentData);
        self.show(self.intentData, completeCallback);
      };
      Module.prototype.init = function(intentData, completeCallback) {
        var self = this;
        this.setShowState(true);
        this.intentData = intentData;
        if (null != this.modelType) {
          this.model = new this.modelType();
          this.model.module = this;
        }
        this.onModuleInit(intentData);
        this.loadViewMask();
        var loadTimestamp = new Date().getTime();
        cc.log("\u8bf7\u6c42\u52a0\u8f7d\u6a21\u5757prefab:", this.windowPrefabResPath);
        var netPromptsActive = false;
        netPromptsActive = module_manager_1.default.instance.moduleHasActive("NetPrompt");
        netPromptsActive || "NetPrompt" == this.moduleName || module_manager_1.default.instance.showModuleName("NetPrompt", {
          showImmediately: true
        });
        this.loadRes(this.windowPrefabResPath, function(err, prefab) {
          cc.log("\u52a0\u8f7d\u6a21\u5757prefab\u8fd4\u56de\uff1a", self.windowPrefabResPath, (new Date().getTime() - loadTimestamp) / 1e3 + "S");
          netPromptsActive || "NetPrompt" == self.moduleName || module_manager_1.default.instance.hideModule("NetPrompt");
          if (err) {
            debug_1.default.warn("load module prefab error:", self.windowPrefabResPath);
            return;
          }
          if (new Date().getTime() - loadTimestamp > 15e3) {
            cc.log("\u52a0\u8f7d\u6a21\u5757prefab\u8d85\u65f6\uff1a", self.windowPrefabResPath);
            return;
          }
          if (self.isDestroyed || !self.node) {
            debug_1.default.log(self.moduleName, " \u6a21\u5757\u5df2\u7ecf\u88ab\u9500\u6bc1");
            return;
          }
          if (self.view && self.view.node) {
            debug_1.default.log(self.moduleName, " \u6a21\u5757\u5df2\u7ecf\u52a0\u8f7d\u8fc7\u4e86");
            if (!self.isShowState && self.isHide) {
              self.node.active = false;
              debug_1.default.warn(self.moduleName, "\u6700\u540e\u7684\u72b6\u6001\u662f\u9690\u85cf\uff01\uff01\uff01\uff01");
              return;
            }
            self.show(self.intentData, completeCallback);
            return;
          }
          var newNode = cc.instantiate(prefab);
          self.mPrefab = prefab;
          cc.loader.setAutoReleaseRecursively(prefab, true);
          self.node.addChild(newNode);
          var viewBase = newNode.getComponent(self.viewType);
          self.view = viewBase;
          self.loadBaseBg();
          viewBase._moduleBase = self;
          var widget = newNode.addComponent(cc.Widget);
          widget.isAlignTop = true;
          widget.isAlignBottom = true;
          widget.isAlignLeft = true;
          widget.isAlignRight = true;
          widget.target = self.node.parent;
          widget.alignMode = cc.Widget.AlignMode.ON_WINDOW_RESIZE;
          self.isInited || self.onInit(self.intentData);
          self.isInited = true;
          if (!self.isShowState && self.isHide) {
            self.node.active = false;
            debug_1.default.error(self.moduleName, "\u6700\u540e\u7684\u72b6\u6001\u662f\u9690\u85cf\uff01\uff01\uff01\uff01");
            return;
          }
          self.show(self.intentData, completeCallback);
        });
      };
      Module.prototype.loadViewMask = function() {
        var _this = this;
        if (this.needViewMask && null == this._viewMask) {
          var mask_1 = new cc.Node();
          mask_1.name = "mask";
          mask_1.parent = this.node;
          mask_1.scale = 1;
          var sprite_1 = mask_1.addComponent(cc.Sprite);
          var button = mask_1.addComponent(cc.Button);
          button.node.on("click", function() {
            _this.clickAnywhereClose && _this.hide();
          }, this);
          sprite_1.type = cc.Sprite.Type.SLICED;
          mask_1.opacity = 190;
          this._viewMask = mask_1;
          mask_1.active = false;
          game_util_1.default.loadRes("image/mask", function(err, spriteFrame) {
            if (err) {
              debug_1.default.warn("load mask error:", err);
              return;
            }
            sprite_1 && sprite_1.isValid && (sprite_1.spriteFrame = spriteFrame);
            if (mask_1 && mask_1.isValid) {
              var widget = mask_1.addComponent(cc.Widget);
              widget.isAlignTop = true;
              widget.isAlignBottom = true;
              widget.isAlignLeft = true;
              widget.isAlignRight = true;
              widget.target = mask_1.parent.parent;
              widget.alignMode = cc.Widget.AlignMode.ON_WINDOW_RESIZE;
            }
          }, cc.SpriteFrame);
        }
      };
      Module.prototype.loadBaseBg = function(onFinish) {
        var self = this;
        var checkCloseBtn = function(nodeCloseBtn, show) {
          if (show) {
            nodeCloseBtn.active = true;
            nodeCloseBtn.on("click", self.on_click_base_close_btn, self);
          } else {
            nodeCloseBtn.active = false;
            nodeCloseBtn.off("click", self.on_click_base_close_btn, self);
          }
        };
        if (self.needViewBaseBg) if (self._viewBaseBg) {
          self._viewBaseBg.active = true;
          self._viewBaseTitleBg.active = !!self.needViewBaseTitleBg;
          checkCloseBtn(self._viewBaseCloseBtn, self.needViewBaseCloseBtn);
          onFinish && onFinish();
        } else game_util_1.default.loadRes("package/hall/module/base_bg/base_bg", function(err, prefab) {
          if (err) {
            debug_1.default.warn("load mask error:", err);
            return;
          }
          if (prefab && prefab.isValid) {
            var node = cc.instantiate(prefab);
            self._viewBaseBg = node;
            node.parent = self.view.node;
            node.zIndex = -1;
            node.position = cc.Vec2.ZERO;
            node.active = true;
            var nodeCloseBtn = cc.find("_baseCloseBtn", node);
            var nodeTitleBg = cc.find("title_bg", node);
            self._viewBaseCloseBtn = nodeCloseBtn;
            self._viewBaseTitleBg = nodeTitleBg;
            self._viewBaseTitleBg.active = !!self.needViewBaseTitleBg;
            checkCloseBtn(nodeCloseBtn, self.needViewBaseCloseBtn);
            onFinish && onFinish();
          }
        }, cc.Prefab); else {
          if (self._viewBaseBg) {
            self._viewBaseBg.active = false;
            self._viewBaseTitleBg.active = !!self.needViewBaseTitleBg;
            checkCloseBtn(self._viewBaseCloseBtn, false);
          }
          onFinish && onFinish();
        }
      };
      Module.prototype.on_click_base_close_btn = function(node) {
        Utility_1.default.instance.playButtonSound();
        this.hide();
      };
      Module.prototype.show = function(intentData, completeCallback) {
        ++this.moduleType._showId;
        debug_1.default.warn("Module ShowId\uff1a", this.moduleName, this.moduleType._showId);
        if (!this.isInited) {
          this.init(intentData, completeCallback);
          cc.error("\u6253\u5f00\u6a21\u5757(\u4e0a\u6b21\u6253\u5f00\u8d44\u6e90\u672a\u52a0\u8f7d\u6210\u529f)\uff1a", this.moduleName, this.windowPrefabResPath);
          return;
        }
        this.setShowState(true);
        this.intentData = intentData;
        this.completeCallback = completeCallback;
        if (this.isDestroyed) {
          cc.error("\u6253\u5f00\u6a21\u5757(view\u5df2\u7ecf\u9500\u6bc1)\uff1a", this.moduleName, this.windowPrefabResPath);
          return;
        }
        this.node.active || (this.node.active = true);
        this.isHide = false;
        this.onShow(intentData);
        this.view.onShow(intentData);
        if (intentData && "string" == typeof intentData && "tips" == intentData) {
          this.view.node.active = false;
          this._viewMask && (this._viewMask.active = false);
        } else this.autoShowAnim && this.showAnim(true);
        this.completeCallback && this.completeCallback(this, true);
      };
      Module.prototype.showLayerTop = function() {
        this.node.setSiblingIndex(this.node.parent.childrenCount - 1);
      };
      Module.prototype.showAnim = function(open) {
        void 0 === open && (open = true);
        if (!this.view) return;
        this._viewMask && false == this._viewMask.active && (this._viewMask.active = true);
        this.needAnim ? open ? module_manager_1.default.instance.playAnim(true, this.view.node, this._viewMask, this.scheduleShow.bind(this)) : module_manager_1.default.instance.playAnim(false, this.view.node, this._viewMask, this.scheduleHide.bind(this)) : open ? this.scheduleShow() : this.scheduleHide();
      };
      Module.prototype.showNetPrompt = function(show) {
        show ? module_manager_1.default.instance.showModuleName("NetPrompt") : module_manager_1.default.instance.hideModule("NetPrompt");
      };
      Module.prototype.scheduleShow = function() {
        this.view && (this.view.node.scale = 1);
      };
      Module.prototype.scheduleHide = function() {
        if (!this.node) return;
        this.node.active && (this.node.active = false);
        this.onHide();
      };
      Module.prototype.hide = function() {
        this.isHide = true;
        this.setShowState(false);
        this.CleanWaitDealQueue();
        if (this.node.active) {
          debug_1.default.warn("hidePrefab", this.node.name);
          this.node.active = false;
        }
        this.onHide();
      };
      Module.prototype.setShowState = function(isShow) {
        this.isShowState = isShow;
      };
      Module.prototype.destroyModule = function(release) {
        this.node.destroy();
        this.node.active = false;
        this.isHide = true;
        this.on_destroy();
        if (this.view) {
          debug_1.default.warn("destroyView", this.view.node.name);
          this.view.destroyView();
          this.view.unscheduleAllCallbacks();
          this.view.on_destroy();
          this.view = null;
        }
        this.model && this.model.destroyModel();
        this.unscheduleAllCallbacks();
        this.setShowState(false);
        this._baseDestroy();
        this.isDestroyed = true;
        release && this.mPrefab;
      };
      Module.prototype.AddToWaitDealQueue = function(data) {
        this.waitDealQueue.push(data);
      };
      Module.prototype.AddHandleToWaitDealQueue = function(handle, data, target) {
        var waitDealData = {
          handle: handle,
          target: target,
          data: data
        };
        this.AddToWaitDealQueue(waitDealData);
      };
      Module.prototype.GetWaitDealQueueHead = function() {
        if (this.waitDealQueue.length > 0) return this.waitDealQueue.shift();
        return null;
      };
      Module.prototype.DealAllWaitDealQueue = function() {
        for (var key in this.waitDealQueue) if (this.waitDealQueue.hasOwnProperty(key)) {
          var element = this.waitDealQueue[key];
          if (element.handle) {
            var handle = element.handle;
            element.target && (handle = handle.bind(element.target));
            handle(element.data);
          }
        }
        this.CleanWaitDealQueue();
      };
      Module.prototype.CleanWaitDealQueue = function() {
        this.waitDealQueue = [];
      };
      Module.prototype._ButtonClick = function(node, customEventData) {
        var nodeName = node.name;
        var funcName = this.onButtonClickEventFunctions ? this.onButtonClickEventFunctions[nodeName] : null;
        funcName && funcName.closeSound || Utility_1.default.instance.playButtonSound();
        funcName && this[funcName.func](node, customEventData);
        this.onButtonClick(node, customEventData);
        this.onButtonClickName(nodeName, customEventData, node);
      };
      Module.prototype.onButtonClick = function(node, customEventData) {};
      Module.prototype.onButtonClickName = function(name, customEventData, _node) {};
      Module._showId = 0;
      Module = __decorate([ ccclass ], Module);
      return Module;
    }(mvvm_base_1.default);
    exports.default = Module;
    cc._RF.pop();
  }, {
    "../../../manager/debug": "debug",
    "../../../utility/Utility": "utility",
    "../../../utility/game_util": "game_util",
    "../module_manager": "module_manager",
    "./mvvm_base": "mvvm_base"
  } ],
  module_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7d1b4L7MFJPrp5UU52Y2GD/", "module_data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_manager_1 = require("../../../framework/core/module_manager");
    var ModuleData = function() {
      function ModuleData() {
        this.backFromTable = true;
        this.curMatchId = 0;
        this.curGoldId = 0;
        this.curMatchStageNum = 0;
        this.curMatchData = null;
        this.curGoldData = null;
      }
      ModuleData.prototype.setCurGoldId = function(goldId) {
        this.curGoldId = goldId;
      };
      ModuleData.prototype.getCurGoldId = function() {
        return this.curGoldId;
      };
      ModuleData.prototype.getCurMatchId = function() {
        return this.curMatchId;
      };
      ModuleData.prototype.isBackFromTable = function() {
        return this.backFromTable;
      };
      ModuleData.prototype.setBackFromTable = function(backFromTable) {
        this.backFromTable = backFromTable;
      };
      ModuleData.prototype.gotoMatch = function() {
        this.setBackFromTable(true);
        this.curMatchData;
      };
      ModuleData.prototype.isTableModuleActive = function() {};
      ModuleData.prototype.gotoMatchingTableModule = function(data, onFinish) {
        this.beginEnterTableModule();
        module_manager_1.default.instance.showModuleName("TableMatchModule");
      };
      ModuleData.prototype.beginEnterTableModule = function() {};
      ModuleData.prototype.destoryHallModule = function() {};
      ModuleData.instance = new ModuleData();
      return ModuleData;
    }();
    exports.default = ModuleData;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager"
  } ],
  module_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9ded2b3DhZEs4JwmnaGvQHb", "module_manager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("./mvvm/module_base");
    var debug_1 = require("../../manager/debug");
    var game_util_1 = require("../../utility/game_util");
    var language_manager_1 = require("../../manager/language_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ModuleManager = function(_super) {
      __extends(ModuleManager, _super);
      function ModuleManager() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._asynPath = [ "package/public/public_netprompt", "package/public/public_toast", "package/hall/hall" ];
        _this._asynLoadResCount = 0;
        _this.allwaysInMemory = [ "NetPrompt", "Toast", "Hall" ];
        _this._modules = {};
        _this._removeModules = {};
        _this.low = null;
        _this.middle = null;
        _this.high = null;
        _this.highest = null;
        return _this;
      }
      ModuleManager_1 = ModuleManager;
      ModuleManager.prototype.onLoad = function() {
        ModuleManager_1.instance = this;
      };
      ModuleManager.prototype.registModule = function(name, T) {
        module_base_1.moduleTypeNames[name] = T;
      };
      ModuleManager.prototype.addModule = function(T, moduleName, intentData, onFinishLoad) {
        var tName = moduleName;
        var module = this._modules[tName];
        if (null == module) {
          var newNode = new cc.Node();
          newNode.name = tName;
          var widget = newNode.addComponent(cc.Widget);
          widget.isAlignTop = true;
          widget.isAlignBottom = true;
          widget.isAlignLeft = true;
          widget.isAlignRight = true;
          widget.alignMode = cc.Widget.AlignMode.ONCE;
          module = newNode.addComponent(T);
          if (null == module) {
            debug_1.default.warn("addModule\u5931\u8d25\uff1a" + tName);
            return null;
          }
          module.moduleType = T;
          module.moduleName = tName;
          switch (module.layer) {
           case module_base_1.ViewLayer.Low:
            newNode.width = this.low.width;
            this.low.addChild(newNode);
            break;

           case module_base_1.ViewLayer.Mid:
            newNode.width = this.middle.width;
            this.middle.addChild(newNode);
            break;

           case module_base_1.ViewLayer.High:
            newNode.width = this.high.width;
            this.high.addChild(newNode);
            break;

           case module_base_1.ViewLayer.Highest:
            newNode.width = this.highest.width;
            this.highest.addChild(newNode);
            break;

           default:
            newNode.width = this.low.width;
            this.low.addChild(newNode);
          }
          this._modules[tName] = module;
          module.node.setSiblingIndex(module.node.parent.childrenCount - 1);
          module.init(intentData, onFinishLoad);
        }
        return module;
      };
      ModuleManager.prototype.goToModule = function(T, intentData, completeCallback, replaceModuleName) {
        var self = this;
        var moduleName = T.moduleClassName;
        this.showModule(T, intentData, function() {
          self.hideAllModuleS(moduleName, true);
          completeCallback && completeCallback();
        }, replaceModuleName);
      };
      ModuleManager.prototype.showModule = function(T, intentData, completeCallback, replaceModuleName) {
        var moduleName = T.moduleClassName;
        if (!moduleName) {
          console.error("\u8bf7\u5728\u6a21\u5757Module\u7c7b\u4e2d\u6dfb\u52a0@moduleClassName('\u6a21\u5757\u7684\u7c7b\u540d')\u88c5\u9970\u5668", T);
          return;
        }
        debug_1.default.warn("showModule: " + moduleName);
        if (null != replaceModuleName && "" != replaceModuleName) {
          var module_1 = this._modules[replaceModuleName];
          if (null != module_1) {
            module_1.resetModule();
            var node = module_1.node;
            node.childrenCount > 0 || (this._modules[moduleName] = null);
          }
        }
        var tName = moduleName;
        var module = this._modules[tName];
        if (null == module) module = this.addModule(T, moduleName, intentData, completeCallback); else {
          module.node.setSiblingIndex(module.node.parent.childrenCount - 1);
          module.show(intentData, completeCallback);
        }
        return module;
      };
      ModuleManager.prototype.showModuleName = function(moduleName, intentData, completeCallback, replaceModuleName) {
        debug_1.default.warn("showModuleName\uff1a" + moduleName);
        var module = null;
        if (null != replaceModuleName && "" != replaceModuleName) {
          var module_2 = this._modules[replaceModuleName];
          if (null != module_2) {
            module_2.resetModule();
            var node = module_2.node;
            node.childrenCount > 0 || (this._modules[moduleName] = null);
          }
        }
        module = this._modules[moduleName];
        if (null == module) if (module_base_1.moduleTypeNames[moduleName]) {
          var T = module_base_1.moduleTypeNames[moduleName];
          module = this.addModule(T, moduleName, intentData, completeCallback);
        } else cc.error("showModuleName\u6ca1\u627e\u5230\u5bf9\u5e94\u7684class\uff1a", moduleName); else {
          module.node.setSiblingIndex(module.node.parent.childrenCount - 1);
          module.show(intentData, completeCallback);
        }
        return module;
      };
      ModuleManager.prototype.toastLong = function(text) {
        var data = {
          text: text,
          long: true
        };
        this.showModuleName("Toast", data);
        return module;
      };
      ModuleManager.prototype.toast = function(text) {
        this.showModuleName("Toast", text);
        return module;
      };
      ModuleManager.prototype.toastKey = function(key) {
        this.showModuleName("Toast", language_manager_1.default.t(key, true));
        return module;
      };
      ModuleManager.prototype.showDialog_Confirm = function(text, confirmBtnCallback, title, clickButtonConfirmNotHideView) {};
      ModuleManager.prototype.showDialog_CancelConfirm = function(text, confirmBtnCallback, cancelBtnCallback, title, clickButtonConfirmNotHideView) {};
      ModuleManager.prototype.moduleHasActive = function(moduleName) {
        var module = this._modules[moduleName];
        if (module) return module.nodeIsActive;
      };
      ModuleManager.prototype.moduleLayerType = function(moduleName) {
        var module = this._modules[moduleName];
        if (module) return module.layer;
      };
      ModuleManager.prototype.setModuleActive = function(moduleName, needAdd) {
        var module = this._modules[moduleName];
        module ? module.setActive() : needAdd && this.showModuleName(moduleName);
      };
      ModuleManager.prototype.getModule = function(moduleName) {
        var module = this._modules[moduleName];
        return module;
      };
      ModuleManager.prototype.getModuleFromType = function(T) {
        var moduleName = T.moduleClassName;
        if (!moduleName) {
          debug_1.default.error("\u8bf7\u5728\u6a21\u5757Module\u7c7b\u4e2d\u6dfb\u52a0@moduleClassName('\u6a21\u5757\u7684\u7c7b\u540d')\u88c5\u9970\u5668", T);
          return;
        }
        return this.getModule(moduleName);
      };
      ModuleManager.prototype.hideModule = function(moduleName) {
        var module = this._modules[moduleName];
        if (module) {
          debug_1.default.warn("hideModule\uff1a", moduleName);
          module.hide();
        }
      };
      ModuleManager.prototype.hideAllModuleS = function(exclusiveMoudleName, incluePublicPackage) {
        for (var key in this._modules) {
          var module = this._modules[key];
          if (null == module || exclusiveMoudleName && module.moduleName && exclusiveMoudleName == module.moduleName) continue;
          if (incluePublicPackage) {
            debug_1.default.warn("hideModule\uff1a", module.moduleName);
            module.hide();
          } else "public" != module.package && module.hide();
        }
      };
      ModuleManager.prototype.hideAllModule = function(except) {
        var exceptList = [ "Toast", "NetPrompt" ];
        if (except) if (except instanceof Array) for (var i = 0; i < except.length; i++) exceptList.push(except[i]); else "string" == typeof except && exceptList.push(except);
        for (var name in this._modules) {
          var needHide = true;
          for (var i = 0; i < exceptList.length; i++) if (name == exceptList[i]) {
            needHide = false;
            break;
          }
          needHide && this.hideModule(name);
        }
      };
      ModuleManager.prototype.removeModule = function(moduleName, release) {
        var module = this._modules[moduleName];
        if (module) {
          debug_1.default.warn("removeModule\uff1a", moduleName);
          this._modules[moduleName] = null;
          this._removeModules[moduleName] = module;
        }
        return module;
      };
      ModuleManager.prototype.destroyRemoveModule = function(moduleName, release) {
        void 0 === release && (release = false);
        var module = this._removeModules[moduleName];
        if (module) {
          debug_1.default.warn("destroyRemoveModule\uff1a", moduleName);
          module.destroyModule(release);
          this._removeModules[moduleName] = null;
        }
        return module;
      };
      ModuleManager.prototype.destroyModule = function(moduleName, release) {
        void 0 === release && (release = true);
        var module = this._modules[moduleName];
        if (module) {
          debug_1.default.warn("destroyModule\uff1a", moduleName);
          module.destroyModule(release);
          this._modules[moduleName] = null;
        }
      };
      ModuleManager.prototype.destroyAllModule = function(except, release) {
        void 0 === release && (release = true);
        var exceptList = except ? this.allwaysInMemory.concat(except) : this.allwaysInMemory;
        for (var name in this._modules) {
          var needDestory = true;
          for (var index = 0; index < exceptList.length; index++) {
            var element = exceptList[index];
            if (element == name) {
              needDestory = false;
              break;
            }
          }
          needDestory && this.destroyModule(name, release);
        }
        this.hideModule("Dialog");
      };
      ModuleManager.prototype.destroyPackage = function(packageName) {
        var needDestroyModuleName;
        for (var key in this._modules) {
          var module = this._modules[key];
          if (module.packageName == packageName) {
            needDestroyModuleName = needDestroyModuleName || [];
            needDestroyModuleName.push(key);
          }
        }
        if (needDestroyModuleName) for (var moduleName in needDestroyModuleName) this.destroyModule(moduleName);
      };
      ModuleManager.prototype.hidePackage = function(packageName) {
        for (var key in this._modules) {
          var module = this._modules[key];
          module.packageName == packageName && module.hide();
        }
      };
      ModuleManager.prototype.playAnim = function(open, target, mask, callback) {
        if (open) {
          target.active = true;
          target.scale = .9;
          var action1 = cc.scaleTo(.2, 1);
          action1.easing(cc.easeBackOut());
          target.runAction(action1);
          if (mask) {
            mask.active = true;
            var action2 = cc.fadeTo(.3, 190);
            mask.runAction(action2);
          }
          this.scheduleOnce(function() {
            callback && callback();
          }, .1);
        } else {
          target && target.isValid && (target.active = false);
          mask && (mask.active = false);
          callback && callback();
        }
      };
      ModuleManager.prototype.addPreloadResUrl = function(resUrl) {};
      ModuleManager.prototype.preLoadRes = function(completeCallback, progressCallback) {
        var self = this;
        if (self._asynLoadResCount < self._asynPath.length) {
          var path_1 = self._asynPath[self._asynLoadResCount];
          game_util_1.default.loadRes(path_1, function(error, resource) {
            ++self._asynLoadResCount;
            error ? debug_1.default.error(error) : debug_1.default.log("\u9884\u52a0\u8f7d\u8d44\u6e90\u6210\u529f\uff1a", path_1);
            self.preLoadRes(completeCallback, progressCallback);
            progressCallback && progressCallback(self._asynLoadResCount, self._asynPath.length);
          });
        } else completeCallback && completeCallback();
      };
      var ModuleManager_1;
      __decorate([ property(cc.Node) ], ModuleManager.prototype, "low", void 0);
      __decorate([ property(cc.Node) ], ModuleManager.prototype, "middle", void 0);
      __decorate([ property(cc.Node) ], ModuleManager.prototype, "high", void 0);
      __decorate([ property(cc.Node) ], ModuleManager.prototype, "highest", void 0);
      ModuleManager = ModuleManager_1 = __decorate([ ccclass ], ModuleManager);
      return ModuleManager;
    }(cc.Component);
    exports.default = ModuleManager;
    cc._RF.pop();
  }, {
    "../../manager/debug": "debug",
    "../../manager/language_manager": "language_manager",
    "../../utility/game_util": "game_util",
    "./mvvm/module_base": "module_base"
  } ],
  mosaic_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "86f4e6MSZ9BNY0YM3OiLfNF", "mosaic_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var renderEngine = cc.renderer.renderEngine;
    var renderer = renderEngine.renderer;
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var MosaicShader = function(_super) {
      __extends(MosaicShader, _super);
      function MosaicShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Mosaic";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "uniform sampler2D texture;\n    uniform vec3 iResolution;\n    uniform float mosaicSize;\n    varying vec2 uv0;\n     \n    void main(void)\n    {\n        vec4 color;\n        vec2 xy = vec2(uv0.x * iResolution.x, uv0.y * iResolution.y);\n        vec2 xyMosaic = vec2(floor(xy.x / mosaicSize) * mosaicSize, floor(xy.y / mosaicSize) * mosaicSize);\n        vec2 xyFloor = vec2(floor(mod(xy.x, mosaicSize)), floor(mod(xy.y, mosaicSize)));\n        vec2 uvMosaic = vec2(xyMosaic.x / iResolution.x, xyMosaic.y / iResolution.y);\n        color = texture2D( texture, uvMosaic);\n        gl_FragColor = color; \n    }";
        _this._defines = [];
        _this._params = [ {
          name: "iResolution",
          type: renderer.PARAM_FLOAT3
        }, {
          name: "mosaicSize",
          type: renderer.PARAM_FLOAT
        } ];
        _this._needUpdate = true;
        return _this;
      }
      MosaicShader.prototype.setParamValue = function(material) {
        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);
        material.setParamValue("iResolution", iResolution);
        material.setParamValue("mosaicSize", 16);
      };
      MosaicShader = __decorate([ ccclass, menu("custom/Shader/Mosaic") ], MosaicShader);
      return MosaicShader;
    }(shader_component_1.default);
    exports.default = MosaicShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  move_item: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2c95cCe2hxObJSiw7PnR5Cz", "move_item");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var MoveItem = function(_super) {
      __extends(MoveItem, _super);
      function MoveItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.startNode = null;
        _this.endNode = null;
        _this.item = null;
        _this.lab = null;
        _this.moveTime = 0;
        _this.opacity = 0;
        _this.scale = 0;
        _this.delay = 0;
        return _this;
      }
      MoveItem.prototype.setContent = function(content) {
        this.lab.string = content;
      };
      MoveItem.prototype.beginMove = function() {
        this.unscheduleAllCallbacks();
        this.scheduleOnce(this.moveAction.bind(this), this.delay);
      };
      MoveItem.prototype.moveAction = function() {
        var _this = this;
        var startpos = this.calmovepos(this.startNode, this.item);
        var endpos = this.calmovepos(this.endNode, this.item);
        this.item.stopAllActions();
        this.item.active = true;
        this.item.position = startpos;
        this.item.opacity = this.opacity;
        this.item.scale = this.scale;
        var move = cc.moveTo(this.moveTime, endpos);
        this.item.runAction(cc.sequence(move, cc.callFunc(function() {
          _this.item.active = false;
        })));
      };
      MoveItem.prototype.calmovepos = function(node, mytarget) {
        var world = node.parent.convertToWorldSpaceAR(node.position);
        var localpos;
        localpos = mytarget.parent.convertToNodeSpaceAR(world, localpos);
        return localpos;
      };
      __decorate([ property(cc.Node) ], MoveItem.prototype, "startNode", void 0);
      __decorate([ property(cc.Node) ], MoveItem.prototype, "endNode", void 0);
      __decorate([ property(cc.Node) ], MoveItem.prototype, "item", void 0);
      __decorate([ property(cc.Label) ], MoveItem.prototype, "lab", void 0);
      __decorate([ property(cc.Float) ], MoveItem.prototype, "moveTime", void 0);
      __decorate([ property(cc.Float) ], MoveItem.prototype, "opacity", void 0);
      __decorate([ property(cc.Float) ], MoveItem.prototype, "scale", void 0);
      __decorate([ property(cc.Float) ], MoveItem.prototype, "delay", void 0);
      MoveItem = __decorate([ ccclass ], MoveItem);
      return MoveItem;
    }(cc.Component);
    exports.default = MoveItem;
    cc._RF.pop();
  }, {} ],
  mvvm_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e433aAuN1xOHKn/VUKkKAtc", "mvvm_base");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var game_util_1 = require("../../../utility/game_util");
    var event_manager_1 = require("../../../manager/event_manager");
    var audio_manager_1 = require("../../../manager/audio_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var MVVMBase = function(_super) {
      __extends(MVVMBase, _super);
      function MVVMBase() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.isDestroyed = false;
        _this.m_maxId = 0;
        return _this;
      }
      Object.defineProperty(MVVMBase.prototype, "nodeIsActive", {
        get: function() {
          if (this.isInited && null != this.node && cc.isValid(this.node, true)) return this.node.active;
          return false;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(MVVMBase.prototype, "nodeIsValid", {
        get: function() {
          if (null != this.node && cc.isValid(this.node, true)) return true;
          return false;
        },
        enumerable: true,
        configurable: true
      });
      MVVMBase.prototype.setActive = function() {
        null != this.node && cc.isValid(this.node, true) && (this.node.active = true);
      };
      Object.defineProperty(MVVMBase.prototype, "normalShow", {
        get: function() {
          return !this.isDestroyed && !this.isHide;
        },
        enumerable: true,
        configurable: true
      });
      MVVMBase.prototype.loadRes = function(url, completeCallback, type, connect) {
        var self = this;
        game_util_1.default.loadRes(url, function(error, resource) {
          self.isDestroyed || error || !completeCallback || completeCallback(error, resource);
        }, type, connect);
      };
      MVVMBase.prototype.playSound = function(url, loop, onFinish) {
        void 0 === loop && (loop = false);
        var self = this;
        audio_manager_1.default.instance.playSound(url, loop, function() {
          self.normalShow && onFinish && onFinish();
        });
      };
      MVVMBase.prototype.doSchedule = function(callback, interval, repeat, delay) {
        this.m_callbackMap = this.m_callbackMap ? this.m_callbackMap : {};
        var self = this;
        var id = ++this.m_maxId;
        var tmpFun = function() {
          repeat || self.cancelSchedule(id);
          callback();
        };
        this.m_callbackMap[Number(id)] = tmpFun;
        this.schedule(tmpFun, interval, repeat, delay);
        return id;
      };
      MVVMBase.prototype.doScheduleOnce = function(callback, delay) {
        this.m_callbackMap = this.m_callbackMap ? this.m_callbackMap : {};
        var id = ++this.m_maxId;
        var tmpFun = function() {
          this.m_callbackMap[id.toString()] = null;
          callback();
        };
        this.m_callbackMap[Number(id)] = tmpFun;
        this.scheduleOnce(tmpFun, delay);
        return id;
      };
      MVVMBase.prototype.cancelSchedule = function(id) {
        if (this.m_callbackMap) {
          var key = id.toString();
          var callback = this.m_callbackMap[key];
          if (callback) {
            this.unschedule(callback);
            this.m_callbackMap[key] = null;
          }
        }
      };
      MVVMBase.prototype.eventDispatch = function(eventName) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) data[_i - 1] = arguments[_i];
        var _a;
        return (_a = event_manager_1.default.instance).dispatch.apply(_a, [ eventName ].concat(data));
      };
      MVVMBase.prototype.eventBind = function(eventName, callback) {
        this.mEventCallback = this.mEventCallback ? this.mEventCallback : {};
        this.mEventCallback[eventName] = callback;
        event_manager_1.default.instance.on(eventName, callback, this, true);
      };
      MVVMBase.prototype.eventBindOnce = function(eventName, callback) {
        this.mEventCallback = this.mEventCallback ? this.mEventCallback : {};
        this.mEventCallback[eventName] = callback;
        event_manager_1.default.instance.on(eventName, callback, this, true, true);
      };
      MVVMBase.prototype.eventUnBind = function(eventName, callback) {
        this.mEventCallback = this.mEventCallback ? this.mEventCallback : {};
        this.mEventCallback[eventName] = null;
        event_manager_1.default.instance.off(eventName, callback, this);
      };
      MVVMBase.prototype._baseDestroy = function() {
        for (var key in this.mEventCallback) if (this.mEventCallback.hasOwnProperty(key)) {
          var callback = this.mEventCallback[key];
          event_manager_1.default.instance.off(key, callback, this);
        }
      };
      MVVMBase = __decorate([ ccclass ], MVVMBase);
      return MVVMBase;
    }(cc.Component);
    exports.default = MVVMBase;
    cc._RF.pop();
  }, {
    "../../../manager/audio_manager": "audio_manager",
    "../../../manager/event_manager": "event_manager",
    "../../../utility/game_util": "game_util"
  } ],
  net_client: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2faa6JYrtFNE7z6ET2EC+8C", "net_client");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ccclass = cc._decorator.ccclass;
    var NetClientProtoType;
    (function(NetClientProtoType) {
      NetClientProtoType[NetClientProtoType["LoginServer"] = 1] = "LoginServer";
      NetClientProtoType[NetClientProtoType["GameServer"] = 2] = "GameServer";
      NetClientProtoType[NetClientProtoType["HallServer"] = 3] = "HallServer";
    })(NetClientProtoType = exports.NetClientProtoType || (exports.NetClientProtoType = {}));
    require("pomelo");
    var NetClient = function() {
      function NetClient() {
        this.lastReceivePingTime = 0;
        this.heartbeatInterval = 0;
        this.heartbeatTimeout = 0;
        this.msgMap = {};
        this.pomelo = new cc.Pomelo();
      }
      NetClient.prototype.connect = function(url, protoType) {
        null != this.pomelo && this.pomelo.clear();
        this.registerNetMsg();
        this.pomelo.connect(url, null);
        this.netClientProtoType = null == protoType ? NetClientProtoType.LoginServer : protoType;
      };
      NetClient.prototype.registerNetMsg = function() {
        this.clearSysNetMsg();
        this.sysNetMsg("onOpen", this.onOpen.bind(this));
        this.sysNetMsg("onclose", this.onclose.bind(this));
        this.sysNetMsg("onerror", this.onerror.bind(this));
        this.sysNetMsg("handshake", this.handshake.bind(this));
        this.sysNetMsg("heartbeat", this.heartbeatFunc.bind(this));
      };
      NetClient.prototype.on = function(route, callback) {
        this.pomelo.on(route, callback);
      };
      NetClient.prototype.off = function(route, callback) {
        this.pomelo.off(route, callback);
      };
      NetClient.prototype.send = function(route, message) {
        var _this = this;
        this.pomelo.request(route, message || {}, function(msg) {
          _this.emit(route, msg);
        });
      };
      NetClient.prototype.emit = function(event, msg) {
        this.pomelo.emit(event, msg);
      };
      NetClient.prototype.heartbeat = function() {
        this.pomelo.heartbeat();
      };
      NetClient.prototype.removeAllNetListeners = function() {
        this.pomelo.off();
      };
      NetClient.prototype.sysNetMsg = function(route, callback) {
        this.on(route, callback);
        this.msgMap[route] = callback;
      };
      NetClient.prototype.clearSysNetMsg = function() {
        for (var key in this.msgMap) {
          var callback = this.msgMap[key];
          this.msgMap.hasOwnProperty(key) && this.off(key, callback);
        }
        this.msgMap = {};
      };
      NetClient.prototype.onOpen = function(event) {
        cc.log("onPen");
        this.lastReceivePingTime = Date.now();
        this.netState = true;
        this.onConnectStateEvent && this.onConnectStateEvent("OPEN");
      };
      NetClient.prototype.onclose = function(event) {
        cc.log("onclose", event);
        this.netState = false;
        this.onConnectStateEvent && this.onConnectStateEvent("CLOSE");
      };
      NetClient.prototype.onerror = function(event) {
        cc.error("onerror", event);
        this.netState = false;
        this.onConnectStateEvent && this.onConnectStateEvent("error");
      };
      NetClient.prototype.handshake = function(data) {
        this.netState = true;
        this.heartbeatTimeout = 7e3;
        this.heartbeatInterval = 2;
        this.onConnectStateEvent && this.onConnectStateEvent("handshake");
      };
      NetClient.prototype.heartbeatFunc = function() {
        this.lastReceivePingTime = Date.now();
        this.heartbeatEvent && this.heartbeatEvent();
      };
      NetClient.prototype.checkHeartBeatTimeOut = function(time) {
        void 0 === time && (time = 12e3);
        if (Date.now() > this.lastReceivePingTime + time && this.netState) {
          cc.log("\u8d85\u65f6\uff0c\u91cd\u8fde\uff01");
          return true;
        }
        return false;
      };
      NetClient.prototype.activeClose = function() {
        this.netState = false;
        if (null != this.pomelo) {
          this.pomelo.clear();
          var socket = this.pomelo.websocket();
          socket && socket.close(1e3, "activeClose");
        }
        this.pomelo.socket = null;
        if (this.onConnectStateEvent) {
          this.onConnectStateEvent("ActiveClose");
          this.onConnectStateEvent = null;
        }
      };
      NetClient.prototype.disconnect = function() {
        this.netState = false;
        if (null != this.pomelo) {
          this.pomelo.clear();
          var socket = this.pomelo.websocket();
          socket && socket.close(1e3, "disconnect");
        }
        if (this.onConnectStateEvent) {
          this.onConnectStateEvent("CLOSE");
          this.onConnectStateEvent = null;
        }
      };
      NetClient = __decorate([ ccclass ], NetClient);
      return NetClient;
    }();
    exports.default = NetClient;
    cc._RF.pop();
  }, {
    pomelo: "pomelo"
  } ],
  net_clubRoute: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3be32c8HjhNyrFEz8EiX3wT", "net_clubRoute");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ClubRoute = function() {
      function ClubRoute() {}
      ClubRoute.enterClub = "connector.clubHandler.enterClub";
      ClubRoute.createClub = "connector.clubHandler.createClub";
      ClubRoute.joinClub = "connector.clubHandler.joinClub";
      ClubRoute.getClubTable = "connector.clubHandler.getClubTable";
      ClubRoute.getClubPlayway = "connector.clubHandler.getClubPlayway";
      ClubRoute.setClubPlayway = "connector.clubHandler.setClubPlayway";
      ClubRoute.getClubMember = "connector.clubHandler.getClubMember";
      ClubRoute.getGameRecord = "connector.clubHandler.getGameRecord";
      ClubRoute.getRankList = "connector.lobbyHandler.getRankList";
      ClubRoute.onRefreshClubTable = "onRefreshClubTable";
      ClubRoute.onRemoveClubTable = "onRemoveClubTable";
      return ClubRoute;
    }();
    exports.ClubRoute = ClubRoute;
    cc._RF.pop();
  }, {} ],
  netprompt_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3053874JFlItaVjPphqP3Ab", "netprompt_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var NetPromptView = function(_super) {
      __extends(NetPromptView, _super);
      function NetPromptView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.mainNode = null;
        _this.reconnectNode = null;
        _this.loadingProgress = null;
        _this.showTime = 0;
        _this.isProgress = false;
        _this.riseTo80Second = 2;
        _this.riseTo100Second = 10;
        return _this;
      }
      NetPromptView.prototype.refreshProgress = function(progress) {
        null != this.loadingProgress && (this.loadingProgress.string = Math.ceil(100 * progress) + "%");
      };
      NetPromptView.prototype.startProgress = function() {
        this.showTime = 0;
        this.isProgress = true;
      };
      NetPromptView.prototype.update = function(dt) {
        if (this.isProgress) {
          var progress = 0;
          this.showTime = this.showTime + dt;
          if (this.showTime < this.riseTo80Second) {
            progress = this.showTime / this.riseTo80Second * .8;
            this.refreshProgress(progress);
          } else if (this.showTime < this.riseTo100Second) {
            progress = .8 + (this.showTime - this.riseTo80Second) / (this.riseTo100Second - this.riseTo80Second) * .2;
            this.refreshProgress(progress);
            100 == Math.ceil(100 * progress) && (this.isProgress = false);
          }
        }
      };
      __decorate([ property(cc.Node) ], NetPromptView.prototype, "mainNode", void 0);
      __decorate([ property(cc.Node) ], NetPromptView.prototype, "reconnectNode", void 0);
      __decorate([ property(cc.Label) ], NetPromptView.prototype, "loadingProgress", void 0);
      NetPromptView = __decorate([ ccclass ], NetPromptView);
      return NetPromptView;
    }(view_base_1.default);
    exports.default = NetPromptView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/view_base": "view_base"
  } ],
  netprompt: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d82d2wiGfdD0ohvm98w/5br", "netprompt");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var netprompt_view_1 = require("./netprompt_view");
    var NetPrompt = function(_super) {
      __extends(NetPrompt, _super);
      function NetPrompt() {
        var _this = _super.call(this) || this;
        _this.package = "public";
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/public/public_netprompt";
        _this.viewType = netprompt_view_1.default;
        return _this;
      }
      NetPrompt.prototype.onShow = function(intentData) {
        if (null != this.scheduleCallback) {
          this.unschedule(this.scheduleCallback);
          this.scheduleCallback = null;
        }
        if (intentData && intentData.autoClose) return;
        var self = this;
        this.scheduleCallback = function() {
          self.hide();
        };
        this.scheduleOnce(this.scheduleCallback, 15);
        this.unschedule(this.laterShow);
        if (intentData && intentData.showImmediately) this.view.mainNode.active = true; else if (!this.view.mainNode.active) {
          this.view.mainNode.active = false;
          this.scheduleOnce(this.laterShow, .3);
        }
        this.view.startProgress();
      };
      NetPrompt.prototype.laterShow = function() {
        cc.log("lateShow");
        this.view.mainNode.active = true;
      };
      NetPrompt.prototype.onHide = function() {
        this.view && this.view.mainNode && (this.view.mainNode.active = false);
        _super.prototype.onHide.call(this);
      };
      NetPrompt.prototype.onDisable = function() {
        this.view && this.view.mainNode && (this.view.mainNode.active = false);
        this.unscheduleAllCallbacks();
      };
      NetPrompt.prototype.onDestroy = function() {
        this.unscheduleAllCallbacks();
      };
      NetPrompt = __decorate([ ccclass, module_base_1.moduleInit("NetPrompt") ], NetPrompt);
      return NetPrompt;
    }(module_base_1.default);
    exports.default = NetPrompt;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/module_base": "module_base",
    "./netprompt_view": "netprompt_view"
  } ],
  outline_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "84231Mc0JxCv75kxvVViUMY", "outline_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var renderEngine = cc.renderer.renderEngine;
    var renderer = renderEngine.renderer;
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var OutlineShader = function(_super) {
      __extends(OutlineShader, _super);
      function OutlineShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Outline";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    varying vec2 uv0;\n    uniform vec3 iResolution;\n\n    void main()\n    {\n        vec2 onePixel = vec2(1.0 / iResolution.x, 1.0 / iResolution.y);\n\n        vec4 color = texture2D(texture, uv0.xy);\n        vec4 colorRight = texture2D(texture, uv0.xy + vec2(0,onePixel.t));\n        vec4 colorBottom = texture2D(texture, uv0.xy + vec2(onePixel.s,0));\n\n        color.r = 3.0* sqrt( (color.r - colorRight.r) * (color.r - colorRight.r) + (color.r - colorBottom.r) * (color.r - colorBottom.r) );\n        color.g = 3.0* sqrt( (color.g - colorRight.g) * (color.g - colorRight.g) + (color.g - colorBottom.g) * (color.g - colorBottom.g) );\n        color.b = 3.0* sqrt( (color.b - colorRight.b) * (color.b - colorRight.b) + (color.b - colorBottom.b) * (color.b - colorBottom.b) );\n\n        color.r >1.0 ? 1.0 : color.r;\n        color.g >1.0 ? 1.0 : color.g;\n        color.b >1.0 ? 1.0 : color.b;\n        gl_FragColor = vec4(color.rgb, 1);\n    }\n    ";
        _this._defines = [];
        _this._params = [ {
          name: "iResolution",
          type: renderer.PARAM_FLOAT3
        } ];
        return _this;
      }
      OutlineShader.prototype.setParamValue = function(material) {
        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);
        material.setParamValue("iResolution", iResolution);
      };
      OutlineShader = __decorate([ ccclass, menu("custom/Shader/Outline") ], OutlineShader);
      return OutlineShader;
    }(shader_component_1.default);
    exports.default = OutlineShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  pdk_base_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "95362CknN1Cp5X0V9eLLlli", "pdk_base_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var poker_myseat_pokers_1 = require("../../../public/poker_table/poker_myseat_pokers");
    var poker_table_seat_base_view_1 = require("../../../public/poker_table/poker_table_seat_base_view");
    var pdk_seat_pokers_1 = require("../component/pdk_seat_pokers");
    var poker_data_1 = require("./poker/poker_data");
    var game_util_1 = require("../../../../utility/game_util");
    var pdk_const_1 = require("./data/pdk_const");
    var audio_manager_1 = require("../../../../manager/audio_manager");
    var texture_manager_1 = require("../../../../manager/texture_manager");
    var pdk_data_1 = require("./data/pdk_data");
    var custom_ui_state_switcher_1 = require("../../../public/ui/custom_ui_state_switcher");
    var pdk_table_sound_1 = require("../component/pdk_table_sound");
    var scene_manager_1 = require("../../../../manager/scene_manager");
    var Utility_1 = require("../../../../utility/Utility");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var gamePlayerinfo_1 = require("../../../public/gamePlayerInfo/gamePlayerinfo");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PdkBaseView = function(_super) {
      __extends(PdkBaseView, _super);
      function PdkBaseView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.effect_offset_pos = cc.v2(0, -30);
        _this.myhandPokers = null;
        _this.prefabSeatView = null;
        _this.nodeSeatParentList = [];
        _this.seatHandPokersList = [];
        _this.seatPokersList = [];
        _this.nodechunTianAnim = null;
        _this.hinitBtn = null;
        _this.OutButton = null;
        _this.nodeClock = null;
        _this.labelClock = null;
        _this.playerName = null;
        _this.time = null;
        _this.btnSwitchui = null;
        _this.seatExtendViewList = [];
        _this.m_clockScheduleId = 0;
        _this.m_allSeatViewList = [];
        _this.mPosExtendSeatMap = [];
        return _this;
      }
      PdkBaseView.prototype.onLoad = function() {
        cc.log("pdkbaseviewonloaded");
        this.initAllSeatView();
        this.btnSwitchui.SwitchState("none");
        this.myhandPokers.setCustomGetSpriteFrameKeyByCodeFunc(this.getPokerSpriteKeyByCode.bind(this));
        for (var _i = 0, _a = this.seatHandPokersList; _i < _a.length; _i++) {
          var handPokers = _a[_i];
          handPokers.setCustomGetSpriteFrameKeyByCodeFunc(this.getPokerSpriteKeyByCode.bind(this));
        }
      };
      PdkBaseView.prototype.onShow = function() {
        scene_manager_1.default.lastEntranceOpenModuleName = "ClubModule";
      };
      PdkBaseView.prototype.initAllSeatView = function() {
        var self = this;
        var seatPosNodeList = self.nodeSeatParentList;
        for (var index = 0; index < seatPosNodeList.length; index++) {
          var element = seatPosNodeList[index];
          var nodeSeat = game_util_1.default.AddChild(this.prefabSeatView.node, element);
          var seatView = nodeSeat.getComponent(poker_table_seat_base_view_1.default);
          seatView.resetSeatStyle(index);
          seatView.node.active = false;
          self.m_allSeatViewList.push(seatView);
          this.mPosExtendSeatMap.push(this.seatExtendViewList[index]);
        }
      };
      PdkBaseView.prototype.resetSeatViewPos = function() {
        for (var _i = 0, _a = this.m_allSeatViewList; _i < _a.length; _i++) {
          var seatview = _a[_i];
          seatview.reset();
        }
      };
      PdkBaseView.prototype.hidePlayerTag = function(tag) {
        for (var _i = 0, _a = this.m_allSeatViewList; _i < _a.length; _i++) {
          var seat = _a[_i];
          this.operatorPlayerTag(seat, tag);
        }
      };
      PdkBaseView.prototype.setPlayerName = function(str) {
        this.playerName.string = str;
      };
      PdkBaseView.prototype.playerTagVisible = function(viewid, tag) {
        var seat = this.m_allSeatViewList[viewid];
        if (!seat) return;
        this.operatorPlayerTag(seat, tag);
      };
      PdkBaseView.prototype.operatorPlayerTag = function(seat, tag) {
        if (!seat) return;
        1 != tag && 0 != tag || seat.showReadyTag(false);
        2 != tag && 0 != tag || seat.showSelect(false);
        3 != tag && 0 != tag || seat.showSingle(false);
        4 != tag && 0 != tag || seat.showClock(false);
      };
      PdkBaseView.prototype.userEnter = function(viewid, data, roomInfo) {
        var seatView = this.m_allSeatViewList[viewid];
        if (seatView) {
          seatView.node.active = true;
          texture_manager_1.default.instance.getSprite(data.avatarUrl, function(frame) {
            seatView && seatView.isValid && seatView.showAvatar(true, frame);
          });
          seatView.showName(true, data.name);
          seatView.showCoin(true, data.coin);
          seatView.showReadyTag(data.readyState == pdk_const_1.PConst.ReadyState.Ready_Yes && roomInfo.gameState != pdk_const_1.PConst.GameStatus.START);
          0 == viewid && roomInfo.gameState != pdk_const_1.PConst.GameStatus.START && (data.readyState == pdk_const_1.PConst.ReadyState.Ready_Yes ? this.btnSwitchui.SwitchState("none") : this.btnSwitchui.SwitchState("ready"));
          seatView.setClickAvatarBtnListener(function() {
            module_manager_1.default.instance.showModule(gamePlayerinfo_1.default, "GamePlayerInfoModule");
          });
        }
      };
      PdkBaseView.prototype.userLeave = function(viewid) {
        var seatView = this.m_allSeatViewList[viewid];
        if (seatView) {
          seatView.node.active = false;
          this.playerTagVisible(viewid, 0);
        }
      };
      PdkBaseView.prototype.changeBtnState = function(state) {
        this.btnSwitchui.SwitchState(state);
      };
      PdkBaseView.prototype.isForbidOutBtn = function(isgray) {
        Utility_1.default.instance.setBtnGray(this.OutButton.getComponent(cc.Button), isgray);
      };
      PdkBaseView.prototype.dealCards = function(card) {
        this.myhandPokers.showPokers(true, card, {
          hidePoker: true
        });
        this.myhandPokers.playFaPaiAnim(function(index, totalCount) {
          index < totalCount && pdk_table_sound_1.PdkSound.playFaPaiSound();
        }, function() {});
      };
      PdkBaseView.prototype.showReadyTag = function(viewid, show) {
        var seatView = this.m_allSeatViewList[viewid];
        seatView.showReadyTag(show);
      };
      PdkBaseView.prototype.showSelect = function(viewid, show) {
        var seatView = this.m_allSeatViewList[viewid];
        seatView.showSelect(show);
      };
      PdkBaseView.prototype.showSeatClock = function(viewid, show, secs, needShake, onFinish) {
        var seatView = this.m_allSeatViewList[viewid];
        if (0 == viewid) {
          this.nodeClock.active = show;
          show && this.refreshClockLable(secs, needShake, onFinish);
          return;
        }
        seatView.showClock(show, secs, needShake, onFinish);
      };
      PdkBaseView.prototype.showSingle = function(viewid, show) {
        var seatView = this.m_allSeatViewList[viewid];
        seatView.showSingle(show);
      };
      PdkBaseView.prototype.refreshClockLable = function(secs, needShake, onFinish) {
        var self = this;
        this.labelClock.string = secs.toString();
        if (secs <= 0) {
          needShake && audio_manager_1.default.instance.vibrate();
          onFinish && onFinish();
          return;
        }
        this.m_clockScheduleId = this.doScheduleOnce(function() {
          self.m_clockScheduleId = 0;
          secs--;
          self.refreshClockLable(secs, needShake, onFinish);
        }, 1);
      };
      PdkBaseView.prototype.showHandCards = function(viewid, show, codeList, withAnim, onFinish) {
        var seatPokers = this.seatHandPokersList[viewid];
        seatPokers.showPokers(show, codeList, {
          withAnim: true,
          onFinish: onFinish
        });
      };
      PdkBaseView.prototype.updateMyHandCards = function(codeList) {
        this.myhandPokers.showPokers(true, codeList, {
          hidePoker: false
        });
      };
      PdkBaseView.prototype.playFeiJiEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeFeiJiAnim, centerWorldPos, onFinish, 2.33, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.playShunZiEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeShunZiAnim, centerWorldPos, onFinish, 1.5, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.playLianDuiEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeLianDuiAnim, centerWorldPos, onFinish, 1.5, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.playZhaDanEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeZhaDanAim, centerWorldPos, onFinish, 2.1, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.playWangZhaEffect = function(localPos, centerWorldPos, onFinish1, onFinish2) {
        var self = this;
        var offsetPos = self.effect_offset_pos;
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        var anim = extendSeat.nodeWangZhaAim.getComponent(cc.Animation);
        var anim1 = extendSeat.nodeWangZhaAim1.getComponent(cc.Animation);
        anim.node.active = false;
        anim1.node.active = false;
        if (centerWorldPos) {
          var pos = null;
          anim.node.parent.convertToNodeSpaceAR(centerWorldPos, pos);
          if (offsetPos) {
            pos.x += offsetPos.x;
            pos.y += offsetPos.y;
          }
          anim.node.position = pos;
        }
        anim.on("finished", function() {
          anim.targetOff(self);
          anim.node.active = false;
          anim1.node.active = true;
          onFinish1 && onFinish1();
        }, self);
        anim1.on("finished", function() {
          anim1.targetOff(self);
          anim1.node.active = false;
          onFinish2 && onFinish2();
        }, self);
        anim.node.active = true;
      };
      PdkBaseView.prototype.playChunTianEffect = function(localPos, centerWorldPos, onFinish) {
        this.playCommonEffect(this.nodechunTianAnim, centerWorldPos, onFinish, 3);
      };
      PdkBaseView.prototype.playSanDaiYiEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeSanDaiYiAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.playSanDaiErEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeSanDaiErAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.playSiDaiErEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeSiDaiErAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.playSiDaiLiangDuiEffect = function(localPos, centerWorldPos, onFinish) {
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        this.playCommonEffect(extendSeat.nodeSiDaiLiangDuiAnim, centerWorldPos, onFinish, 1.67, false, this.effect_offset_pos);
      };
      PdkBaseView.prototype.showDispatchCards = function(localPos, show, codeList, withAnim, onFinish) {
        var seatPokers = this.seatPokersList[localPos];
        var centerWorldPos = seatPokers.showPokers(true, codeList);
        return centerWorldPos;
      };
      PdkBaseView.prototype.showSeatPassAnim = function(localPos, show, withAnim, onFinish) {
        var self = this;
        var extendSeat = this.getExtendSeatViewByPos(localPos);
        var node = extendSeat.nodePass;
        node.active = show;
        show ? self.playCommonEffect(node, null, onFinish, .8, false) : onFinish && onFinish();
      };
      PdkBaseView.prototype.getExtendSeatViewByPos = function(localPos) {
        return this.mPosExtendSeatMap[localPos];
      };
      PdkBaseView.prototype.playCommonEffect = function(node, centerWorldPos, onFinish, duration, notHide, offsetPos) {
        var originalPos = null;
        if (centerWorldPos) {
          originalPos = node.position;
          var pos = void 0;
          node.parent.convertToNodeSpaceAR(centerWorldPos, pos);
          if (offsetPos) {
            pos.x += offsetPos.x;
            pos.y += offsetPos.y;
          }
          node.position = pos;
        }
        node.active = true;
        null == duration && (duration = 1.7);
        this.scheduleOnce(function() {
          originalPos && (node.position = originalPos);
          notHide || (node.active = false);
          onFinish && onFinish();
        }, duration);
      };
      PdkBaseView.prototype.getPokerSpriteKeyByCode = function(code) {
        var card = poker_data_1.Card.makeCardByCode(code);
        if (card.index == poker_data_1.CardNameIndex.card_big_king) return "Public_\u5927\u738b";
        if (card.index == poker_data_1.CardNameIndex.card_small_king) return "Public_\u5c0f\u738b";
        var key = "Public_";
        switch (card.color) {
         case poker_data_1.CardColor.color_black_heart:
          key += "heitao_";
          break;

         case poker_data_1.CardColor.color_red_heart:
          key += "hongtao_";
          break;

         case poker_data_1.CardColor.color_plum:
          key += "meihua_";
          break;

         case poker_data_1.CardColor.color_square:
          key += "fangkuai_";
        }
        return key + card.index;
      };
      __decorate([ property(poker_myseat_pokers_1.default) ], PdkBaseView.prototype, "myhandPokers", void 0);
      __decorate([ property(poker_table_seat_base_view_1.default) ], PdkBaseView.prototype, "prefabSeatView", void 0);
      __decorate([ property([ cc.Node ]) ], PdkBaseView.prototype, "nodeSeatParentList", void 0);
      __decorate([ property([ pdk_seat_pokers_1.default ]) ], PdkBaseView.prototype, "seatHandPokersList", void 0);
      __decorate([ property([ pdk_seat_pokers_1.default ]) ], PdkBaseView.prototype, "seatPokersList", void 0);
      __decorate([ property(cc.Node) ], PdkBaseView.prototype, "nodechunTianAnim", void 0);
      __decorate([ property(cc.Node) ], PdkBaseView.prototype, "hinitBtn", void 0);
      __decorate([ property(cc.Node) ], PdkBaseView.prototype, "OutButton", void 0);
      __decorate([ property(cc.Node) ], PdkBaseView.prototype, "nodeClock", void 0);
      __decorate([ property(cc.Label) ], PdkBaseView.prototype, "labelClock", void 0);
      __decorate([ property(cc.Label) ], PdkBaseView.prototype, "playerName", void 0);
      __decorate([ property(cc.Label) ], PdkBaseView.prototype, "time", void 0);
      __decorate([ property(custom_ui_state_switcher_1.default) ], PdkBaseView.prototype, "btnSwitchui", void 0);
      __decorate([ property(pdk_data_1.SeatExtendHolder) ], PdkBaseView.prototype, "seatExtendViewList", void 0);
      PdkBaseView = __decorate([ ccclass ], PdkBaseView);
      return PdkBaseView;
    }(view_base_1.default);
    exports.PdkBaseView = PdkBaseView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/view_base": "view_base",
    "../../../../manager/audio_manager": "audio_manager",
    "../../../../manager/scene_manager": "scene_manager",
    "../../../../manager/texture_manager": "texture_manager",
    "../../../../utility/Utility": "utility",
    "../../../../utility/game_util": "game_util",
    "../../../public/gamePlayerInfo/gamePlayerinfo": "gamePlayerinfo",
    "../../../public/poker_table/poker_myseat_pokers": "poker_myseat_pokers",
    "../../../public/poker_table/poker_table_seat_base_view": "poker_table_seat_base_view",
    "../../../public/ui/custom_ui_state_switcher": "custom_ui_state_switcher",
    "../component/pdk_seat_pokers": "pdk_seat_pokers",
    "../component/pdk_table_sound": "pdk_table_sound",
    "./data/pdk_const": "pdk_const",
    "./data/pdk_data": "pdk_data",
    "./poker/poker_data": "poker_data"
  } ],
  pdk_const: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f9e75qnhcVEAL5MJp44t8xC", "pdk_const");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var PConst;
    (function(PConst) {
      var GameStatus;
      (function(GameStatus) {
        GameStatus[GameStatus["FREE"] = 0] = "FREE";
        GameStatus[GameStatus["READY"] = 1] = "READY";
        GameStatus[GameStatus["START"] = 2] = "START";
      })(GameStatus = PConst.GameStatus || (PConst.GameStatus = {}));
      var ReadyState;
      (function(ReadyState) {
        ReadyState[ReadyState["Ready_No"] = 0] = "Ready_No";
        ReadyState[ReadyState["Ready_Yes"] = 1] = "Ready_Yes";
      })(ReadyState = PConst.ReadyState || (PConst.ReadyState = {}));
    })(PConst = exports.PConst || (exports.PConst = {}));
    cc._RF.pop();
  }, {} ],
  pdk_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "56126KFwzZEfKN0Sk+3QS1Z", "pdk_data");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PdkData;
    (function(PdkData) {
      var SeatInfoData = function() {
        function SeatInfoData() {}
        return SeatInfoData;
      }();
      PdkData.SeatInfoData = SeatInfoData;
      var RoomInfoData = function() {
        function RoomInfoData() {}
        return RoomInfoData;
      }();
      PdkData.RoomInfoData = RoomInfoData;
    })(PdkData = exports.PdkData || (exports.PdkData = {}));
    var SeatExtendHolder = function() {
      function SeatExtendHolder() {
        this.nodePass = null;
        this.nodeFeiJiAnim = null;
        this.nodeShunZiAnim = null;
        this.nodeLianDuiAnim = null;
        this.nodeZhaDanAim = null;
        this.nodeWangZhaAim = null;
        this.nodeWangZhaAim1 = null;
        this.nodeSanDaiYiAnim = null;
        this.nodeSanDaiErAnim = null;
        this.nodeSiDaiErAnim = null;
        this.nodeSiDaiLiangDuiAnim = null;
        this.nodeMingPaiAnim = null;
      }
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodePass", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeFeiJiAnim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeShunZiAnim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeLianDuiAnim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeZhaDanAim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeWangZhaAim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeWangZhaAim1", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeSanDaiYiAnim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeSanDaiErAnim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeSiDaiErAnim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeSiDaiLiangDuiAnim", void 0);
      __decorate([ property(cc.Node) ], SeatExtendHolder.prototype, "nodeMingPaiAnim", void 0);
      SeatExtendHolder = __decorate([ ccclass("DouDiZhuTable.SeatExtendView") ], SeatExtendHolder);
      return SeatExtendHolder;
    }();
    exports.SeatExtendHolder = SeatExtendHolder;
    cc._RF.pop();
  }, {} ],
  pdk_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cf4a5L0s8dHgLwfkgjqPX6l", "pdk_model");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../../../framework/core/mvvm/model_base");
    var pdk_route_1 = require("../../net/pdk_route");
    var user_manager_1 = require("../../../../manager/user_manager");
    var pdk_data_1 = require("./data/pdk_data");
    var poker_logic_set_1 = require("./poker/poker_logic_set");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PdkModel = function(_super) {
      __extends(PdkModel, _super);
      function PdkModel() {
        var _this = _super.call(this) || this;
        _this.users = [];
        _this.mySeatInfo = null;
        _this.mCommonData = null;
        _this.roomInfo = null;
        return _this;
      }
      PdkModel.prototype.initModel = function(msg) {
        this.users = [];
        this.roomInfo || (this.roomInfo = new pdk_data_1.PdkData.RoomInfoData());
        this.mCommonData || (this.mCommonData = {});
        this.roomInfo.gameState = msg.gameStatus;
        for (var i = 0; i < msg.players.length; i++) {
          var player = msg.players[i];
          if (this.isRoleById(player.id)) {
            this.mChair = player.chairID;
            break;
          }
        }
        for (var idx = 0; idx < msg.players.length; idx++) {
          var player = msg.players[idx];
          var _user = this.enterUser(player);
          if (this.isRoleById(_user.user.id)) {
            this.mySeatInfo = _user;
            this.mySeatInfo.handSet = new poker_logic_set_1.PokerSet();
          }
        }
      };
      PdkModel.prototype.setPokerList = function(handcard, len) {
        this.mySeatInfo && this.mySeatInfo.handSet.setCodeList(handcard, len);
      };
      PdkModel.prototype.isRoleById = function(id) {
        return id == Number(user_manager_1.default.instance.getUserData().uid);
      };
      PdkModel.prototype.getUser = function(id) {
        for (var idx = 0; idx < this.users.length; idx++) {
          var user = this.users[idx];
          if (user.user.id == id) return user;
        }
        return null;
      };
      PdkModel.prototype.getUserLocalID = function(chairid) {
        for (var idx = 0; idx < this.users.length; idx++) {
          var user = this.users[idx];
          if (user.user.chairID == chairid) return user;
        }
        return null;
      };
      PdkModel.prototype.enterUser = function(msg) {
        var _user = this.getUser(msg.id);
        if (!_user) {
          _user = new pdk_data_1.PdkData.SeatInfoData();
          this.users.push(_user);
        }
        _user.user = msg;
        _user.viewID = this.viewLocation(_user.user.chairID);
        return _user;
      };
      PdkModel.prototype.exitUser = function(id) {
        for (var idx = 0; idx < this.users.length; idx++) {
          var user = this.users[idx];
          if (user.user.id == id) {
            this.users.splice(idx, 1);
            break;
          }
        }
      };
      PdkModel.prototype.isRole = function(chairid) {
        return chairid == this.mChair;
      };
      PdkModel.prototype.isMyOutCard = function() {
        return this.mCommonData.chairID == this.mChair;
      };
      PdkModel.prototype.viewLocation = function(chairid) {
        var wPlayerCount = this.roomInfo.playerCount;
        var meChairID = this.mChair;
        var viewID = (chairid + wPlayerCount - meChairID) % wPlayerCount;
        return viewID;
      };
      PdkModel.prototype.initRoomInfo = function(msg) {
        this.roomInfo || (this.roomInfo = new pdk_data_1.PdkData.RoomInfoData());
        this.roomInfo.playerCount = msg.gameParameter.bPlayerCount;
      };
      PdkModel.prototype.send_readyGame = function() {
        this.send(pdk_route_1.PdkNetRoute.readyGame, {});
      };
      PdkModel.prototype.send_playCard = function(bCardData, count) {
        var data = {
          bCardData: bCardData,
          bCardCount: count
        };
        this.send(pdk_route_1.PdkNetRoute.playCard, data);
      };
      PdkModel.prototype.send_dissolveRoom = function(msg) {
        this.send(pdk_route_1.PdkNetRoute.dissolveGame, msg);
      };
      PdkModel.prototype.send_leaveRoom = function() {
        this.send(pdk_route_1.PdkNetRoute.leaveRoom, {});
      };
      PdkModel = __decorate([ ccclass ], PdkModel);
      return PdkModel;
    }(model_base_1.default);
    exports.PdkModel = PdkModel;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/model_base": "model_base",
    "../../../../manager/user_manager": "user_manager",
    "../../net/pdk_route": "pdk_route",
    "./data/pdk_data": "pdk_data",
    "./poker/poker_logic_set": "poker_logic_set"
  } ],
  pdk_module_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "57515NTyqtGG4FFO6oKzbtJ", "pdk_module_base");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var pdk_model_1 = require("./pdk_model");
    var game_server_1 = require("../../../server/gameserver/game_server");
    var pdk_route_1 = require("../../net/pdk_route");
    var pdk_view_1 = require("./pdk_view");
    var scene_manager_1 = require("../../../../manager/scene_manager");
    var poker_pattern_1 = require("./poker/poker_pattern");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var pdk_table_sound_1 = require("../component/pdk_table_sound");
    var user_manager_1 = require("../../../../manager/user_manager");
    var public_rule_1 = require("../rule/public_rule");
    var setting_1 = require("../../../public/setting/setting");
    var chat_1 = require("../../../public/chat/chat");
    var chat_action_1 = require("../../../public/chat/chat_action/chat_action");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PdkModuleBase = function(_super) {
      __extends(PdkModuleBase, _super);
      function PdkModuleBase() {
        var _this = _super.call(this) || this;
        _this.recommendFunc = null;
        _this.viewType = pdk_view_1.PdkView;
        _this.modelType = pdk_model_1.PdkModel;
        _this.windowPrefabResPath = "package/pdk/module/table/pdk";
        return _this;
      }
      PdkModuleBase.prototype.onInit = function() {
        this.view.menueMask.on("click", this.clickMenueMask, this);
        this.view.chupaimask.on("click", this.resetPokers, this);
        var self = this;
        this.view.myhandPokers.setCustomOnFinishDragPokerReselectFunc(function() {
          self.on_finish_drag_pokers_reselect_fun();
        });
        this.view.myhandPokers.setCustomOnSelectPokersChanged(function() {
          self.on_select_pokers_changed();
        });
      };
      PdkModuleBase.prototype.onShow = function() {
        this.model.netClient = game_server_1.default.instance.netClient;
        this.model.clearMsgEvent();
        this.registerNetMsg();
        pdk_table_sound_1.PdkSound.playBgm(false);
      };
      PdkModuleBase.prototype.registerNetMsg = function() {
        var self = this;
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onSendParameter, function(msg) {
          self.onSendParameter(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onSendGameScene, function(msg) {
          self.onSendGameScene(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onUserEntryRoom, function(msg) {
          self.onUserEntryRoom(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onStartGame, function(msg) {
          self.onStartGame(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.readyGame, function(msg) {
          self.readyGame(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onReadyGame, function(msg) {
          self.onReadyGame(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.playCard, function(msg) {
          self.playCard(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onOutCard, function(msg) {
          self.onOutCard(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onPassCard, function(msg) {
          self.onPassCard(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onDissolveRoom, function(msg) {
          self.onDissolveRoom(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onSettlement, function(msg) {
          self.onSettlement(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onHandCardUser, function(msg) {
          self.onHandCardUser(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onOutCardNotify, function(msg) {
          self.onOutCardNotify(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onWarnUser, function(msg) {
          self.onWarnUser(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onLeaveRoom, function(msg) {
          self.onLeaveRoom(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.leaveRoom, function(msg) {
          self.leaveRoom(msg);
        });
        self.model.registerNetMsg(pdk_route_1.PdkNetRoute.onTableChat, function(msg) {
          self.onTableChat(msg);
        });
      };
      PdkModuleBase.prototype.onTableChat = function(msg) {
        module_manager_1.default.instance.showModule(chat_action_1.default, msg);
      };
      PdkModuleBase.prototype.onWarnUser = function(msg) {};
      PdkModuleBase.prototype.onSendGameScene = function(msg) {
        this.initTable(msg);
        this.recommendFunc = null;
        this.model.mCommonData.lastPattern = null;
      };
      PdkModuleBase.prototype.initTable = function(msg) {
        this.model.initModel(msg);
      };
      PdkModuleBase.prototype.playCard = function(msg) {
        1 == msg.code ? module_manager_1.default.instance.toast("\u6ca1\u6709\u8f6e\u5230\u81ea\u5df1\u51fa\u724c") : 2 == msg.code && module_manager_1.default.instance.toast("\u51fa\u724c\u7c7b\u578b\u9519\u8bef");
      };
      PdkModuleBase.prototype.onOutCard = function(msg) {
        this.view.hidePlayerTag(4);
        var viewid = this.model.viewLocation(msg.outcardUser);
        this.view.showHandCards(viewid, true, msg.cardData, true);
        this.model.isRole(msg.outcardUser) && this.view.changeBtnState("none");
        this.view.showSeatClock(viewid, false);
        this.model.mCommonData.chairID = msg.outcardUser;
        this.model.mCommonData.outCards = msg.cardData;
      };
      PdkModuleBase.prototype.onPassCard = function(msg) {
        this.view.hidePlayerTag(4);
        var viewid = this.model.viewLocation(msg.wPassUser);
        this.view.showSeatPassAnim(viewid, true);
        this.view.showHandCards(viewid, false);
        pdk_table_sound_1.PdkSound.playPassSound(user_manager_1.default.instance.isMale());
      };
      PdkModuleBase.prototype.onDissolveRoom = function(msg) {};
      PdkModuleBase.prototype.onSettlement = function(msg) {};
      PdkModuleBase.prototype.onHandCardUser = function(msg) {
        var viewid = this.model.viewLocation(msg.wChairID);
        if (0 == viewid) {
          this.view.myhandPokers.showPokers(true, msg.handCardData);
          this.model.setPokerList(msg.handCardData);
        }
      };
      PdkModuleBase.prototype.onLeaveRoom = function(msg) {};
      PdkModuleBase.prototype.leaveRoom = function(msg) {
        0 == msg.code || 3 == msg.code ? scene_manager_1.default.gotoHall() : 2 == msg.code && module_manager_1.default.instance.toast("\u6e38\u620f\u5df2\u7ecf\u5f00\u59cb\u4e0d\u80fd\u79bb\u5f00\u724c\u684c");
      };
      PdkModuleBase.prototype.onOutCardNotify = function(msg) {};
      PdkModuleBase.prototype.onUserEntryRoom = function(msg) {
        this.model.enterUser(msg);
      };
      PdkModuleBase.prototype.onSendParameter = function(msg) {
        this.model.initRoomInfo(msg);
        this.view.setPlayerName(msg.playwayName);
      };
      PdkModuleBase.prototype.onStartGame = function(msg) {};
      PdkModuleBase.prototype.readyGame = function(msg) {};
      PdkModuleBase.prototype.onReadyGame = function(msg) {};
      PdkModuleBase.prototype.on_select_pokers_changed = function() {
        cc.log("--\x3e>>>>>>>>>poker changed");
        var selectedData = this.view.myhandPokers.getSelectedPokers();
        var selected_codeList = selectedData.selected_codeList;
        var result = this.checkCanChuPai(this.model.mCommonData.lastPattern, selected_codeList);
        this.view.isForbidOutBtn(!result.canChuPai || !result.pattern);
      };
      PdkModuleBase.prototype.on_finish_drag_pokers_reselect_fun = function() {
        cc.log("0000--");
        var self = this;
        var selectedData = self.view.myhandPokers.getSelectedPokers();
        var selected_codeList = selectedData.selected_codeList;
        if (selected_codeList.length > 0) {
          var lastPattern = null;
          var pattern = this.model.mySeatInfo.handSet.choose_hintIterator(selected_codeList, lastPattern);
          if (pattern) {
            self.view.myhandPokers.selectPokers(pattern.cards, null);
            self.view.myhandPokers.refreshPokerSelectState(true, function() {});
            var result = this.checkCanChuPai(this.model.mCommonData.lastPattern, pattern.cards);
            this.view.isForbidOutBtn(!result.canChuPai || !result.pattern);
          }
        }
      };
      PdkModuleBase.prototype.clickMenueMask = function() {
        this.view.menueRoot.active = false;
      };
      PdkModuleBase.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        switch (pName) {
         case "BtnLeave":
          this.view.showMenue();
          break;

         case "LeavelButton":
          scene_manager_1.default.gotoHall(false);
          break;

         case "BtnReady":
          this.model.send_readyGame();
          break;

         case "FreeButton":
          this.model.send_leaveRoom();
          break;

         case "HintButton":
          this.onClickRemindCard(false);
          break;

         case "OutButton":
          this.onClickSendCard();
          break;

         case "RuleButton":
          module_manager_1.default.instance.showModule(public_rule_1.default);
          break;

         case "SettingButton":
          module_manager_1.default.instance.showModule(setting_1.default);
          break;

         case "BtnChat":
          module_manager_1.default.instance.showModule(chat_1.default);
        }
      };
      PdkModuleBase.prototype.onClickSendCard = function() {
        var selectedData = this.view.myhandPokers.getSelectedPokers();
        if (!selectedData.real_selected_codeList || 0 == selectedData.real_selected_codeList.length) {
          module_manager_1.default.instance.toast("\u8bf7\u9009\u62e9\u8981\u51fa\u7684\u724c");
          return;
        }
        this.recommendFunc = null;
        var codes = selectedData.selected_codeList;
        this.model.send_playCard(selectedData.selected_codeList, codes.length);
      };
      PdkModuleBase.prototype.onClickRemindCard = function(isHaveMask) {
        var self = this;
        if (!this.recommendFunc) {
          var tishiData = this.model.mySeatInfo.handSet.hintIterator(this.model.mCommonData.lastPattern);
          if (!tishiData.tishiFun) return;
          this.recommendFunc = tishiData.tishiFun;
        }
        var pattern = this.recommendFunc();
        if (!pattern) return;
        self.view.myhandPokers.selectPokers(pattern.cards, null);
        self.view.myhandPokers.refreshPokerSelectState(true);
        var result = this.checkCanChuPai(this.model.mCommonData.lastPattern, pattern.cards);
        this.view.isForbidOutBtn(!result.canChuPai || !result.pattern);
      };
      PdkModuleBase.prototype.checkCanChuPai = function(srcPattern, codeList) {
        var result = {
          canChuPai: false,
          pattern: null
        };
        var selectedPattern = poker_pattern_1.CardPattern.newPattern(codeList);
        if (!selectedPattern) return result;
        if (srcPattern) {
          var pattern = selectedPattern;
          var compable = pattern.compable(srcPattern);
          if (compable) {
            var le = pattern.le(srcPattern);
            if (le) return result;
            result.canChuPai = true;
            result.pattern = pattern;
            return result;
          }
          return result;
        }
        result.canChuPai = true;
        result.pattern = selectedPattern;
        return result;
      };
      PdkModuleBase.prototype.resetPokers = function() {
        this.view.myhandPokers.resetPokers(true);
        this.view.isForbidOutBtn(true);
      };
      PdkModuleBase.prototype.playPokerTypeSound = function() {};
      PdkModuleBase = __decorate([ ccclass ], PdkModuleBase);
      return PdkModuleBase;
    }(module_base_1.default);
    exports.PdkModuleBase = PdkModuleBase;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/module_base": "module_base",
    "../../../../manager/scene_manager": "scene_manager",
    "../../../../manager/user_manager": "user_manager",
    "../../../public/chat/chat": "chat",
    "../../../public/chat/chat_action/chat_action": "chat_action",
    "../../../public/setting/setting": "setting",
    "../../../server/gameserver/game_server": "game_server",
    "../../net/pdk_route": "pdk_route",
    "../component/pdk_table_sound": "pdk_table_sound",
    "../rule/public_rule": "public_rule",
    "./pdk_model": "pdk_model",
    "./pdk_view": "pdk_view",
    "./poker/poker_pattern": "poker_pattern"
  } ],
  pdk_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b125bZXvmROMoecQBRMr9dn", "pdk_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var scene_manager_1 = require("../../../../manager/scene_manager");
    var pdk_const_1 = require("./data/pdk_const");
    var pdk_module_base_1 = require("./pdk_module_base");
    var pdk_table_sound_1 = require("../component/pdk_table_sound");
    var poker_pattern_1 = require("./poker/poker_pattern");
    var audio_manager_1 = require("../../../../manager/audio_manager");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var result_module_1 = require("../result/result_module");
    var user_manager_1 = require("../../../../manager/user_manager");
    var toast_1 = require("../../../public/module/toast/toast");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PdkModule = function(_super) {
      __extends(PdkModule, _super);
      function PdkModule() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      PdkModule.prototype.onOutCard = function(msg) {
        _super.prototype.onOutCard.call(this, msg);
        this.showOutCard(msg.outcardUser, msg.cardData);
      };
      PdkModule.prototype.onUserEntryRoom = function(msg) {
        _super.prototype.onUserEntryRoom.call(this, msg);
        var user = this.model.getUser(msg.id);
        if (user) {
          var viewid = this.model.viewLocation(user.user.chairID);
          this.view.userEnter(viewid, user.user, this.model.roomInfo);
        }
      };
      PdkModule.prototype.onHandCardUser = function(msg) {
        _super.prototype.onHandCardUser.call(this, msg);
        this.view.updateMyHandCards(msg.handCardData);
        this.model.setPokerList(msg.handCardData);
      };
      PdkModule.prototype.onOutCardNotify = function(msg) {
        _super.prototype.onOutCardNotify.call(this, msg);
        this.view.hidePlayerTag(0);
        var viewid = this.model.viewLocation(msg.currentUser);
        this.view.showSeatClock(viewid, true, 10);
        this.view.showHandCards(viewid, false);
        this.view.showSelect(viewid, true);
        if (this.model.isRole(msg.currentUser)) {
          this.view.changeBtnState("playing");
          this.view.showSeatPassAnim(viewid, false);
          this.model.isMyOutCard() && (this.model.mCommonData.outCards = []);
          this.onClickRemindCard(true);
        } else this.view.changeBtnState("none");
      };
      PdkModule.prototype.onLeaveRoom = function(msg) {
        _super.prototype.onLeaveRoom.call(this, msg);
        var viewid = this.model.viewLocation(msg.wChairID);
        this.view.userLeave(viewid);
      };
      PdkModule.prototype.onReadyGame = function(msg) {
        _super.prototype.onReadyGame.call(this, msg);
        this._readyGame(msg.wChairID);
      };
      PdkModule.prototype.showOutCard = function(chairID, cards) {
        var viewid = this.model.viewLocation(chairID);
        this.view.showHandCards(viewid, true, cards, true);
        this.model.mCommonData.lastPattern = 0 == viewid ? null : poker_pattern_1.CardPattern.newPattern(cards);
        this.dispatchPoker(this.model.getUserLocalID(chairID), cards);
      };
      PdkModule.prototype._readyGame = function(wChairID) {
        var viewid = this.model.viewLocation(wChairID);
        this.view.showReadyTag(viewid, true);
        this.model.isRole(wChairID) && this.view.changeBtnState("none");
      };
      PdkModule.prototype.readyGame = function(msg) {
        _super.prototype.readyGame.call(this, msg);
        if (0 == msg.code) {
          var myself = this.model.mySeatInfo;
          this._readyGame(myself.user.chairID);
        } else 4 == msg.code ? module_manager_1.default.instance.showModule(toast_1.default, "\u4f59\u989d\u4e0d\u8db3,\u8bf7\u5c3d\u5feb\u5145\u503c\uff01") : 3 == msg.code && scene_manager_1.default.gotoHall(false);
      };
      PdkModule.prototype.onSettlement = function(msg) {
        var _this = this;
        _super.prototype.onSettlement.call(this, msg);
        var func = function() {
          _this.model.send_readyGame();
        };
        var data = {
          func: func,
          data: {
            msg: msg,
            roleid: this.model.mChair
          }
        };
        module_manager_1.default.instance.showModule(result_module_1.ResultModule, data);
        this.settlementcards(msg);
      };
      PdkModule.prototype.settlementcards = function(msg) {
        var handCardData = msg.handCardData;
        for (var i = 0; i < handCardData.length; i++) {
          var cards = handCardData[i];
          var viewid = this.model.viewLocation(i);
          0 != viewid && this.view.showHandCards(viewid, true, cards, true);
        }
      };
      PdkModule.prototype.onSendGameScene = function(msg) {
        _super.prototype.onSendGameScene.call(this, msg);
        this.view.updateAllUser(this.model.users, this.model.roomInfo);
        this.clearTable();
        this.view.changeBtnState("ready");
        if (msg.gameStatus == pdk_const_1.PConst.GameStatus.START) {
          this.view.updateMyHandCards(msg.handCardData);
          this.model.setPokerList(msg.handCardData);
          if (void 0 == msg.turnUser || this.model.isRole(msg.turnUser) || 65535 == msg.turnUser || -1 == msg.turnUser) this.model.mCommonData.outCards = []; else {
            this.showOutCard(msg.turnUser, msg.turnCardData);
            this.model.mCommonData.chairID = msg.turnUser;
            this.model.mCommonData.outCards = msg.turnCardData;
          }
          if (msg.currentUser == this.model.mChair) {
            var viewid = this.model.viewLocation(this.model.mChair);
            this.view.showSeatClock(viewid, true, 10);
            this.view.showHandCards(viewid, false);
            this.view.changeBtnState("playing");
            this.view.showSeatPassAnim(viewid, false);
            this.onClickRemindCard(true);
          } else this.view.changeBtnState("none");
          for (var idx = 0; idx < msg.bUserWarn.length; idx++) {
            var cid = msg.bUserWarn[idx];
            cid && !this.model.isRole(idx) && this.showWarn(idx);
          }
          var outCardUser = this.model.viewLocation(msg.currentUser);
          this.view.showSelect(outCardUser, true);
          this.view.showSeatClock(outCardUser, true, 10);
        }
      };
      PdkModule.prototype.onStartGame = function(msg) {
        _super.prototype.onStartGame.call(this, msg);
        this.clearTable();
        var viewid = this.model.viewLocation(msg.wCurrentUser);
        this.view.showSelect(viewid, true);
        this.view.dealCards(msg.cbCardData);
        this.model.setPokerList(msg.cbCardData);
        if (this.model.isRole(msg.wCurrentUser)) {
          this.view.changeBtnState("playing");
          this.view.showHandCards(viewid, false);
          this.view.showSeatPassAnim(viewid, false);
        } else this.view.changeBtnState("none");
        this.view.showSeatClock(viewid, true, 10);
      };
      PdkModule.prototype.onWarnUser = function(msg) {
        _super.prototype.onWarnUser.call(this, msg);
        this.showWarn(msg.wWarnUser);
        pdk_table_sound_1.PdkSound.playWarningSound(user_manager_1.default.instance.isMale(), true);
      };
      PdkModule.prototype.showWarn = function(chairid) {
        var viewid = this.model.viewLocation(chairid);
        this.view.showSingle(viewid, true);
      };
      PdkModule.prototype.clearTable = function() {
        this.view.isForbidOutBtn(false);
        for (var index = 0; index < this.model.roomInfo.playerCount; index++) this.view.showHandCards(index, false);
        this.view.myhandPokers.removeAllPokers();
        this.view.hidePlayerTag(0);
        this.recommendFunc = null;
        this.model.mCommonData.lastPattern = null;
      };
      PdkModule.prototype.playCard = function(msg) {
        _super.prototype.playCard.call(this, msg);
        if (0 == msg.code) {
          this.view.updateMyHandCards(msg.handCardData);
          this.model.setPokerList(msg.handCardData);
        }
      };
      PdkModule.prototype.dispatchPoker = function(seatInfo, outCards) {
        var cards = outCards;
        var centerWorldPos = this.view.showDispatchCards(seatInfo.viewID, true, cards, true);
        this.playCardPatternSoundAndEffect(seatInfo, poker_pattern_1.CardPattern.newPattern(outCards), centerWorldPos);
      };
      PdkModule.prototype.playCardPatternSoundAndEffect = function(seatInfo, cardPatter, centerWorldPos) {
        var self = this;
        pdk_table_sound_1.PdkSound.playPokerTypeSound(true, cardPatter);
        var type = cardPatter.type;
        if (!type) return;
        var disp_type = cardPatter.disp_type;
        switch (type) {
         case poker_pattern_1.PatternType.type_zhadan:
          this.view.playZhaDanEffect(seatInfo.viewID, centerWorldPos);
          audio_manager_1.default.instance.vibrate();
          break;

         case poker_pattern_1.PatternType.type_huojian:
          this.view.playWangZhaEffect(seatInfo.viewID, centerWorldPos, function() {
            self.view.scheduleOnce(function() {
              pdk_table_sound_1.PdkSound.playPokerTypeEffectSound(cardPatter);
            }, .3);
            audio_manager_1.default.instance.vibrate();
          });
          return;

         case poker_pattern_1.PatternType.type_liandui:
          this.view.playLianDuiEffect(seatInfo.viewID, centerWorldPos);
          break;

         case poker_pattern_1.PatternType.type_feiji:
          this.view.playFeiJiEffect(seatInfo.viewID, centerWorldPos);
          break;

         case poker_pattern_1.PatternType.type_shunzi:
          this.view.playShunZiEffect(seatInfo.viewID, centerWorldPos);
          break;

         case poker_pattern_1.PatternType.type_sandaiyi:
          "sandaiyi" == disp_type ? this.view.playSanDaiYiEffect(seatInfo.viewID, centerWorldPos) : "sandaier" == disp_type && this.view.playSanDaiErEffect(seatInfo.viewID, centerWorldPos);
          break;

         case poker_pattern_1.PatternType.type_sidaier:
          "sidaisi" == disp_type ? this.view.playSiDaiLiangDuiEffect(seatInfo.viewID, centerWorldPos) : this.view.playSiDaiErEffect(seatInfo.viewID, centerWorldPos);
        }
        pdk_table_sound_1.PdkSound.playPokerTypeEffectSound(cardPatter);
      };
      PdkModule = __decorate([ ccclass, module_base_1.moduleInit("PdkModule") ], PdkModule);
      return PdkModule;
    }(pdk_module_base_1.PdkModuleBase);
    exports.PdkModule = PdkModule;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/module_base": "module_base",
    "../../../../manager/audio_manager": "audio_manager",
    "../../../../manager/scene_manager": "scene_manager",
    "../../../../manager/user_manager": "user_manager",
    "../../../public/module/toast/toast": "toast",
    "../component/pdk_table_sound": "pdk_table_sound",
    "../result/result_module": "result_module",
    "./data/pdk_const": "pdk_const",
    "./pdk_module_base": "pdk_module_base",
    "./poker/poker_pattern": "poker_pattern"
  } ],
  pdk_myseat_pokers: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e0adaDgsfBMc7Ml58s/Dwub", "pdk_myseat_pokers");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_myseat_pokers_1 = require("../../../public/poker_table/poker_myseat_pokers");
    var custom_ui_state_switcher_1 = require("../../../public/ui/custom_ui_state_switcher");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PdkMySeatPokers = function(_super) {
      __extends(PdkMySeatPokers, _super);
      function PdkMySeatPokers() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.rightStyleMinCardsCount = 20;
        _this.uiSwitcher = null;
        return _this;
      }
      PdkMySeatPokers.prototype.playFaPaiAnim = function(onFinishSingle, onFinish) {
        var self = this;
        var pokers = this.pokers;
        var duration = .1;
        var totalCount = pokers.length;
        var doNextPokerMove;
        self.isPlayingSelectPokerAnim = true;
        doNextPokerMove = function(index, onFinish, startPos) {
          onFinishSingle && onFinishSingle(index, totalCount);
          if (index == totalCount) {
            self.isPlayingSelectPokerAnim = false;
            if (onFinish) {
              onFinish();
              return;
            }
          }
          var poker = pokers[index];
          var targetPos = poker.node.position;
          poker.show();
          startPos && (poker.node.position = startPos);
          var callFun = cc.callFunc(function() {
            doNextPokerMove(++index, onFinish, targetPos);
          }.bind(self));
          var move = cc.moveTo(duration, targetPos);
          var seq = cc.sequence([ move, callFun ]);
          poker.node.runAction(seq);
        };
        doNextPokerMove(0, onFinish);
      };
      PdkMySeatPokers.prototype.showPokers = function(show, codeList, params) {
        var centerLocalPos = _super.prototype.showPokers.call(this, show, codeList, params);
        this.resetHandCardsRootPos();
        return centerLocalPos;
      };
      PdkMySeatPokers.prototype.showRecommends = function(selectCards, isHaveMask) {
        void 0 === isHaveMask && (isHaveMask = true);
        this.resetHandCardsRootPos();
        var selectIndex = 0;
        var codes = selectCards.concat([]);
        for (var idx = 0; idx < this.pokers.length; idx++) {
          var poker = this.pokers[idx];
          poker.marked = isHaveMask;
          for (var i = selectIndex; i < codes.length; idx++) {
            var target = selectCards[idx];
            if (poker.code == target) {
              codes.splice(i, 1);
              poker.selected = true;
              poker.marked = false;
              break;
            }
          }
        }
        this.refreshPokersMarkState();
        this.refreshPokerSelectState(false);
      };
      PdkMySeatPokers.prototype.resetHandCardsRootPos = function() {
        var len = this.pokers.length;
        len < this.rightStyleMinCardsCount ? this.uiSwitcher.SwitchState("Center") : this.uiSwitcher.SwitchState("None");
      };
      __decorate([ property(cc.Integer) ], PdkMySeatPokers.prototype, "rightStyleMinCardsCount", void 0);
      __decorate([ property(custom_ui_state_switcher_1.default) ], PdkMySeatPokers.prototype, "uiSwitcher", void 0);
      PdkMySeatPokers = __decorate([ ccclass ], PdkMySeatPokers);
      return PdkMySeatPokers;
    }(poker_myseat_pokers_1.default);
    exports.PdkMySeatPokers = PdkMySeatPokers;
    cc._RF.pop();
  }, {
    "../../../public/poker_table/poker_myseat_pokers": "poker_myseat_pokers",
    "../../../public/ui/custom_ui_state_switcher": "custom_ui_state_switcher"
  } ],
  pdk_route: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7e0f4iXYEtPyJHUR54ggGOJ", "pdk_route");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var PdkNetRoute = function() {
      function PdkNetRoute() {}
      PdkNetRoute.leaveRoom = "table.tableHandler.leaveRoom";
      PdkNetRoute.readyGame = "table.tableHandler.readyGame";
      PdkNetRoute.onReadyGame = "onReadyGame";
      PdkNetRoute.onStartGame = "onStartGame";
      PdkNetRoute.dissolveGame = "table.tableHandler.dissolveGame";
      PdkNetRoute.onDissolveRoom = "onDissolveRoom";
      PdkNetRoute.playCard = "table.tableHandler.playCard";
      PdkNetRoute.onWarnUser = "onWarnUser";
      PdkNetRoute.onHandCardUser = "onHandCardUser";
      PdkNetRoute.onOutCard = "onOutCard";
      PdkNetRoute.onPassCard = "onPassCard";
      PdkNetRoute.onSettlement = "onSettlement";
      PdkNetRoute.onUserEntryRoom = "onUserEntryRoom";
      PdkNetRoute.onOutCardNotify = "onOutCardNotify";
      PdkNetRoute.onSendParameter = "onSendParameter";
      PdkNetRoute.onSendGameScene = "onSendGameScene";
      PdkNetRoute.onLeaveRoom = "onLeaveRoom";
      PdkNetRoute.onTableChat = "onTableChat";
      return PdkNetRoute;
    }();
    exports.PdkNetRoute = PdkNetRoute;
    cc._RF.pop();
  }, {} ],
  pdk_seat_pokers: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0404124/vdI4Z1/ya8tfZCj", "pdk_seat_pokers");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_seat_pokers_base_1 = require("../../../public/poker_table/poker_seat_pokers_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var PdkSeatPokers = function(_super) {
      __extends(PdkSeatPokers, _super);
      function PdkSeatPokers() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      PdkSeatPokers.prototype.showPokers = function(show, codeList, params) {
        var centerLocalPos = _super.prototype.showPokers.call(this, show, codeList, params);
        show && params && (params.withAnim, params.onFinish && params.onFinish());
        return centerLocalPos;
      };
      PdkSeatPokers = __decorate([ ccclass, menu("custom/doudizhu/DouDiZhuTableSeatPokers") ], PdkSeatPokers);
      return PdkSeatPokers;
    }(poker_seat_pokers_base_1.default);
    exports.default = PdkSeatPokers;
    cc._RF.pop();
  }, {
    "../../../public/poker_table/poker_seat_pokers_base": "poker_seat_pokers_base"
  } ],
  pdk_table_seat_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "115dcTdaaVONaWScrlogJ7A", "pdk_table_seat_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_table_seat_base_view_1 = require("../../../public/poker_table/poker_table_seat_base_view");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PokerTableSeatView = function(_super) {
      __extends(PokerTableSeatView, _super);
      function PokerTableSeatView() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      PokerTableSeatView.prototype.getSeatStyleName = function(index) {
        switch (index) {
         case 0:
          return "Bottom";

         case 1:
          return "Right";

         case 2:
          return "Left";
        }
        return "";
      };
      PokerTableSeatView = __decorate([ ccclass ], PokerTableSeatView);
      return PokerTableSeatView;
    }(poker_table_seat_base_view_1.default);
    exports.default = PokerTableSeatView;
    cc._RF.pop();
  }, {
    "../../../public/poker_table/poker_table_seat_base_view": "poker_table_seat_base_view"
  } ],
  pdk_table_sound: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5c48bJ8FOxCv4TBUoeocfUy", "pdk_table_sound");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var audio_manager_1 = require("../../../../manager/audio_manager");
    var Utility_1 = require("../../../../utility/Utility");
    var poker_pattern_1 = require("../table/poker/poker_pattern");
    var poker_data_1 = require("../table/poker/poker_data");
    var const_malePath = "package/pdk/sound/man/";
    var const_femalePath = "package/pdk/sound/woman/";
    var const_effectPath = "package/pdk/sound/effect/";
    var const_musicPath = "sound/bgm/";
    var PdkSound = function() {
      function PdkSound() {}
      PdkSound.playPokerTypeSound = function(male, pattern, onFinish) {
        var path = const_femalePath;
        male && (path = const_malePath);
        var type = pattern.type;
        var disp_type = pattern.disp_type;
        var soundName = "";
        switch (type) {
         case poker_pattern_1.PatternType.type_danpai:
          soundName = "single_";
          break;

         case poker_pattern_1.PatternType.type_shunzi:
          soundName = "shunzi";
          this.playSound(path + soundName, soundName, onFinish);
          return;

         case poker_pattern_1.PatternType.type_duizi:
          soundName = "dui";
          break;

         case poker_pattern_1.PatternType.type_liandui:
          soundName = "liandui";
          this.playSound(path + soundName, soundName, onFinish);
          return;

         case poker_pattern_1.PatternType.type_sandaiyi:
          soundName = "tuple";
          if ("sanzhang" != disp_type) {
            if ("sandaiyi" == disp_type) {
              soundName = "sandaiyi";
              this.playSound(path + soundName, soundName, onFinish);
              return;
            }
            if ("sandaier" == disp_type) {
              soundName = "sandaiyidui";
              this.playSound(path + soundName, soundName, onFinish);
              return;
            }
            return;
          }
          soundName = "tuple";
          break;

         case poker_pattern_1.PatternType.type_feiji:
          soundName = "feiji";
          pattern.feijinum > 0 && Math.floor(pattern.card_cnt / pattern.feijinum) > 0 && (soundName = "feijidaichibang");
          this.playSound(path + soundName, soundName, onFinish);
          return;

         case poker_pattern_1.PatternType.type_zhadan:
          soundName = "zhadan";
          this.playSound(path + soundName, soundName, onFinish);
          return;

         case poker_pattern_1.PatternType.type_sidaier:
          soundName = "sidaier";
          "sidaisi" == disp_type && (soundName = "sidailiangdui");
          this.playSound(path + soundName, soundName, onFinish);
          return;

         case poker_pattern_1.PatternType.type_huojian:
          soundName = "wangzha";
          this.playSound(path + soundName, soundName, onFinish);
          return;
        }
        var name = poker_data_1.Card.valueToIndex(pattern.value);
        if (!name || name == poker_data_1.CardNameIndex.card_unknow) {
          onFinish && onFinish("unknow pattern");
          return;
        }
        soundName += name;
        this.playSound(path + soundName, soundName, onFinish);
      };
      PdkSound.playPokerTypeEffectSound = function(pattern, onFinish) {
        var type = pattern.type;
        if (type == poker_pattern_1.PatternType.type_shunzi) {
          this.playShunZiEffectSound(onFinish);
          return;
        }
        if (type == poker_pattern_1.PatternType.type_liandui) {
          this.playCommonEffectSound(onFinish);
          return;
        }
        if (type == poker_pattern_1.PatternType.type_feiji) {
          this.playFeiJiEffectSound(onFinish);
          return;
        }
        if (type == poker_pattern_1.PatternType.type_zhadan) {
          this.playZhaDanEffectSound(onFinish);
          return;
        }
        if (type == poker_pattern_1.PatternType.type_huojian) {
          this.playHuoJianEffectSound(onFinish);
          return;
        }
        type != poker_pattern_1.PatternType.type_unknow;
      };
      PdkSound.playPiaEffectSound = function(onFinish) {
        var soundName = "special_give";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playPassSound = function(male, onFinish) {
        var path = const_femalePath + "action/";
        male && (path = const_malePath + "action/");
        var list = [ "buyao1", "buyao2", "buyao3", "buyao4" ];
        var randomIndex = this.getRandomIndex(0, list.length - 1);
        var soundName = list[randomIndex];
        PdkSound.playSound(path + soundName, soundName, onFinish);
      };
      PdkSound.playDaNiSound = function(male, onFinish) {
        var path = const_femalePath + "action/";
        male && (path = const_malePath + "action/");
        var list = [ "dani1", "dani2", "dani3" ];
        var soundName = list[this.getRandomIndex(0, list.length - 1)];
        PdkSound.playSound(path + soundName, soundName, onFinish);
      };
      PdkSound.playFaPaiSound = function(onFinish) {
        var soundName = "fapai";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playWarningSound = function(male, single, onFinish) {
        var path = const_femalePath + "action/";
        male && (path = const_malePath + "action/");
        var list = [ "baojing1", "baojing1_1" ];
        single || (list = [ "baojing2", "baojing2_1" ]);
        var soundName = list[this.getRandomIndex(0, list.length - 1)];
        PdkSound.playSound(path + soundName, soundName, onFinish);
      };
      PdkSound.playMingPaiSound = function(male, onFinish) {
        var path = const_femalePath + "action/";
        male && (path = const_malePath + "action/");
        var soundName = "share";
        PdkSound.playSound(path + soundName, soundName, onFinish);
      };
      PdkSound.playGrabLordSound = function(male, score, onFinish) {
        var path = const_femalePath + "action/";
        male && (path = const_malePath + "action/");
        var soundName = "score_order_";
        0 == score ? soundName = "score_no_order" : soundName += score;
        PdkSound.playSound(path + soundName, soundName, onFinish);
      };
      PdkSound.playSetLordEffectSound = function(onFinish) {
        var soundName = "dztxbh";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playRemind = function(onFinish) {
        var soundName = "remind";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playFeiJiEffectSound = function(onFinish) {
        var soundName = "feiji";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playShunZiEffectSound = function(onFinish) {
        this.playCommonEffectSound(onFinish);
      };
      PdkSound.playZhaDanEffectSound = function(onFinish) {
        var soundName = "bomb_new";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playHuoJianEffectSound = function(onFinish) {
        var soundName = "bomb";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playCommonEffectSound = function(onFinish) {
        var soundName = "common";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playGameLoseSound = function(onFinish) {
        var soundName = "gamelose";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playGameWinSound = function(onFinish) {
        var soundName = "gamewin";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playMathWinSound = function(onFinish) {
        var soundName = "gamewin";
        PdkSound.playSound(const_effectPath + soundName, soundName, onFinish);
      };
      PdkSound.playSound = function(fullPath, soundName, onFinish) {
        audio_manager_1.default.instance.playSound(fullPath, false, onFinish);
      };
      PdkSound.playMusic = function(fullPath, soundName) {
        audio_manager_1.default.instance.playMusic(fullPath, false);
      };
      PdkSound.playBgm = function(resum) {
        var list = [ audio_manager_1.default.instance.playFightMusic.bind(audio_manager_1.default.instance), audio_manager_1.default.instance.playFightMusic2.bind(audio_manager_1.default.instance) ];
        var play = list[PdkSound.getRandomIndex(0, list.length - 1)];
        if (resum) play(true); else {
          var tmp = list[audio_manager_1.default.instance._curMusicIndex - 2];
          tmp ? tmp(false) : play(true);
        }
      };
      PdkSound.stopBgm = function() {
        audio_manager_1.default.instance.stopAllMusic();
      };
      PdkSound.playChatShortMsgSound = function(male, key, onFinish) {
        var path = const_femalePath + "chat/";
        male && (path = const_malePath + "chat/");
        var soundName = "chat_" + key;
        PdkSound.playSound(path + soundName, soundName, onFinish);
      };
      PdkSound.getRandomIndex = function(under, over) {
        void 0 === under && (under = 0);
        void 0 === over && (over = 0);
        return Utility_1.default.instance.getIntRandom(under, over);
      };
      return PdkSound;
    }();
    exports.PdkSound = PdkSound;
    cc._RF.pop();
  }, {
    "../../../../manager/audio_manager": "audio_manager",
    "../../../../utility/Utility": "utility",
    "../table/poker/poker_data": "poker_data",
    "../table/poker/poker_pattern": "poker_pattern"
  } ],
  pdk_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "22b95kBp5ZGgpteu3stpm36", "pdk_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var pdk_base_view_1 = require("./pdk_base_view");
    var custom_ui_state_switcher_1 = require("../../../public/ui/custom_ui_state_switcher");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PdkView = function(_super) {
      __extends(PdkView, _super);
      function PdkView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.menueRoot = null;
        _this.menueMask = null;
        _this.chupaimask = null;
        _this.chupaiBtnSwither = null;
        return _this;
      }
      PdkView.prototype.onLoad = function() {
        _super.prototype.onLoad.call(this);
        this.menueRoot.active = false;
        this.refreshTime();
        this.schedule(this.refreshTime.bind(this), 50, Number.MAX_VALUE);
      };
      PdkView.prototype.showMenue = function() {
        this.menueRoot.active = !this.menueRoot.active;
      };
      PdkView.prototype.updateAllUser = function(data, roomInfo) {
        this.resetSeatViewPos();
        for (var idx = 0; idx < data.length; idx++) this.userEnter(data[idx].viewID, data[idx].user, roomInfo);
      };
      PdkView.prototype.refreshTime = function() {
        cc.log("--xx");
        var nowDate = new Date(Date.now());
        this.time.string = nowDate.getHours() + ":" + nowDate.getMinutes();
      };
      __decorate([ property(cc.Node) ], PdkView.prototype, "menueRoot", void 0);
      __decorate([ property(cc.Node) ], PdkView.prototype, "menueMask", void 0);
      __decorate([ property(cc.Node) ], PdkView.prototype, "chupaimask", void 0);
      __decorate([ property(custom_ui_state_switcher_1.default) ], PdkView.prototype, "chupaiBtnSwither", void 0);
      PdkView = __decorate([ ccclass ], PdkView);
      return PdkView;
    }(pdk_base_view_1.PdkBaseView);
    exports.PdkView = PdkView;
    cc._RF.pop();
  }, {
    "../../../public/ui/custom_ui_state_switcher": "custom_ui_state_switcher",
    "./pdk_base_view": "pdk_base_view"
  } ],
  ping_component: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f9bd8gWv3ZJIpiLzat3uSmr", "ping_component");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var hall_server_1 = require("../server/hallserver/hall_server");
    var game_server_1 = require("../server/gameserver/game_server");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PingComponent = function(_super) {
      __extends(PingComponent, _super);
      function PingComponent() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.isHallUse = true;
        _this.wifiSprites = [];
        _this.wifiIcon = null;
        _this.pingTex = null;
        _this.pingColor = [ new cc.Color(255, 0, 0, 255), new cc.Color(255, 255, 0, 255), new cc.Color(195, 184, 0, 255), new cc.Color(123, 185, 59, 255), new cc.Color(43, 237, 80, 255) ];
        return _this;
      }
      PingComponent.prototype.start = function() {
        var _this = this;
        this.isHallUse ? hall_server_1.default.instance.onNotifyPing = function(ping) {
          _this.showPing(ping);
        } : game_server_1.default.instance.onNotifyPing = function(ping) {
          _this.showPing(ping);
        };
      };
      PingComponent.prototype.showPing = function(ping) {
        var idx = 0;
        idx = ping >= 901 ? 0 : ping >= 501 ? 1 : ping >= 301 ? 2 : ping >= 151 ? 3 : 4;
        this.wifiIcon.spriteFrame = this.wifiSprites[idx];
        this.pingTex.string = "\u5ef6\u8fdf" + ping + "ms";
        this.pingTex.node.color = this.pingColor[idx];
      };
      PingComponent.prototype.onDestroy = function() {
        this.isHallUse ? hall_server_1.default.instance.onNotifyPing = null : game_server_1.default.instance.onNotifyPing = null;
      };
      __decorate([ property ], PingComponent.prototype, "isHallUse", void 0);
      __decorate([ property(cc.SpriteFrame) ], PingComponent.prototype, "wifiSprites", void 0);
      __decorate([ property(cc.Sprite) ], PingComponent.prototype, "wifiIcon", void 0);
      __decorate([ property(cc.Label) ], PingComponent.prototype, "pingTex", void 0);
      PingComponent = __decorate([ ccclass ], PingComponent);
      return PingComponent;
    }(cc.Component);
    exports.default = PingComponent;
    cc._RF.pop();
  }, {
    "../server/gameserver/game_server": "game_server",
    "../server/hallserver/hall_server": "hall_server"
  } ],
  play_anim: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d5042OrbqlJkoqrbcvjkE+4", "play_anim");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var PlayAnim = function(_super) {
      __extends(PlayAnim, _super);
      function PlayAnim() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.animation = null;
        _this.particles = null;
        _this._isFindParticleSystem = false;
        return _this;
      }
      PlayAnim.prototype.onEnable = function() {
        var clip = this.animation.getClips();
        this.animation.play(clip[0].name);
        if (!this._isFindParticleSystem) {
          this.particles = this.animation.node.getComponentsInChildren(cc.ParticleSystem);
          this._isFindParticleSystem = true;
        }
        var length = this.particles.length;
        for (var i = 0; i < length; i++) this.particles[i].resetSystem();
      };
      PlayAnim.prototype.onDisable = function() {
        this.animation.stop();
      };
      __decorate([ property(cc.Animation) ], PlayAnim.prototype, "animation", void 0);
      PlayAnim = __decorate([ ccclass, menu("custom/PlayAnim") ], PlayAnim);
      return PlayAnim;
    }(cc.Component);
    exports.default = PlayAnim;
    cc._RF.pop();
  }, {} ],
  playerinfo_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "56e30ZBQwFHfYlGDkGDiQZj", "playerinfo_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../framework/core/mvvm/view_base");
    var module_manager_1 = require("../../framework/core/module_manager");
    var texture_manager_1 = require("../../manager/texture_manager");
    var Utility_1 = require("../../utility/Utility");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PlayerInfoView = function(_super) {
      __extends(PlayerInfoView, _super);
      function PlayerInfoView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.btn_back = null;
        _this.spriteMale = null;
        _this.vipFrame = null;
        _this.spriteAvatar = null;
        _this.labelName = null;
        _this.labelID = null;
        _this.labelTotalCount = null;
        _this.labelTotalWinRate = null;
        _this.labelMatchList = [];
        _this.eggRootNode = null;
        _this.eggBtnNode = null;
        _this.debugBtnNode = null;
        _this.sexFrames = [];
        _this.copyBtnNode = null;
        _this.updateUserBtn = null;
        _this.updateTipsNode = null;
        _this._onTestBtnClickCount = 0;
        _this._firstClickTime = 0;
        _this._lastPlayerId = 0;
        return _this;
      }
      PlayerInfoView.prototype.start = function() {
        this.eggBtnNode.on("click", this.onEggBtnClick, this);
        this.debugBtnNode.on("click", this.onDebugBtnClick, this);
        this.copyBtnNode.on("click", this.onCopyBtnClick, this);
        this.updateUserBtn.on("click", this.onUpdateUserBtnClick, this);
      };
      PlayerInfoView.prototype.onEnable = function() {
        this.eggRootNode.active = false;
        this._onTestBtnClickCount = 0;
      };
      PlayerInfoView.prototype.onUpdateUserBtnClick = function() {};
      PlayerInfoView.prototype.onCopyBtnClick = function() {};
      PlayerInfoView.prototype.onEggBtnClick = function() {
        if (!module_manager_1.default.instance.moduleHasActive("Hall")) return;
        0 == this._onTestBtnClickCount && (this._firstClickTime = new Date().getTime());
        this._onTestBtnClickCount++;
        if (this._onTestBtnClickCount >= 6) {
          var now = new Date().getTime();
          now - this._firstClickTime < 2e3 && (this.eggRootNode.active = true);
        }
      };
      PlayerInfoView.prototype.onDebugBtnClick = function() {};
      PlayerInfoView.prototype.resetInfoLabels = function(playerId) {
        if (playerId != this._lastPlayerId) {
          this.labelName.string = "";
          this.labelID.string = "";
          this.spriteAvatar.node.active = false;
          this.labelTotalCount.string = "";
          this.labelTotalWinRate.string = "";
          var length = this.labelMatchList.length;
          for (var i = 0; i < length; i++) this.labelMatchList[i].string = "";
        }
      };
      PlayerInfoView.prototype.init = function(data) {
        this.userInfo = data.userInfo;
        this._lastPlayerId = this.userInfo.userId;
        this.rankInfoList = data.rankInfoList;
        this.updatePlayerInfoView(this.userInfo);
        this.updateRankView();
      };
      PlayerInfoView.prototype.updatePlayerInfoView = function(userInfo) {
        var self = this;
        this.labelName.string = Utility_1.default.instance.filterPlayerName(userInfo.nickname, 14);
        this.labelID.string = "ID:" + userInfo.userId;
        var namePath = Utility_1.default.instance.getUserHeadImagePath(userInfo.headImg);
        texture_manager_1.default.instance.getSprite(namePath, function(frame) {
          if (self && self.isValid && frame) {
            frame.setOriginalSize(cc.size(70, 70));
            self.spriteAvatar.spriteFrame = frame;
            self.spriteAvatar.node.active = true;
          }
        });
        1 == userInfo.gender ? self.spriteMale.spriteFrame = this.sexFrames[0] : 2 == userInfo.gender && (self.spriteMale.spriteFrame = this.sexFrames[1]);
        var totalCount = userInfo.winCount + userInfo.lostCount;
        var winCount = userInfo.winCount;
        var winRate = "0";
        if (0 == totalCount) winRate = "0"; else {
          var temp = 100 * winCount / totalCount;
          winRate = temp.toFixed(0);
        }
        this.labelTotalCount.string = "" + totalCount;
        this.labelTotalWinRate.string = winRate + "%";
      };
      PlayerInfoView.prototype.updateRankView = function() {
        var _this = this;
        var length = this.labelMatchList.length;
        for (var i = 0; i < length; i++) this.labelMatchList[i].string = "x0";
        if (!this.rankInfoList) return;
        this.rankInfoList.forEach(function(rankInfoTemp) {
          1 == rankInfoTemp.rank ? _this.labelMatchList[0].string = "\xd7" + rankInfoTemp.num : 2 == rankInfoTemp.rank ? _this.labelMatchList[1].string = "\xd7" + rankInfoTemp.num : 3 == rankInfoTemp.rank && (_this.labelMatchList[2].string = "\xd7" + rankInfoTemp.num);
        });
      };
      __decorate([ property(cc.Button) ], PlayerInfoView.prototype, "btn_back", void 0);
      __decorate([ property(cc.Sprite) ], PlayerInfoView.prototype, "spriteMale", void 0);
      __decorate([ property(cc.Sprite) ], PlayerInfoView.prototype, "vipFrame", void 0);
      __decorate([ property(cc.Sprite) ], PlayerInfoView.prototype, "spriteAvatar", void 0);
      __decorate([ property(cc.Label) ], PlayerInfoView.prototype, "labelName", void 0);
      __decorate([ property(cc.Label) ], PlayerInfoView.prototype, "labelID", void 0);
      __decorate([ property(cc.Label) ], PlayerInfoView.prototype, "labelTotalCount", void 0);
      __decorate([ property(cc.Label) ], PlayerInfoView.prototype, "labelTotalWinRate", void 0);
      __decorate([ property([ cc.Label ]) ], PlayerInfoView.prototype, "labelMatchList", void 0);
      __decorate([ property(cc.Node) ], PlayerInfoView.prototype, "eggRootNode", void 0);
      __decorate([ property(cc.Node) ], PlayerInfoView.prototype, "eggBtnNode", void 0);
      __decorate([ property(cc.Node) ], PlayerInfoView.prototype, "debugBtnNode", void 0);
      __decorate([ property([ cc.SpriteFrame ]) ], PlayerInfoView.prototype, "sexFrames", void 0);
      __decorate([ property(cc.Node) ], PlayerInfoView.prototype, "copyBtnNode", void 0);
      __decorate([ property(cc.Node) ], PlayerInfoView.prototype, "updateUserBtn", void 0);
      __decorate([ property(cc.Node) ], PlayerInfoView.prototype, "updateTipsNode", void 0);
      PlayerInfoView = __decorate([ ccclass ], PlayerInfoView);
      return PlayerInfoView;
    }(view_base_1.default);
    exports.default = PlayerInfoView;
    cc._RF.pop();
  }, {
    "../../framework/core/module_manager": "module_manager",
    "../../framework/core/mvvm/view_base": "view_base",
    "../../manager/texture_manager": "texture_manager",
    "../../utility/Utility": "utility"
  } ],
  playerinfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d8c77ziId9DTJ3/P75Yvv5h", "playerinfo");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../framework/core/mvvm/module_base");
    var playerinfo_view_1 = require("./playerinfo_view");
    var Utility_1 = require("../../utility/Utility");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PlayerInfoModule = function(_super) {
      __extends(PlayerInfoModule, _super);
      function PlayerInfoModule() {
        var _this = _super.call(this) || this;
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/playerinfo/Public_WindowPlayerInfo";
        _this.viewType = playerinfo_view_1.default;
        _this.needAnim = true;
        _this.needViewMask = true;
        return _this;
      }
      PlayerInfoModule.prototype.onInit = function(intentData) {
        _super.prototype.onInit.call(this, intentData);
        this.view.btn_back.node.on("click", this.onClickBtnClose, this);
      };
      PlayerInfoModule.prototype.onDestroy = function() {};
      PlayerInfoModule.prototype.refreshAuth = function(userInfo) {
        this.view.updatePlayerInfoView(userInfo);
      };
      PlayerInfoModule.prototype.onShow = function(playerId) {
        var self = this;
        _super.prototype.onShow.call(this, playerId);
        this.view.resetInfoLabels(playerId);
      };
      PlayerInfoModule.prototype.onClickBtnClose = function() {
        Utility_1.default.instance.playButtonSound();
        this.hide();
      };
      PlayerInfoModule = __decorate([ ccclass, module_base_1.moduleInit("PlayerInfoModule") ], PlayerInfoModule);
      return PlayerInfoModule;
    }(module_base_1.default);
    exports.default = PlayerInfoModule;
    cc._RF.pop();
  }, {
    "../../framework/core/mvvm/module_base": "module_base",
    "../../utility/Utility": "utility",
    "./playerinfo_view": "playerinfo_view"
  } ],
  poison_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ff95af9xZNPkLH4Nt5QGxxO", "poison_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var PoisonShader = function(_super) {
      __extends(PoisonShader, _super);
      function PoisonShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Poison";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    varying vec2 uv0;\n    void main () {\n        vec4 c = color * texture2D(texture, uv0);\n        c.r *= 0.8;\n        c.r += 0.08 * c.a;\n        c.g *= 0.8;\n        c.g += 0.2 * c.a;\n        c.b *= 0.8;\n        gl_FragColor = c;\n    }\n    ";
        return _this;
      }
      PoisonShader = __decorate([ ccclass, menu("custom/Shader/Poison") ], PoisonShader);
      return PoisonShader;
    }(shader_component_1.default);
    exports.default = PoisonShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  poker_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "478d8hTJnROu6qjV3W3rWE+", "poker_data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var CardNameIndex;
    (function(CardNameIndex) {
      CardNameIndex[CardNameIndex["card_unknow"] = 0] = "card_unknow";
      CardNameIndex[CardNameIndex["card_A"] = 1] = "card_A";
      CardNameIndex[CardNameIndex["card_2"] = 2] = "card_2";
      CardNameIndex[CardNameIndex["card_3"] = 3] = "card_3";
      CardNameIndex[CardNameIndex["card_4"] = 4] = "card_4";
      CardNameIndex[CardNameIndex["card_5"] = 5] = "card_5";
      CardNameIndex[CardNameIndex["card_6"] = 6] = "card_6";
      CardNameIndex[CardNameIndex["card_7"] = 7] = "card_7";
      CardNameIndex[CardNameIndex["card_8"] = 8] = "card_8";
      CardNameIndex[CardNameIndex["card_9"] = 9] = "card_9";
      CardNameIndex[CardNameIndex["card_10"] = 10] = "card_10";
      CardNameIndex[CardNameIndex["card_J"] = 11] = "card_J";
      CardNameIndex[CardNameIndex["card_Q"] = 12] = "card_Q";
      CardNameIndex[CardNameIndex["card_K"] = 13] = "card_K";
      CardNameIndex[CardNameIndex["card_small_king"] = 14] = "card_small_king";
      CardNameIndex[CardNameIndex["card_big_king"] = 15] = "card_big_king";
      CardNameIndex[CardNameIndex["end"] = 16] = "end";
    })(CardNameIndex = exports.CardNameIndex || (exports.CardNameIndex = {}));
    var CardColor;
    (function(CardColor) {
      CardColor[CardColor["color_unknow"] = 0] = "color_unknow";
      CardColor[CardColor["color_black_heart"] = 1] = "color_black_heart";
      CardColor[CardColor["color_red_heart"] = 2] = "color_red_heart";
      CardColor[CardColor["color_plum"] = 3] = "color_plum";
      CardColor[CardColor["color_square"] = 4] = "color_square";
    })(CardColor = exports.CardColor || (exports.CardColor = {}));
    var Card = function() {
      function Card() {
        this.code = 0;
        this.index = CardNameIndex.card_unknow;
        this.color = CardColor.color_unknow;
      }
      Card.makeCardByCode = function(code) {
        var card = new Card();
        card.code = code;
        card.index = Card.codeToIndex(code);
        card.color = 1 + ((240 & code) >> 4);
        return card;
      };
      Card.codeToIndex = function(code) {
        return 15 & code;
      };
      Card.codeToValue = function(cbCardData) {
        var cbCardValue = 15 & cbCardData;
        var cbCardColor = 240 & cbCardData;
        if (64 == cbCardColor) return cbCardValue + 2;
        return cbCardValue <= 2 ? cbCardValue + 13 : cbCardValue;
      };
      Card.indexToValue = function(index) {
        return Card.cardValueMap[index];
      };
      Card.valueToIndex = function(value) {
        for (var i = 0; i < Card.cardValueMap.length; i++) {
          var element = Card.cardValueMap[i];
          if (element == value) return i;
        }
      };
      Card.cardValueMap = [ 0, 14, 15, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18 ];
      Card.max_card_value = 15;
      return Card;
    }();
    exports.Card = Card;
    var DouDiZhuCardCommon = function() {
      function DouDiZhuCardCommon() {}
      DouDiZhuCardCommon.InitParse = function(cards) {
        DouDiZhuCardCommon.SortAsc(cards);
        var card_type_stat = [ [], [], [], [], [] ];
        var card_name_info = {};
        var card_name_stat = {};
        for (var index = 0; index < CardNameIndex.end; index++) {
          card_name_stat[index] = 0;
          card_name_info[index] = [];
        }
        var last_card = CardNameIndex.card_unknow;
        var card_repeat_cnt = 0;
        for (var i = 0; i < cards.length; i++) {
          var card = cards[i];
          var name = Card.makeCardByCode(card).index;
          card_name_stat[name] = card_name_stat[name] + 1;
          card_name_info[name].push(card);
          if (last_card == CardNameIndex.card_unknow) {
            last_card = name;
            card_repeat_cnt = 1;
          } else if (name != last_card) {
            if (4 == card_repeat_cnt) card_type_stat[4].push(last_card); else for (var j = 0; j < card_repeat_cnt; j++) card_type_stat[j + 1].push(last_card);
            last_card = name;
            card_repeat_cnt = 1;
          } else card_repeat_cnt++;
        }
        if (4 == card_repeat_cnt) card_type_stat[4].push(last_card); else for (var j = 0; j < card_repeat_cnt; j++) card_type_stat[j + 1].push(last_card);
        return {
          card_type_stat: card_type_stat,
          card_name_info: card_name_info,
          card_name_stat: card_name_stat
        };
      };
      DouDiZhuCardCommon.SortAsc = function(cards) {
        cards.sort(function(a, b) {
          var valA = Card.codeToValue(a);
          var valB = Card.codeToValue(b);
          if (valA == valB) return a - b;
          return valA - valB;
        });
      };
      DouDiZhuCardCommon.tishi = [ 3, 4, 5, 8, 6, 7, 2, 1, 0 ];
      return DouDiZhuCardCommon;
    }();
    exports.DouDiZhuCardCommon = DouDiZhuCardCommon;
    cc._RF.pop();
  }, {} ],
  poker_logic_set: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8a89dr0bblGVqCD7Gj5V8ou", "poker_logic_set");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_pattern_1 = require("./poker_pattern");
    var poker_recommend_1 = require("./poker_recommend");
    var poker_data_1 = require("./poker_data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PokerSet = function() {
      function PokerSet() {
        this.cards = [];
        this.card_cnt = 0;
      }
      PokerSet.prototype.setCodeList = function(codeList, len) {
        this.cards = [];
        if (codeList) for (var i = 0; i < codeList.length; i++) {
          var element = codeList[i];
          this.cards.push(element);
        }
        this.card_cnt = null != len ? len : this.cards.length;
      };
      PokerSet.prototype.hintIterator = function(pattern, cards) {
        var firstout = true;
        var outcard = [];
        var handcard = cards || this.cards;
        if (null != pattern) {
          firstout = false;
          outcard = pattern.cards;
        }
        var tishiData = poker_recommend_1.PokerRecommend.hintIterator(handcard, outcard, firstout);
        var pattern_set = [];
        var has_sidaier_map = [];
        for (var i = 0; i < tishiData.tishi.length; i++) {
          var element = tishiData.tishi[i];
          var pattern_tmp = poker_pattern_1.CardPattern.newPattern(element);
          if (null == pattern_tmp) return null;
          pattern_tmp.type != poker_pattern_1.PatternType.type_sandaiyi && pattern_tmp.type != poker_pattern_1.PatternType.type_feiji || this.proc_sanzhang_tail_cards(pattern_tmp, pattern, handcard);
          pattern_set.push(pattern_tmp);
        }
        if (!pattern || pattern.type == poker_pattern_1.PatternType.type_sidaier) {
          var outData = poker_recommend_1.PokerRecommend.get_cards_type(outcard);
          var cardsList = poker_recommend_1.PokerRecommend.find_all_biger_sizhang(handcard, outData.card_value);
          for (var i = 0; i < cardsList.length; i++) {
            var element = cardsList[i];
            var pattern_tmp = poker_pattern_1.CardPattern.newPattern(element);
            this.proc_sizhang_tail_cards(pattern_tmp, pattern, handcard);
            pattern_set.push(pattern_tmp);
          }
        }
        var index = 1;
        return 0 == pattern_set.length ? {
          tishiFun: null,
          count: 0,
          auto: tishiData.auto,
          pattern_set: pattern_set
        } : {
          tishiFun: function() {
            var oldIndex = index;
            index = index % pattern_set.length + 1;
            return pattern_set[oldIndex - 1];
          },
          count: pattern_set.length,
          auto: tishiData.auto,
          pattern_set: pattern_set
        };
      };
      PokerSet.prototype.choose_hintIterator = function(codeList, pattern) {
        var tishiData = this.hintIterator(pattern, codeList);
        if (null == tishiData) return;
        if (tishiData.pattern_set.length > 0) {
          tishiData.pattern_set.sort(function(a, b) {
            return b.card_cnt - a.card_cnt;
          });
          var max_cnt = tishiData.pattern_set[0].card_cnt;
          var set = [];
          for (var i = 0; i < tishiData.pattern_set.length; i++) {
            var pattern_1 = tishiData.pattern_set[i];
            pattern_1.card_cnt == max_cnt && set.push(pattern_1);
          }
          tishiData.pattern_set = set;
          tishiData.pattern_set.sort(function(a, b) {
            return poker_data_1.DouDiZhuCardCommon.tishi[b.type] - poker_data_1.DouDiZhuCardCommon.tishi[a.type];
          });
          return tishiData.pattern_set[0];
        }
        return {
          cards: codeList,
          card_cnt: codeList.length,
          type: poker_pattern_1.PatternType.type_unknow
        };
      };
      PokerSet.prototype.proc_sanzhang_tail_cards = function(hint_pattern, comp_pattern, cards) {
        var with_cnt = hint_pattern.card_cnt / 3 * 2;
        var with_type;
        if (comp_pattern) {
          if (comp_pattern.type == poker_pattern_1.PatternType.type_sandaiyi && 3 == comp_pattern.card_cnt) return;
          if (comp_pattern.type == poker_pattern_1.PatternType.type_feiji && 3 * with_cnt == comp_pattern.card_cnt) return;
        }
        hint_pattern.type != poker_pattern_1.PatternType.type_sandaiyi && hint_pattern.type != poker_pattern_1.PatternType.type_feiji && console.error(new Error("\u53ea\u5904\u74063\u5f20\u6216\u98de\u673a\u7684\u5e26\u724c").stack);
        if (comp_pattern) if (comp_pattern.type == poker_pattern_1.PatternType.type_sandaiyi) {
          5 != comp_pattern.card_cnt && 4 != comp_pattern.card_cnt && console.error(new Error("\u53ea\u5904\u74063\u5e261\u5bf9\u6216\u4e09\u5e26\u5355\u5f20\u7684\u5e26\u724c").stack);
          with_type = (5 == comp_pattern.card_cnt, poker_pattern_1.PatternType.type_danpai);
        } else {
          comp_pattern.card_cnt <= 3 * with_cnt && console.error(new Error("\u6ca1\u6709\u724c\u7ed9\u98de\u673a\u5f53\u7fc5\u8180\u4e86").stack);
          var tail_cards_cnt = comp_pattern.card_cnt - 3 * with_cnt;
          with_type = tail_cards_cnt / with_cnt;
          tail_cards_cnt % with_cnt != 0 || with_type != poker_pattern_1.PatternType.type_danpai && with_type != poker_pattern_1.PatternType.type_duizi || console.error(new Error("tail_cards_cnt%with_cnt == 0 && (with_type == PatternType.type_danpai || with_type == PatternType.type_duizi)").stack);
        } else with_type = poker_pattern_1.PatternType.type_danpai;
        var rest_cards = [];
        var used_cards = [];
        for (var i = 0; i < hint_pattern.cards.length; i++) {
          var card = hint_pattern.cards[i];
          used_cards[card] = true;
        }
        for (var i = 0; i < cards.length; i++) {
          var card = cards[i];
          used_cards[card] || rest_cards.push(card);
        }
        rest_cards.sort(function(a, b) {
          return a - b;
        });
        if (rest_cards.length >= 2 && poker_data_1.Card.makeCardByCode(rest_cards[rest_cards.length - 1]).index == poker_data_1.CardNameIndex.card_big_king && poker_data_1.Card.makeCardByCode(rest_cards[rest_cards.length - 2]).index == poker_data_1.CardNameIndex.card_small_king) {
          rest_cards.splice(rest_cards.length - 1, 1);
          rest_cards.splice(rest_cards.length - 1);
        }
        if (rest_cards.length >= with_cnt * with_type) {
          var parseResult = poker_data_1.DouDiZhuCardCommon.InitParse(rest_cards);
          var tailData = this.get_tail_cards(parseResult.card_type_stat, parseResult.card_name_info, parseResult.card_name_stat, with_cnt, with_type);
          if (tailData.tail_type && tailData.tail_cards.length / tailData.tail_type == with_cnt) {
            for (var i = 0; i < tailData.tail_cards.length; i++) {
              var card = tailData.tail_cards[i];
              hint_pattern.cards.push(card);
            }
            hint_pattern.card_cnt += tailData.tail_cards.length;
            hint_pattern.type == poker_pattern_1.PatternType.type_sandaiyi && hint_pattern.parseDispType();
          }
        }
      };
      PokerSet.prototype.proc_sizhang_tail_cards = function(hint_pattern, comp_pattern, cards, with_type) {
        var with_cnt = hint_pattern.card_cnt / 4 * 3;
        if (comp_pattern && comp_pattern.type != poker_pattern_1.PatternType.type_sidaier) return;
        comp_pattern ? comp_pattern.type == poker_pattern_1.PatternType.type_sidaier && (with_type = 6 == comp_pattern.card_cnt ? poker_pattern_1.PatternType.type_danpai : poker_pattern_1.PatternType.type_duizi) : with_type = with_type || poker_pattern_1.PatternType.type_duizi;
        var rest_cards = [];
        var used_cards = [];
        for (var i = 0; i < hint_pattern.cards.length; i++) {
          var card = hint_pattern.cards[i];
          used_cards[card] = true;
        }
        for (var i = 0; i < cards.length; i++) {
          var card = cards[i];
          used_cards[card] || rest_cards.push(card);
        }
        rest_cards.sort(function(a, b) {
          return a - b;
        });
        if (rest_cards.length >= 2 && poker_data_1.Card.makeCardByCode(rest_cards[rest_cards.length - 1]).index == poker_data_1.CardNameIndex.card_big_king && poker_data_1.Card.makeCardByCode(rest_cards[rest_cards.length - 2]).index == poker_data_1.CardNameIndex.card_small_king) {
          rest_cards.splice(rest_cards.length - 1, 1);
          rest_cards.splice(rest_cards.length - 1);
        }
        if (rest_cards.length >= with_cnt * with_type) {
          var parseResult = poker_data_1.DouDiZhuCardCommon.InitParse(rest_cards);
          var tailData = this.get_tail_cards(parseResult.card_type_stat, parseResult.card_name_info, parseResult.card_name_stat, with_cnt, with_type);
          if (tailData.tail_type && tailData.tail_cards.length / tailData.tail_type == with_cnt) {
            for (var i = 0; i < tailData.tail_cards.length; i++) {
              var card = tailData.tail_cards[i];
              hint_pattern.cards.push(card);
            }
            hint_pattern.card_cnt += tailData.tail_cards.length;
            hint_pattern.type = poker_pattern_1.PatternType.type_sidaier;
            hint_pattern.parseDispType();
            return;
          }
        }
        comp_pattern || with_type != poker_pattern_1.PatternType.type_duizi || this.proc_sizhang_tail_cards(hint_pattern, comp_pattern, cards, poker_pattern_1.PatternType.type_danpai);
      };
      PokerSet.prototype.get_tail_cards = function(card_type_stat, card_name_info, card_name_stat, with_cnt, with_type) {
        var tail_cards = [];
        var tail_type = null;
        var sort_name = function(name1, name2) {
          var get_name = function(name) {
            if (name == poker_data_1.CardNameIndex.card_A) return poker_data_1.CardNameIndex.card_K + .1;
            if (name == poker_data_1.CardNameIndex.card_2) return poker_data_1.CardNameIndex.card_K + .2;
          };
          name1 = get_name(name1);
          name2 = get_name(name2);
          return name1 - name2;
        };
        var straight_cards = [];
        var remain_single_cards = [];
        var remain_pair_cards = [];
        var single_type_stat = card_type_stat[poker_pattern_1.PatternType.type_danpai];
        single_type_stat.length > 0 && this.porc_serial_cards(card_name_stat, poker_pattern_1.PatternType.type_danpai, single_type_stat.length, single_type_stat, 5, straight_cards, remain_single_cards);
        var used_pair_cards = [];
        for (var i = 0; i < straight_cards.length; i++) {
          var cards = straight_cards[i];
          for (var j = 0; j < cards.length; j++) {
            var name = cards[j];
            if (2 == card_name_stat[name]) {
              used_pair_cards[name] = {
                index: i,
                count: 1
              };
              remain_single_cards.push(name);
            } else if (3 == card_name_stat[name]) {
              used_pair_cards[name] = {
                index: i,
                count: 2
              };
              remain_pair_cards.push(name);
            }
          }
        }
        var pair_type_stat = [];
        for (var i = 0; i < card_type_stat[poker_pattern_1.PatternType.type_duizi].length; i++) {
          var name = card_type_stat[poker_pattern_1.PatternType.type_duizi][i];
          used_pair_cards[name] || 2 != card_name_stat[name] || pair_type_stat.push(name);
        }
        var straight_pair_cards = [];
        var plain_pair_cards = [];
        pair_type_stat.length > 0 && this.porc_serial_cards(card_name_stat, poker_pattern_1.PatternType.type_duizi, pair_type_stat.length, pair_type_stat, 2, straight_pair_cards, plain_pair_cards);
        for (var i = 0; i < plain_pair_cards.length; i++) {
          var name = plain_pair_cards[i];
          remain_pair_cards.push(name);
        }
        remain_pair_cards.sort(sort_name);
        for (var i = 0; i < straight_pair_cards.length; i++) {
          var names = straight_pair_cards[i];
          for (var j = 0; j < names.length; j++) {
            var name = names[j];
            remain_pair_cards.push(name);
          }
        }
        var remain_three_cards = [];
        for (var i = 0; i < card_type_stat[poker_pattern_1.PatternType.type_sandaiyi].length; i++) {
          var name = card_type_stat[poker_pattern_1.PatternType.type_sandaiyi][i];
          used_pair_cards[name] || 3 != card_name_stat[name] || remain_three_cards.push(name);
        }
        if (with_type == poker_pattern_1.PatternType.type_danpai) {
          tail_type = poker_pattern_1.PatternType.type_danpai;
          remain_single_cards.sort(sort_name);
          var singleList = [];
          for (var i = 0; i < remain_single_cards.length; i++) {
            var name = remain_single_cards[i];
            var tmp_code = card_name_info[name][0];
            tail_cards.push(tmp_code);
            singleList.push(tmp_code);
            if (tail_cards.length >= with_cnt) break;
          }
          if (tail_cards.length < with_cnt) for (var i = 0; i < remain_pair_cards.length; i++) {
            var name = remain_pair_cards[i];
            if (tail_cards.length >= with_cnt) break;
            var tmp_code = card_name_info[name][0];
            var tmp_value = poker_data_1.Card.codeToValue(tmp_code);
            if (tail_cards.length + 1 == with_cnt && singleList.length > 0 && poker_data_1.Card.codeToValue(singleList[singleList.length - 1]) > tmp_value) {
              tail_cards.pop();
              singleList.pop();
            }
            tail_cards.push(tmp_code);
            tail_cards.length < with_cnt && tail_cards.push(card_name_info[name][1]);
          }
          if (tail_cards.length < with_cnt) for (var i = 0; i < remain_three_cards.length; i++) {
            var name = remain_three_cards[i];
            if (tail_cards.length >= with_cnt) break;
            tail_cards.push(card_name_info[name][0]);
            if (tail_cards.length < with_cnt) {
              tail_cards.push(card_name_info[name][1]);
              tail_cards.length < with_cnt && tail_cards.push(card_name_info[name][2]);
            }
          }
          if (tail_cards.length < with_cnt) for (var i = 0; i < straight_cards.length; i++) {
            var staight_names = straight_cards[i];
            for (var j = 0; j < staight_names.length; j++) {
              var name = staight_names[j];
              tail_cards.push(card_name_info[name][card_name_info[name].length - 1]);
              if (tail_cards.length >= with_cnt) break;
            }
            if (tail_cards.length >= with_cnt) break;
          }
        } else if (with_type == poker_pattern_1.PatternType.type_duizi) {
          tail_type = poker_pattern_1.PatternType.type_duizi;
          for (var i = 0; i < remain_pair_cards.length; i++) {
            var name = remain_pair_cards[i];
            if (tail_cards.length >= 2 * with_cnt) break;
            tail_cards.push(card_name_info[name][0]);
            tail_cards.push(card_name_info[name][1]);
          }
          if (tail_cards.length < 2 * with_cnt) for (var i = 0; i < remain_three_cards.length; i++) {
            var name = remain_three_cards[i];
            if (tail_cards.length >= 2 * with_cnt) break;
            tail_cards.push(card_name_info[name][0]);
            tail_cards.push(card_name_info[name][1]);
          }
        }
        return {
          tail_cards: tail_cards,
          tail_type: tail_type
        };
      };
      PokerSet.prototype.porc_serial_cards = function(card_name_stat, type, type_size, type_stat, least_repeat_cnt, straight_names, remain_names) {
        var beg = 1;
        if (type_size >= least_repeat_cnt) for (var i = 1; i <= type_size - 1; i++) if (poker_data_1.Card.indexToValue(type_stat[i - 1]) + 1 != poker_data_1.Card.indexToValue(type_stat[i - 1 + 1])) {
          if (i - beg + 1 >= least_repeat_cnt) {
            straight_names.push([]);
            for (var j = beg; j <= i; j++) straight_names[straight_names.length - 1].push(type_stat[j - 1]);
          } else for (var j = beg; j <= i; j++) card_name_stat[type_stat[j - 1]] == type && remain_names.push(type_stat[j - 1]);
          beg = i + 1;
          if (type_size - beg + 1 < least_repeat_cnt) break;
        }
        if (type_size - beg + 1 >= least_repeat_cnt) {
          straight_names.push([]);
          for (var i = beg; i <= type_size; i++) straight_names[straight_names.length - 1].push(type_stat[i - 1]);
        } else for (var i = beg; i <= type_size; i++) card_name_stat[type_stat[i - 1]] == type && remain_names.push(type_stat[i - 1]);
      };
      PokerSet = __decorate([ ccclass ], PokerSet);
      return PokerSet;
    }();
    exports.PokerSet = PokerSet;
    cc._RF.pop();
  }, {
    "./poker_data": "poker_data",
    "./poker_pattern": "poker_pattern",
    "./poker_recommend": "poker_recommend"
  } ],
  poker_myseat_pokers: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "44ef8pxj51Df6xtZNj7AfFA", "poker_myseat_pokers");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_seat_pokers_base_1 = require("./poker_seat_pokers_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var PokerTableMySeatPokers = function(_super) {
      __extends(PokerTableMySeatPokers, _super);
      function PokerTableMySeatPokers() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.useDynamicOffset = false;
        _this.minOffset = cc.Vec2.ZERO;
        _this.maxOffset = cc.Vec2.ZERO;
        _this.isPlayingSelectPokerAnim = false;
        _this.mFirstHoverPoker = null;
        _this.mLastHoverPoker = null;
        _this.m_sortedByZIndexPokerList = [];
        _this.m_selectTimeIndex = 0;
        _this.custom_on_finish_drag_pokers_fun = null;
        _this.on_finish_drag_pokers_reselect_fun = null;
        _this.on_select_pokers_changed = null;
        _this.selectOffest = cc.v2(0, 30);
        _this.m_originalInterval = null;
        return _this;
      }
      PokerTableMySeatPokers.prototype.getOriginalInterval = function() {
        return this.m_originalInterval;
      };
      PokerTableMySeatPokers.prototype.getIntervalX = function(totalColCount, totalRowCount) {
        var intervalX = _super.prototype.getIntervalX.call(this, totalColCount, totalRowCount);
        if (this.useDynamicOffset && totalColCount > 1) {
          var dis = this.getOriginalInterval().x * (this.maxColCount - 1);
          intervalX = dis / (totalColCount - 1);
          intervalX = Math.max(this.minOffset.x, intervalX);
          intervalX = Math.min(this.maxOffset.x, intervalX);
        }
        return intervalX;
      };
      PokerTableMySeatPokers.prototype.getIntervalY = function(totalColCount, totalRowCount) {
        var intervalY = _super.prototype.getIntervalY.call(this, totalColCount, totalRowCount);
        if (this.useDynamicOffset && totalRowCount > 1) {
          var dis = this.getOriginalInterval().y * (this.maxRowCount - 1);
          intervalY = dis / (totalRowCount - 1);
          intervalY = Math.max(this.minOffset.y, intervalY);
          intervalY = Math.min(this.maxOffset.y, intervalY);
        }
        return intervalY;
      };
      PokerTableMySeatPokers.prototype.onLoad = function() {
        this.m_originalInterval = cc.v2(this.intervalX, this.intervalX);
      };
      PokerTableMySeatPokers.prototype.getSelectedOffsetPos = function() {
        return this.selectOffest;
      };
      PokerTableMySeatPokers.prototype.genTimeSelectIndex = function() {
        return ++this.m_selectTimeIndex;
      };
      PokerTableMySeatPokers.prototype.genSortedByZIndexPokerList = function() {
        var pokers = this.pokers;
        var newList = [];
        for (var index = 0; index < this.pokers.length; index++) newList.push(pokers[index]);
        newList.sort(function(a, b) {
          return b.node.zIndex - a.node.zIndex;
        });
        return newList;
      };
      PokerTableMySeatPokers.prototype.findTouchedPoker = function(touch) {
        var sortedByZIndexPokerList = this.m_sortedByZIndexPokerList;
        for (var index = 0; index < sortedByZIndexPokerList.length; index++) {
          var element = sortedByZIndexPokerList[index];
          if (element.isTouchAtPoker(touch)) return element;
        }
        return null;
      };
      PokerTableMySeatPokers.prototype.genPoker = function(code, params) {
        var poker = _super.prototype.genPoker.call(this, code, params);
        poker.setClickListener(this.on_click, this);
        poker.setTouchStartListener(this.on_touch_start, this);
        poker.setTouchMoveListener(this.on_touch_move, this);
        poker.setTouchEndListener(this.on_touch_end, this);
        poker.setTouchCancelListener(this.on_touch_cancel, this);
        return poker;
      };
      PokerTableMySeatPokers.prototype.on_touch_start = function(poker, event) {
        this.m_sortedByZIndexPokerList = this.genSortedByZIndexPokerList();
        if (this.isPlayingSelectPokerAnim) return;
        this.on_press(poker);
      };
      PokerTableMySeatPokers.prototype.on_touch_move = function(poker, event) {
        if (this.isPlayingSelectPokerAnim) return;
        var touchedPoker = this.findTouchedPoker(event.touch);
        null != touchedPoker && this.on_drag(touchedPoker);
      };
      PokerTableMySeatPokers.prototype.on_touch_end = function(poker, event) {
        if (this.isPlayingSelectPokerAnim) return;
        this.on_press_up(poker);
      };
      PokerTableMySeatPokers.prototype.on_touch_cancel = function(poker, event) {
        if (this.isPlayingSelectPokerAnim) return;
        var touchedPoker = this.findTouchedPoker(event.touch);
        null != touchedPoker ? this.on_press_up(touchedPoker) : this.on_press_up(this.mFirstHoverPoker);
      };
      PokerTableMySeatPokers.prototype.on_click = function(poker) {};
      PokerTableMySeatPokers.prototype.on_drag = function(poker) {
        null == this.mFirstHoverPoker && (this.mFirstHoverPoker = poker);
        this.mLastHoverPoker = poker;
        this.on_draging_pokers();
      };
      PokerTableMySeatPokers.prototype.on_press = function(poker) {
        this.mFirstHoverPoker = poker;
        this.mLastHoverPoker = poker;
        this.on_draging_pokers();
      };
      PokerTableMySeatPokers.prototype.on_press_up = function(poker) {
        if (null != poker) {
          null == this.mFirstHoverPoker && (this.mFirstHoverPoker = poker);
          null == this.mLastHoverPoker && (this.mLastHoverPoker = poker);
        }
        if (null != this.mLastHoverPoker) {
          this.on_draging_pokers();
          this.on_finish_drag_pokers();
        }
      };
      PokerTableMySeatPokers.prototype.check_drag_mark = function() {
        var opt = {
          startPoker: null,
          isLeftPokersUnMark: false
        };
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          opt = this.check_drag_mark_singel(poker, opt.isLeftPokersUnMark, opt.startPoker);
        }
      };
      PokerTableMySeatPokers.prototype.check_drag_mark_singel = function(poker, isLeftPokersUnMark, startPoker) {
        if (isLeftPokersUnMark) poker.marked = false; else if (poker == this.mFirstHoverPoker) {
          poker.marked = true;
          null != startPoker || poker == this.mLastHoverPoker ? isLeftPokersUnMark = true : startPoker = poker;
        } else if (poker == this.mLastHoverPoker) {
          poker.marked = true;
          null != startPoker || poker == this.mFirstHoverPoker ? isLeftPokersUnMark = true : startPoker = poker;
        } else poker.marked = null != startPoker;
        return {
          isLeftPokersUnMark: isLeftPokersUnMark,
          startPoker: startPoker
        };
      };
      PokerTableMySeatPokers.prototype.check_poker_selected_state = function() {
        var markedList = [];
        var selectedList = [];
        var real_selectedList = [];
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          if (poker.marked && !poker.disabled) {
            poker.selected = !poker.selected;
            markedList.push(poker);
            if (poker.selected) {
              selectedList.push(poker);
              poker.selected_time = this.genTimeSelectIndex();
            } else poker.selected_time = 0;
            poker.real_selected && real_selectedList.push(poker);
          }
        }
        return {
          markedList: markedList,
          selectedList: selectedList,
          real_selectedList: real_selectedList
        };
      };
      PokerTableMySeatPokers.prototype.on_draging_pokers = function() {
        this.check_drag_mark();
        this.refreshPokersMarkState();
      };
      PokerTableMySeatPokers.prototype.on_finish_drag_pokers = function() {
        var self = this;
        this.mFirstHoverPoker = null;
        this.mLastHoverPoker = null;
        var opt = this.check_poker_selected_state();
        this.markAllPokers(false);
        this.refreshPokersMarkState();
        if (null != this.custom_on_finish_drag_pokers_fun) return this.custom_on_finish_drag_pokers_fun();
        if (opt.markedList.length > 1 && opt.selectedList.length > 1 && this.on_finish_drag_pokers_reselect_fun) this.on_finish_drag_pokers_reselect_fun(); else {
          this.isPlayingSelectPokerAnim = true;
          this.refreshPokerSelectState(true, function() {
            self.isPlayingSelectPokerAnim = false;
          });
        }
      };
      PokerTableMySeatPokers.prototype.markAllPokers = function(isMark) {
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          poker.marked = isMark;
        }
      };
      PokerTableMySeatPokers.prototype.refreshPokersMarkState = function() {
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          this.setPokerGrayColor(poker, poker.marked);
        }
      };
      PokerTableMySeatPokers.prototype.setPokerGrayColor = function(poker, gray) {
        poker.spriteFace.node.color = gray ? cc.color(128, 128, 128, 255) : poker.original_color;
      };
      PokerTableMySeatPokers.prototype.playSelectPokerAnim = function(node, original_pos, selected, withAnim, onFinish) {
        withAnim = false;
        var selectedOffsetPos = this.getSelectedOffsetPos();
        var targetPos = cc.v2(original_pos.x, original_pos.y);
        selected && (targetPos.y += selectedOffsetPos.y);
        if (withAnim) {
          var duration = .1;
          var callFun = cc.callFunc(function() {
            onFinish && onFinish();
          }.bind(this));
          var move = cc.moveTo(duration, targetPos);
          var seq = cc.sequence([ move, callFun ]);
          node.runAction(seq);
        } else {
          node.position = targetPos;
          null != onFinish && onFinish();
        }
      };
      PokerTableMySeatPokers.prototype.refreshPokerSelectState = function(withAnim, onFinish) {
        withAnim = false;
        var self = this;
        var pokers = this.pokers;
        var finishCount = 0;
        var totalCount = pokers.length;
        var _loop_1 = function(i) {
          var poker = pokers[i];
          var selected = poker.selected;
          this_1.playSelectPokerAnim(poker.node, poker.original_pos, selected, withAnim, function() {
            if (selected) {
              poker.real_selected = true;
              poker.real_selected_time = self.genTimeSelectIndex();
            } else {
              poker.real_selected = false;
              poker.real_selected_time = 0;
            }
            finishCount += 1;
            if (finishCount == totalCount) {
              onFinish && onFinish();
              self.on_select_pokers_changed && self.on_select_pokers_changed();
            }
          });
        };
        var this_1 = this;
        for (var i = 0; i < totalCount; i++) _loop_1(i);
      };
      PokerTableMySeatPokers.prototype.setCustomOnFinishDragFunc = function(callback) {
        this.custom_on_finish_drag_pokers_fun = callback;
      };
      PokerTableMySeatPokers.prototype.setCustomOnFinishDragPokerReselectFunc = function(callback) {
        this.on_finish_drag_pokers_reselect_fun = callback;
      };
      PokerTableMySeatPokers.prototype.setCustomOnSelectPokersChanged = function(callback) {
        this.on_select_pokers_changed = callback;
      };
      PokerTableMySeatPokers.prototype.resetPokers = function(withAnim, onFinish, params) {
        withAnim = false;
        var self = this;
        this.selectAllPokers(false);
        this.refreshPokersMarkState();
        if (params) if (params.ignoreResetDisable) ; else {
          this.enabledAllPokers();
          this.refreshPokerDisableState();
        } else {
          this.enabledAllPokers();
          this.refreshPokerDisableState();
        }
        withAnim && (this.isPlayingSelectPokerAnim = true);
        this.repostionPokers(withAnim, function() {
          self.isPlayingSelectPokerAnim = false;
          onFinish && onFinish();
          self.on_select_pokers_changed && self.on_select_pokers_changed();
        });
      };
      PokerTableMySeatPokers.prototype.repostionPokers = function(withAnim, onFinish) {
        withAnim = false;
        var pokers = this.pokers;
        var duration = .2;
        var totalCount = pokers.length;
        var layoutData = this.calcLayoutPosAndPriority(totalCount);
        var dataList = layoutData.dataList;
        var finishCount = 0;
        var _loop_2 = function(i) {
          var poker = pokers[i];
          var data = dataList[i];
          if (withAnim) {
            poker.original_pos = data.pos;
            var moveAnim = cc.moveTo(duration, data.pos);
            var callFun = cc.callFunc(function() {
              poker.node.zIndex = data.priority;
              finishCount++;
              finishCount == totalCount && onFinish && onFinish();
            });
            var seq = cc.sequence([ moveAnim, callFun ]);
            poker.node.runAction(seq);
          } else {
            poker.node.position = data.pos;
            poker.original_pos = data.pos;
            poker.node.zIndex = data.priority;
          }
        };
        for (var i = 0; i < totalCount; i++) _loop_2(i);
        withAnim || onFinish && onFinish();
      };
      PokerTableMySeatPokers.prototype.selectPokers = function(codeList, idList) {
        var selectPokers = [];
        var waitSelectedCodeCountTable = [];
        var selectedCodeCountTable = [];
        var pokers = this.pokers;
        var useIdFind = false;
        var tmpList = codeList;
        if (idList && idList.length > 0) {
          useIdFind = true;
          tmpList = idList;
        }
        for (var i = 0; i < tmpList.length; i++) {
          var index = tmpList[i];
          waitSelectedCodeCountTable[index] || (waitSelectedCodeCountTable[index] = 0);
          waitSelectedCodeCountTable[index] = waitSelectedCodeCountTable[index] + 1;
          selectedCodeCountTable[index] = 0;
        }
        this.selectAllPokers(false);
        for (var i = 0; i < tmpList.length; i++) {
          var index = tmpList[i];
          for (var j = 0; j < pokers.length; j++) {
            var poker = pokers[j];
            var pokerIndex = poker.code;
            useIdFind && (pokerIndex = poker.id);
            if (pokerIndex == index && !poker.selected && waitSelectedCodeCountTable[index] > selectedCodeCountTable[index]) {
              selectedCodeCountTable[index] = selectedCodeCountTable[index] + 1;
              poker.selected = true;
              poker.selected_time = this.genTimeSelectIndex();
              selectPokers.push(poker);
            }
          }
        }
        return selectPokers;
      };
      PokerTableMySeatPokers.prototype.selectPoker = function(poker, select) {
        if (select) {
          poker.selected = true;
          poker.selected_time = this.genTimeSelectIndex();
          poker.real_selected = true;
          poker.real_selected_time = this.genTimeSelectIndex();
        } else {
          poker.selected = false;
          poker.selected_time = 0;
          poker.real_selected = false;
          poker.real_selected_time = 0;
        }
        poker.marked = false;
      };
      PokerTableMySeatPokers.prototype.selectAllPokers = function(isSelect) {
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          this.selectPoker(poker, isSelect);
        }
      };
      PokerTableMySeatPokers.prototype.getSelectedPokers = function() {
        var selected_pokerList = [];
        var selected_idList = [];
        var selected_codeList = [];
        var real_selected_pokerList = [];
        var real_selected_idList = [];
        var real_selected_codeList = [];
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          if (poker.selected) {
            selected_pokerList.push(poker);
            selected_idList.push(poker.id);
            selected_codeList.push(poker.code);
          }
          if (poker.real_selected) {
            real_selected_pokerList.push(poker);
            real_selected_idList.push(poker.id);
            real_selected_codeList.push(poker.code);
          }
        }
        return {
          selected_pokerList: selected_pokerList,
          selected_codeList: selected_codeList,
          selected_idList: selected_idList,
          real_selected_pokerList: real_selected_pokerList,
          real_selected_codeList: real_selected_codeList,
          real_selected_idList: real_selected_idList
        };
      };
      PokerTableMySeatPokers.prototype.enabledAllPokers = function() {
        var enabledPokers = [];
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          poker.disabled = false;
          enabledPokers.push(poker);
        }
        return enabledPokers;
      };
      PokerTableMySeatPokers.prototype.disablePokers = function(codeList, idList) {
        var disabledPokers = [];
        var waitdisabledCodeCountTable = [];
        var disabledCodeCountTable = [];
        var pokers = this.pokers;
        var useIdFind = false;
        var tmpList = codeList;
        if (idList && idList.length > 0) {
          useIdFind = true;
          tmpList = idList;
        }
        for (var i = 0; i < tmpList.length; i++) {
          var index = tmpList[i];
          waitdisabledCodeCountTable[index] || (waitdisabledCodeCountTable[index] = 0);
          waitdisabledCodeCountTable[index] = waitdisabledCodeCountTable[index] + 1;
          disabledCodeCountTable[index] = 0;
        }
        this.enabledAllPokers();
        for (var i = 0; i < tmpList.length; i++) {
          var index = tmpList[i];
          for (var j = 0; j < pokers.length; j++) {
            var poker = pokers[j];
            var pokerIndex = poker.code;
            useIdFind && (pokerIndex = poker.id);
            if (pokerIndex == index && !poker.disabled && waitdisabledCodeCountTable[index] > disabledCodeCountTable[index]) {
              disabledCodeCountTable[index] = disabledCodeCountTable[index] + 1;
              poker.disabled = true;
              disabledPokers.push(poker);
            }
          }
        }
        return disabledPokers;
      };
      PokerTableMySeatPokers.prototype.refreshPokerDisableState = function() {
        var pokers = this.pokers;
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          poker.enableClick(!poker.disabled);
        }
      };
      __decorate([ property(cc.Boolean) ], PokerTableMySeatPokers.prototype, "useDynamicOffset", void 0);
      __decorate([ property(cc.Vec2) ], PokerTableMySeatPokers.prototype, "minOffset", void 0);
      __decorate([ property(cc.Vec2) ], PokerTableMySeatPokers.prototype, "maxOffset", void 0);
      __decorate([ property(cc.Vec2) ], PokerTableMySeatPokers.prototype, "selectOffest", void 0);
      PokerTableMySeatPokers = __decorate([ ccclass, menu("custom/PokerTableMySeatPokers") ], PokerTableMySeatPokers);
      return PokerTableMySeatPokers;
    }(poker_seat_pokers_base_1.default);
    exports.default = PokerTableMySeatPokers;
    cc._RF.pop();
  }, {
    "./poker_seat_pokers_base": "poker_seat_pokers_base"
  } ],
  poker_node_set: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a23cbU/qiFAfqgGc+DruJBs", "poker_node_set");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_node_1 = require("./poker_node");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PokerNodeSet = function(_super) {
      __extends(PokerNodeSet, _super);
      function PokerNodeSet() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.pokerNodes = [];
        return _this;
      }
      PokerNodeSet.prototype.playerCardAnim = function(hands, number, toCount) {
        var _this = this;
        var _loop_1 = function(idx) {
          var hand = hands[idx];
          var tempTransform = this_1.getTransFromData(toCount, idx);
          var targetPos;
          hand.parent.convertToNodeSpaceAR(tempTransform.worldPos, targetPos);
          this_1.scheduleOnce(function() {
            _this.playAnim(hand, targetPos, tempTransform.scale, tempTransform.angle, .2, 0, null, cc.easeCubicActionInOut());
          }, .1 * idx);
        };
        var this_1 = this;
        for (var idx = 0; idx < toCount; idx++) _loop_1(idx);
      };
      PokerNodeSet.prototype.getTransFromData = function(showCount, index) {
        var pokernode = this.pokerNodes[showCount];
        if (pokernode) return pokernode.transformDataList[index];
        return null;
      };
      PokerNodeSet.prototype.playAnim = function(node, targetPos, targetScale, targetAngle, duration, delay, onFinish, easingType) {
        var self = this;
        var do_fun = function() {
          var moveAnim = cc.moveTo(duration, targetPos);
          var rotaAnim = cc.rotateTo(duration, -targetAngle);
          var scaleAnim = cc.scaleTo(duration, targetScale);
          if (easingType) {
            moveAnim = moveAnim.easing(easingType);
            rotaAnim = rotaAnim.easing(easingType);
            scaleAnim = scaleAnim.easing(easingType);
          }
          var tmpFun = function() {
            onFinish && onFinish();
          }.bind(self);
          var callFun = cc.callFunc(tmpFun);
          var swap = cc.spawn([ moveAnim, rotaAnim, scaleAnim ]);
          var seq = cc.sequence([ swap, callFun ]);
          node.stopAllActions();
          node.runAction(seq);
        };
        delay && delay > 0 ? self.scheduleOnce(function() {
          do_fun();
        }, delay) : do_fun();
      };
      __decorate([ property([ poker_node_1.PokerNode ]) ], PokerNodeSet.prototype, "pokerNodes", void 0);
      PokerNodeSet = __decorate([ ccclass ], PokerNodeSet);
      return PokerNodeSet;
    }(cc.Component);
    exports.PokerNodeSet = PokerNodeSet;
    cc._RF.pop();
  }, {
    "./poker_node": "poker_node"
  } ],
  poker_node: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5d6d2GwBjJASqlI2rn37K4x", "poker_node");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PokerNode = function(_super) {
      __extends(PokerNode, _super);
      function PokerNode() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.mTransformDataList = null;
        return _this;
      }
      PokerNode.prototype.onLoad = function() {
        if (!this.mTransformDataList) {
          var count = this.node.childrenCount;
          for (var idx = 0; idx < count; idx++) {
            var node = this.node.getChildByName("p" + (idx + 1));
            var data = {};
            data.localPos = node.position;
            data.angle = node.angle + node.parent.angle;
            data.scale = node.scale + node.parent.scale;
            this.mTransformDataList.push(data);
          }
        }
      };
      Object.defineProperty(PokerNode.prototype, "transformDataList", {
        get: function() {
          return this.mTransformDataList;
        },
        enumerable: true,
        configurable: true
      });
      PokerNode = __decorate([ ccclass ], PokerNode);
      return PokerNode;
    }(cc.Component);
    exports.PokerNode = PokerNode;
    cc._RF.pop();
  }, {} ],
  poker_pattern: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2a9e6gpS4hH6LzvWUEioQZd", "poker_pattern");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_data_1 = require("./poker_data");
    var poker_recommend_1 = require("./poker_recommend");
    var recommend_tools_1 = require("./recommend_tools");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PatternType;
    (function(PatternType) {
      PatternType[PatternType["type_unknow"] = 0] = "type_unknow";
      PatternType[PatternType["type_danpai"] = 1] = "type_danpai";
      PatternType[PatternType["type_duizi"] = 2] = "type_duizi";
      PatternType[PatternType["type_sandaiyi"] = 3] = "type_sandaiyi";
      PatternType[PatternType["type_feiji"] = 4] = "type_feiji";
      PatternType[PatternType["type_shunzi"] = 5] = "type_shunzi";
      PatternType[PatternType["type_liandui"] = 6] = "type_liandui";
      PatternType[PatternType["type_zhadan"] = 7] = "type_zhadan";
      PatternType[PatternType["type_huojian"] = 8] = "type_huojian";
      PatternType[PatternType["type_sidaier"] = 9] = "type_sidaier";
    })(PatternType = exports.PatternType || (exports.PatternType = {}));
    var CardPattern = function() {
      function CardPattern() {
        this.cards = [];
        this.value = 0;
        this.type = PatternType.type_unknow;
        this.repeated_cnt = 1;
        this.card_cnt = 0;
        this.feijinum = 0;
      }
      CardPattern.newPattern = function(codeList) {
        var pattern = new CardPattern();
        if (pattern.parse(codeList)) return pattern;
        return null;
      };
      CardPattern.prototype.compable = function(pattern) {
        this.type <= PatternType.type_unknow && console.error(new Error("this.type=" + this.type + "<=PatternType.type_unknow").stack);
        pattern.type <= PatternType.type_unknow && console.error(new Error("pattern.type=" + pattern.type + "<=PatternType.type_unknow").stack);
        return this.type == PatternType.type_zhadan || this.type == PatternType.type_huojian || this.card_cnt == pattern.card_cnt && this.type == pattern.type;
      };
      CardPattern.prototype.le = function(pattern) {
        var cardTypeFactor = [ 0, 0, 0, 0, 0, 0, 0, 100, 200, 0 ];
        null == pattern && console.error(new Error("pattern=null").stack);
        this.compable(pattern) || console.error(new Error("\u4e0d\u53ef\u6bd4\u8f83\u7684\u724c\u578b").stack);
        var maxValue = recommend_tools_1.RecommendTools.Max(poker_data_1.Card.cardValueMap);
        this.value > maxValue && console.error(new Error("this.value > maxValue," + this.value).stack);
        pattern.value > maxValue && console.error(new Error("pattern.value > maxValue," + pattern.value).stack);
        return this.value + cardTypeFactor[this.type] <= pattern.value + cardTypeFactor[pattern.type];
      };
      CardPattern.prototype.parseDispType = function() {
        var dispTypeOfSingle = [ "one1", "one2", "one3", "one4", "one5", "one6", "one7", "one8", "one9", "one10", "one11", "one12", "one13", "one14", "one15" ];
        var dispTypeOfDouble = [ "dui1", "dui2", "dui3", "dui4", "dui5", "dui6", "dui7", "dui8", "dui9", "dui10", "dui11", "dui12", "dui13" ];
        this.type == PatternType.type_danpai ? this.disp_type = dispTypeOfSingle[poker_recommend_1.PokerRecommend.value2cardvalue(this.value)] : this.type == PatternType.type_duizi ? this.disp_type = dispTypeOfDouble[poker_recommend_1.PokerRecommend.value2cardvalue(this.value)] : this.type == PatternType.type_sandaiyi ? 3 == this.card_cnt ? this.disp_type = "sanzhang" : 4 == this.card_cnt ? this.disp_type = "sandaiyi" : 5 == this.card_cnt && (this.disp_type = "sandaier") : this.type == PatternType.type_shunzi ? this.disp_type = "shunzi" : this.type == PatternType.type_liandui ? this.disp_type = "liandui" : this.type == PatternType.type_zhadan ? this.disp_type = "zhadan" : this.type == PatternType.type_feiji ? this.disp_type = "feiji" : this.type == PatternType.type_huojian ? this.disp_type = "huojian" : this.type == PatternType.type_sidaier && (6 == this.card_cnt ? this.disp_type = "sidaier" : this.disp_type = "sidaisi");
      };
      CardPattern.prototype.parse = function(codeList) {
        if (null != codeList) {
          this.cards = [];
          for (var i = 0; i < codeList.length; i++) {
            var code = codeList[i];
            this.cards.push(code);
          }
        }
        this.card_cnt = this.cards.length;
        var card_type_vale = poker_recommend_1.PokerRecommend.get_cards_type(codeList);
        if (card_type_vale.card_type == PatternType.type_unknow) return false;
        this.type = card_type_vale.card_type;
        this.value = card_type_vale.card_value;
        this.feijinum = card_type_vale.feijinum;
        this.parseDispType();
        return true;
      };
      return CardPattern;
    }();
    exports.CardPattern = CardPattern;
    cc._RF.pop();
  }, {
    "./poker_data": "poker_data",
    "./poker_recommend": "poker_recommend",
    "./recommend_tools": "recommend_tools"
  } ],
  poker_recommend: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9f215Bj8AdGgYmER3XbjkGR", "poker_recommend");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var recommend_tools_1 = require("./recommend_tools");
    var poker_data_1 = require("./poker_data");
    var poker_pattern_1 = require("./poker_pattern");
    var PokerRecommend = function() {
      function PokerRecommend() {}
      PokerRecommend.find_all_sizhang = function(handcards) {
        var newcardvalue = PokerRecommend.codesToValues(handcards);
        var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcardvalue, 4);
        recommend_tools_1.RecommendTools.sort_ascend(fourl.removel);
        var zhadanl = [];
        for (var i = 0; i < fourl.removel.length; i++) {
          var element = fourl.removel[i];
          var t = PokerRecommend.value2have_idx(element, handcards);
          zhadanl.push(t);
        }
        return zhadanl;
      };
      PokerRecommend.find_all_danzhang = function(handcards) {
        var newcardvalue = PokerRecommend.codesToValues(handcards);
        var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcardvalue, 4);
        var threel = recommend_tools_1.RecommendTools.remove_count_same(fourl.surl, 3);
        var twol = recommend_tools_1.RecommendTools.remove_count_same(threel.surl, 2);
        recommend_tools_1.RecommendTools.sort_ascend(twol.surl);
        recommend_tools_1.RecommendTools.sort_ascend(threel.removel);
        recommend_tools_1.RecommendTools.sort_ascend(twol.removel);
        var danzhangidx = [];
        var twoidx = [];
        var threeidx = [];
        for (var i = 0; i < twol.surl.length; i++) {
          var element = twol.surl[i];
          var t = PokerRecommend.value2have_idx(element, handcards);
          danzhangidx.push(t);
        }
        for (var i = 0; i < twol.removel.length; i++) {
          var element = twol.removel[i];
          var t = PokerRecommend.value2have_point_idx([ element ], handcards);
          twoidx.push(t);
        }
        for (var i = 0; i < threel.removel.length; i++) {
          var element = threel.removel[i];
          var t = PokerRecommend.value2have_point_idx([ element ], handcards);
          threeidx.push(t);
        }
        return {
          all: recommend_tools_1.RecommendTools.TableAdd([ danzhangidx, twoidx, threeidx ], 3),
          danzhangidx: danzhangidx
        };
      };
      PokerRecommend.codesToValues = function(codeList) {
        if (recommend_tools_1.RecommendTools.is_null_or_empty(codeList)) return codeList;
        var valueList = [];
        for (var i = 0; i < codeList.length; i++) {
          var code = codeList[i];
          valueList.push(poker_data_1.Card.codeToValue(code));
        }
        return valueList;
      };
      PokerRecommend.first_tishi_card = function(handcard) {
        var danPaiTishi = PokerRecommend.find_all_danzhang(handcard);
        var tishiData = {
          tishi: [],
          auto: false
        };
        if (1 == handcard.length) {
          tishiData.tishi = [ handcard ];
          tishiData.auto = true;
        } else if (2 == handcard.length) if (PokerRecommend.duiZi(handcard)) {
          tishiData.tishi = [ handcard ];
          tishiData.auto = true;
        } else tishiData.tishi = PokerRecommend.find_tishi_type(handcard); else if (3 == handcard.length) if (null != PokerRecommend.sandaiyi(handcard)) {
          tishiData.tishi = [ handcard ];
          tishiData.auto = true;
        } else tishiData.tishi = PokerRecommend.find_tishi_type(handcard); else if (4 == handcard.length) if (null != PokerRecommend.zhadan(handcard) || null != PokerRecommend.sandaiyi(handcard)) {
          tishiData.tishi = [ handcard ];
          tishiData.auto = true;
        } else tishiData.tishi = PokerRecommend.find_tishi_type(handcard); else if (5 == handcard.length) {
          var wangzha = PokerRecommend.find_huojian(handcard);
          if (0 == wangzha.length && null != PokerRecommend.sandaiyi(handcard) || null != PokerRecommend.shunzi(handcard)) {
            tishiData.tishi = [ handcard ];
            tishiData.auto = true;
          } else tishiData.tishi = PokerRecommend.find_tishi_type(handcard);
        } else {
          var sizhang = PokerRecommend.find_all_sizhang(handcard);
          var wangzha = PokerRecommend.find_huojian(handcard);
          if (0 == sizhang.length && 0 == wangzha.length) if (null != PokerRecommend.shunzi(handcard) || null != PokerRecommend.liandui(handcard) || null != PokerRecommend.feiji(handcard)) {
            tishiData.tishi = [ handcard ];
            tishiData.auto = true;
          } else tishiData.tishi = PokerRecommend.find_tishi_type(handcard); else tishiData.tishi = PokerRecommend.find_tishi_type(handcard);
        }
        return tishiData;
      };
      PokerRecommend.feiji = function(codeList) {
        return null;
      };
      PokerRecommend.liandui = function(codeList) {
        var newcards = PokerRecommend.codesToValues(codeList);
        var twol = recommend_tools_1.RecommendTools.remove_count_same(newcards, 2);
        return recommend_tools_1.RecommendTools.table_value_shunzi(twol.removel) && twol.removel.length >= 2 && 0 == twol.surl.length ? recommend_tools_1.RecommendTools.sort_descend(twol.removel)[0] : null;
      };
      PokerRecommend.danPai = function(codeList) {
        return 1 == codeList.length ? PokerRecommend.codesToValues(codeList)[0] : null;
      };
      PokerRecommend.zhadan = function(codeList) {
        if (4 == codeList.length) {
          var newcards = PokerRecommend.codesToValues(codeList);
          return recommend_tools_1.RecommendTools.isSameValue(newcards) ? newcards[0] : null;
        }
        return null;
      };
      PokerRecommend.shunzi = function(codeList) {
        var newcards = PokerRecommend.codesToValues(codeList);
        if (recommend_tools_1.RecommendTools.table_value_shunzi(newcards) && codeList.length >= 5) {
          newcards = recommend_tools_1.RecommendTools.sort_descend(newcards);
          return newcards[0];
        }
        return null;
      };
      PokerRecommend.duiZi = function(codeList) {
        if (2 == codeList.length) {
          var values = PokerRecommend.codesToValues(codeList);
          return recommend_tools_1.RecommendTools.isSameValue(values) ? values[0] : null;
        }
        return null;
      };
      PokerRecommend.find_all_sanzhang = function(handcards) {
        var newcardvalue = PokerRecommend.codesToValues(handcards);
        var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcardvalue, 4);
        var threel = recommend_tools_1.RecommendTools.remove_count_same(fourl.surl, 3);
        var sanzhangl = [];
        recommend_tools_1.RecommendTools.sort_ascend(threel.removel);
        for (var i = 0; i < threel.removel.length; i++) {
          var element = threel.removel[i];
          var t = PokerRecommend.value2have_idx(element, handcards);
          sanzhangl.push(t);
        }
        return sanzhangl;
      };
      PokerRecommend.find_all_duizi = function(handcards) {
        var newcardvalue = PokerRecommend.codesToValues(handcards);
        var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcardvalue, 4);
        var threel = recommend_tools_1.RecommendTools.remove_count_same(fourl.surl, 3);
        var twol = recommend_tools_1.RecommendTools.remove_count_same(threel.surl, 2);
        recommend_tools_1.RecommendTools.sort_ascend(threel.removel);
        recommend_tools_1.RecommendTools.sort_ascend(twol.removel);
        var duizil = [];
        var sanzhangl = [];
        for (var i = 0; i < twol.removel.length; i++) {
          var element = twol.removel[i];
          var t = PokerRecommend.value2have_idx(element, handcards);
          duizil.push(t);
        }
        for (var i = 0; i < threel.removel.length; i++) {
          var element = threel.removel[i];
          var t = PokerRecommend.value2have_point_idx([ element, element ], handcards);
          sanzhangl.push(t);
        }
        return {
          all: recommend_tools_1.RecommendTools.two_table_add(duizil, sanzhangl),
          duizil: duizil
        };
      };
      PokerRecommend.value2have_point_idx = function(cardvaluel, handcard) {
        var pointl = [];
        var newhandcard = recommend_tools_1.RecommendTools.copy_array(handcard);
        for (var i = 0; i < cardvaluel.length; i++) {
          var element = cardvaluel[i];
          var havel = PokerRecommend.value2have_idx(element, newhandcard);
          if (havel.length > 0) for (var j = 0; j < newhandcard.length; j++) {
            var tmpE = newhandcard[j];
            if (tmpE == havel[0]) {
              pointl.push(tmpE);
              newhandcard.splice(j, 1);
            }
          }
        }
        pointl = recommend_tools_1.RecommendTools.sort_ascend(pointl);
        return pointl;
      };
      PokerRecommend.value2have_idx = function(cardvalue, handcard) {
        var haveCode = [];
        for (var i = 0; i < handcard.length; i++) {
          var code = handcard[i];
          poker_data_1.Card.codeToValue(code) == cardvalue && haveCode.push(code);
        }
        haveCode = recommend_tools_1.RecommendTools.sort_ascend(haveCode);
        return haveCode;
      };
      PokerRecommend.find_huojian = function(handcards) {
        return [];
      };
      PokerRecommend.sandaiyi = function(codeList) {
        var len = codeList.length;
        if (3 == len || 4 == len || 5 == len) {
          var values = PokerRecommend.codesToValues(codeList);
          var fourl = recommend_tools_1.RecommendTools.remove_count_same(values, 4);
          var threel = recommend_tools_1.RecommendTools.remove_count_same(values, 3);
          if (4 == len && 1 == fourl.removel.length) return null;
          return 1 == threel.removel.length ? threel.removel[0] : null;
        }
        return null;
      };
      PokerRecommend.find_tishi_type = function(handcard) {
        var threel = PokerRecommend.find_all_sanzhang(handcard);
        var allduizi = PokerRecommend.find_all_duizi(handcard);
        var alldanpai = PokerRecommend.find_all_danzhang(handcard);
        var zhadan = PokerRecommend.find_all_sizhang(handcard);
        var huojian = PokerRecommend.find_huojian(handcard);
        var feiji = [];
        var shunzi = [];
        var liandui = [];
        var threenum = threel.length;
        var shunzinum = 12;
        handcard.length < 12 && handcard.length > 4 ? shunzinum = handcard.length : handcard.length < 5 && (shunzinum = 0);
        var duizinum = allduizi.all.length;
        while (threenum > 1 && 0 == feiji.length) {
          feiji = PokerRecommend.find_all_feiji(handcard, threenum);
          threenum -= 1;
        }
        while (shunzinum > 4 && 0 == shunzi.length) {
          shunzi = PokerRecommend.find_all_shunzi(handcard, shunzinum);
          shunzinum -= 1;
        }
        while (duizinum >= 2 && 0 == liandui.length) {
          liandui = PokerRecommend.find_all_liandui(handcard, duizinum);
          duizinum -= 1;
        }
        return recommend_tools_1.RecommendTools.TableAdd([ feiji, liandui, shunzi, threel, allduizi.duizil, alldanpai.danzhangidx, zhadan, huojian ]);
      };
      PokerRecommend.find_all_feiji = function(handcards, num) {
        var newcardvalue = PokerRecommend.codesToValues(handcards);
        var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcardvalue, 4);
        var threel = recommend_tools_1.RecommendTools.remove_count_same(fourl.surl, 3);
        var allthree = recommend_tools_1.RecommendTools.two_table_add(fourl.removel, threel.removel);
        var value_shunzi = recommend_tools_1.RecommendTools.find_point_shunzi(allthree, num);
        var idx_shunzi = [];
        for (var i = 0; i < value_shunzi.length; i++) {
          var element = value_shunzi[i];
          idx_shunzi.push(PokerRecommend.value2have_point_idx(recommend_tools_1.RecommendTools.copy_table_value(element, 3), handcards));
        }
        return idx_shunzi;
      };
      PokerRecommend.find_all_liandui = function(handcards, num) {
        var newcardvalue = PokerRecommend.codesToValues(handcards);
        var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcardvalue, 4);
        var threel = recommend_tools_1.RecommendTools.remove_count_same(fourl.surl, 3);
        var twol = recommend_tools_1.RecommendTools.remove_count_same(threel.surl, 2);
        var alltwo = recommend_tools_1.RecommendTools.two_table_add(threel.removel, twol.removel);
        var value_shunzi = recommend_tools_1.RecommendTools.find_point_shunzi(alltwo, num);
        var idx_shunzi = [];
        for (var i = 0; i < value_shunzi.length; i++) {
          var element = value_shunzi[i];
          idx_shunzi.push(PokerRecommend.value2have_point_idx(recommend_tools_1.RecommendTools.copy_table_value(element, 2), handcards));
        }
        return idx_shunzi;
      };
      PokerRecommend.find_all_shunzi = function(handcards, num) {
        var newcardvalue = PokerRecommend.codesToValues(handcards);
        var value_shunzi = recommend_tools_1.RecommendTools.find_point_shunzi(newcardvalue, num);
        var idx_shunzi = [];
        for (var i = 0; i < value_shunzi.length; i++) {
          var element = value_shunzi[i];
          idx_shunzi.push(PokerRecommend.value2have_point_idx(element, handcards));
        }
        return idx_shunzi;
      };
      PokerRecommend.hintIterator = function(handcard, outcard, firstout) {
        var tishiData = {
          tishi: [],
          auto: false
        };
        if (firstout) tishiData = PokerRecommend.first_tishi_card(handcard); else {
          tishiData.tishi = PokerRecommend.find_all_biger_type(handcard, outcard);
          1 == tishiData.tishi.length && tishiData.tishi[0].length == handcard.length && (tishiData.auto = true);
        }
        return tishiData;
      };
      PokerRecommend.get_cards_type = function(codeList) {
        var data = {
          card_type: poker_pattern_1.PatternType.type_unknow,
          card_value: 0,
          feijinum: 0
        };
        if (recommend_tools_1.RecommendTools.is_null_or_empty(codeList)) return data;
        var danpai = PokerRecommend.danPai(codeList);
        if (null != danpai) return {
          card_type: poker_pattern_1.PatternType.type_danpai,
          card_value: danpai
        };
        var duizi = PokerRecommend.duiZi(codeList);
        if (null != duizi) return {
          card_type: poker_pattern_1.PatternType.type_duizi,
          card_value: duizi
        };
        var sandaiyi = PokerRecommend.sandaiyi(codeList);
        if (null != sandaiyi) return {
          card_type: poker_pattern_1.PatternType.type_sandaiyi,
          card_value: sandaiyi
        };
        var shunzi = PokerRecommend.shunzi(codeList);
        if (null != shunzi) return {
          card_type: poker_pattern_1.PatternType.type_shunzi,
          card_value: shunzi
        };
        var liandui = PokerRecommend.liandui(codeList);
        if (null != liandui) return {
          card_type: poker_pattern_1.PatternType.type_liandui,
          card_value: liandui
        };
        var feiji = PokerRecommend.feiji(codeList);
        if (null != feiji) return {
          card_type: poker_pattern_1.PatternType.type_feiji,
          card_value: feiji.air,
          feijinum: feiji.feijinum
        };
        var zhadan = PokerRecommend.zhadan(codeList);
        if (null != zhadan) return {
          card_type: poker_pattern_1.PatternType.type_zhadan,
          card_value: zhadan
        };
        var huojian = null;
        if (huojian) return {
          card_type: poker_pattern_1.PatternType.type_huojian,
          card_value: poker_data_1.Card.max_card_value
        };
        var sidaier = PokerRecommend.sidaier(codeList);
        return null != sidaier ? {
          card_type: poker_pattern_1.PatternType.type_sidaier,
          card_value: sidaier
        } : data;
      };
      PokerRecommend.sidaier = function(codeList) {
        if (6 == codeList.length) {
          var newcards = PokerRecommend.codesToValues(codeList);
          var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcards, 4);
          return 1 == fourl.removel.length ? fourl.removel[0] : null;
        }
        if (8 == codeList.length) {
          var newcards = PokerRecommend.codesToValues(codeList);
          var fourl = recommend_tools_1.RecommendTools.remove_count_same(newcards, 4);
          if (1 == fourl.removel.length) {
            var twol = recommend_tools_1.RecommendTools.remove_count_same(fourl.surl, 2);
            return 2 == twol.removel.length ? fourl.removel[0] : null;
          }
          if (2 == fourl.removel.length) {
            var tmpE = recommend_tools_1.RecommendTools.sort_descend(fourl.removel);
            return tmpE[0];
          }
          return null;
        }
        return null;
      };
      PokerRecommend.find_all_biger_type = function(handcard, outcard) {
        var allboom = PokerRecommend.find_all_boom(handcard);
        var huojian = PokerRecommend.find_huojian(handcard);
        var outData = PokerRecommend.get_cards_type(outcard);
        return outData.card_type == poker_pattern_1.PatternType.type_danpai ? recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_biger_danpai(handcard, outData.card_value), allboom) : outData.card_type == poker_pattern_1.PatternType.type_duizi ? recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_biger_duizi(handcard, outData.card_value), allboom) : outData.card_type == poker_pattern_1.PatternType.type_sandaiyi ? recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_biger_sanzhang(handcard, outData.card_value, outcard.length), allboom) : outData.card_type == poker_pattern_1.PatternType.type_zhadan ? recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_biger_sizhang(handcard, outData.card_value), huojian) : outData.card_type == poker_pattern_1.PatternType.type_shunzi ? recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_biger_shunzi(handcard, outData.card_value, outcard.length), allboom) : outData.card_type == poker_pattern_1.PatternType.type_liandui ? recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_biger_liandui(handcard, outData.card_value, outcard.length / 2), allboom) : outData.card_type == poker_pattern_1.PatternType.type_feiji ? recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_biger_feiji(handcard, outcard), allboom) : outData.card_type == poker_pattern_1.PatternType.type_sidaier ? allboom : (outData.card_type == poker_pattern_1.PatternType.type_huojian, 
        []);
      };
      PokerRecommend.find_all_boom = function(handcards) {
        return recommend_tools_1.RecommendTools.two_table_add(PokerRecommend.find_all_sizhang(handcards), PokerRecommend.find_huojian(handcards));
      };
      PokerRecommend.find_all_biger_danpai = function(handcard, outvalue) {
        var alltype = PokerRecommend.find_all_danzhang(handcard);
        var biger = [];
        for (var i = 0; i < alltype.all.length; i++) {
          var element = alltype.all[i];
          var v = PokerRecommend.danPai(element);
          null != v && v > outvalue && biger.push(element);
        }
        return biger;
      };
      PokerRecommend.find_all_biger_duizi = function(handcard, outvalue) {
        var alltype = PokerRecommend.find_all_duizi(handcard);
        var biger = [];
        for (var i = 0; i < alltype.all.length; i++) {
          var element = alltype.all[i];
          var v = PokerRecommend.duiZi(element);
          null != v && v > outvalue && biger.push(element);
        }
        return biger;
      };
      PokerRecommend.find_all_biger_sizhang = function(handcard, outvalue) {
        var alltype = PokerRecommend.find_all_sizhang(handcard);
        var biger = [];
        for (var i = 0; i < alltype.length; i++) {
          var element = alltype[i];
          var v = PokerRecommend.zhadan(element);
          null != v && v > outvalue && biger.push(element);
        }
        return biger;
      };
      PokerRecommend.find_all_biger_shunzi = function(handcard, outvalue, num) {
        var alltype = PokerRecommend.find_all_shunzi(handcard, num);
        var biger = [];
        for (var i = 0; i < alltype.length; i++) {
          var element = alltype[i];
          var v = PokerRecommend.shunzi(element);
          null != v && v > outvalue && biger.push(element);
        }
        return biger;
      };
      PokerRecommend.find_all_biger_liandui = function(handcard, outvalue, num) {
        var alltype = PokerRecommend.find_all_liandui(handcard, num);
        var biger = [];
        for (var i = 0; i < alltype.length; i++) {
          var element = alltype[i];
          var v = PokerRecommend.liandui(element);
          null != v && v > outvalue && biger.push(element);
        }
        return biger;
      };
      PokerRecommend.find_all_biger_sanzhang = function(handcard, outvalue, num) {
        var is_has_pair = function(base_cards) {
          var rest_card_names = [];
          var used_cards = [];
          for (var i = 0; i < base_cards.length; i++) {
            var card = base_cards[i];
            used_cards[card] = true;
          }
          for (var i = 0; i < handcard.length; i++) {
            var card = handcard[i];
            if (!used_cards[card]) {
              var name = poker_data_1.Card.makeCardByCode(card).index;
              rest_card_names[name] = rest_card_names[name] ? rest_card_names[name] + 1 : 1;
              if (rest_card_names[name] >= 2) return true;
            }
          }
          return false;
        };
        var alltype = PokerRecommend.find_all_sanzhang(handcard);
        var biger = [];
        if (handcard.length >= num) for (var i = 0; i < alltype.length; i++) {
          var element = alltype[i];
          if (num < 5 || is_has_pair(element)) {
            var v = PokerRecommend.sandaiyi(element);
            null != v && v > outvalue && biger.push(element);
          }
        }
        return biger;
      };
      PokerRecommend.find_all_biger_feiji = function(handcard, outcard) {
        var outData = PokerRecommend.feiji(outcard);
        var biger = [];
        if (null != outData) {
          var alltype = PokerRecommend.find_all_feiji(handcard, outData.feijinum);
          if (handcard.length >= outcard.length) for (var i = 0; i < alltype.length; i++) {
            var element = alltype[i];
            var v = PokerRecommend.feiji(element);
            null != v && v.air > outData.air && biger.push(element);
          }
        }
        return biger;
      };
      PokerRecommend.value2cardvalue = function(cardvalue) {
        var cardname = 0;
        for (var i = 0; i < poker_data_1.Card.cardValueMap.length; i++) {
          var element = poker_data_1.Card.cardValueMap[i];
          cardvalue == element && (cardname = i);
        }
        return cardname;
      };
      return PokerRecommend;
    }();
    exports.PokerRecommend = PokerRecommend;
    cc._RF.pop();
  }, {
    "./poker_data": "poker_data",
    "./poker_pattern": "poker_pattern",
    "./recommend_tools": "recommend_tools"
  } ],
  poker_seat_pokers_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f6096ee8rpEHISvtchQLh4I", "poker_seat_pokers_base");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var poker_table_poker_base_1 = require("./poker_table_poker_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var VerticalDirection;
    (function(VerticalDirection) {
      VerticalDirection[VerticalDirection["BottomToTop"] = 0] = "BottomToTop";
      VerticalDirection[VerticalDirection["CenterToMargin"] = 1] = "CenterToMargin";
      VerticalDirection[VerticalDirection["TopToBottom"] = 2] = "TopToBottom";
    })(VerticalDirection || (VerticalDirection = {}));
    var HorizontalDirection;
    (function(HorizontalDirection) {
      HorizontalDirection[HorizontalDirection["LeftToRight"] = 0] = "LeftToRight";
      HorizontalDirection[HorizontalDirection["CenterToMargin"] = 1] = "CenterToMargin";
      HorizontalDirection[HorizontalDirection["RightToLeft"] = 2] = "RightToLeft";
    })(HorizontalDirection || (HorizontalDirection = {}));
    var StartAxis;
    (function(StartAxis) {
      StartAxis[StartAxis["Horizontal"] = 0] = "Horizontal";
      StartAxis[StartAxis["Vertical"] = 1] = "Vertical";
    })(StartAxis || (StartAxis = {}));
    var HorizontalPriority;
    (function(HorizontalPriority) {
      HorizontalPriority[HorizontalPriority["Left"] = 0] = "Left";
      HorizontalPriority[HorizontalPriority["Right"] = 1] = "Right";
    })(HorizontalPriority || (HorizontalPriority = {}));
    var VerticalPriority;
    (function(VerticalPriority) {
      VerticalPriority[VerticalPriority["Top"] = 0] = "Top";
      VerticalPriority[VerticalPriority["Bottom"] = 1] = "Bottom";
    })(VerticalPriority || (VerticalPriority = {}));
    var PokerTableSeatPokers = function(_super) {
      __extends(PokerTableSeatPokers, _super);
      function PokerTableSeatPokers() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.prefabPoker = null;
        _this.nodePokersParent = null;
        _this.m_unUseedHandPokers = [];
        _this.startAxis = StartAxis.Horizontal;
        _this.horizontalDirection = HorizontalDirection.CenterToMargin;
        _this.verticalDirection = VerticalDirection.CenterToMargin;
        _this.horizontalPriority = HorizontalPriority.Right;
        _this.verticalPriority = VerticalPriority.Bottom;
        _this.followHorizontalDirection = true;
        _this.followVerticalDirection = true;
        _this.offsetX = 0;
        _this.offsetY = 0;
        _this.intervalX = 0;
        _this.intervalY = 0;
        _this.maxColCount = 0;
        _this.maxRowCount = 0;
        _this.pokers = [];
        _this.m_customGetSpriteFrameKeyFunc = null;
        return _this;
      }
      PokerTableSeatPokers.prototype.reset = function() {
        this.showPokers(false);
      };
      PokerTableSeatPokers.prototype.setCustomGetSpriteFrameKeyByCodeFunc = function(func, refreshSpriteNow) {
        this.m_customGetSpriteFrameKeyFunc = func;
        if (refreshSpriteNow) for (var i = 0; i < this.pokers.length; i++) {
          var poker = this.pokers[i];
          poker.setCustomGetSpriteFrameKeyByCodeFunc(func, refreshSpriteNow);
        }
      };
      PokerTableSeatPokers.prototype.genPoker = function(code, params) {
        var poker = this.shiftUnUseedPoker(this.m_unUseedHandPokers);
        if (null == poker) {
          var node = this.instantiateObj(this.prefabPoker.node, this.nodePokersParent);
          poker = node.getComponent(poker_table_poker_base_1.default);
        }
        poker.node.name = code + "";
        poker.reset();
        poker.setCustomGetSpriteFrameKeyByCodeFunc(this.m_customGetSpriteFrameKeyFunc, false);
        poker.fillPoker(code, params);
        return poker;
      };
      PokerTableSeatPokers.prototype.shiftUnUseedPoker = function(list) {
        var poker = list.shift();
        return poker;
      };
      PokerTableSeatPokers.prototype.pushToUnUseedList = function(list, poker) {
        list.push(poker);
      };
      PokerTableSeatPokers.prototype.instantiateObj = function(prefabNode, parent) {
        var node = cc.instantiate(prefabNode);
        node.parent = parent;
        node.position = cc.v2(0, 0);
        node.scale = 1;
        return node;
      };
      PokerTableSeatPokers.prototype.formatPokersLayout = function(pokerList) {
        var layoutData = this.calcLayoutPosAndPriority(pokerList.length);
        var dataList = layoutData.dataList;
        for (var i = 0; i < pokerList.length; i++) {
          var poker = pokerList[i];
          var data = dataList[i];
          poker.node.position = data.pos;
          poker.original_pos = data.pos;
          poker.node.zIndex = data.priority;
        }
        return layoutData.centerPos;
      };
      PokerTableSeatPokers.prototype.calcLayoutPosAndPriority = function(len) {
        var dataList = [];
        var self = this;
        var maxColCount = this.maxColCount;
        var maxRowCount = this.maxRowCount;
        var totalColCount = 1;
        var totalRowCount = 1;
        if (this.startAxis == StartAxis.Horizontal) {
          totalColCount = len > maxColCount ? maxColCount : len;
          totalRowCount = Math.ceil(len / totalColCount);
        } else {
          totalRowCount = len > maxRowCount ? maxRowCount : len;
          totalColCount = Math.ceil(len / totalRowCount);
        }
        var minColCount = len % totalColCount;
        var minRowCount = len % totalRowCount;
        for (var i = 0; i < len; i++) {
          var index = i;
          var offsetIndex = 0;
          var leftCount = len - 1 - index;
          var curTotalColCount = totalColCount;
          var curTotalRowCount = totalRowCount;
          var horizontalDirection = this.horizontalDirection;
          var verticalDirection = this.verticalDirection;
          var horizontalPriority = this.horizontalPriority;
          var verticalPriority = this.verticalPriority;
          this.followHorizontalDirection || (horizontalDirection == HorizontalDirection.LeftToRight ? horizontalDirection = HorizontalDirection.RightToLeft : horizontalDirection == HorizontalDirection.RightToLeft && (horizontalDirection = HorizontalDirection.LeftToRight));
          this.followVerticalDirection || (verticalDirection == VerticalDirection.TopToBottom ? verticalDirection = VerticalDirection.BottomToTop : verticalDirection == VerticalDirection.BottomToTop && (verticalDirection = VerticalDirection.TopToBottom));
          if (this.startAxis == StartAxis.Horizontal) {
            verticalDirection == VerticalDirection.BottomToTop && minColCount > 0 && (index >= minColCount ? offsetIndex = totalColCount - minColCount : horizontalDirection == HorizontalDirection.CenterToMargin ? curTotalColCount = minColCount : horizontalDirection == HorizontalDirection.RightToLeft && (offsetIndex = totalColCount - minColCount));
            var tmpIndex = index + offsetIndex;
            var tmpLeftCount = leftCount + offsetIndex;
            horizontalDirection == HorizontalDirection.CenterToMargin ? tmpIndex % totalColCount + tmpLeftCount < minColCount && (curTotalColCount = minColCount) : horizontalDirection == HorizontalDirection.RightToLeft && tmpIndex % totalColCount + tmpLeftCount < minColCount && (offsetIndex = totalColCount - minColCount);
          } else {
            horizontalDirection == HorizontalDirection.RightToLeft && minRowCount > 0 && (index >= minRowCount ? offsetIndex = totalRowCount - minRowCount : verticalDirection == VerticalDirection.CenterToMargin ? curTotalRowCount = minRowCount : verticalDirection == VerticalDirection.BottomToTop && (offsetIndex = totalRowCount - minRowCount));
            var tmpIndex = index + offsetIndex;
            var tmpLeftCount = leftCount + offsetIndex;
            verticalDirection == VerticalDirection.CenterToMargin ? tmpIndex % totalRowCount + tmpLeftCount < minRowCount && (curTotalRowCount = minRowCount) : verticalDirection == VerticalDirection.BottomToTop && tmpIndex % totalRowCount + tmpLeftCount < minRowCount && (offsetIndex = totalRowCount - minRowCount);
          }
          var col_1 = this.getCol(index, totalColCount, totalRowCount, offsetIndex);
          var row_1 = this.getRow(index, totalColCount, totalRowCount, offsetIndex);
          var pos = this.calcPos(col_1, row_1, curTotalColCount, curTotalRowCount);
          var priority = 0;
          priority = this.calcHorizontalPriority(priority, col_1, totalColCount, totalRowCount);
          priority = this.calcVerticalPriority(priority, row_1, totalColCount, totalRowCount);
          dataList.push({
            pos: pos,
            col: col_1,
            row: row_1,
            priority: priority
          });
        }
        var col = .5 * (totalColCount - 1);
        var row = .5 * (totalRowCount - 1);
        var centerPos = this.calcPos(col, row, totalColCount, totalRowCount);
        return {
          dataList: dataList,
          centerPos: centerPos
        };
      };
      PokerTableSeatPokers.prototype.getCol = function(index, totalColCount, totalRowCount, offsetIndex) {
        var startAxis = this.startAxis;
        var horizontalDirection = this.horizontalDirection;
        var verticalDirection = this.verticalDirection;
        var horizontalPriority = this.horizontalPriority;
        var verticalPriority = this.verticalPriority;
        var col = 0;
        col = startAxis == StartAxis.Horizontal ? (index + offsetIndex) % totalColCount : Math.floor((index + offsetIndex) / totalRowCount);
        return col;
      };
      PokerTableSeatPokers.prototype.getRow = function(index, totalColCount, totalRowCount, offsetIndex) {
        var row = 0;
        var startAxis = this.startAxis;
        var horizontalDirection = this.horizontalDirection;
        var verticalDirection = this.verticalDirection;
        var horizontalPriority = this.horizontalPriority;
        var verticalPriority = this.verticalPriority;
        row = startAxis == StartAxis.Horizontal ? Math.floor((index + offsetIndex) / totalColCount) : (index + offsetIndex) % totalRowCount;
        return row;
      };
      PokerTableSeatPokers.prototype.calcHorizontalPriority = function(priority, col, totalColCount, totalRowCount) {
        var startAxis = this.startAxis;
        var horizontalDirection = this.horizontalDirection;
        var verticalDirection = this.verticalDirection;
        var horizontalPriority = this.horizontalPriority;
        var verticalPriority = this.verticalPriority;
        return startAxis == StartAxis.Horizontal ? horizontalPriority == HorizontalPriority.Left ? priority + (totalColCount - col) : priority + col : horizontalPriority == HorizontalPriority.Left ? priority + (totalColCount - col) * totalRowCount : priority + col * totalRowCount;
      };
      PokerTableSeatPokers.prototype.calcVerticalPriority = function(priority, row, totalColCount, totalRowCount) {
        var startAxis = this.startAxis;
        var horizontalDirection = this.horizontalDirection;
        var verticalDirection = this.verticalDirection;
        var horizontalPriority = this.horizontalPriority;
        var verticalPriority = this.verticalPriority;
        return startAxis == StartAxis.Horizontal ? verticalPriority == VerticalPriority.Top ? priority + (totalColCount - row) * totalColCount : priority + row * totalColCount : verticalPriority == VerticalPriority.Top ? priority + (totalColCount - row) : priority + row;
      };
      PokerTableSeatPokers.prototype.getOffsetX = function(totalColCount, totalRowCount) {
        return this.offsetX;
      };
      PokerTableSeatPokers.prototype.getOffsetY = function(totalColCount, totalRowCount) {
        return this.offsetY;
      };
      PokerTableSeatPokers.prototype.getIntervalX = function(totalColCount, totalRowCount) {
        return this.intervalX;
      };
      PokerTableSeatPokers.prototype.getIntervalY = function(totalColCount, totalRowCount) {
        return this.intervalY;
      };
      PokerTableSeatPokers.prototype.calcPos = function(col, row, totalColCount, totalRowCount) {
        var centerCol = .5 * (totalColCount - 1);
        var centerRow = .5 * (totalRowCount - 1);
        var pos = cc.v2(0, 0);
        var intervalX = this.getIntervalX(totalColCount, totalRowCount);
        pos.x = intervalX * col;
        this.horizontalDirection == HorizontalDirection.CenterToMargin ? pos.x = intervalX * (col - centerCol) : this.horizontalDirection == HorizontalDirection.LeftToRight ? pos.x = intervalX * col : this.horizontalDirection == HorizontalDirection.RightToLeft && (pos.x = intervalX * (col - (totalColCount - 1)));
        pos.x += this.getOffsetX(totalColCount, totalRowCount);
        var intervalY = this.getIntervalY(totalColCount, totalRowCount);
        pos.y = intervalY * row;
        this.verticalDirection == VerticalDirection.CenterToMargin ? pos.y = intervalY * (centerRow - row) : this.verticalDirection == VerticalDirection.TopToBottom ? pos.y = intervalY * -row : this.verticalDirection == VerticalDirection.BottomToTop && (pos.y = intervalY * (totalRowCount - 1 - row));
        pos.y += this.getOffsetY(totalColCount, totalRowCount);
        return pos;
      };
      PokerTableSeatPokers.prototype.genPokerList = function(codeList, append, show, showFace) {
        append || this.removeAllPokers();
        var list = [];
        for (var index = 0; index < codeList.length; index++) {
          var code = codeList[index];
          var poker = this.genPoker(code);
          this.pokers.push(poker);
          show ? poker.show() : poker.hide();
          showFace ? poker.showFace(true) : poker.showFace(false);
          list.push(poker);
        }
        return list;
      };
      PokerTableSeatPokers.prototype.removeAllPokers = function() {
        for (var index = 0; index < this.pokers.length; index++) {
          var poker = this.pokers[index];
          poker.hide();
          poker.node.stopAllActions();
          this.pushToUnUseedList(this.m_unUseedHandPokers, poker);
        }
        this.pokers = [];
      };
      PokerTableSeatPokers.prototype.removePoker = function(poker) {
        for (var i = 0; i < this.pokers.length; i++) {
          var p = this.pokers[i];
          if (poker.id == p.id) {
            this.removePokerByIndex(i);
            return;
          }
        }
      };
      PokerTableSeatPokers.prototype.removePokers = function(pokers) {
        for (var i = 0; i < pokers.length; i++) {
          var poker = pokers[i];
          this.removePoker(poker);
        }
      };
      PokerTableSeatPokers.prototype.removePokerByIndex = function(index) {
        var poker = this.pokers[index];
        this.pokers.splice(index, 1);
        poker.hide();
        this.pushToUnUseedList(this.m_unUseedHandPokers, poker);
      };
      PokerTableSeatPokers.prototype.showPokers = function(show, codeList, params) {
        this.removeAllPokers();
        if (show) {
          var pokerList = this.genPokerList(codeList, false);
          for (var index = 0; index < pokerList.length; index++) {
            var poker = pokerList[index];
            poker.show();
            params && params.hidePoker && poker.hide();
            poker.showFace(true);
          }
          var centerLocalPos = this.formatPokersLayout(pokerList);
          var worldPos = void 0;
          this.nodePokersParent.convertToWorldSpaceAR(centerLocalPos, worldPos);
          return worldPos;
        }
        return cc.Vec2.ZERO;
      };
      __decorate([ property(poker_table_poker_base_1.default) ], PokerTableSeatPokers.prototype, "prefabPoker", void 0);
      __decorate([ property(cc.Node) ], PokerTableSeatPokers.prototype, "nodePokersParent", void 0);
      __decorate([ property({
        type: cc.Enum(StartAxis)
      }) ], PokerTableSeatPokers.prototype, "startAxis", void 0);
      __decorate([ property({
        type: cc.Enum(HorizontalDirection)
      }) ], PokerTableSeatPokers.prototype, "horizontalDirection", void 0);
      __decorate([ property({
        type: cc.Enum(VerticalDirection)
      }) ], PokerTableSeatPokers.prototype, "verticalDirection", void 0);
      __decorate([ property({
        type: cc.Enum(HorizontalPriority)
      }) ], PokerTableSeatPokers.prototype, "horizontalPriority", void 0);
      __decorate([ property({
        type: cc.Enum(VerticalPriority)
      }) ], PokerTableSeatPokers.prototype, "verticalPriority", void 0);
      __decorate([ property(cc.Boolean) ], PokerTableSeatPokers.prototype, "followHorizontalDirection", void 0);
      __decorate([ property(cc.Boolean) ], PokerTableSeatPokers.prototype, "followVerticalDirection", void 0);
      __decorate([ property(cc.Float) ], PokerTableSeatPokers.prototype, "offsetX", void 0);
      __decorate([ property(cc.Float) ], PokerTableSeatPokers.prototype, "offsetY", void 0);
      __decorate([ property(cc.Float) ], PokerTableSeatPokers.prototype, "intervalX", void 0);
      __decorate([ property(cc.Float) ], PokerTableSeatPokers.prototype, "intervalY", void 0);
      __decorate([ property(cc.Integer) ], PokerTableSeatPokers.prototype, "maxColCount", void 0);
      __decorate([ property(cc.Integer) ], PokerTableSeatPokers.prototype, "maxRowCount", void 0);
      PokerTableSeatPokers = __decorate([ ccclass, menu("custom/PokerTableSeatPokers") ], PokerTableSeatPokers);
      return PokerTableSeatPokers;
    }(cc.Component);
    exports.default = PokerTableSeatPokers;
    cc._RF.pop();
  }, {
    "./poker_table_poker_base": "poker_table_poker_base"
  } ],
  poker_table_poker_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d0a88LyKTRO5b4cjMOhYbkb", "poker_table_poker_base");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var PokerTablePokerBase = function(_super) {
      __extends(PokerTablePokerBase, _super);
      function PokerTablePokerBase() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.spriteAtlasPoker = null;
        _this.spriteFace = null;
        _this.spriteBack = null;
        _this.button = null;
        _this.nodeLaiZiTag = null;
        _this.selected = false;
        _this.marked = false;
        _this.disabled = false;
        _this.real_selected = false;
        _this.selected_time = 0;
        _this.real_selected_time = 0;
        _this.original_pos = cc.v2(0, 0);
        _this.original_color = new cc.Color(255, 255, 255, 255);
        _this.m_customGetSpriteFrameKeyFunc = null;
        _this.m_id = 0;
        _this.m_code = 0;
        _this.m_onTouchStartCallback = null;
        _this.m_onTouchStartCallbackObj = null;
        _this.m_onTouchMoveCallback = null;
        _this.m_onTouchMoveCallbackObj = null;
        _this.m_onTouchEndCallback = null;
        _this.m_onTouchEndCallbackObj = null;
        _this.m_onTouchCancelCallback = null;
        _this.m_onTouchCancelCallbackObj = null;
        _this.m_onClickCallback = null;
        _this.m_onClickCallbackObj = null;
        return _this;
      }
      PokerTablePokerBase_1 = PokerTablePokerBase;
      Object.defineProperty(PokerTablePokerBase.prototype, "id", {
        get: function() {
          return this.m_id;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(PokerTablePokerBase.prototype, "code", {
        get: function() {
          return this.m_code;
        },
        enumerable: true,
        configurable: true
      });
      PokerTablePokerBase.genId = function() {
        return ++PokerTablePokerBase_1.s_curMaxId;
      };
      PokerTablePokerBase.prototype.show = function() {
        this.node.active = true;
      };
      PokerTablePokerBase.prototype.hide = function() {
        this.node.active = false;
      };
      PokerTablePokerBase.prototype.reset = function() {
        this.m_code = 0;
        this.selected = false;
        this.real_selected = false;
        this.marked = false;
        this.disabled = false;
        this.selected_time = 0;
        this.real_selected_time = 0;
      };
      PokerTablePokerBase.prototype.onLoad = function() {
        this.m_id = PokerTablePokerBase_1.genId();
        this.spriteFace && (this.original_color = this.spriteFace.node.color);
        this.registClickEvent();
      };
      PokerTablePokerBase.prototype.onDestroy = function() {
        this.unregistClickEvent();
        this.setClickListener(null, null);
        this.setTouchStartListener(null, null);
        this.setTouchMoveListener(null, null);
        this.setTouchEndListener(null, null);
        this.setTouchCancelListener(null, null);
      };
      PokerTablePokerBase.prototype.registClickEvent = function() {
        if (this.button && null != this.button.node) {
          this.button.node.on("click", this.onClick, this);
          this.button.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
          this.button.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
          this.button.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
          this.button.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);
        }
      };
      PokerTablePokerBase.prototype.unregistClickEvent = function() {
        if (this.button && null != this.button.node) {
          this.button.node.off("click", this.onClick, this);
          this.button.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
          this.button.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
          this.button.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
          this.button.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);
        }
      };
      PokerTablePokerBase.prototype.onClick = function(event) {
        null != this.m_onClickCallback && this.m_onClickCallback.call(this.m_onClickCallbackObj, this, event);
      };
      PokerTablePokerBase.prototype.onTouchStart = function(event) {
        null != this.m_onTouchStartCallback && this.m_onTouchStartCallback.call(this.m_onTouchStartCallbackObj, this, event);
      };
      PokerTablePokerBase.prototype.onTouchEnd = function(event) {
        null != this.m_onTouchEndCallback && this.m_onTouchEndCallback.call(this.m_onTouchEndCallbackObj, this, event);
      };
      PokerTablePokerBase.prototype.onTouchCancel = function(event) {
        null != this.m_onTouchCancelCallback && this.m_onTouchCancelCallback.call(this.m_onTouchCancelCallbackObj, this, event);
      };
      PokerTablePokerBase.prototype.onTouchMove = function(event) {
        null != this.m_onTouchMoveCallback && this.m_onTouchMoveCallback.call(this.m_onTouchMoveCallbackObj, this, event);
      };
      PokerTablePokerBase.prototype.setTouchStartListener = function(callback, tagget) {
        this.m_onTouchStartCallback = callback;
        this.m_onTouchStartCallbackObj = tagget;
      };
      PokerTablePokerBase.prototype.setTouchMoveListener = function(callback, tagget) {
        this.m_onTouchMoveCallback = callback;
        this.m_onTouchMoveCallbackObj = tagget;
      };
      PokerTablePokerBase.prototype.setTouchEndListener = function(callback, tagget) {
        this.m_onTouchEndCallback = callback;
        this.m_onTouchEndCallbackObj = tagget;
      };
      PokerTablePokerBase.prototype.setTouchCancelListener = function(callback, tagget) {
        this.m_onTouchCancelCallback = callback;
        this.m_onTouchCancelCallbackObj = tagget;
      };
      PokerTablePokerBase.prototype.setClickListener = function(callback, tagget) {
        this.m_onClickCallback = callback;
        this.m_onClickCallbackObj = tagget;
      };
      PokerTablePokerBase.prototype.fillPoker = function(code, params) {
        this.m_code = code;
        this.setFace(code);
      };
      PokerTablePokerBase.prototype.showFace = function(show) {
        this.spriteFace.node.active = show;
      };
      PokerTablePokerBase.prototype.showBack = function(show) {
        this.spriteBack.node.active = show;
      };
      PokerTablePokerBase.prototype.showLaiZiTag = function(show) {
        this.nodeLaiZiTag && (this.nodeLaiZiTag.active = show || false);
      };
      PokerTablePokerBase.prototype.enableClick = function(enable) {
        this.button.enabled = enable || false;
      };
      PokerTablePokerBase.prototype.setCustomGetSpriteFrameKeyByCodeFunc = function(func, refreshSpriteNow) {
        this.m_customGetSpriteFrameKeyFunc = func;
        refreshSpriteNow && this.code > 0 && this.setFace(this.code);
      };
      PokerTablePokerBase.prototype.isTouchAtPoker = function(touch) {
        var touchLocalPos = this.node.convertToNodeSpaceAR(touch.getLocation());
        var size = this.node.getContentSize();
        var scaleX = this.node.scaleX;
        var scaleY = this.node.scaleY;
        var minX = (this.node.anchorX - 1) * size.width * scaleX;
        var maxX = (1 - this.node.anchorX) * size.width * scaleX;
        var minY = (this.node.anchorY - 1) * size.height * scaleY;
        var maxY = (1 - this.node.anchorY) * size.height * scaleY;
        return touchLocalPos.x >= minX && touchLocalPos.x <= maxX && touchLocalPos.y >= minY && touchLocalPos.y <= maxY;
      };
      PokerTablePokerBase.prototype.setFace = function(code) {
        var key = this.getSpriteFrameKeyByCode(code);
        this.spriteFace.spriteFrame = this.getSpriteFrameByName(key);
      };
      PokerTablePokerBase.prototype.getSpriteFrameKeyByCode = function(code) {
        if (null != this.m_customGetSpriteFrameKeyFunc) return this.m_customGetSpriteFrameKeyFunc(code);
        code = code % 13 + 1;
        return "Public_fangkuai_" + code.toString();
      };
      PokerTablePokerBase.prototype.getSpriteFrameByName = function(key) {
        return this.spriteAtlasPoker.getSpriteFrame(key);
      };
      var PokerTablePokerBase_1;
      PokerTablePokerBase.s_curMaxId = 0;
      __decorate([ property(cc.SpriteAtlas) ], PokerTablePokerBase.prototype, "spriteAtlasPoker", void 0);
      __decorate([ property(cc.Sprite) ], PokerTablePokerBase.prototype, "spriteFace", void 0);
      __decorate([ property(cc.Sprite) ], PokerTablePokerBase.prototype, "spriteBack", void 0);
      __decorate([ property(cc.Button) ], PokerTablePokerBase.prototype, "button", void 0);
      __decorate([ property(cc.Node) ], PokerTablePokerBase.prototype, "nodeLaiZiTag", void 0);
      PokerTablePokerBase = PokerTablePokerBase_1 = __decorate([ ccclass, menu("custom/PokerTablePokerBase") ], PokerTablePokerBase);
      return PokerTablePokerBase;
    }(cc.Component);
    exports.default = PokerTablePokerBase;
    cc._RF.pop();
  }, {} ],
  poker_table_seat_base_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "307526gkDtMsYTyQAct+Xm1", "poker_table_seat_base_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var custom_ui_state_switcher_1 = require("../ui/custom_ui_state_switcher");
    var Utility_1 = require("../../../utility/Utility");
    var time_manager_1 = require("../../../manager/time_manager");
    var game_util_1 = require("../../../utility/game_util");
    var audio_manager_1 = require("../../../manager/audio_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, requireComponent = _a.requireComponent;
    var SpriteCache = function() {
      function SpriteCache(key, spriteFrame) {
        this.m_spriteFrame = spriteFrame;
        this.refreshTime();
      }
      SpriteCache.prototype.getSpriteFrame = function() {
        this.refreshTime();
        return this.m_spriteFrame;
      };
      SpriteCache.prototype.getKey = function() {
        return this.m_key;
      };
      SpriteCache.prototype.getRefreshTime = function() {
        return this.m_refreshTime;
      };
      SpriteCache.prototype.release = function() {
        var spriteFrame = this.m_spriteFrame;
        if (spriteFrame) {
          var tex = spriteFrame.getTexture();
          tex && tex.destroy();
          spriteFrame.clearTexture();
          spriteFrame.destroy();
        }
        this.m_spriteFrame = null;
      };
      SpriteCache.prototype.refreshTime = function() {
        this.m_refreshTime = new Date().getTime();
      };
      return SpriteCache;
    }();
    var SpriteCacheManager = function() {
      function SpriteCacheManager(maxCount) {
        this.m_maxCount = maxCount;
        this.m_map = {};
      }
      SpriteCacheManager.prototype.addSpriteFrame = function(key, spriteFrame) {
        this.m_map[key] = new SpriteCache(key, spriteFrame);
      };
      SpriteCacheManager.prototype.findSpriteFrame = function(key) {
        var spritCache = this.m_map[key];
        if (null == spritCache) return null;
        return spritCache.getSpriteFrame();
      };
      SpriteCacheManager.prototype.cleanExcessCaches = function() {
        var cacheList = new Array();
        for (var key in this.m_map) if (this.m_map.hasOwnProperty(key)) {
          var element = this.m_map[key];
          element && cacheList.push(element);
        }
        if (cacheList.length < this.m_maxCount) return;
        cacheList.sort(function(a, b) {
          return b.getRefreshTime() - a.getRefreshTime();
        });
        for (var index = this.m_maxCount - 1; index < cacheList.length; index++) {
          var element = cacheList[index];
          var key = element.getKey();
          this.m_map[key] = null;
        }
      };
      SpriteCacheManager.prototype.cleanAllCaches = function() {
        for (var key in this.m_map) if (this.m_map.hasOwnProperty(key)) {
          var element = this.m_map[key];
          element && element.release();
        }
        this.m_map = {};
      };
      return SpriteCacheManager;
    }();
    var PokerTableSeatBaseView = function(_super) {
      __extends(PokerTableSeatBaseView, _super);
      function PokerTableSeatBaseView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.nodeRoleInfo = null;
        _this.spriteAvatar = null;
        _this.lableName = null;
        _this.spriteOffLine = null;
        _this.spriteReady = null;
        _this.styleUiStateSwitcher = null;
        _this.spriteOwner = null;
        _this.nodeClock = null;
        _this.lableClock = null;
        _this.nodeChatText = null;
        _this.nodeSelect = null;
        _this.buttonAvatar = null;
        _this.avatarSize = null;
        _this.single = null;
        _this.lableCoinBalance = null;
        _this.mOnclickKickBtnCallback = null;
        _this.mOnclickAvatarBtnCallback = null;
        _this.mOnclickNotSeatBtnCallback = null;
        _this.m_clockScheduleId = 0;
        return _this;
      }
      PokerTableSeatBaseView_1 = PokerTableSeatBaseView;
      PokerTableSeatBaseView.prototype.onLoad = function() {
        var self = this;
        null == this.styleUiStateSwitcher && (this.styleUiStateSwitcher = this.getComponent(custom_ui_state_switcher_1.default));
        null != this.buttonAvatar && this.buttonAvatar.node.on("click", function(event) {
          self.mOnclickAvatarBtnCallback && self.mOnclickAvatarBtnCallback(self);
        });
      };
      PokerTableSeatBaseView.prototype.reset = function() {
        this.showName(false);
        this.showAvatar(false);
        this.showOffLineTag(false);
        this.showOwnerTag(false);
        this.showReadyTag(false);
        this.showSingle(false);
      };
      PokerTableSeatBaseView.prototype.showName = function(show, name) {
        this.lableName.node.active = show;
        show && null != name && (this.lableName.string = Utility_1.default.instance.filterPlayerName(name));
      };
      PokerTableSeatBaseView.prototype.showCoin = function(show, coin) {
        this.lableCoinBalance.string = Utility_1.default.instance.formateNumb(coin).toString();
        this.lableCoinBalance.node.active = show;
      };
      PokerTableSeatBaseView.prototype.showSingle = function(show) {
        this.single.active = show;
      };
      PokerTableSeatBaseView.prototype.showAvatar = function(show, spriteFrame) {
        this.spriteAvatar.node.active = show;
        show && (this.spriteAvatar.spriteFrame = spriteFrame);
      };
      PokerTableSeatBaseView.prototype.showOffLineTag = function(show) {
        if (null == this.spriteOffLine) return;
        this.spriteOffLine.node.active = show;
      };
      PokerTableSeatBaseView.prototype.showAvatarByUrl = function(show, url) {
        var self = this;
        if (show) {
          var spriteFrame = PokerTableSeatBaseView_1.s_avatarSpriteCacheManager.findSpriteFrame(url);
          spriteFrame || game_util_1.default.loadTexture(url, function(err, texture) {
            if (null != texture) {
              if (!self.isValid) {
                cc.warn("\u7f51\u7edc\u52a0\u8f7d\u5934\u50cf self.isValid");
                return;
              }
              var frame = new cc.SpriteFrame(texture);
              frame.setOriginalSize(self.avatarSize);
              PokerTableSeatBaseView_1.s_avatarSpriteCacheManager.addSpriteFrame(url, frame);
              self.showAvatar(show, frame);
            }
          });
          this.showAvatar(show, spriteFrame);
          return;
        }
        this.showAvatar(false);
      };
      PokerTableSeatBaseView.prototype.showOwnerTag = function(show) {
        this.spriteOwner.node.active = show;
      };
      PokerTableSeatBaseView.prototype.showReadyTag = function(show) {
        this.spriteReady.node.active = show;
      };
      PokerTableSeatBaseView.prototype.resetSeatStyle = function(index) {
        this.styleUiStateSwitcher.SwitchState(this.getSeatStyleName(index));
      };
      PokerTableSeatBaseView.prototype.showSelect = function(show) {
        if (!this.nodeSelect) return;
        this.nodeSelect.active = show;
      };
      PokerTableSeatBaseView.prototype.showClock = function(show, secs, needShake, onFinish) {
        this.nodeClock.active = show;
        if (this.m_clockScheduleId > 0) {
          time_manager_1.default.instance.cancelSchedule(this.m_clockScheduleId);
          this.m_clockScheduleId = 0;
        }
        show && this.refreshClockLable(secs, needShake, onFinish);
      };
      PokerTableSeatBaseView.prototype.refreshClockLable = function(secs, needShake, onFinish) {
        var self = this;
        this.lableClock.string = secs.toString();
        if (secs <= 0) {
          needShake && audio_manager_1.default.instance.vibrate();
          onFinish && onFinish();
          return;
        }
        this.m_clockScheduleId = time_manager_1.default.instance.doScheduleOnce(function() {
          self.m_clockScheduleId = 0;
          secs--;
          self.refreshClockLable(secs, needShake, onFinish);
        }, 1);
      };
      PokerTableSeatBaseView.prototype.enableAvatarBtn = function(enable) {
        if (!this.buttonAvatar) return;
        this.buttonAvatar.enabled = enable;
      };
      PokerTableSeatBaseView.prototype.setClickAvatarBtnListener = function(callback) {
        this.mOnclickAvatarBtnCallback = callback;
      };
      PokerTableSeatBaseView.prototype.setClickNotSeatBtnListener = function(callback) {
        this.mOnclickNotSeatBtnCallback = callback;
      };
      PokerTableSeatBaseView.prototype.setClickKickBtnListener = function(callback) {
        this.mOnclickKickBtnCallback = callback;
      };
      PokerTableSeatBaseView.prototype.getChatTextWorldPos = function() {
        return this.nodeChatText.parent.convertToWorldSpaceAR(this.nodeChatText.getPosition());
      };
      PokerTableSeatBaseView.prototype.onDestroy = function() {
        if (this.m_clockScheduleId > 0) {
          time_manager_1.default.instance.cancelSchedule(this.m_clockScheduleId);
          this.m_clockScheduleId = 0;
        }
        this.unscheduleAllCallbacks();
      };
      var PokerTableSeatBaseView_1;
      PokerTableSeatBaseView.s_avatarSpriteCacheManager = new SpriteCacheManager(20);
      __decorate([ property(cc.Node) ], PokerTableSeatBaseView.prototype, "nodeRoleInfo", void 0);
      __decorate([ property(cc.Sprite) ], PokerTableSeatBaseView.prototype, "spriteAvatar", void 0);
      __decorate([ property(cc.Label) ], PokerTableSeatBaseView.prototype, "lableName", void 0);
      __decorate([ property(cc.Sprite) ], PokerTableSeatBaseView.prototype, "spriteOffLine", void 0);
      __decorate([ property(cc.Sprite) ], PokerTableSeatBaseView.prototype, "spriteReady", void 0);
      __decorate([ property(custom_ui_state_switcher_1.default) ], PokerTableSeatBaseView.prototype, "styleUiStateSwitcher", void 0);
      __decorate([ property(cc.Sprite) ], PokerTableSeatBaseView.prototype, "spriteOwner", void 0);
      __decorate([ property(cc.Node) ], PokerTableSeatBaseView.prototype, "nodeClock", void 0);
      __decorate([ property(cc.Label) ], PokerTableSeatBaseView.prototype, "lableClock", void 0);
      __decorate([ property(cc.Node) ], PokerTableSeatBaseView.prototype, "nodeChatText", void 0);
      __decorate([ property(cc.Node) ], PokerTableSeatBaseView.prototype, "nodeSelect", void 0);
      __decorate([ property(cc.Button) ], PokerTableSeatBaseView.prototype, "buttonAvatar", void 0);
      __decorate([ property(cc.Size) ], PokerTableSeatBaseView.prototype, "avatarSize", void 0);
      __decorate([ property(cc.Node) ], PokerTableSeatBaseView.prototype, "single", void 0);
      __decorate([ property(cc.Label) ], PokerTableSeatBaseView.prototype, "lableCoinBalance", void 0);
      PokerTableSeatBaseView = PokerTableSeatBaseView_1 = __decorate([ ccclass, requireComponent(custom_ui_state_switcher_1.default) ], PokerTableSeatBaseView);
      return PokerTableSeatBaseView;
    }(cc.Component);
    exports.default = PokerTableSeatBaseView;
    cc._RF.pop();
  }, {
    "../../../manager/audio_manager": "audio_manager",
    "../../../manager/time_manager": "time_manager",
    "../../../utility/Utility": "utility",
    "../../../utility/game_util": "game_util",
    "../ui/custom_ui_state_switcher": "custom_ui_state_switcher"
  } ],
  pomelo: [ function(require, module, exports) {
    (function(Buffer) {
      "use strict";
      cc._RF.push(module, "c173523KD5J2Iptn33/pup+", "pomelo");
      "use strict";
      (function() {
        function Emitter(obj) {
          if (obj) return mixin(obj);
        }
        function mixin(obj) {
          for (var key in Emitter.prototype) obj[key] = Emitter.prototype[key];
          return obj;
        }
        Emitter.prototype.on = Emitter.prototype.addEventListener = function(event, fn) {
          this._callbacks = this._callbacks || {};
          (this._callbacks[event] = this._callbacks[event] || []).push(fn);
          return this;
        };
        Emitter.prototype.once = function(event, fn) {
          var self = this;
          this._callbacks = this._callbacks || {};
          function on() {
            self.off(event, on);
            fn.apply(this, arguments);
          }
          on.fn = fn;
          this.on(event, on);
          return this;
        };
        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function(event, fn) {
          this._callbacks = this._callbacks || {};
          if (0 == arguments.length) {
            this._callbacks = {};
            return this;
          }
          var callbacks = this._callbacks[event];
          if (!callbacks) return this;
          if (1 == arguments.length) {
            delete this._callbacks[event];
            return this;
          }
          var cb;
          for (var i = 0; i < callbacks.length; i++) {
            cb = callbacks[i];
            if (cb === fn || cb.fn === fn) {
              callbacks.splice(i, 1);
              break;
            }
          }
          return this;
        };
        Emitter.prototype.emit = function(event) {
          this._callbacks = this._callbacks || {};
          var args = [].slice.call(arguments, 1), callbacks = this._callbacks[event];
          if (callbacks) {
            callbacks = callbacks.slice(0);
            for (var i = 0, len = callbacks.length; i < len; ++i) callbacks[i].apply(this, args);
          }
          return this;
        };
        Emitter.prototype.listeners = function(event) {
          this._callbacks = this._callbacks || {};
          return this._callbacks[event] || [];
        };
        Emitter.prototype.hasListeners = function(event) {
          return !!this.listeners(event).length;
        };
        "undefined" != typeof window && (window.EventEmitter = Emitter);
      })();
      (function(exports, ByteArray, global) {
        var Protocol = exports;
        var PKG_HEAD_BYTES = 4;
        var MSG_FLAG_BYTES = 1;
        var MSG_ROUTE_CODE_BYTES = 2;
        var MSG_ID_MAX_BYTES = 5;
        var MSG_ROUTE_LEN_BYTES = 1;
        var MSG_ROUTE_CODE_MAX = 65535;
        var MSG_COMPRESS_ROUTE_MASK = 1;
        var MSG_TYPE_MASK = 7;
        var Package = Protocol.Package = {};
        var Message = Protocol.Message = {};
        Package.TYPE_HANDSHAKE = 1;
        Package.TYPE_HANDSHAKE_ACK = 2;
        Package.TYPE_HEARTBEAT = 3;
        Package.TYPE_DATA = 4;
        Package.TYPE_KICK = 5;
        Message.TYPE_REQUEST = 0;
        Message.TYPE_NOTIFY = 1;
        Message.TYPE_RESPONSE = 2;
        Message.TYPE_PUSH = 3;
        Protocol.strencode = function(str) {
          var byteArray = new ByteArray(3 * str.length);
          var offset = 0;
          for (var i = 0; i < str.length; i++) {
            var charCode = str.charCodeAt(i);
            var codes = null;
            codes = charCode <= 127 ? [ charCode ] : charCode <= 2047 ? [ 192 | charCode >> 6, 128 | 63 & charCode ] : [ 224 | charCode >> 12, 128 | (4032 & charCode) >> 6, 128 | 63 & charCode ];
            for (var j = 0; j < codes.length; j++) {
              byteArray[offset] = codes[j];
              ++offset;
            }
          }
          var _buffer = new ByteArray(offset);
          copyArray(_buffer, 0, byteArray, 0, offset);
          return _buffer;
        };
        Protocol.strdecode = function(buffer) {
          var bytes = new ByteArray(buffer);
          var array = [];
          var offset = 0;
          var charCode = 0;
          var end = bytes.length;
          while (offset < end) {
            if (bytes[offset] < 128) {
              charCode = bytes[offset];
              offset += 1;
            } else if (bytes[offset] < 224) {
              charCode = ((63 & bytes[offset]) << 6) + (63 & bytes[offset + 1]);
              offset += 2;
            } else {
              charCode = ((15 & bytes[offset]) << 12) + ((63 & bytes[offset + 1]) << 6) + (63 & bytes[offset + 2]);
              offset += 3;
            }
            array.push(charCode);
          }
          return String.fromCharCode.apply(null, array);
        };
        Package.encode = function(type, body) {
          var length = body ? body.length : 0;
          var buffer = new ByteArray(PKG_HEAD_BYTES + length);
          var index = 0;
          buffer[index++] = 255 & type;
          buffer[index++] = length >> 16 & 255;
          buffer[index++] = length >> 8 & 255;
          buffer[index++] = 255 & length;
          body && copyArray(buffer, index, body, 0, length);
          return buffer;
        };
        Package.decode = function(buffer) {
          var offset = 0;
          var bytes = new ByteArray(buffer);
          var length = 0;
          var rs = [];
          while (offset < bytes.length) {
            var type = bytes[offset++];
            length = (bytes[offset++] << 16 | bytes[offset++] << 8 | bytes[offset++]) >>> 0;
            var body = length ? new ByteArray(length) : null;
            copyArray(body, 0, bytes, offset, length);
            offset += length;
            rs.push({
              type: type,
              body: body
            });
          }
          return 1 === rs.length ? rs[0] : rs;
        };
        Message.encode = function(id, type, compressRoute, route, msg) {
          var idBytes = msgHasId(type) ? caculateMsgIdBytes(id) : 0;
          var msgLen = MSG_FLAG_BYTES + idBytes;
          if (msgHasRoute(type)) if (compressRoute) {
            if ("number" !== typeof route) throw new Error("error flag for number route!");
            msgLen += MSG_ROUTE_CODE_BYTES;
          } else {
            msgLen += MSG_ROUTE_LEN_BYTES;
            if (route) {
              route = Protocol.strencode(route);
              if (route.length > 255) throw new Error("route maxlength is overflow");
              msgLen += route.length;
            }
          }
          msg && (msgLen += msg.length);
          var buffer = new ByteArray(msgLen);
          var offset = 0;
          offset = encodeMsgFlag(type, compressRoute, buffer, offset);
          msgHasId(type) && (offset = encodeMsgId(id, buffer, offset));
          msgHasRoute(type) && (offset = encodeMsgRoute(compressRoute, route, buffer, offset));
          msg && (offset = encodeMsgBody(msg, buffer, offset));
          return buffer;
        };
        Message.decode = function(buffer) {
          var bytes = new ByteArray(buffer);
          var bytesLen = bytes.length || bytes.byteLength;
          var offset = 0;
          var id = 0;
          var route = null;
          var flag = bytes[offset++];
          var compressRoute = flag & MSG_COMPRESS_ROUTE_MASK;
          var type = flag >> 1 & MSG_TYPE_MASK;
          if (msgHasId(type)) {
            var m = parseInt(bytes[offset]);
            var i = 0;
            do {
              var m = parseInt(bytes[offset]);
              id += (127 & m) * Math.pow(2, 7 * i);
              offset++;
              i++;
            } while (m >= 128);
          }
          if (msgHasRoute(type)) if (compressRoute) route = bytes[offset++] << 8 | bytes[offset++]; else {
            var routeLen = bytes[offset++];
            if (routeLen) {
              route = new ByteArray(routeLen);
              copyArray(route, 0, bytes, offset, routeLen);
              route = Protocol.strdecode(route);
            } else route = "";
            offset += routeLen;
          }
          var bodyLen = bytesLen - offset;
          var body = new ByteArray(bodyLen);
          copyArray(body, 0, bytes, offset, bodyLen);
          return {
            id: id,
            type: type,
            compressRoute: compressRoute,
            route: route,
            body: body
          };
        };
        var copyArray = function copyArray(dest, doffset, src, soffset, length) {
          if ("function" === typeof src.copy) src.copy(dest, doffset, soffset, soffset + length); else for (var index = 0; index < length; index++) dest[doffset++] = src[soffset++];
        };
        var msgHasId = function msgHasId(type) {
          return type === Message.TYPE_REQUEST || type === Message.TYPE_RESPONSE;
        };
        var msgHasRoute = function msgHasRoute(type) {
          return type === Message.TYPE_REQUEST || type === Message.TYPE_NOTIFY || type === Message.TYPE_PUSH;
        };
        var caculateMsgIdBytes = function caculateMsgIdBytes(id) {
          var len = 0;
          do {
            len += 1;
            id >>= 7;
          } while (id > 0);
          return len;
        };
        var encodeMsgFlag = function encodeMsgFlag(type, compressRoute, buffer, offset) {
          if (type !== Message.TYPE_REQUEST && type !== Message.TYPE_NOTIFY && type !== Message.TYPE_RESPONSE && type !== Message.TYPE_PUSH) throw new Error("unkonw message type: " + type);
          buffer[offset] = type << 1 | (compressRoute ? 1 : 0);
          return offset + MSG_FLAG_BYTES;
        };
        var encodeMsgId = function encodeMsgId(id, buffer, offset) {
          do {
            var tmp = id % 128;
            var next = Math.floor(id / 128);
            0 !== next && (tmp += 128);
            buffer[offset++] = tmp;
            id = next;
          } while (0 !== id);
          return offset;
        };
        var encodeMsgRoute = function encodeMsgRoute(compressRoute, route, buffer, offset) {
          if (compressRoute) {
            if (route > MSG_ROUTE_CODE_MAX) throw new Error("route number is overflow");
            buffer[offset++] = route >> 8 & 255;
            buffer[offset++] = 255 & route;
          } else if (route) {
            buffer[offset++] = 255 & route.length;
            copyArray(buffer, offset, route, 0, route.length);
            offset += route.length;
          } else buffer[offset++] = 0;
          return offset;
        };
        var encodeMsgBody = function encodeMsgBody(msg, buffer, offset) {
          copyArray(buffer, offset, msg, 0, msg.length);
          return offset + msg.length;
        };
        "undefined" != typeof window && (window.Protocol = Protocol);
      })("undefined" == typeof window ? module.exports : {}, "undefined" == typeof window ? Buffer : Uint8Array, void 0);
      (function(exports, global) {
        var Protobuf = exports;
        Protobuf.init = function(opts) {
          Protobuf.encoder.init(opts.encoderProtos);
          Protobuf.decoder.init(opts.decoderProtos);
        };
        Protobuf.encode = function(key, msg) {
          return Protobuf.encoder.encode(key, msg);
        };
        Protobuf.decode = function(key, msg) {
          return Protobuf.decoder.decode(key, msg);
        };
        "undefined" != typeof window && (window.protobuf = Protobuf);
      })("undefined" == typeof window ? module.exports : {}, void 0);
      (function(exports, global) {
        var constants = exports.constants = {};
        constants.TYPES = {
          uInt32: 0,
          sInt32: 0,
          int32: 0,
          double: 1,
          string: 2,
          message: 2,
          float: 5
        };
      })("undefined" !== typeof protobuf ? protobuf : module.exports, void 0);
      (function(exports, global) {
        var Util = exports.util = {};
        Util.isSimpleType = function(type) {
          return "uInt32" === type || "sInt32" === type || "int32" === type || "uInt64" === type || "sInt64" === type || "float" === type || "double" === type;
        };
      })("undefined" !== typeof protobuf ? protobuf : module.exports, void 0);
      (function(exports, global) {
        var Codec = exports.codec = {};
        var buffer = new ArrayBuffer(8);
        var float32Array = new Float32Array(buffer);
        var float64Array = new Float64Array(buffer);
        var uInt8Array = new Uint8Array(buffer);
        Codec.encodeUInt32 = function(n) {
          var n = parseInt(n);
          if (isNaN(n) || n < 0) return null;
          var result = [];
          do {
            var tmp = n % 128;
            var next = Math.floor(n / 128);
            0 !== next && (tmp += 128);
            result.push(tmp);
            n = next;
          } while (0 !== n);
          return result;
        };
        Codec.encodeSInt32 = function(n) {
          var n = parseInt(n);
          if (isNaN(n)) return null;
          n = n < 0 ? 2 * Math.abs(n) - 1 : 2 * n;
          return Codec.encodeUInt32(n);
        };
        Codec.decodeUInt32 = function(bytes) {
          var n = 0;
          for (var i = 0; i < bytes.length; i++) {
            var m = parseInt(bytes[i]);
            n += (127 & m) * Math.pow(2, 7 * i);
            if (m < 128) return n;
          }
          return n;
        };
        Codec.decodeSInt32 = function(bytes) {
          var n = this.decodeUInt32(bytes);
          var flag = n % 2 === 1 ? -1 : 1;
          n = (n % 2 + n) / 2 * flag;
          return n;
        };
        Codec.encodeFloat = function(float) {
          float32Array[0] = float;
          return uInt8Array;
        };
        Codec.decodeFloat = function(bytes, offset) {
          if (!bytes || bytes.length < offset + 4) return null;
          for (var i = 0; i < 4; i++) uInt8Array[i] = bytes[offset + i];
          return float32Array[0];
        };
        Codec.encodeDouble = function(double) {
          float64Array[0] = double;
          return uInt8Array.subarray(0, 8);
        };
        Codec.decodeDouble = function(bytes, offset) {
          if (!bytes || bytes.length < offset + 8) return null;
          for (var i = 0; i < 8; i++) uInt8Array[i] = bytes[offset + i];
          return float64Array[0];
        };
        Codec.encodeStr = function(bytes, offset, str) {
          for (var i = 0; i < str.length; i++) {
            var code = str.charCodeAt(i);
            var codes = encode2UTF8(code);
            for (var j = 0; j < codes.length; j++) {
              bytes[offset] = codes[j];
              offset++;
            }
          }
          return offset;
        };
        Codec.decodeStr = function(bytes, offset, length) {
          var array = [];
          var end = offset + length;
          while (offset < end) {
            var code = 0;
            if (bytes[offset] < 128) {
              code = bytes[offset];
              offset += 1;
            } else if (bytes[offset] < 224) {
              code = ((63 & bytes[offset]) << 6) + (63 & bytes[offset + 1]);
              offset += 2;
            } else {
              code = ((15 & bytes[offset]) << 12) + ((63 & bytes[offset + 1]) << 6) + (63 & bytes[offset + 2]);
              offset += 3;
            }
            array.push(code);
          }
          var str = "";
          for (var i = 0; i < array.length; ) {
            str += String.fromCharCode.apply(null, array.slice(i, i + 1e4));
            i += 1e4;
          }
          return str;
        };
        Codec.byteLength = function(str) {
          if ("string" !== typeof str) return -1;
          var length = 0;
          for (var i = 0; i < str.length; i++) {
            var code = str.charCodeAt(i);
            length += codeLength(code);
          }
          return length;
        };
        function encode2UTF8(charCode) {
          return charCode <= 127 ? [ charCode ] : charCode <= 2047 ? [ 192 | charCode >> 6, 128 | 63 & charCode ] : [ 224 | charCode >> 12, 128 | (4032 & charCode) >> 6, 128 | 63 & charCode ];
        }
        function codeLength(code) {
          return code <= 127 ? 1 : code <= 2047 ? 2 : 3;
        }
      })("undefined" !== typeof protobuf ? protobuf : module.exports, void 0);
      (function(exports, global) {
        var protobuf = exports;
        var MsgEncoder = exports.encoder = {};
        var codec = protobuf.codec;
        var constant = protobuf.constants;
        var util = protobuf.util;
        MsgEncoder.init = function(protos) {
          this.protos = protos || {};
        };
        MsgEncoder.encode = function(route, msg) {
          var protos = this.protos[route];
          if (!checkMsg(msg, protos)) return null;
          var length = codec.byteLength(JSON.stringify(msg));
          var buffer = new ArrayBuffer(length);
          var uInt8Array = new Uint8Array(buffer);
          var offset = 0;
          if (!!protos) {
            offset = encodeMsg(uInt8Array, offset, protos, msg);
            if (offset > 0) return uInt8Array.subarray(0, offset);
          }
          return null;
        };
        function checkMsg(msg, protos) {
          if (!protos) return false;
          for (var name in protos) {
            var proto = protos[name];
            switch (proto.option) {
             case "required":
              if ("undefined" === typeof msg[name]) {
                console.warn("no property exist for required! name: %j, proto: %j, msg: %j", name, proto, msg);
                return false;
              }

             case "optional":
              if ("undefined" !== typeof msg[name]) {
                var message = protos.__messages[proto.type] || MsgEncoder.protos["message " + proto.type];
                if (!!message && !checkMsg(msg[name], message)) {
                  console.warn("inner proto error! name: %j, proto: %j, msg: %j", name, proto, msg);
                  return false;
                }
              }
              break;

             case "repeated":
              var message = protos.__messages[proto.type] || MsgEncoder.protos["message " + proto.type];
              if (!!msg[name] && !!message) for (var i = 0; i < msg[name].length; i++) if (!checkMsg(msg[name][i], message)) return false;
            }
          }
          return true;
        }
        function encodeMsg(buffer, offset, protos, msg) {
          for (var name in msg) if (!!protos[name]) {
            var proto = protos[name];
            switch (proto.option) {
             case "required":
             case "optional":
              offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));
              offset = encodeProp(msg[name], proto.type, offset, buffer, protos);
              break;

             case "repeated":
              msg[name].length > 0 && (offset = encodeArray(msg[name], proto, offset, buffer, protos));
            }
          }
          return offset;
        }
        function encodeProp(value, type, offset, buffer, protos) {
          switch (type) {
           case "uInt32":
            offset = writeBytes(buffer, offset, codec.encodeUInt32(value));
            break;

           case "int32":
           case "sInt32":
            offset = writeBytes(buffer, offset, codec.encodeSInt32(value));
            break;

           case "float":
            writeBytes(buffer, offset, codec.encodeFloat(value));
            offset += 4;
            break;

           case "double":
            writeBytes(buffer, offset, codec.encodeDouble(value));
            offset += 8;
            break;

           case "string":
            var length = codec.byteLength(value);
            offset = writeBytes(buffer, offset, codec.encodeUInt32(length));
            codec.encodeStr(buffer, offset, value);
            offset += length;
            break;

           default:
            var message = protos.__messages[type] || MsgEncoder.protos["message " + type];
            if (!!message) {
              var tmpBuffer = new ArrayBuffer(2 * codec.byteLength(JSON.stringify(value)));
              var length = 0;
              length = encodeMsg(tmpBuffer, length, message, value);
              offset = writeBytes(buffer, offset, codec.encodeUInt32(length));
              for (var i = 0; i < length; i++) {
                buffer[offset] = tmpBuffer[i];
                offset++;
              }
            }
          }
          return offset;
        }
        function encodeArray(array, proto, offset, buffer, protos) {
          var i = 0;
          if (util.isSimpleType(proto.type)) {
            offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));
            offset = writeBytes(buffer, offset, codec.encodeUInt32(array.length));
            for (i = 0; i < array.length; i++) offset = encodeProp(array[i], proto.type, offset, buffer);
          } else for (i = 0; i < array.length; i++) {
            offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));
            offset = encodeProp(array[i], proto.type, offset, buffer, protos);
          }
          return offset;
        }
        function writeBytes(buffer, offset, bytes) {
          for (var i = 0; i < bytes.length; i++, offset++) buffer[offset] = bytes[i];
          return offset;
        }
        function encodeTag(type, tag) {
          var value = constant.TYPES[type] || 2;
          return codec.encodeUInt32(tag << 3 | value);
        }
      })("undefined" !== typeof protobuf ? protobuf : module.exports, void 0);
      (function(exports, global) {
        var protobuf = exports;
        var MsgDecoder = exports.decoder = {};
        var codec = protobuf.codec;
        var util = protobuf.util;
        var buffer;
        var offset = 0;
        MsgDecoder.init = function(protos) {
          this.protos = protos || {};
        };
        MsgDecoder.setProtos = function(protos) {
          !protos || (this.protos = protos);
        };
        MsgDecoder.decode = function(route, buf) {
          var protos = this.protos[route];
          buffer = buf;
          offset = 0;
          if (!!protos) return decodeMsg({}, protos, buffer.length);
          return null;
        };
        function decodeMsg(msg, protos, length) {
          while (offset < length) {
            var head = getHead();
            var type = head.type;
            var tag = head.tag;
            var name = protos.__tags[tag];
            switch (protos[name].option) {
             case "optional":
             case "required":
              msg[name] = decodeProp(protos[name].type, protos);
              break;

             case "repeated":
              msg[name] || (msg[name] = []);
              decodeArray(msg[name], protos[name].type, protos);
            }
          }
          return msg;
        }
        function isFinish(msg, protos) {
          return !protos.__tags[peekHead().tag];
        }
        function getHead() {
          var tag = codec.decodeUInt32(getBytes());
          return {
            type: 7 & tag,
            tag: tag >> 3
          };
        }
        function peekHead() {
          var tag = codec.decodeUInt32(peekBytes());
          return {
            type: 7 & tag,
            tag: tag >> 3
          };
        }
        function decodeProp(type, protos) {
          switch (type) {
           case "uInt32":
            return codec.decodeUInt32(getBytes());

           case "int32":
           case "sInt32":
            return codec.decodeSInt32(getBytes());

           case "float":
            var float = codec.decodeFloat(buffer, offset);
            offset += 4;
            return float;

           case "double":
            var double = codec.decodeDouble(buffer, offset);
            offset += 8;
            return double;

           case "string":
            var length = codec.decodeUInt32(getBytes());
            var str = codec.decodeStr(buffer, offset, length);
            offset += length;
            return str;

           default:
            var message = protos && (protos.__messages[type] || MsgDecoder.protos["message " + type]);
            if (!!message) {
              var length = codec.decodeUInt32(getBytes());
              var msg = {};
              decodeMsg(msg, message, offset + length);
              return msg;
            }
          }
        }
        function decodeArray(array, type, protos) {
          if (util.isSimpleType(type)) {
            var length = codec.decodeUInt32(getBytes());
            for (var i = 0; i < length; i++) array.push(decodeProp(type));
          } else array.push(decodeProp(type, protos));
        }
        function getBytes(flag) {
          var bytes = [];
          var pos = offset;
          flag = flag || false;
          var b;
          do {
            b = buffer[pos];
            bytes.push(b);
            pos++;
          } while (b >= 128);
          flag || (offset = pos);
          return bytes;
        }
        function peekBytes() {
          return getBytes(true);
        }
      })("undefined" !== typeof protobuf ? protobuf : module.exports, void 0);
      cc.Pomelo = function() {
        var JS_WS_CLIENT_TYPE = "js-websocket";
        var JS_WS_CLIENT_VERSION = "0.0.1";
        var Protocol = window.Protocol;
        var protobuf = window.protobuf;
        var decodeIO_protobuf = window.decodeIO_protobuf;
        var decodeIO_encoder = null;
        var decodeIO_decoder = null;
        var Package = Protocol.Package;
        var Message = Protocol.Message;
        var EventEmitter = window.EventEmitter;
        var rsa = window.rsa;
        "undefined" != typeof window && "undefined" != typeof sys && sys.localStorage && (window.localStorage = sys.localStorage);
        var RES_OK = 200;
        var RES_FAIL = 500;
        var RES_OLD_CLIENT = 501;
        "function" !== typeof Object.create && (Object.create = function(o) {
          function F() {}
          F.prototype = o;
          return new F();
        });
        var root = window;
        var pomelo = Object.create(EventEmitter.prototype);
        var socket = null;
        var reqId = 0;
        var callbacks = {};
        var handlers = {};
        var routeMap = {};
        var dict = {};
        var abbrs = {};
        var serverProtos = {};
        var clientProtos = {};
        var protoVersion = 0;
        var heartbeatInterval = 0;
        var heartbeatTimeout = 0;
        var nextHeartbeatTimeout = 0;
        var gapThreshold = 100;
        var heartbeatId = null;
        var heartbeatTimeoutId = null;
        var handshakeCallback = null;
        var decode = null;
        var encode = null;
        var reconnect = false;
        var reconncetTimer = null;
        var reconnectUrl = null;
        var reconnectAttempts = 0;
        var reconnectionDelay = 5e3;
        var DEFAULT_MAX_RECONNECT_ATTEMPTS = 10;
        var useCrypto;
        var handshakeBuffer = {
          sys: {
            type: JS_WS_CLIENT_TYPE,
            version: JS_WS_CLIENT_VERSION,
            rsa: {}
          },
          user: {}
        };
        var initCallback = null;
        pomelo.connect = function(url, cb) {
          initCallback = cb;
          encode = defaultEncode;
          decode = defaultDecode;
          var data;
          false;
          connect(null, url, cb);
        };
        var defaultDecode = pomelo.decode = function(data) {
          var msg = Message.decode(data);
          if (msg.id > 0) {
            msg.route = routeMap[msg.id];
            delete routeMap[msg.id];
            if (!msg.route) return;
          }
          msg.body = deCompose(msg);
          return msg;
        };
        var defaultEncode = pomelo.encode = function(reqId, route, msg) {
          var type = reqId ? Message.TYPE_REQUEST : Message.TYPE_NOTIFY;
          if (protobuf && clientProtos[route]) msg = protobuf.encode(route, msg); else if (decodeIO_encoder && decodeIO_encoder.lookup(route)) {
            var Builder = decodeIO_encoder.build(route);
            msg = new Builder(msg).encodeNB();
          } else msg = Protocol.strencode(JSON.stringify(msg));
          var compressRoute = 0;
          if (dict && dict[route]) {
            route = dict[route];
            compressRoute = 1;
          }
          return Message.encode(reqId, type, compressRoute, route, msg);
        };
        var connect = function connect(params, url, cb) {
          console.log("connect to " + url);
          var params = params || {};
          var maxReconnectAttempts = DEFAULT_MAX_RECONNECT_ATTEMPTS;
          reconnectUrl = url;
          if (window.localStorage && window.localStorage.getItem("protos") && 0 === protoVersion) {
            var protos = JSON.parse(window.localStorage.getItem("protos"));
            protoVersion = protos.version || 0;
            serverProtos = protos.server || {};
            clientProtos = protos.client || {};
            !protobuf || protobuf.init({
              encoderProtos: clientProtos,
              decoderProtos: serverProtos
            });
            if (!!decodeIO_protobuf) {
              decodeIO_encoder = decodeIO_protobuf.loadJson(clientProtos);
              decodeIO_decoder = decodeIO_protobuf.loadJson(serverProtos);
            }
          }
          handshakeBuffer.sys.protoVersion = protoVersion;
          var onopen = function onopen(event) {
            !reconnect || pomelo.emit("reconnect");
            pomelo.emit("onOpen", event);
            reset();
            var obj = Package.encode(Package.TYPE_HANDSHAKE, Protocol.strencode(JSON.stringify(handshakeBuffer)));
            send(obj);
          };
          var onmessage = function onmessage(event) {
            processPackage(Package.decode(event.data), cb);
          };
          var onerror = function onerror(event) {
            pomelo.emit("onerror", event);
            socket.onmessage = null;
            cc.error("onerror: ", event);
          };
          var onclose = function onclose(event) {
            cc.warn("socket close: ", event);
            pomelo.emit("onclose", event);
            socket.onmessage = null;
          };
          socket = new WebSocket(url);
          socket.binaryType = "arraybuffer";
          socket.onopen = onopen;
          socket.onmessage = onmessage;
          socket.onerror = onerror;
          socket.onclose = onclose;
        };
        pomelo.log = function() {
          cc.log("[pomelo] ", arguments);
        };
        pomelo.getNetState = function() {
          if (socket) return socket.readyState;
        };
        pomelo.disconnect = function(cb) {
          if (socket) {
            if (socket.readyState == WebSocket.OPEN && socket.close) {
              socket.close();
              pomelo.log("\u65ad\u5f00\u7f51\u7edc\uff01");
            }
            socket = null;
          }
          if (heartbeatId) {
            clearTimeout(heartbeatId);
            heartbeatId = null;
          }
          if (heartbeatTimeoutId) {
            clearTimeout(heartbeatTimeoutId);
            heartbeatTimeoutId = null;
          }
        };
        var reset = function reset() {
          reconnect = false;
          reconnectionDelay = 5e3;
          reconnectAttempts = 0;
          clearTimeout(reconncetTimer);
        };
        pomelo.websocket = function() {
          return socket;
        };
        pomelo.clear = function() {
          if (null != socket) {
            socket.onopen = null;
            socket.onmessage = null;
            socket.onerror = null;
            socket.onclose = null;
          }
        };
        pomelo.request = function(route, msg, cb) {
          if (2 === arguments.length && "function" === typeof msg) {
            cb = msg;
            msg = {};
          } else msg = msg || {};
          route = route || msg.route;
          if (!route) return;
          reqId++;
          sendMessage(reqId, route, msg);
          callbacks[reqId] = cb;
          routeMap[reqId] = route;
        };
        pomelo.notify = function(route, msg) {
          msg = msg || {};
          sendMessage(0, route, msg);
        };
        var sendMessage = function sendMessage(reqId, route, msg) {
          if (useCrypto) {
            msg = JSON.stringify(msg);
            var sig = rsa.signString(msg, "sha256");
            msg = JSON.parse(msg);
            msg["__crypto__"] = sig;
          }
          encode && (msg = encode(reqId, route, msg));
          var packet = Package.encode(Package.TYPE_DATA, msg);
          send(packet);
        };
        var send = function send(packet) {
          null !== socket && socket.send(packet.buffer);
        };
        var handler = {};
        pomelo.heartbeat = function() {
          var obj = Package.encode(Package.TYPE_HEARTBEAT);
          send(obj);
        };
        var heartbeat = function heartbeat(data) {
          pomelo.emit("heartbeat");
        };
        var heartbeatTimeoutCb = function heartbeatTimeoutCb() {};
        var handshake = function handshake(data) {
          data = JSON.parse(Protocol.strdecode(data));
          if (data.code === RES_OLD_CLIENT) {
            pomelo.emit("error", "client version not fullfill");
            return;
          }
          if (data.code !== RES_OK) {
            pomelo.emit("error", "handshake fail");
            return;
          }
          handshakeInit(data);
          var obj = Package.encode(Package.TYPE_HANDSHAKE_ACK);
          send(obj);
          pomelo.emit("handshake", data);
          initCallback && initCallback(socket);
        };
        var onData = function onData(data) {
          var msg = data;
          decode && (msg = decode(msg));
          processMessage(pomelo, msg);
        };
        var onKick = function onKick(data) {
          data = JSON.parse(Protocol.strdecode(data));
          pomelo.emit("onKick", data);
        };
        handlers[Package.TYPE_HANDSHAKE] = handshake;
        handlers[Package.TYPE_HEARTBEAT] = heartbeat;
        handlers[Package.TYPE_DATA] = onData;
        handlers[Package.TYPE_KICK] = onKick;
        var processPackage = function processPackage(msgs) {
          if (Array.isArray(msgs)) for (var i = 0; i < msgs.length; i++) {
            var msg = msgs[i];
            handlers[msg.type](msg.body);
          } else handlers[msgs.type](msgs.body);
        };
        var processMessage = function processMessage(pomelo, msg) {
          if (!msg.id) {
            var _time = new Date();
            cc.log(_time.getHours() + ":" + _time.getMinutes() + ":" + _time.getSeconds() + " [pomelo]:\u6536\u5230\u6d88\u606f:", msg.route, msg.body);
            pomelo.emit(msg.route, msg.body);
            return;
          }
          var cb = callbacks[msg.id];
          var time = new Date();
          cc.log(time.getHours() + ":" + time.getMinutes() + ":" + time.getSeconds() + " [pomelo]:\u6536\u5230\u6d88\u606f:", msg.route, msg.body);
          delete callbacks[msg.id];
          if ("function" !== typeof cb) return;
          cb(msg.body);
          return;
        };
        var processMessageBatch = function processMessageBatch(pomelo, msgs) {
          for (var i = 0, l = msgs.length; i < l; i++) processMessage(pomelo, msgs[i]);
        };
        var deCompose = function deCompose(msg) {
          var route = msg.route;
          if (msg.compressRoute) {
            if (!abbrs[route]) return {};
            route = msg.route = abbrs[route];
          }
          return protobuf && serverProtos[route] ? protobuf.decode(route, msg.body) : decodeIO_decoder && decodeIO_decoder.lookup(route) ? decodeIO_decoder.build(route).decode(msg.body) : JSON.parse(Protocol.strdecode(msg.body));
        };
        var handshakeInit = function handshakeInit(data) {
          if (data.sys && data.sys.heartbeat) {
            heartbeatInterval = 1e3 * data.sys.heartbeat;
            heartbeatTimeout = 2 * heartbeatInterval;
          } else {
            heartbeatInterval = 0;
            heartbeatTimeout = 0;
          }
          initData(data);
          "function" === typeof handshakeCallback && handshakeCallback(data.user);
        };
        var initData = function initData(data) {
          if (!data || !data.sys) return;
          dict = data.sys.dict;
          var protos = data.sys.protos;
          if (dict) {
            dict = dict;
            abbrs = {};
            for (var route in dict) abbrs[dict[route]] = route;
          }
          if (protos) {
            protoVersion = protos.version || 0;
            serverProtos = protos.server || {};
            clientProtos = protos.client || {};
            window.localStorage.setItem("protos", JSON.stringify(protos));
            !protobuf || protobuf.init({
              encoderProtos: protos.client,
              decoderProtos: protos.server
            });
            if (!!decodeIO_protobuf) {
              decodeIO_encoder = decodeIO_protobuf.loadJson(clientProtos);
              decodeIO_decoder = decodeIO_protobuf.loadJson(serverProtos);
            }
          }
        };
        return pomelo;
      };
      module.exports = cc.Pomelo;
      window.pomelo = new cc.Pomelo();
      cc._RF.pop();
    }).call(this, require("buffer").Buffer);
  }, {
    buffer: 2
  } ],
  pool: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f74779vU0VBg693upY7Uc2M", "pool");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var Pool = function() {
      function Pool(template, comp) {
        this.template = template;
        this.comp = comp;
        this._pool = [];
      }
      Pool.prototype.recycle = function(t) {
        if (t && -1 == this._pool.indexOf(t)) {
          t.removeFromParent(false);
          var cp = this.comp ? t.getComponent(this.comp) : null;
          cp && cp.unuse && cp.unuse.apply(cp);
          this._pool.push(t);
        }
      };
      Pool.prototype.obtain = function() {
        var last = this._pool.length - 1;
        if (last < 0) return this.instantiate();
        var obj = this._pool[last];
        this._pool.length = last;
        var cp = this.comp ? obj.getComponent(this.comp) : null;
        cp && cp.use && cp.use.apply(cp);
        return obj;
      };
      Pool.prototype.instantiate = function() {
        var node = cc.instantiate(this.template);
        var cp = this.comp ? node.getComponent(this.comp) : null;
        cp && cp.use && cp.use.apply(cp);
        return node;
      };
      Pool.prototype.clear = function() {
        var count = this._pool.length;
        for (var i = 0; i < count; i++) {
          var node = this._pool[i];
          node.destroy();
        }
        this._pool.length = 0;
      };
      return Pool;
    }();
    exports.Pool = Pool;
    cc._RF.pop();
  }, {} ],
  promiseUtility: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fedc2FF2htHVoeM8e2JAJLw", "promiseUtility");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var PromiseUtility = function() {
      function PromiseUtility() {}
      PromiseUtility.genPromise = function(doFun) {
        var promise = new Promise(function(resolve, reject) {
          doFun(function(err, data) {
            err ? reject(err) : resolve(data);
          });
        });
        return promise;
      };
      PromiseUtility.getPromiseList = function(doFuns) {
        var list = [];
        for (var index = 0; index < doFuns.length; index++) {
          var element = doFuns[index];
          list.push(this.genPromise(element));
        }
        return list;
      };
      PromiseUtility.all = function(doFuns) {
        var promiseList = this.getPromiseList(doFuns);
        return Promise.all(promiseList);
      };
      PromiseUtility.race = function(doFuns) {
        var promiseList = this.getPromiseList(doFuns);
        return Promise.race(promiseList);
      };
      return PromiseUtility;
    }();
    exports.default = PromiseUtility;
    cc._RF.pop();
  }, {} ],
  public_rule_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3d573e6jUFPB5IrCv89baGx", "public_rule_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PublicRuleView = function(_super) {
      __extends(PublicRuleView, _super);
      function PublicRuleView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.ruleRichText = null;
        _this.closeBtnNode = null;
        _this.leftToggleRoot = null;
        _this.topToggleRoot = null;
        _this._leftCurrentSelect = 1;
        _this._topCurrentSelect = 1;
        _this._textArr = [ [] ];
        return _this;
      }
      PublicRuleView.prototype.onLoad = function() {
        this.closeBtnNode.on("click", function() {
          module_manager_1.default.instance.hideModule("PublicRule");
        });
        var leftTabs = this.leftToggleRoot.children;
        for (var i = 0; i < leftTabs.length; i++) {
          var tab = leftTabs[i];
          tab.off("toggle", this.onLeftTabClick, this);
          tab.on("toggle", this.onLeftTabClick, this);
        }
        var topTabs = this.topToggleRoot.children;
        for (var i = 0; i < topTabs.length; i++) {
          var tab = topTabs[i];
          tab.off("toggle", this.onTopTabClick, this);
          tab.on("toggle", this.onTopTabClick, this);
        }
        this._textArr.push([]);
        this._textArr[1][1] = "1\u3001\u6597\u5730\u4e3b\u662f\u4e00\u79cd\u4e09\u4eba\u6e38\u620f\uff0c\u5bf9\u5c40\u5f00\u59cb\u65f6\u901a\u8fc7\u53eb\u5730\u4e3b\u51b3\u5b9a\n\u9635\u8425\uff0c\u9635\u8425\u53cc\u65b9\u5bf9\u6218\uff0c\u5148\u51fa\u5b8c\u724c\u7684\u4e00\u65b9\u83b7\u80dc\u3002\n 2\u3001\u5730\u4e3b\u62e5\u6709\u4f18\u5148\u51fa\u724c\u6743\uff0c\u73a9\u5bb6\u6309\u9006\u65f6\u9488\u65b9\u5411\u8ddf\u724c\uff0c\u6bcf\u4f4d\n\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u7528\u66f4\u5927\u7684\u724c\u7ec4\u8ddf\u724c\u6216\u4e0d\u8ddf\u3002\n";
        this._textArr[1][2] = "1\u3001\u5355\u724c\uff1a\u5355\u5f20\u7684\u724c\uff08\u4f8b\u5982\u9ed1\u6843K\uff09\n2\u3001\u5bf9\u5b50\uff1a\u724c\u9762\u6570\u5b57\u76f8\u540c\u76842\u5f20\u724c\uff08\u4f8b\u5982\u9ed1\u6843K+\u7ea2\u6843K\uff09\n3\u3001\u4e09\u5f20\uff1a\u724c\u9762\u6570\u5b57\u76f8\u540c\u76843\u5f20\u724c\uff08\u4f8b\u5982\u9ed1\u6843K+\u7ea2\u6843K+\u6885\u82b1\nK\uff09\n4\u3001\u4e09\u5e26\u4e00\uff1a\u724c\u9762\u6570\u5b57\u76f8\u540c\u76843\u5f20\u724c+1\u5f20\u5355\u724c\u6216\u5bf9\u5b50\uff08\u4f8b\u5982\nKKK+8 \u6216 QQQ+44\uff09\n5\u3001\u98de\u673a\uff1a2\u4e2a\u6216\u66f4\u591a\u7684\u8fde\u7eed\u4e09\u5f20\u724c\u578b\uff08\u4f8b\u5982\uff1a333444 \u6216 \n555666777\uff09\n6\u3001\u98de\u673a\u5e26\u7fc5\u8180\uff1a\u98de\u673a+\u540c\u6570\u91cf\u7684\u5355\u724c \u6216 \u98de\u673a+\u540c\u6570\u91cf\u7684\u5bf9\n\u5b50\uff08\u4f8b\u5982\uff1a333444+78 \u6216 444555+7788\uff09\n7\u3001\u987a\u5b50\uff1a5\u5f20\u6216\u4ee5\u4e0a\u7684\u8fde\u7eed\u5355\u724c\uff0c2\u4e0d\u53ef\u4ee5\u548c\u5176\u5b83\u724c\u7ec4\u6210\u987a\n\u5b50\uff08\u4f8b\u598278910J\uff0c3456789\uff09\n8\u3001\u8fde\u5bf9\uff1a3\u5bf9\u6216\u4ee5\u4e0a\u7684\u8fde\u7eed\u5bf9\u5b50\u724c\u578b\uff0c2\u4e0d\u53ef\u4ee5\u548c\u5176\u5b83\u724c\u7ec4\n\u6210\u8fde\u5bf9\uff08\u4f8b\u5982334455\uff0c991010JJQQ\uff09\n9\u3001\u56db\u5e26\u4e8c\uff1a\u724c\u9762\u6570\u5b57\u76f8\u540c\u76844\u5f20\u724c+2\u5f20\u4e0d\u540c\u5355\u724c\u62162\u4e2a\u5bf9\u5b50\n\uff08\u4f8b\u5982KKKK+89\uff0c8888+KKAA\uff09\n10\u3001\u70b8\u5f39\uff1a\u724c\u9762\u6570\u5b57\u76f8\u540c\u76844\u5f20\u724c\uff08\u4f8b\u5982KKKK\uff0cQQQQ\uff0c\n3333\uff09\n11\u3001\u738b\u70b8\uff1a\u53cc\u738b\uff0c\u5373\u5927\u5c0f\u738b\uff0c\u6700\u5927\u7684\u724c\n";
        this._textArr.push([]);
        this._textArr[2][1] = "1\u3001\u4e0d\u6d17\u724c\u73a9\u6cd5\u7684\u724c\u578b\u89c4\u5219\u4e0e\u7ecf\u5178\u73a9\u6cd5\u76f8\u540c\uff0c\u4f46\u53d1\u724c\u65b9\u5f0f\n\u4e0d\u540c\u3002\n2\u3001\u5728\u4e0d\u6d17\u724c\u73a9\u6cd5\u4e2d\uff0c\u73a9\u5bb6\u6253\u5b8c\u4e00\u5c40\u540e\uff0c\u6240\u6709\u7684\u724c\u5c06\u4e0d\u4f1a\n\u6d17\u724c\uff0c\u6309\u4e00\u5b9a\u987a\u5e8f\u5207\u724c\u540e\u4f9d\u6b21\u53d1\u7ed9\u4e0b\u4e00\u684c\u73a9\u5bb6\u3002\n3\u3001\u73a9\u6cd5\u7279\u70b91\uff1a\u624b\u724c\u724c\u578b\u66f4\u52a0\u6574\u9f50\u3002\n4\u3001\u73a9\u6cd5\u7279\u70b92\uff1a\u62ff\u5230\u70b8\u5f39\u7684\u53ef\u80fd\u6027\u66f4\u9ad8\u3002\n5\u3001\u73a9\u6cd5\u7279\u70b93\uff1a\u5355\u5c40\u8017\u65f6\u66f4\u77ed\uff0c\u66f4\u523a\u6fc0\uff0c\u66f4\u6d41\u7545\uff01\n";
        this._textArr[2][2] = "1\u3001\u540c\u7ecf\u5178\u73a9\u6cd5";
      };
      PublicRuleView.prototype.onLeftTabClick = function(event) {
        this._leftCurrentSelect = Number(event.node.name);
        cc.log("\u70b9\u51fb\u4e86", this._leftCurrentSelect);
        this.ruleRichText.string = this._textArr[this._leftCurrentSelect][this._topCurrentSelect];
      };
      PublicRuleView.prototype.onTopTabClick = function(event) {
        this._topCurrentSelect = Number(event.node.name);
        this.ruleRichText.string = this._textArr[this._leftCurrentSelect][this._topCurrentSelect];
      };
      PublicRuleView.prototype.showRule = function() {
        this.ruleRichText.string = this._textArr[this._leftCurrentSelect][this._topCurrentSelect];
      };
      __decorate([ property(cc.RichText) ], PublicRuleView.prototype, "ruleRichText", void 0);
      __decorate([ property(cc.Node) ], PublicRuleView.prototype, "closeBtnNode", void 0);
      __decorate([ property(cc.Node) ], PublicRuleView.prototype, "leftToggleRoot", void 0);
      __decorate([ property(cc.Node) ], PublicRuleView.prototype, "topToggleRoot", void 0);
      PublicRuleView = __decorate([ ccclass ], PublicRuleView);
      return PublicRuleView;
    }(view_base_1.default);
    exports.default = PublicRuleView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/view_base": "view_base"
  } ],
  public_rule: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "35019A401BNEYBV7FA7rdsR", "public_rule");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var public_rule_view_1 = require("./public_rule_view");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PublicRule = function(_super) {
      __extends(PublicRule, _super);
      function PublicRule() {
        var _this = _super.call(this) || this;
        _this.windowPrefabResPath = "package/public/Public_Rule";
        _this.viewType = public_rule_view_1.default;
        _this.modelType = null;
        _this.needAnim = true;
        _this.needViewMask = true;
        return _this;
      }
      PublicRule.prototype.onShow = function() {
        this.view.showRule();
      };
      PublicRule = __decorate([ ccclass, module_base_1.moduleInit("PublicRule") ], PublicRule);
      return PublicRule;
    }(module_base_1.default);
    exports.default = PublicRule;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/module_base": "module_base",
    "./public_rule_view": "public_rule_view"
  } ],
  rain_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f06b5A/rGRFiZNa5FJkB31+", "rain_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu, property = _a.property;
    var renderEngine = cc.renderer.renderEngine;
    var renderer = renderEngine.renderer;
    var RainShader = function(_super) {
      __extends(RainShader, _super);
      function RainShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Rain";
        _this._needUpdate = true;
        _this._vert = "\n    uniform mat4 viewProj;\n    uniform mat4 model;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        mat4 mvp;\n        mvp = viewProj * model;\n        vec4 pos = mvp * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    // Heartfelt - by Martijn Steinrucken aka BigWings - 2017\n    // countfrolic@gmail.com\n    // License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n    \n    // I revisited the rain effect I did for another shader. This one is better in multiple ways:\n    // 1. The glass gets foggy.\n    // 2. Drops cut trails in the fog on the glass.\n    // 3. The amount of rain is adjustable (with Mouse.y)\n    \n    // To have full control over the rain, uncomment the HAS_HEART define \n    \n    // A video of the effect can be found here:\n    // https://www.youtube.com/watch?v=uiF5Tlw22PI&feature=youtu.be\n    \n    // Music - Alone In The Dark - Vadim Kiselev\n    // https://soundcloud.com/ahmed-gado-1/sad-piano-alone-in-the-dark\n    // Rain sounds:\n    // https://soundcloud.com/elirtmusic/sleeping-sound-rain-and-thunder-1-hours\n    \n    #define S(a, b, t) smoothstep(a, b, t)\n    //#define CHEAP_NORMALS\n    \n    uniform sampler2D texture;\n    uniform vec4 color;\n    uniform vec3 iResolution;\n    uniform float time;\n    uniform vec2 texSize;\n    varying vec2 uv0;\n    \n    vec3 N13(float p) {\n        //  from DAVE HOSKINS\n       vec3 p3 = fract(vec3(p) * vec3(.1031,.11369,.13787));\n       p3 += dot(p3, p3.yzx + 19.19);\n       return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n    }\n    \n    vec4 N14(float t) {\n        return fract(sin(t*vec4(123., 1024., 1456., 264.))*vec4(6547., 345., 8799., 1564.));\n    }\n    float N(float t) {\n        return fract(sin(t*12345.564)*7658.76);\n    }\n    \n    float Saw(float b, float t) {\n        return S(0., b, t)*S(1., b, t);\n    }\n    \n    vec2 DropLayer2(vec2 uv, float t) {\n        vec2 UV = uv;\n        \n        uv.y += t*0.75;\n        vec2 a = vec2(6., 1.);\n        vec2 grid = a*2.;\n        vec2 id = floor(uv*grid);\n        \n        float colShift = N(id.x); \n        uv.y += colShift;\n        \n        id = floor(uv*grid);\n        vec3 n = N13(id.x*35.2+id.y*2376.1);\n        vec2 st = fract(uv*grid)-vec2(.5, 0);\n        \n        float x = n.x-.5;\n        \n        float y = UV.y*20.;\n        float wiggle = sin(y+sin(y));\n        x += wiggle*(.5-abs(x))*(n.z-.5);\n        x *= .7;\n        float ti = fract(t+n.z);\n        y = (Saw(.85, ti)-.5)*.9+.5;\n        vec2 p = vec2(x, y);\n        \n        float d = length((st-p)*a.yx);\n        \n        float mainDrop = S(.4, .0, d);\n        \n        float r = sqrt(S(1., y, st.y));\n        float cd = abs(st.x-x);\n        float trail = S(.23*r, .15*r*r, cd);\n        float trailFront = S(-.02, .02, st.y-y);\n        trail *= trailFront*r*r;\n        \n        y = UV.y;\n        float trail2 = S(.2*r, .0, cd);\n        float droplets = max(0., (sin(y*(1.-y)*120.)-st.y))*trail2*trailFront*n.z;\n        y = fract(y*10.)+(st.y-.5);\n        float dd = length(st-vec2(x, y));\n        droplets = S(.3, 0., dd);\n        float m = mainDrop+droplets*r*trailFront;\n        \n        //m += st.x>a.y*.45 || st.y>a.x*.165 ? 1.2 : 0.;\n        return vec2(m, trail);\n    }\n    \n    float StaticDrops(vec2 uv, float t) {\n        uv *= 40.;\n        \n        vec2 id = floor(uv);\n        uv = fract(uv)-.5;\n        vec3 n = N13(id.x*107.45+id.y*3543.654);\n        vec2 p = (n.xy-.5)*.7;\n        float d = length(uv-p);\n        \n        float fade = Saw(.025, fract(t+n.z));\n        float c = S(.3, 0., d)*fract(n.z*10.)*fade;\n        return c;\n    }\n    \n    vec2 Drops(vec2 uv, float t, float l0, float l1, float l2) {\n        float s = StaticDrops(uv, t)*l0; \n        vec2 m1 = DropLayer2(uv, t)*l1;\n        vec2 m2 = DropLayer2(uv*1.85, t)*l2;\n        \n        float c = s+m1.x+m2.x;\n        c = S(.3, 1., c);\n        \n        return vec2(c, max(m1.y*l0, m2.y*l1));\n    }\n    \n    void main()\n    {\n        vec4 iMouse = vec4(0.0, 0.0, 0.0, 0.0);\n        vec2 fragCoord = vec2(uv0.x * texSize.x - 0.5 * texSize.x, 0.5 * texSize.y - uv0.y * texSize.y);\n    \n        vec2 uv = fragCoord.xy / iResolution.y;\n        vec2 UV = (fragCoord.xy+.5*iResolution.xy) / iResolution.xy;\n        vec3 M = iMouse.xyz/iResolution.xyz;\n        float T = time+M.x*2.;\n        \n        #ifdef HAS_HEART\n            T = mod(time, 102.);\n            T = mix(T, M.x*102., M.z>0.?1.:0.);\n        #endif\n        \n        float t = T*.2;\n        \n        float rainAmount = iMouse.z>0. ? M.y : sin(T*.05)*.3+.7;\n        \n        float maxBlur = mix(3., 6., rainAmount);\n        float minBlur = 2.;\n        \n        float story = 0.;\n        float heart = 0.;\n        \n        #ifdef HAS_HEART\n            story = S(0., 70., T);\n            \n            t = min(1., T/70.);\t\t\t\t\t\t// remap drop time so it goes slower when it freezes\n            t = 1.-t;\n            t = (1.-t*t)*70.;\n            \n            float zoom= mix(.3, 1.2, story);\t\t// slowly zoom out\n            uv *=zoom;\n            minBlur = 4.+S(.5, 1., story)*3.;\t\t// more opaque glass towards the end\n            maxBlur = 6.+S(.5, 1., story)*1.5;\n            \n            vec2 hv = uv-vec2(.0, -.1);\t\t\t\t// build heart\n            hv.x *= .5;\n            float s = S(110., 70., T);\t\t\t\t// heart gets smaller and fades towards the end\n            hv.y-=sqrt(abs(hv.x))*.5*s;\n            heart = length(hv);\n            heart = S(.4*s, .2*s, heart)*s;\n            rainAmount = heart;\t\t\t\t\t\t// the rain is where the heart is\n            \n            maxBlur-=heart;\t\t\t\t\t\t\t// inside the heart slighly less foggy\n            uv *= 1.5;\t\t\t\t\t\t\t\t// zoom out a bit more\n            t *= .25;\n        #else\n            float zoom = -cos(T*.2);\n            uv *= .7+zoom*.3;\n        #endif\n        UV = (UV-.5)*(.9+zoom*.1)+.5;\n        \n        float staticDrops = S(-.5, 1., rainAmount)*2.;\n        float layer1 = S(.25, .75, rainAmount);\n        float layer2 = S(.0, .5, rainAmount);\n        \n        vec2 c = Drops(uv, t, staticDrops, layer1, layer2);\n        #ifdef CHEAP_NORMALS\n            vec2 n = vec2(dFdx(c.x), dFdy(c.x));// cheap normals (3x cheaper, but 2 times shittier ;))\n        #else\n            vec2 e = vec2(.001, 0.);\n            float cx = Drops(uv+e, t, staticDrops, layer1, layer2).x;\n            float cy = Drops(uv+e.yx, t, staticDrops, layer1, layer2).x;\n            vec2 n = vec2(cx-c.x, cy-c.x);\t\t// expensive normals\n        #endif\n    \n        #ifdef HAS_HEART\n            n *= 1.-S(60., 85., T);\n            c.y *= 1.-S(80., 100., T)*.8;\n        #endif\n    \n        float focus = mix(maxBlur-c.y, minBlur, S(.1, .2, c.x));\n        vec3 col = texture2D(texture, UV+n).rgb;\n                                // make time sync with first lightnoing\n    \n        #ifdef USE_POST_PROCESSING\n            t = (T+3.)*.5;\t\t\t\n            float colFade = sin(t*.2)*.5+.5+story;\n            col *= mix(vec3(1.), vec3(.8, .9, 1.3), colFade);\t// subtle color shift\n            float fade = S(0., 10., T);\t\t\t\t\t\t\t// fade in at the start\n            float lightning = sin(t*sin(t*10.));\t\t\t\t// lighting flicker\n            lightning *= pow(max(0., sin(t+sin(t))), 10.);\t\t// lightning flash\n            col *= 1.+lightning*fade*mix(1., .1, story*story);\t// composite lightning\n            col *= 1.-dot(UV-=.5, UV);\t\t\t\t\t\t\t// vignette\n    \n            #ifdef HAS_HEART\n                col = mix(pow(col, vec3(1.2)), col, heart);\n                fade *= S(102., 97., T);\n            #endif\n    \n            col *= fade;\t\t\t\t\t\t\t\t\t\t// composite start and end fade\n        #endif\n    \n        //col = vec3(heart);\n        gl_FragColor = vec4(col, 1.);\n    }\n    ";
        _this._params = [ {
          name: "texSize",
          type: renderer.PARAM_FLOAT2
        }, {
          name: "iResolution",
          type: renderer.PARAM_FLOAT3
        } ];
        _this._defines = [ {
          name: "HAS_HEART",
          value: false
        }, {
          name: "USE_POST_PROCESSING",
          value: true
        } ];
        return _this;
      }
      RainShader.prototype.setParamValue = function(material) {
        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);
        var texSize = new cc.Vec2(this.node.width, this.node.height);
        material.setParamValue("iResolution", iResolution);
        material.setParamValue("texSize", texSize);
      };
      RainShader = __decorate([ ccclass, menu("custom/Shader/Rain") ], RainShader);
      return RainShader;
    }(shader_component_1.default);
    exports.default = RainShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  recommend_tools: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "96664G0LSRBo5MoEj24jiob", "recommend_tools");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var RecommendTools = function() {
      function RecommendTools() {}
      RecommendTools.copy_table_value = function(t, count) {
        var ntable = [];
        for (var i = 0; i < t.length; i++) {
          var v = t[i];
          for (var j = 0; j < count; j++) ntable.push(v);
        }
        return ntable;
      };
      RecommendTools.ArraySubtract = function(t1, t2) {
        var r = [];
        var tempt2 = RecommendTools.copy_array(t2);
        for (var i = 0; i < t1.length; i++) {
          var element = t1[i];
          var temp1 = false;
          var num1 = 0;
          for (var j = 0; j < tempt2.length; j++) {
            var tmpE = tempt2[j];
            if (element == tmpE) {
              temp1 = true;
              num1 = j;
            }
          }
          temp1 ? tempt2.splice(num1, 1) : r.push(element);
        }
        return r;
      };
      RecommendTools.copy_array = function(t) {
        var copyt = [];
        for (var i = 0; i < t.length; i++) {
          var v = t[i];
          copyt.push(v);
        }
        return copyt;
      };
      RecommendTools.contains = function(array, e) {
        for (var i = 0; i < array.length; i++) {
          var v = array[i];
          if (v == e) return true;
        }
        return false;
      };
      RecommendTools.isSameValue = function(array) {
        if (RecommendTools.is_null_or_empty(array)) return true;
        var lastVal = null;
        for (var i = 0; i < array.length; i++) {
          var element = array[i];
          if (i > 0 && lastVal != element) return false;
          lastVal = element;
        }
        return true;
      };
      RecommendTools.sort_descend = function(t) {
        t.sort(function(a, b) {
          return b - a;
        });
        return t;
      };
      RecommendTools.sort_ascend = function(t) {
        t.sort(function(a, b) {
          return a - b;
        });
        return t;
      };
      RecommendTools.usort = function(array) {
        var newArray = [];
        for (var i = 0; i < array.length; i++) {
          var element = array[i];
          RecommendTools.contains(newArray, element) || newArray.push(element);
        }
        RecommendTools.sort_ascend(newArray);
        return newArray;
      };
      RecommendTools.get_mulsame = function(array, count) {
        var copyt = RecommendTools.usort(array);
        var mul = [];
        for (var i = 0; i < copyt.length; i++) {
          var element = copyt[i];
          var ts = 0;
          for (var j = 0; j < array.length; j++) {
            var tmp = array[j];
            tmp == element && (ts += 1);
          }
          ts >= count && mul.push(element);
        }
        return mul;
      };
      RecommendTools.remove_count_same = function(array, count) {
        var removel = RecommendTools.get_mulsame(array, count);
        var surl = RecommendTools.ArraySubtract(array, RecommendTools.copy_table_value(removel, count));
        return {
          removel: removel,
          surl: surl
        };
      };
      RecommendTools.table_value_shunzi = function(t) {
        var shunzi = true;
        if (0 == t.length) return false;
        if (t.length > 1) {
          var copyt = RecommendTools.copy_array(t);
          copyt = RecommendTools.sort_ascend(copyt);
          var num = void 0;
          for (var i = 0; i < copyt.length; i++) {
            if (i > 0 && num + 1 != copyt[i]) return false;
            num = copyt[i];
          }
        }
        return shunzi;
      };
      RecommendTools.is_null_or_empty = function(list) {
        if (null == list) return true;
        if (!Array.isArray(list)) return true;
        if (0 == list.length) return true;
        return false;
      };
      RecommendTools.TableAdd = function(t, num) {
        null == num && (num = t.length);
        var r = [];
        for (var i = 0; i < num; i++) {
          var e = t[i];
          for (var j = 0; j < e.length; j++) {
            var element = e[j];
            r.push(element);
          }
        }
        return r;
      };
      RecommendTools.find_point_shunzi = function(t, len) {
        var copyt = RecommendTools.usort(t);
        var shunzil = [];
        if (copyt.length >= len && len > 1) {
          var tmpLen = copyt.length - len + 1;
          for (var i = 0; i < tmpLen; i++) {
            var daixuan = [];
            for (var j = i; j <= len + i - 1; j++) {
              var element = copyt[j];
              daixuan.push(element);
            }
            RecommendTools.table_value_shunzi(daixuan) && shunzil.push(daixuan);
          }
        }
        return shunzil;
      };
      RecommendTools.two_table_add = function(t1, t2) {
        return RecommendTools.TableAdd([ t1, t2 ], 2);
      };
      RecommendTools.Max = function(t) {
        var max = 0;
        for (var i = 0; i < t.length; i++) {
          var element = t[i];
          element > max && (max = element);
        }
        return max;
      };
      return RecommendTools;
    }();
    exports.RecommendTools = RecommendTools;
    cc._RF.pop();
  }, {} ],
  result_module: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c39b3yOHhhPb74Q/47n5pEC", "result_module");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var result_view_1 = require("./result_view");
    var module_manager_1 = require("../../../../framework/core/module_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var ResultModule = function(_super) {
      __extends(ResultModule, _super);
      function ResultModule() {
        var _this = _super.call(this) || this;
        _this.lineHeight = 1;
        _this.windowPrefabResPath = "package/pdk/module/table/doudizhu_gold_onegame_result";
        _this.viewType = result_view_1.ResultView;
        _this.modelType = null;
        _this.clickAnywhereClose = false;
        _this.needViewMask = true;
        return _this;
      }
      ResultModule.prototype.onShow = function(arg) {
        _super.prototype.onShow.call(this, arg);
        this.func = arg.func;
        this.data = arg.data;
        this.refreshUI();
      };
      ResultModule.prototype.refreshUI = function() {
        this.view.updateUI(this.data);
      };
      ResultModule.prototype.onButtonClick = function(node, customEventData) {
        var pName = node.name;
        switch (pName) {
         case "LeaveButton":
          module_manager_1.default.instance.destroyModule("ResultModule");
          break;

         case "ContinuButton":
          this.func && this.func();
          module_manager_1.default.instance.destroyModule("ResultModule");
        }
      };
      ResultModule = __decorate([ ccclass, module_base_1.moduleInit("ResultModule") ], ResultModule);
      return ResultModule;
    }(module_base_1.default);
    exports.ResultModule = ResultModule;
    cc._RF.pop();
  }, {
    "../../../../framework/core/module_manager": "module_manager",
    "../../../../framework/core/mvvm/module_base": "module_base",
    "./result_view": "result_view"
  } ],
  result_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7b21dK0xMdGdanVNt3JvpLQ", "result_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var game_util_1 = require("../../../../utility/game_util");
    var score_item_1 = require("./score_item");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var ResultView = function(_super) {
      __extends(ResultView, _super);
      function ResultView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.winner = null;
        _this.loser = null;
        _this.winScore = null;
        _this.loseScore = null;
        _this.prefab = null;
        _this.content = null;
        return _this;
      }
      ResultView.prototype.updateUI = function(data) {
        this.content.removeAllChildren();
        var winner = data.msg.winUser;
        var mChairid = data.roleid;
        var isWinner = winner == mChairid;
        this.winner.active = isWinner;
        this.loser.active = !isWinner;
        this.winScore.node.active = isWinner;
        this.loseScore.node.active = !isWinner;
        var msgData = data.msg;
        for (var index = 0; index < msgData.scores.length; index++) {
          var score = msgData.scores[index];
          var cards = msgData.handCardCount[index];
          index == mChairid && (isWinner ? this.winScore.string = "+" + score : this.loseScore.string = "-" + score);
          var item = game_util_1.default.AddChild(this.prefab, this.content);
          var scoreitem = item.getComponent(score_item_1.default);
          scoreitem.setContent("", score, cards, score);
        }
      };
      __decorate([ property(cc.Node) ], ResultView.prototype, "winner", void 0);
      __decorate([ property(cc.Node) ], ResultView.prototype, "loser", void 0);
      __decorate([ property(cc.Label) ], ResultView.prototype, "winScore", void 0);
      __decorate([ property(cc.Label) ], ResultView.prototype, "loseScore", void 0);
      __decorate([ property(cc.Node) ], ResultView.prototype, "prefab", void 0);
      __decorate([ property(cc.Node) ], ResultView.prototype, "content", void 0);
      ResultView = __decorate([ ccclass ], ResultView);
      return ResultView;
    }(view_base_1.default);
    exports.ResultView = ResultView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/view_base": "view_base",
    "../../../../utility/game_util": "game_util",
    "./score_item": "score_item"
  } ],
  room_config: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "77201a59WZNYakL5YqjQb7B", "room_config");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var PdkRoomConfig;
    (function(PdkRoomConfig) {
      PdkRoomConfig.config = [ {
        tag: {
          title: "xx1",
          rowCount: 3
        },
        childList: [ {
          disable: true,
          json: "xx2",
          toggleType: 1,
          title: "nnnn",
          toggleisOn: true,
          value: 8
        } ]
      } ];
    })(PdkRoomConfig = exports.PdkRoomConfig || (exports.PdkRoomConfig = {}));
    cc._RF.pop();
  }, {} ],
  rule_data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f29e1uzdSRCfb72GD70pQjf", "rule_data");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ToggleType;
    (function(ToggleType) {
      ToggleType[ToggleType["Circle"] = 1] = "Circle";
      ToggleType[ToggleType["Square"] = 2] = "Square";
    })(ToggleType = exports.ToggleType || (exports.ToggleType = {}));
    var IChumpItem = function() {
      function IChumpItem() {}
      return IChumpItem;
    }();
    exports.IChumpItem = IChumpItem;
    cc._RF.pop();
  }, {} ],
  rule_factory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3d144bU6hhIj4pEK42SJ9dg", "rule_factory");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var RuleFactory = function() {
      function RuleFactory() {}
      RuleFactory.prototype.getConfig = function(ruleCfg) {
        var _this = this;
        ruleCfg || cc.error("\u4e0d\u5b58\u5728\u89c4\u5219\u6587\u4ef6");
        var chumps = [];
        ruleCfg.forEach(function(rule) {
          var chump = {
            title: rule.tag.title,
            rowCount: rule.tag.rowCount,
            childArray: _this.praseChildItem(rule.childList)
          };
          chumps.push(chump);
        });
        return chumps;
      };
      RuleFactory.prototype.praseChildItem = function(childList) {
        var childs = [];
        for (var _i = 0, childList_1 = childList; _i < childList_1.length; _i++) {
          var child = childList_1[_i];
          childs.push(child);
        }
        return childs;
      };
      RuleFactory.instance = new RuleFactory();
      return RuleFactory;
    }();
    exports.RuleFactory = RuleFactory;
    cc._RF.pop();
  }, {} ],
  scene_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "577fd2BwQpDV4Za7nKUpX/5", "scene_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_manager_1 = require("../framework/core/module_manager");
    var app_data_1 = require("../pacakge/public/const/app_data");
    var login_server_1 = require("../pacakge/server/loginserver/login_server");
    var hall_server_1 = require("../pacakge/server/hallserver/hall_server");
    var game_server_1 = require("../pacakge/server/gameserver/game_server");
    var hall_module_1 = require("../pacakge/hall/hall_module");
    var auth_module_1 = require("../pacakge/hall/module/auth/auth_module");
    var audio_manager_1 = require("./audio_manager");
    var game_cfg_1 = require("../pacakge/public/const/game_cfg");
    var SceneManager = function() {
      function SceneManager() {}
      SceneManager.init = function() {
        this.subGames["FN_PDK"] = "PdkModule";
      };
      SceneManager.gotoSubGame = function(data, onFinish) {
        var _this = this;
        var gameCgf = game_cfg_1.GameCfg[app_data_1.default.gameid];
        if (!gameCgf) {
          cc.error("\u6e38\u620f\u914d\u7f6e\u4e0d\u5b58\u5728: ", app_data_1.default.gameid);
          return;
        }
        this.tableModuleName = gameCgf.module;
        if (!this.tableModuleName) {
          cc.error("no subGame\uff1a", this.tableModuleName);
          return;
        }
        module_manager_1.default.instance.removeModule(this.tableModuleName);
        module_manager_1.default.instance.showModuleName(this.tableModuleName, data, function() {
          module_manager_1.default.instance.hideAllModule([ _this.tableModuleName ]);
          module_manager_1.default.instance.destroyRemoveModule(_this.tableModuleName);
          onFinish && onFinish();
        });
      };
      SceneManager.gotoLogin = function() {
        login_server_1.default.instance.close();
        hall_server_1.default.instance.close();
        game_server_1.default.instance.close();
        module_manager_1.default.instance.showModule(auth_module_1.default);
      };
      SceneManager.gotoHall = function(isNeedCheck) {
        void 0 === isNeedCheck && (isNeedCheck = true);
        login_server_1.default.instance.close();
        hall_server_1.default.instance.close();
        game_server_1.default.instance.close();
        hall_server_1.default.instance.isNeedCheck = isNeedCheck;
        hall_server_1.default.instance.loginHallServer();
      };
      SceneManager.showHallUI = function() {
        var _this = this;
        audio_manager_1.default.instance.playMusicLoop();
        module_manager_1.default.instance.hideAllModule([ "AuthModule", this.tableModuleName ]);
        "" != SceneManager.lastEntranceOpenModuleName ? module_manager_1.default.instance.showModuleName(this.lastEntranceOpenModuleName, null, function() {
          module_manager_1.default.instance.destroyModule(_this.tableModuleName);
        }) : module_manager_1.default.instance.showModule(hall_module_1.default, null, function() {
          module_manager_1.default.instance.destroyModule(_this.tableModuleName);
        });
      };
      SceneManager.tableModuleName = "DouDiZhuTableModule";
      SceneManager.lastEntranceOpenModuleName = "";
      SceneManager.subGames = {};
      return SceneManager;
    }();
    exports.default = SceneManager;
    cc._RF.pop();
  }, {
    "../framework/core/module_manager": "module_manager",
    "../pacakge/hall/hall_module": "hall_module",
    "../pacakge/hall/module/auth/auth_module": "auth_module",
    "../pacakge/public/const/app_data": "app_data",
    "../pacakge/public/const/game_cfg": "game_cfg",
    "../pacakge/server/gameserver/game_server": "game_server",
    "../pacakge/server/hallserver/hall_server": "hall_server",
    "../pacakge/server/loginserver/login_server": "login_server",
    "./audio_manager": "audio_manager"
  } ],
  score_item: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6cc94IYv+tJuIE7UxzuG+8F", "score_item");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ScoreItem = function(_super) {
      __extends(ScoreItem, _super);
      function ScoreItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.nickName = null;
        _this.difen = null;
        _this.cards = null;
        _this.gold = null;
        return _this;
      }
      ScoreItem.prototype.setContent = function(nickName, difen, cards, gold) {
        this.nickName.string = "\u6682\u65e0\u6570\u636e";
        this.difen.string = difen;
        this.cards.string = cards.toString();
        this.gold.string = gold.toString();
      };
      __decorate([ property(cc.Label) ], ScoreItem.prototype, "nickName", void 0);
      __decorate([ property(cc.Label) ], ScoreItem.prototype, "difen", void 0);
      __decorate([ property(cc.Label) ], ScoreItem.prototype, "cards", void 0);
      __decorate([ property(cc.Label) ], ScoreItem.prototype, "gold", void 0);
      ScoreItem = __decorate([ ccclass ], ScoreItem);
      return ScoreItem;
    }(cc.Component);
    exports.default = ScoreItem;
    cc._RF.pop();
  }, {} ],
  screenAdaptationUtil: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0fa15szH4hPZqsG9SB4qXSa", "screenAdaptationUtil");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var app_data_1 = require("../const/app_data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var AdaptationType;
    (function(AdaptationType) {
      AdaptationType[AdaptationType["LetfOffset"] = 0] = "LetfOffset";
      AdaptationType[AdaptationType["RightOffset"] = 1] = "RightOffset";
      AdaptationType[AdaptationType["LessenX"] = 2] = "LessenX";
    })(AdaptationType || (AdaptationType = {}));
    var screenAdaptationUtil = function(_super) {
      __extends(screenAdaptationUtil, _super);
      function screenAdaptationUtil() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.adaptationStyle = AdaptationType.LetfOffset;
        _this.adaptationValue = 50;
        return _this;
      }
      screenAdaptationUtil.prototype.onLoad = function() {
        if (this.node) {
          this.widget = this.node.getComponent(cc.Widget);
          this.widget && (this.widgetLeft = this.widget.left);
        }
        this.adaptation();
      };
      screenAdaptationUtil.prototype.start = function() {};
      screenAdaptationUtil.prototype.onDestroy = function() {};
      screenAdaptationUtil.prototype.refresh_screenAdaptationUtil = function(data) {
        if (!this || !this.node) return;
        if (this.node.parent && this.node.parent.name) {
          var viewName = this.node.parent.name;
          if ("hall_match" != viewName) return;
          if (!app_data_1.default.isIphoneX) return;
          this.changePos(data);
        }
      };
      screenAdaptationUtil.prototype.changePos = function(data) {
        var widget = this.node.getComponent(cc.Widget);
        var offset = app_data_1.default.iphonexOffset;
        var value = data.value;
        "portrait" == value || ("landscape" == value ? widget.left = this.widgetLeft + offset : "landscapeReverse" == value && (widget.left = this.widgetLeft));
      };
      screenAdaptationUtil.prototype.adaptation = function() {
        if (!app_data_1.default.isIphoneX) return;
        var offset = app_data_1.default.iphonexOffset;
        0 != this.adaptationValue && (offset = this.adaptationValue);
        switch (this.adaptationStyle) {
         case AdaptationType.LetfOffset:
          null == this.widget ? this.node.position = cc.v2(this.node.position.x + offset, this.node.position.y) : this.widget.isAlignLeft && (this.widget.left = this.widget.left + offset);
          break;

         case AdaptationType.RightOffset:
          null == this.widget ? this.node.position = cc.v2(this.node.position.x - offset, this.node.position.y) : this.widget.isAlignRight && (this.widget.right = this.widget.right + offset);
          break;

         case AdaptationType.LessenX:
          this.node.scaleX = .9;
        }
      };
      __decorate([ property({
        type: cc.Enum(AdaptationType)
      }) ], screenAdaptationUtil.prototype, "adaptationStyle", void 0);
      __decorate([ property(Number) ], screenAdaptationUtil.prototype, "adaptationValue", void 0);
      screenAdaptationUtil = __decorate([ ccclass, menu("UI/ScreenAdaptationUtil") ], screenAdaptationUtil);
      return screenAdaptationUtil;
    }(cc.Component);
    exports.default = screenAdaptationUtil;
    cc._RF.pop();
  }, {
    "../const/app_data": "app_data"
  } ],
  scrollview: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cabcfjsJYlK6aaQZSZG2AIt", "scrollview");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ScrollView = function() {
      function ScrollView(params) {
        var _this = this;
        this.m_scrollview = params.scrollview;
        this.m_view = params.view;
        this.m_content = params.content;
        this.m_node_pools = [];
        this.m_item_templates = [];
        params.item_templates.forEach(function(tpl) {
          tpl.node.active = false;
          var item = {
            key: tpl.key,
            item: tpl.node
          };
          _this.m_item_templates.push(item);
        });
        this.m_dir = params.direction || ScrollDirection.Vertical;
        this.m_width = params.width || this.m_view.width;
        this.m_height = params.height || this.m_view.height;
        this.m_gap_x = params.gap_x || 0;
        this.m_gap_y = params.gap_y || 0;
        this.m_cb_host = params.cb_host;
        this.item_update_func = params.item_update_func;
        this.recycle_cb = params.recycle_cb;
        this.scroll_to_end_cb = params.scroll_to_end_cb;
        this.m_auto_scrolling = params.auto_scrolling || false;
        this.m_dir == ScrollDirection.Vertical ? this.m_content.width = this.m_width : this.m_content.height = this.m_height;
        this.m_view.setContentSize(this.m_width, this.m_height);
        this.m_scrollview.vertical = this.m_dir == ScrollDirection.Vertical;
        this.m_scrollview.horizontal = this.m_dir == ScrollDirection.Horizontal;
        this.m_scrollview.inertia = true;
        this.m_scrollview.node.on("scrolling", this.on_scrolling, this);
        this.m_scrollview.node.on("scroll-to-bottom", this.on_scroll_to_end, this);
        this.m_scrollview.node.on("scroll-to-right", this.on_scroll_to_end, this);
      }
      ScrollView.prototype.set_data = function(datas) {
        var _this = this;
        this.clear_items();
        this.m_items = [];
        datas.forEach(function(data, index) {
          var item = _this.pack_item(index, data);
          _this.m_items.push(item);
        });
        this.layout_items(0);
        this.resize_content();
        this.m_start_index = -1;
        this.m_stop_index = -1;
        this.m_dir == ScrollDirection.Vertical ? this.m_content.y = 0 : this.m_content.x = 0;
        this.m_items.length > 0 && this.on_scrolling();
      };
      ScrollView.prototype.insert_data = function(index) {
        var _this = this;
        var datas = [];
        for (var _i = 1; _i < arguments.length; _i++) datas[_i - 1] = arguments[_i];
        var _a;
        if (0 == datas.length) {
          cc.log("nothing to insert");
          return;
        }
        this.m_items || (this.m_items = []);
        if (index < 0 || index > this.m_items.length) {
          cc.warn("invalid index", index);
          return;
        }
        var is_append = index == this.m_items.length;
        var items = [];
        datas.forEach(function(data, index) {
          var item = _this.pack_item(index, data);
          items.push(item);
        });
        (_a = this.m_items).splice.apply(_a, [ index, 0 ].concat(items));
        this.layout_items(index);
        this.resize_content();
        this.m_start_index = -1;
        this.m_stop_index = -1;
        this.m_auto_scrolling && is_append && this.scroll_to_end();
        this.on_scrolling();
      };
      ScrollView.prototype.append_data = function() {
        var datas = [];
        for (var _i = 0; _i < arguments.length; _i++) datas[_i] = arguments[_i];
        this.m_items || (this.m_items = []);
        this.insert_data.apply(this, [ this.m_items.length ].concat(datas));
      };
      ScrollView.prototype.scroll_to_end = function() {
        this.m_dir == ScrollDirection.Vertical ? this.m_scrollview.scrollToBottom() : this.m_scrollview.scrollToRight();
      };
      ScrollView.prototype.destroy = function() {
        this.clear_items();
        var length = this.m_node_pools.length;
        for (var i = 0; i < length; i++) if (this.m_node_pools[i].items) {
          var count = this.m_node_pools[i].items.length;
          for (var j = 0; j < count; j++) this.m_node_pools[i].items[j].destroy();
        }
        this.m_node_pools = null;
        this.m_items = null;
        if (cc.isValid(this.m_scrollview.node)) {
          this.m_scrollview.node.off("scrolling", this.on_scrolling, this);
          this.m_scrollview.node.off("scroll-to-bottom", this.on_scroll_to_end, this);
          this.m_scrollview.node.off("scroll-to-right", this.on_scroll_to_end, this);
        }
      };
      ScrollView.prototype.on_scroll_to_end = function() {
        this.scroll_to_end_cb && this.scroll_to_end_cb.call(this.m_cb_host);
      };
      ScrollView.prototype.on_scrolling = function() {
        if (!this.m_items || !this.m_items.length) return;
        if (this.m_dir == ScrollDirection.Vertical) {
          var posy = this.m_content.y;
          posy < 0 && (posy = 0);
          posy > this.m_content.height - this.m_height && (posy = this.m_content.height - this.m_height);
          var start = 0;
          var stop = this.m_items.length - 1;
          var viewport_start = -posy;
          var viewport_stop = viewport_start - this.m_height;
          while (this.m_items[start].y - this.m_items[start].height > viewport_start) start++;
          while (this.m_items[stop].y < viewport_stop) stop--;
          if (start != this.m_start_index && stop != this.m_stop_index) {
            this.m_start_index = start;
            this.m_stop_index = stop;
            cc.log("render_from:", start, stop);
            this.render_items();
          }
        } else {
          var posx = this.m_content.x;
          posx > 0 && (posx = 0);
          posx < this.m_width - this.m_content.width && (posx = this.m_width - this.m_content.width);
          var start = 0;
          var stop = this.m_items.length - 1;
          var viewport_start = -posx;
          var viewport_stop = viewport_start + this.m_width;
          while (this.m_items[start].x + this.m_items[start].width < viewport_start) start++;
          while (this.m_items[stop].x > viewport_stop) stop--;
          if (start != this.m_start_index && stop != this.m_stop_index) {
            this.m_start_index = start;
            this.m_stop_index = stop;
            cc.log("render_from:", start, stop);
            this.render_items();
          }
        }
      };
      ScrollView.prototype.get_pools_by_key = function(key) {
        var length = this.m_node_pools.length;
        for (var i = 0; i < length; i++) if (this.m_node_pools[i].key == key) return this.m_node_pools[i].items;
        return null;
      };
      ScrollView.prototype.get_item_by_key = function(key) {
        var length = this.m_item_templates.length;
        for (var i = 0; i < length; i++) if (this.m_item_templates[i].key == key) return this.m_item_templates[i].item;
        return null;
      };
      ScrollView.prototype.spawn_node = function(key) {
        var node;
        var pools = this.get_pools_by_key(key);
        if (pools && pools.length > 0) node = pools.pop(); else {
          node = cc.instantiate(this.get_item_by_key(key));
          node.active = true;
        }
        node.parent = this.m_content;
        return node;
      };
      ScrollView.prototype.recycle_item = function(item) {
        if (item.node && cc.isValid(item.node)) {
          var pools = this.get_pools_by_key(item.data.key);
          if (!pools) {
            pools = [];
            this.m_node_pools.push({
              key: item.data.key,
              items: pools
            });
          }
          pools.push(item.node);
          this.recycle_cb && this.recycle_cb.call(this.m_cb_host, item.node, item.data.key);
          item.node.removeFromParent();
          item.node = null;
        }
      };
      ScrollView.prototype.clear_items = function() {
        var _this = this;
        this.m_items && this.m_items.forEach(function(item) {
          _this.recycle_item(item);
        });
      };
      ScrollView.prototype.render_items = function() {
        var item;
        for (var i = 0; i < this.m_start_index; i++) {
          item = this.m_items[i];
          item.node && this.recycle_item(item);
        }
        for (var i = this.m_items.length - 1; i > this.m_stop_index; i--) {
          item = this.m_items[i];
          item.node && this.recycle_item(item);
        }
        for (var i = this.m_start_index; i <= this.m_stop_index; i++) {
          item = this.m_items[i];
          if (!item.node) {
            item.node = this.spawn_node(item.data.key);
            this.item_update_func.call(this.m_cb_host, item.node, item.data.key, item.data.data, i);
          }
          item.node.setPosition(item.x, item.y);
        }
      };
      ScrollView.prototype.pack_item = function(index, data) {
        var node = this.spawn_node(data.key);
        var _a = this.item_update_func.call(this.m_cb_host, node, data.key, data.data, index), width = _a[0], height = _a[1];
        var item = {
          x: 0,
          y: 0,
          width: width,
          height: height,
          data: data,
          node: node
        };
        this.recycle_item(item);
        return item;
      };
      ScrollView.prototype.layout_items = function(start) {
        if (this.m_items.length <= 0) return;
        var start_pos = 0;
        if (start > 0) {
          var prev_item = this.m_items[start - 1];
          start_pos = this.m_dir == ScrollDirection.Vertical ? prev_item.y - prev_item.height - this.m_gap_y : prev_item.x + prev_item.width + this.m_gap_x;
        }
        for (var index = start, stop = this.m_items.length; index < stop; index++) {
          var item = this.m_items[index];
          if (this.m_dir == ScrollDirection.Vertical) {
            item.x = 0;
            item.y = start_pos;
            start_pos -= item.height + this.m_gap_y;
          } else {
            item.y = 0;
            item.x = start_pos;
            start_pos += item.width + this.m_gap_x;
          }
        }
      };
      ScrollView.prototype.resize_content = function() {
        if (this.m_items.length <= 0) {
          this.m_content.width = 0;
          this.m_content.height = 0;
          return;
        }
        var last_item = this.m_items[this.m_items.length - 1];
        this.m_dir == ScrollDirection.Vertical ? this.m_content.height = Math.max(this.m_height, last_item.height - last_item.y) : this.m_content.width = Math.max(this.m_width, last_item.x + last_item.width);
      };
      return ScrollView;
    }();
    exports.ScrollView = ScrollView;
    var ScrollDirection;
    (function(ScrollDirection) {
      ScrollDirection[ScrollDirection["Vertical"] = 1] = "Vertical";
      ScrollDirection[ScrollDirection["Horizontal"] = 2] = "Horizontal";
    })(ScrollDirection = exports.ScrollDirection || (exports.ScrollDirection = {}));
    cc._RF.pop();
  }, {} ],
  sdk_define: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "98014PABDFEUKgu4VQOioyJ", "sdk_define");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var SdkDefine = function() {
      function SdkDefine() {}
      SdkDefine.FACE_BOOK_NAME = "facebook";
      SdkDefine.LINE_NAME = "line";
      return SdkDefine;
    }();
    exports.default = SdkDefine;
    cc._RF.pop();
  }, {} ],
  sdk_facebook: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c4fe7CEzuVMprtb/e6F6DUE", "sdk_facebook");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("../../manager/debug");
    var scene_manager_1 = require("../../manager/scene_manager");
    var SdkFacebook = function() {
      function SdkFacebook() {}
      Object.defineProperty(SdkFacebook, "instance", {
        get: function() {
          SdkFacebook._instance || (SdkFacebook._instance = new SdkFacebook());
          return SdkFacebook._instance;
        },
        enumerable: true,
        configurable: true
      });
      SdkFacebook.prototype.receive = function(json) {
        "login" == json.funcName && this.login(json.param);
      };
      SdkFacebook.prototype.login = function(jsonParam) {
        var jsonObject = JSON.parse(jsonParam);
        jsonObject["headImg"] = "https://graph.facebook.com/" + jsonObject.thirdUnionId + "/picture?type=normal";
        var param = JSON.stringify(jsonObject);
        debug_1.default.log(" facebook login  : " + param);
        scene_manager_1.default.loginFromAuth(param);
      };
      return SdkFacebook;
    }();
    exports.default = SdkFacebook;
    cc._RF.pop();
  }, {
    "../../manager/debug": "debug",
    "../../manager/scene_manager": "scene_manager"
  } ],
  sdk_line: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5b6dc1+ElRNbZPDyWlDDwG5", "sdk_line");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("../../manager/debug");
    var scene_manager_1 = require("../../manager/scene_manager");
    var SdkLine = function() {
      function SdkLine() {}
      Object.defineProperty(SdkLine, "instance", {
        get: function() {
          SdkLine._instance || (SdkLine._instance = new SdkLine());
          return SdkLine._instance;
        },
        enumerable: true,
        configurable: true
      });
      SdkLine.prototype.receive = function(json) {
        "login" == json.funcName && this.login(json.param);
      };
      SdkLine.prototype.login = function(jsonParam) {
        var param = jsonParam;
        debug_1.default.log(" line login  : " + param);
        scene_manager_1.default.loginFromAuth(param);
      };
      return SdkLine;
    }();
    exports.default = SdkLine;
    cc._RF.pop();
  }, {
    "../../manager/debug": "debug",
    "../../manager/scene_manager": "scene_manager"
  } ],
  sdk_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "24750PiAAFKm7XSaJUL71dR", "sdk_manager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var Utility_1 = require("../utility/Utility");
    var sdk_facebook_1 = require("../sdk/collection/sdk_facebook");
    var sdk_define_1 = require("../sdk/collection/sdk_define");
    var sdk_line_1 = require("../sdk/collection/sdk_line");
    var SdkManager = function(_super) {
      __extends(SdkManager, _super);
      function SdkManager() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(SdkManager, "instance", {
        get: function() {
          SdkManager._instance || (SdkManager._instance = new SdkManager());
          return SdkManager._instance;
        },
        enumerable: true,
        configurable: true
      });
      SdkManager.prototype.receive = function(base64Str) {
        var json = JSON.parse(Utility_1.default.instance.decodeBase64(base64Str));
        json.sdkName == sdk_define_1.default.FACE_BOOK_NAME ? sdk_facebook_1.default.instance.receive(json) : json.sdkName == sdk_define_1.default.LINE_NAME && sdk_line_1.default.instance.receive(json);
      };
      SdkManager.prototype.requestNativeFunc = function(skdName, funcName, jsonParam) {
        void 0 === jsonParam && (jsonParam = "");
        var jsonObj = {
          sdkName: skdName,
          funcName: funcName,
          params: jsonParam
        };
        var jsonStr = JSON.stringify(jsonObj);
        if (cc.sys.os === cc.sys.OS_ANDROID) {
          var className = "org/cocos2dx/javascript/sdk/SDKManager";
          jsb.reflection.callStaticMethod(className, "receiveJSCall", "(Ljava/lang/String;)V", jsonStr);
        }
      };
      return SdkManager;
    }(cc.Component);
    exports.default = SdkManager;
    window.sdkMgr = SdkManager.instance;
    cc._RF.pop();
  }, {
    "../sdk/collection/sdk_define": "sdk_define",
    "../sdk/collection/sdk_facebook": "sdk_facebook",
    "../sdk/collection/sdk_line": "sdk_line",
    "../utility/Utility": "utility"
  } ],
  server_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "45be51An5dE6rv7BtZA+iIr", "server_base");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var model_base_1 = require("../../framework/core/mvvm/model_base");
    var net_client_1 = require("../../framework/net/net_client");
    var time_manager_1 = require("../../manager/time_manager");
    var ccclass = cc._decorator.ccclass;
    var ServerBase = function(_super) {
      __extends(ServerBase, _super);
      function ServerBase() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.model = new model_base_1.default();
        _this.netClient = new net_client_1.default();
        _this._pingDelayTime = 0;
        _this.state = null;
        _this._reconTimes = 0;
        _this._maxReconTimes = 5;
        return _this;
      }
      ServerBase.prototype.init = function(clientName) {
        this.model = new model_base_1.default();
        this.netClient = new net_client_1.default();
        this.netClient.name = clientName;
        this.clientName = clientName;
        this.model.netClient = this.netClient;
      };
      ServerBase.prototype.connect = function(url, callback) {
        this.close();
        this._onConnectState = callback;
        this.url = url;
        this.netClient.connect(url, this.netClientProtoType ? this.netClientProtoType : net_client_1.NetClientProtoType.GameServer);
        this.netClient.onConnectStateEvent = this._onConnectStateEvent.bind(this);
        this.model.netClient = this.netClient;
        this.netClient.heartbeatEvent = this._heartbeatEvent.bind(this);
        cc.log("\u670d\u52a1\u5668\u8fde\u63a5\uff1a", url, time_manager_1.default.instance.getServerTime());
        this.unschedule(this.checkConnect);
        this.scheduleOnce(this.checkConnect, 30);
      };
      ServerBase.prototype._heartbeatEvent = function() {
        if (this._lastPingTime) {
          this._pingDelayTime = this.netClient.lastReceivePingTime - this._lastPingTime;
          this._lastPingTime = null;
          0 == this._pingDelayTime && (this._pingDelayTime = .06);
          this.onNotifyPing && this.onNotifyPing(this._pingDelayTime);
        }
      };
      ServerBase.prototype.checkConnect = function() {
        cc.log("0\u8fde\u63a5\u8d85\u65f6\uff0c\u91cd\u8fde\uff01", this.clientName, time_manager_1.default.instance.getServerTime());
        this.unschedule(this.checkConnect);
        this.reconnectServer();
      };
      ServerBase.prototype.close = function() {
        this.unschedule(this._reconnect);
        this.unschedule(this.checkConnect);
        this.unschedule(this._checkPing);
        this.unschedule(this._loginIsTimeOut);
        this.netClient.activeClose();
      };
      ServerBase.prototype.startCheckPing = function() {
        this.unschedule(this._loginIsTimeOut);
        this._reconTimes = 0;
        this.netClient.lastReceivePingTime = Date.now();
        this._lastPingTime = Date.now();
        this._requestPing();
        this.unschedule(this._checkPing);
        this.schedule(this._checkPing, this.netClient.heartbeatInterval, cc.macro.REPEAT_FOREVER);
      };
      ServerBase.prototype._checkPing = function() {
        var time = Date.now();
        this._requestPing();
        null == this._lastPingTime && (this._lastPingTime = time);
        var passTime = time - this.netClient.lastReceivePingTime;
        var isConnect = passTime - this.netClient.heartbeatTimeout > 0;
        isConnect && this.heartbeat_timeout_reconnect();
        this.onNotifyPing && this.onNotifyPing(this._pingDelayTime);
      };
      ServerBase.prototype._requestPing = function() {
        this.netClient.netState && this.netClient.heartbeat();
      };
      ServerBase.prototype.reconnectServer = function() {
        if (time_manager_1.default.instance.backGround) {
          cc.warn("\u6b63\u5728\u540e\u53f0\u4e2d\uff0c\u4e0d\u91cd\u8fde\uff01");
          return;
        }
        var time = 1;
        this._reconTimes >= 2 && (time = 3);
        cc.log("\u65ad\u7ebf\u91cd\u8fde\uff01", time, this._reconTimes);
        this.unschedule(this._reconnect);
        this.unschedule(this.checkConnect);
        this.unschedule(this._checkPing);
        this.unschedule(this._loginIsTimeOut);
        this.scheduleOnce(this._reconnect, time);
      };
      ServerBase.prototype.onReconnectServer = function() {};
      ServerBase.prototype.onConnected = function() {};
      ServerBase.prototype._reconnect = function() {
        this._reconTimes = this._reconTimes + 1;
        this.connectTimes(this._reconTimes);
        if (this._reconTimes < this._maxReconTimes) this.connect(this.url, this._onConnectState); else {
          cc.warn(this.clientName, "\u65ad\u7ebf\u91cd\u8fde\u6b21\u6570\u7528\u5b8c\u63d0\u793a\u767b\u9646\u5931\u8d25");
          this.close();
          this.reconnectServerFail();
        }
      };
      ServerBase.prototype.connectTimes = function(times) {};
      ServerBase.prototype.reconnectServerFail = function() {};
      ServerBase.prototype._loginIsTimeOut = function() {
        cc.warn(this.clientName, "\u670d\u52a1\u5668\u8fde\u63a5\u8d85\u65f6\uff01");
        this.reconnectServer();
      };
      ServerBase.prototype._onConnectStateEvent = function(state) {
        this.unschedule(this.checkConnect);
        cc.warn(this.clientName, "onConnectStateEvent", state);
        if ("OPEN" == state) {
          this._reconTimes = 0;
          this.subscibeMsgEvent();
          this.scheduleOnce(this._loginIsTimeOut, 10);
        } else if ("error" == state) this.reconnectServer(); else if ("CLOSE" == state) {
          cc.warn("\u8fde\u63a5\u4e2d\u65ad\uff0c\u81ea\u52a8\u91cd\u8fde\uff01");
          this.reconnectServer();
        } else "TIMEOUT" == state ? this.reconnectServer() : "handshake" == state && this.onConnected();
        null != this._onConnectState && this._onConnectState(state);
      };
      ServerBase.prototype.subscibeMsgEvent = function() {
        var self = this;
        this.model.clearMsgEvent();
      };
      ServerBase.prototype.heartbeat_timeout_reconnect = function() {
        cc.warn("\u65ad\u7ebf\u91cd\u8fde...\uff01");
        var self = this;
        self.close();
        self.scheduleOnce(function() {
          self.reconnectServer();
        }, .5);
      };
      ServerBase.prototype.exit = function() {
        this.onNotifyPing = null;
      };
      ServerBase = __decorate([ ccclass ], ServerBase);
      return ServerBase;
    }(cc.Component);
    exports.default = ServerBase;
    cc._RF.pop();
  }, {
    "../../framework/core/mvvm/model_base": "model_base",
    "../../framework/net/net_client": "net_client",
    "../../manager/time_manager": "time_manager"
  } ],
  setting_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "612eeUWZ1tFprjI39jhcGeU", "setting_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var view_base_1 = require("../../../framework/core/mvvm/view_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var SettingView = function(_super) {
      __extends(SettingView, _super);
      function SettingView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.closeBtn = null;
        _this.backBtn = null;
        _this.feedBtn = null;
        _this.giftExchangeBtn = null;
        _this.versionLabel = null;
        _this.musicSlider = null;
        _this.musicProgressBar = null;
        _this.soundSlider = null;
        _this.soundProgressBar = null;
        return _this;
      }
      SettingView.prototype.start = function() {
        this.versionLabel.string = "\u7248\u672c\u53f7\uff1a1.1.1";
      };
      __decorate([ property(cc.Button) ], SettingView.prototype, "closeBtn", void 0);
      __decorate([ property(cc.Node) ], SettingView.prototype, "backBtn", void 0);
      __decorate([ property(cc.Node) ], SettingView.prototype, "feedBtn", void 0);
      __decorate([ property(cc.Node) ], SettingView.prototype, "giftExchangeBtn", void 0);
      __decorate([ property(cc.Label) ], SettingView.prototype, "versionLabel", void 0);
      __decorate([ property(cc.Slider) ], SettingView.prototype, "musicSlider", void 0);
      __decorate([ property(cc.ProgressBar) ], SettingView.prototype, "musicProgressBar", void 0);
      __decorate([ property(cc.Slider) ], SettingView.prototype, "soundSlider", void 0);
      __decorate([ property(cc.ProgressBar) ], SettingView.prototype, "soundProgressBar", void 0);
      SettingView = __decorate([ ccclass ], SettingView);
      return SettingView;
    }(view_base_1.default);
    exports.default = SettingView;
    cc._RF.pop();
  }, {
    "../../../framework/core/mvvm/view_base": "view_base"
  } ],
  setting: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7263fsNJddIvrCSv9iH/1Ra", "setting");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var setting_view_1 = require("./setting_view");
    var module_base_1 = require("../../../framework/core/mvvm/module_base");
    var Utility_1 = require("../../../utility/Utility");
    var module_manager_1 = require("../../../framework/core/module_manager");
    var audio_manager_1 = require("../../../manager/audio_manager");
    var scene_manager_1 = require("../../../manager/scene_manager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var Setting = function(_super) {
      __extends(Setting, _super);
      function Setting() {
        var _this = _super.call(this) || this;
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/public/hall_setting";
        _this.viewType = setting_view_1.default;
        _this.modelType = null;
        _this.needAnim = true;
        _this.needViewMask = true;
        return _this;
      }
      Setting.prototype.onInit = function() {
        var self = this;
        this.view.backBtn.on("click", function(event) {
          Utility_1.default.instance.playButtonSound();
          module_manager_1.default.instance.hideModule("Setting");
        }, this);
        this.view.musicSlider.node.on("slide", function(event) {
          var musicValue = self.view.musicSlider.progress;
          audio_manager_1.default.instance.setMusicVolume(musicValue);
          this.view.musicProgressBar.progress = musicValue;
        }, this);
        this.view.soundSlider.node.on("slide", function(event) {
          var soundValue = self.view.soundSlider.progress;
          audio_manager_1.default.instance.setSoundVolume(soundValue);
          this.view.soundProgressBar.progress = soundValue;
        }, this);
      };
      Setting.prototype.onShow = function() {
        this.view.soundSlider.progress = cc.audioEngine.getEffectsVolume();
        this.view.soundProgressBar.progress = cc.audioEngine.getEffectsVolume();
        this.view.musicSlider.progress = cc.audioEngine.getMusicVolume();
        this.view.musicProgressBar.progress = cc.audioEngine.getMusicVolume();
      };
      Setting.prototype.onSoundBtnClick = function() {
        var effectvolume = cc.audioEngine.getEffectsVolume();
        effectvolume > 0 ? audio_manager_1.default.instance.setSoundVolume(0) : audio_manager_1.default.instance.setSoundVolume(1);
        this.view.soundSlider.progress = cc.audioEngine.getEffectsVolume();
        this.view.soundProgressBar.progress = cc.audioEngine.getEffectsVolume();
      };
      Setting.prototype.onExchangeBtnClick = function() {
        var effectvolume = cc.audioEngine.getMusicVolume();
        effectvolume > 0 ? audio_manager_1.default.instance.setMusicVolume(0) : audio_manager_1.default.instance.setMusicVolume(1);
        this.view.musicSlider.progress = cc.audioEngine.getMusicVolume();
        this.view.musicProgressBar.progress = cc.audioEngine.getMusicVolume();
      };
      Setting.prototype.changeAccount = function() {
        scene_manager_1.default.gotoLogin();
      };
      Setting.prototype.closeSetting = function() {
        module_manager_1.default.instance.hideModule("Setting");
      };
      __decorate([ module_base_1.bindButtonClickEvent("Sound") ], Setting.prototype, "onSoundBtnClick", null);
      __decorate([ module_base_1.bindButtonClickEvent("Music") ], Setting.prototype, "onExchangeBtnClick", null);
      __decorate([ module_base_1.bindButtonClickEvent("changeaccount") ], Setting.prototype, "changeAccount", null);
      __decorate([ module_base_1.bindButtonClickEvent("closeBtn") ], Setting.prototype, "closeSetting", null);
      Setting = __decorate([ ccclass, module_base_1.moduleInit("Setting") ], Setting);
      return Setting;
    }(module_base_1.default);
    exports.default = Setting;
    cc._RF.pop();
  }, {
    "../../../framework/core/module_manager": "module_manager",
    "../../../framework/core/mvvm/module_base": "module_base",
    "../../../manager/audio_manager": "audio_manager",
    "../../../manager/scene_manager": "scene_manager",
    "../../../utility/Utility": "utility",
    "./setting_view": "setting_view"
  } ],
  shader_component: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bdbdeJEoJ1J3or89GLZChUl", "shader_component");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_material_1 = require("./shader_material");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, executeInEditMode = _a.executeInEditMode, requireComponent = _a.requireComponent, disallowMultiple = _a.disallowMultiple;
    var ShaderComponent = function(_super) {
      __extends(ShaderComponent, _super);
      function ShaderComponent() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._material = null;
        _this._color = cc.color();
        _this._start = 0;
        _this._shaderName = "";
        _this._state = 100;
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    varying vec2 uv0;\n    void main () {\n        vec4 clrx = color * texture2D(texture, uv0);\n        float brightness = (clrx.r + clrx.g + clrx.b) * (1. / 3.);\n        float gray = (1.5)*brightness;\n        clrx = vec4(gray, gray, gray, clrx.a)*vec4(0.8,1.2,1.5,1);\n        gl_FragColor =clrx;\n    }\n    ";
        _this._defines = [];
        _this._params = [];
        _this._needUpdate = false;
        return _this;
      }
      ShaderComponent.prototype.start = function() {
        this.init();
      };
      ShaderComponent.prototype.init = function() {
        this.node.getComponent(cc.Sprite).setState(0);
        this._applyShader();
      };
      ShaderComponent.prototype.onEnable = function() {
        this.init();
      };
      ShaderComponent.prototype.update = function(dt) {
        if (!this._material) return;
        this._setShaderColor();
        this._setShaderTime(dt);
      };
      ShaderComponent.prototype.useShader = function() {
        if (cc.game.renderType === cc.game.RENDER_TYPE_CANVAS) {
          console.warn("Shader not surpport for canvas");
          return;
        }
        var sprite = this.node.getComponent(cc.Sprite);
        if (!sprite || !sprite.spriteFrame || sprite.getState() === cc.Sprite.State.GRAY) return;
        var material = new shader_material_1.default().create(this._shaderName, this._vert, this._frag, this._defines, this._params);
        var texture = sprite.spriteFrame.getTexture();
        material.setTexture(texture);
        material.updateHash();
        this.setParamValue(material);
        var sp = sprite;
        sp["_material"] = material;
        sp["_renderData"]._material = material;
        sp["_state"] = this._state;
        return material;
      };
      ShaderComponent.prototype.setParamValue = function(material) {};
      ShaderComponent.prototype._applyShader = function() {
        var material = this.useShader();
        this._material = material;
        this._start = 0;
        var clr = this._color;
        clr.setR(255), clr.setG(255), clr.setB(255), clr.setA(255);
        this._setShaderColor();
      };
      ShaderComponent.prototype._setShaderColor = function() {
        var node = this.node;
        var c0 = node.color;
        var c1 = this._color;
        var r = c0.getR(), g = c0.getG(), b = c0.getB(), a = node.opacity;
        var f = !1;
        if (c1.getR() !== r) {
          c1.setR(r);
          f = !0;
        }
        if (c1.getG() !== g) {
          c1.setG(g);
          f = !0;
        }
        if (c1.getB() !== b) {
          c1.setB(b);
          f = !0;
        }
        if (c1.getA() !== a) {
          c1.setA(a);
          f = !0;
        }
        f && this._material.setColor(r / 255, g / 255, b / 255, a / 255);
      };
      ShaderComponent.prototype._setShaderTime = function(dt) {
        if (this._needUpdate) {
          var start = this._start;
          start > 65535 && (start = 0);
          start += dt;
          this._material.setTime(start);
          this._start = start;
        }
      };
      ShaderComponent = __decorate([ ccclass, requireComponent(cc.Sprite), executeInEditMode ], ShaderComponent);
      return ShaderComponent;
    }(cc.Component);
    exports.default = ShaderComponent;
    cc._RF.pop();
  }, {
    "./shader_material": "shader_material"
  } ],
  shader_material: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0d074HtiIhLz73nmpL6QH6n", "shader_material");
    cc._RF.pop();
  }, {} ],
  shader_test: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4104c5K28RIwpDG6P+eH6ux", "shader_test");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ShaderTest = function(_super) {
      __extends(ShaderTest, _super);
      function ShaderTest() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.shaderRoot = null;
        _this.lastBtn = null;
        _this.nextBtn = null;
        _this.spriteFrame = null;
        _this._curIndex = 0;
        _this._totalCount = 0;
        return _this;
      }
      ShaderTest.prototype.start = function() {
        this._totalCount = this.shaderRoot.childrenCount;
        this.lastBtn.on("click", this.onLastBtnClick, this);
        this.nextBtn.on("click", this.onNextBtnClick, this);
        this.shoChild();
      };
      ShaderTest.prototype.onLastBtnClick = function() {
        this._curIndex--;
        this._curIndex < 0 && (this._curIndex = this._totalCount - 1);
        this.shoChild();
      };
      ShaderTest.prototype.onNextBtnClick = function() {
        this._curIndex++;
        this._curIndex >= this._totalCount && (this._curIndex = 0);
        this.shoChild();
      };
      ShaderTest.prototype.shoChild = function() {
        var length = this._totalCount;
        for (var i = 0; i < length; i++) this.shaderRoot.children[i].active = i == this._curIndex;
      };
      __decorate([ property(cc.Node) ], ShaderTest.prototype, "shaderRoot", void 0);
      __decorate([ property(cc.Node) ], ShaderTest.prototype, "lastBtn", void 0);
      __decorate([ property(cc.Node) ], ShaderTest.prototype, "nextBtn", void 0);
      __decorate([ property(cc.SpriteFrame) ], ShaderTest.prototype, "spriteFrame", void 0);
      ShaderTest = __decorate([ ccclass ], ShaderTest);
      return ShaderTest;
    }(cc.Component);
    exports.default = ShaderTest;
    cc._RF.pop();
  }, {} ],
  simple_rotation: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ae356Ka5RxB96s2zBElWt2S", "simple_rotation");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var RotateType;
    (function(RotateType) {
      RotateType[RotateType["Normal"] = 0] = "Normal";
      RotateType[RotateType["RotationY"] = 1] = "RotationY";
      RotateType[RotateType["RotationX"] = 2] = "RotationX";
    })(RotateType || (RotateType = {}));
    var SimpleRotation = function(_super) {
      __extends(SimpleRotation, _super);
      function SimpleRotation() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.angle = 400;
        _this.rotationType = RotateType.Normal;
        return _this;
      }
      SimpleRotation.prototype.update = function(dt) {
        this.rotationType == RotateType.Normal ? this.node.rotation += this.angle * dt : this.rotationType == RotateType.RotationY ? this.node.rotationY += this.angle * dt : this.rotationType == RotateType.RotationX && (this.node.rotationX += this.angle * dt);
      };
      __decorate([ property(Number) ], SimpleRotation.prototype, "angle", void 0);
      __decorate([ property({
        type: cc.Enum(RotateType)
      }) ], SimpleRotation.prototype, "rotationType", void 0);
      SimpleRotation = __decorate([ ccclass ], SimpleRotation);
      return SimpleRotation;
    }(cc.Component);
    exports.default = SimpleRotation;
    cc._RF.pop();
  }, {} ],
  spriteFrameHolder: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "271c1S8IK9HgoIZkor7kbOi", "spriteFrameHolder");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var SpriteFrameKeyPair = function() {
      function SpriteFrameKeyPair() {
        this.spriteFrame = null;
        this.key = "";
      }
      __decorate([ property(cc.SpriteFrame) ], SpriteFrameKeyPair.prototype, "spriteFrame", void 0);
      __decorate([ property(cc.String) ], SpriteFrameKeyPair.prototype, "key", void 0);
      SpriteFrameKeyPair = __decorate([ ccclass("SpriteFrameKeyPair") ], SpriteFrameKeyPair);
      return SpriteFrameKeyPair;
    }();
    var SpriteFrameHolder = function(_super) {
      __extends(SpriteFrameHolder, _super);
      function SpriteFrameHolder() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.spriteFrameList = [];
        return _this;
      }
      SpriteFrameHolder.prototype.getSpriteFrameByKey = function(key) {
        for (var i = 0; i < this.spriteFrameList.length; i++) {
          var element = this.spriteFrameList[i];
          if (element.key == key) return element.spriteFrame;
        }
        return null;
      };
      __decorate([ property([ SpriteFrameKeyPair ]) ], SpriteFrameHolder.prototype, "spriteFrameList", void 0);
      SpriteFrameHolder = __decorate([ ccclass, menu("custom/SpriteFrameHolder") ], SpriteFrameHolder);
      return SpriteFrameHolder;
    }(cc.Component);
    exports.default = SpriteFrameHolder;
    cc._RF.pop();
  }, {} ],
  stone_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3bbfaQ1MZBN05FKmnLmaZu4", "stone_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
    var StoneShader = function(_super) {
      __extends(StoneShader, _super);
      function StoneShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Stone";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "\n    uniform sampler2D texture;\n    uniform vec4 color;\n    varying vec2 uv0;\n    void main () {\n        vec4 c = color * texture2D(texture, uv0);\n        float clrbright = (c.r + c.g + c.b) * (1. / 3.);\n        float gray = (0.6) * clrbright;\n        gl_FragColor = vec4(gray, gray, gray, c.a);\n    }\n    ";
        return _this;
      }
      StoneShader = __decorate([ ccclass, menu("custom/Shader/Stone") ], StoneShader);
      return StoneShader;
    }(shader_component_1.default);
    exports.default = StoneShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ],
  template_model: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "99c36UEeDZFwoUH7xF7T9bS", "template_model");
    cc._RF.pop();
  }, {} ],
  template_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "39203RYc1VNkYY4dgaccCOQ", "template_view");
    cc._RF.pop();
  }, {} ],
  template: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "67aa2l/f+tH1JoX5eq3Cu6D", "template");
    cc._RF.pop();
  }, {} ],
  texture_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cdf0dyhpgBG7pucOaciq9X4", "texture_manager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var game_util_1 = require("../utility/game_util");
    var time_manager_1 = require("./time_manager");
    var debug_1 = require("../manager/debug");
    var ccclass = cc._decorator.ccclass;
    var TextureCache = function() {
      function TextureCache() {}
      return TextureCache;
    }();
    var ReloadCache = function() {
      function ReloadCache() {}
      return ReloadCache;
    }();
    var TextureManager = function(_super) {
      __extends(TextureManager, _super);
      function TextureManager() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.spriteCache = [];
        _this.reloadCache = [];
        _this.reloadTimeArray = [ 1, 3, 5 ];
        return _this;
      }
      TextureManager_1 = TextureManager;
      TextureManager.prototype.clear = function() {
        var length = this.spriteCache.length;
        for (var i = 0; i < length; i++) cc.loader.releaseAsset(this.spriteCache[i].spriteFrame);
        this.spriteCache = [];
        this.reloadCache = [];
      };
      TextureManager.prototype.getSprite = function(key, success) {
        var index = this.hasSprite(key);
        if (index >= 0) return success(this.spriteCache[index].spriteFrame);
        var self = this;
        game_util_1.default.loadTexture(key, function(err, texture) {
          if (texture) {
            var frame = new cc.SpriteFrame(texture);
            self.addSprite(key, frame);
            self.removeReloadCache(key);
            return success(frame);
          }
          debug_1.default.warn("\u4e0b\u8f7d\u56fe\u7247\u51fa\u9519\uff1a", key);
          var time = self.getReloadTime(key);
          time > 0 && time_manager_1.default.instance.scheduleOnce(function() {
            self.getSprite(key, success);
          }, time);
        });
      };
      TextureManager.prototype.getLocalSprite = function(name, success) {
        var index = this.hasSprite(name);
        if (index >= 0) return success(this.spriteCache[index].spriteFrame);
        var self = this;
        cc.loader.loadRes("image/" + name, cc.SpriteFrame, function(error, resource) {
          if (!error) {
            var frame = resource;
            self.addSprite(name, frame);
            return success(frame);
          }
          debug_1.default.log(error);
        });
      };
      TextureManager.prototype.hasSprite = function(key) {
        var length = this.spriteCache.length;
        for (var i = 0; i < length; i++) if (this.spriteCache[i].key == key) return i;
        return -1;
      };
      TextureManager.prototype.addSprite = function(key, spriteFrame) {
        var index = this.hasSprite(key);
        if (index < 0) {
          var spriteData = new TextureCache();
          spriteData.key = key;
          spriteData.spriteFrame = spriteFrame;
          this.spriteCache.push(spriteData);
        } else this.spriteCache[index].spriteFrame = spriteFrame;
      };
      TextureManager.prototype.hasReloadCache = function(key) {
        var length = this.reloadCache.length;
        for (var i = 0; i < length; i++) if (this.reloadCache[i].key == key) return i;
        return -1;
      };
      TextureManager.prototype.removeReloadCache = function(key) {
        var index = this.hasReloadCache(key);
        index > 0 && this.reloadCache.splice(index, 1);
      };
      TextureManager.prototype.getReloadTime = function(key) {
        var index = this.hasReloadCache(key);
        if (index < 0) {
          var spriteData = new ReloadCache();
          spriteData.key = key;
          spriteData.count = 0;
          this.reloadCache.push(spriteData);
          return spriteData.count >= this.reloadTimeArray.length ? -1 : this.reloadTimeArray[spriteData.count];
        }
        var spriteData = this.reloadCache[index];
        spriteData.count = spriteData.count + 1;
        return spriteData.count >= this.reloadTimeArray.length ? -1 : this.reloadTimeArray[spriteData.count];
      };
      var TextureManager_1;
      TextureManager.instance = new TextureManager_1();
      TextureManager = TextureManager_1 = __decorate([ ccclass ], TextureManager);
      return TextureManager;
    }(cc.Component);
    exports.default = TextureManager;
    cc._RF.pop();
  }, {
    "../manager/debug": "debug",
    "../utility/game_util": "game_util",
    "./time_manager": "time_manager"
  } ],
  time_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6902di9a5FNrYbxbHyiYNMF", "time_manager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var event_manager_1 = require("./event_manager");
    var audio_manager_1 = require("./audio_manager");
    var module_manager_1 = require("../framework/core/module_manager");
    var log_report_manager_1 = require("./log_report_manager");
    var debug_1 = require("./debug");
    var ccclass = cc._decorator.ccclass;
    var TimeType;
    (function(TimeType) {
      TimeType[TimeType["INTERVAL"] = 0] = "INTERVAL";
      TimeType[TimeType["COUNT_DOWN"] = 1] = "COUNT_DOWN";
    })(TimeType || (TimeType = {}));
    var TimeManager = function(_super) {
      __extends(TimeManager, _super);
      function TimeManager() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._needCheckModule = [ "AuthModule", "HallModule", "RandomAwardModule", "RankingMatchStarup", "DouDiZhuTableModule", "DouDiZhuMatchingTableModule", "Match", "GoldEntranceModule", "Bag", "ShopModule", "CreatRoom", "HallRank" ];
        _this.backGround = false;
        _this._handles = [];
        _this._serverMarkTime = 0;
        _this._serverLocalDifTime = 0;
        _this._lastTime = 0;
        _this._hideTime = 0;
        _this._showTime = 0;
        _this._startCheckBlack = false;
        _this._blackTimes = 0;
        _this._backTarget = "";
        _this.m_maxId = 0;
        _this.m_callbackMap = {};
        _this.AppRunningTime = 0;
        return _this;
      }
      TimeManager_1 = TimeManager;
      TimeManager.prototype.start = function() {
        false;
        cc.game.off(cc.game.EVENT_HIDE, this.onApplicationHide.bind(this));
        cc.game.off(cc.game.EVENT_SHOW, this.onApplicationShow.bind(this));
        cc.game.on(cc.game.EVENT_HIDE, this.onApplicationHide.bind(this));
        cc.game.on(cc.game.EVENT_RESTART, this.onApplicationShow.bind(this));
        cc.view.getScaleX;
      };
      TimeManager.prototype.setBackTarget = function(value) {
        TimeManager_1.instance._backTarget = value;
      };
      TimeManager.prototype.getBackTarget = function() {
        return TimeManager_1.instance._backTarget;
      };
      TimeManager.prototype.onApplicationHide = function() {
        TimeManager_1.instance._hideTime = Date.now();
        debug_1.default.log("\u5207\u5230\u540e\u53f0\u4e86\uff01", TimeManager_1.instance._hideTime);
        this.backGround = true;
        audio_manager_1.default.instance.release();
        event_manager_1.default.instance.dispatch("game_event_show", false);
      };
      TimeManager.prototype.onApplicationShow = function() {
        TimeManager_1.instance._showTime = Date.now();
        var difTime = TimeManager_1.instance._showTime - TimeManager_1.instance._hideTime;
        debug_1.default.log("\u5207\u5230\u524d\u53f0\u4e86\uff01", TimeManager_1.instance._showTime, difTime);
        this.backGround = false;
        event_manager_1.default.instance.dispatch("game_event_show", true, difTime, TimeManager_1.instance._backTarget);
      };
      TimeManager.prototype.setInerval = function(name, callback, target, interval, count) {
        var index = this.hasHander(name, callback, TimeType.INTERVAL);
        index > 0 && (TimeManager_1.instance._handles[index].remove = true);
        var data = {
          type: TimeType.INTERVAL,
          name: name,
          callback: callback,
          target: target,
          interval: interval,
          totalCount: count || 0,
          curCount: 0,
          progress: 0,
          remove: false,
          step: function(nowTime) {
            data.progress++;
            if (data.progress >= data.interval) {
              data.progress = 0;
              data.curCount++;
              var callback_1 = data.callback;
              callback_1.call(data.target, data.curCount);
              data.curCount >= data.totalCount && data.totalCount && (data.remove = true);
            }
          }
        };
        TimeManager_1.instance._handles.push(data);
      };
      TimeManager.prototype.countDown = function(name, callback, target, interval) {
        var now = this.getServerTime();
        var index = this.hasHander(name, callback);
        index > 0 && (TimeManager_1.instance._handles[index].remove = true);
        var data = {
          type: TimeType.COUNT_DOWN,
          name: name,
          callback: callback,
          target: target,
          targetTime: now + interval,
          remove: false,
          step: function(nowTime) {
            if (data.targetTime <= nowTime && false == data.remove && data.target) {
              var callback_2 = data.callback;
              callback_2.call(data.target);
              data.remove = true;
            }
          }
        };
        TimeManager_1.instance._handles.push(data);
      };
      TimeManager.prototype.countDownTargetTime = function(name, callback, target, targetTime) {
        var index = this.hasHander(name, callback);
        index >= 0 && (TimeManager_1.instance._handles[index].remove = true);
        var data = {
          type: TimeType.COUNT_DOWN,
          name: name,
          callback: callback,
          target: target,
          targetTime: targetTime,
          remove: false,
          step: function(nowTime) {
            if (data.targetTime <= nowTime && false == data.remove && data.target) {
              var callback_3 = data.callback;
              callback_3.call(data.target);
              data.remove = true;
            }
          }
        };
        TimeManager_1.instance._handles.push(data);
      };
      TimeManager.prototype.offAllByKey = function(name) {
        var length = TimeManager_1.instance._handles.length;
        for (var i = 0; i < length; i++) {
          var data = TimeManager_1.instance._handles[i];
          data.name == name && (TimeManager_1.instance._handles[i].remove = true);
        }
      };
      TimeManager.prototype.offCountDown = function(name, callback) {
        this.offHander(name, callback, TimeType.COUNT_DOWN);
      };
      TimeManager.prototype.offInterval = function(name, callback) {
        this.offHander(name, callback, TimeType.INTERVAL);
      };
      TimeManager.prototype.offHander = function(name, callback, type) {
        void 0 === type && (type = TimeType.COUNT_DOWN);
        var index = this.hasHander(name, callback, type);
        index >= 0 && (TimeManager_1.instance._handles[index].remove = true);
      };
      TimeManager.prototype.hasHander = function(name, callback, type) {
        void 0 === type && (type = TimeType.COUNT_DOWN);
        var length = TimeManager_1.instance._handles.length;
        for (var i = 0; i < length; i++) {
          var data = TimeManager_1.instance._handles[i];
          if (data.type == type && data.callback == callback && data.name == name) return i;
        }
        return -1;
      };
      TimeManager.prototype.initServerTime = function(serverTime) {
        this._serverMarkTime = serverTime;
        this._serverLocalDifTime = Math.floor(new Date().getTime() / 1e3) - serverTime;
      };
      TimeManager.prototype.getServerTime = function() {
        var nowTime = Math.floor(new Date().getTime() / 1e3);
        if (this._serverMarkTime <= 0) return nowTime;
        return nowTime - this._serverLocalDifTime;
      };
      TimeManager.prototype.step = function() {
        var nowTime = this.getServerTime();
        for (var i = 0; i < TimeManager_1.instance._handles.length; i++) {
          var data = TimeManager_1.instance._handles[i];
          if (!data.remove && data.target) data.step(nowTime); else {
            TimeManager_1.instance._handles.splice(i, 1);
            i--;
          }
        }
      };
      TimeManager.prototype.update = function(dt) {
        TimeManager_1.instance.AppRunningTime += dt;
        var now = Date.now();
        if (0 == this._lastTime || this._lastTime + 1e3 < now) {
          this._lastTime = now;
          this.step();
          this.checkBlack();
        }
      };
      TimeManager.prototype.startCheckBlack = function() {
        TimeManager_1.instance._startCheckBlack = true;
      };
      TimeManager.prototype.checkBlack = function() {
        if (!TimeManager_1.instance._startCheckBlack) return;
        for (var i = 0; i < TimeManager_1.instance._needCheckModule.length; i++) {
          var isActive = module_manager_1.default.instance.moduleHasActive(TimeManager_1.instance._needCheckModule[i]);
          if (isActive) {
            TimeManager_1.instance._blackTimes = 0;
            return;
          }
        }
        TimeManager_1.instance._blackTimes = TimeManager_1.instance._blackTimes + 1;
        if (TimeManager_1.instance._blackTimes > 3) {
          TimeManager_1.instance._blackTimes = 0;
          module_manager_1.default.instance.setModuleActive("HallModule");
          cc.error("\u51fa\u73b0\u4e86\u9ed1\u5c4f");
          log_report_manager_1.default.report("\u51fa\u73b0\u4e86\u9ed1\u5c4f");
        }
      };
      TimeManager.prototype.genId = function() {
        return ++this.m_maxId;
      };
      TimeManager.prototype.doSchedule = function(callback, interval, repeat, delay) {
        var self = this;
        var id = this.genId();
        var tmpFun = function() {
          repeat || self.cancelSchedule(id);
          callback();
        };
        this.m_callbackMap[Number(id)] = tmpFun;
        this.schedule(tmpFun, interval, repeat, delay);
        return id;
      };
      TimeManager.prototype.doScheduleOnce = function(callback, delay) {
        var self = this;
        var id = this.genId();
        var tmpFun = function() {
          this.m_callbackMap[id.toString()] = null;
          callback();
        };
        this.m_callbackMap[Number(id)] = tmpFun;
        this.scheduleOnce(tmpFun, delay);
        return id;
      };
      TimeManager.prototype.cancelSchedule = function(id) {
        var key = id.toString();
        var callback = this.m_callbackMap[key];
        if (callback) {
          this.unschedule(callback);
          this.m_callbackMap[key] = null;
        }
      };
      TimeManager.prototype.cleanDoShedules = function() {
        var object = this.m_callbackMap;
        var list = [];
        for (var key in object) object.hasOwnProperty(key) && list.push(key);
        for (var i = 0; i < list.length; i++) {
          var key = list[i];
          this.cancelSchedule(Number(key));
        }
        this.m_callbackMap = {};
      };
      var TimeManager_1;
      TimeManager.instance = new TimeManager_1();
      TimeManager = TimeManager_1 = __decorate([ ccclass ], TimeManager);
      return TimeManager;
    }(cc.Component);
    exports.default = TimeManager;
    cc._RF.pop();
  }, {
    "../framework/core/module_manager": "module_manager",
    "./audio_manager": "audio_manager",
    "./debug": "debug",
    "./event_manager": "event_manager",
    "./log_report_manager": "log_report_manager"
  } ],
  toast_view: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4d2b9qBQMxO342B27nK380R", "toast_view");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var view_base_1 = require("../../../../framework/core/mvvm/view_base");
    var ToastView = function(_super) {
      __extends(ToastView, _super);
      function ToastView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.holder = null;
        return _this;
      }
      __decorate([ property(cc.Node) ], ToastView.prototype, "holder", void 0);
      ToastView = __decorate([ ccclass ], ToastView);
      return ToastView;
    }(view_base_1.default);
    exports.default = ToastView;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/view_base": "view_base"
  } ],
  toast: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ff4e7xChNdEOYGTWHqUzXWu", "toast");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var module_base_1 = require("../../../../framework/core/mvvm/module_base");
    var toast_view_1 = require("./toast_view");
    var Toast = function(_super) {
      __extends(Toast, _super);
      function Toast() {
        var _this = _super.call(this) || this;
        _this.package = "public";
        _this.layer = module_base_1.ViewLayer.High;
        _this.windowPrefabResPath = "package/public/public_toast";
        _this.viewType = toast_view_1.default;
        return _this;
      }
      Toast.prototype.onShow = function(intentData) {
        if (intentData && "object" == typeof intentData) {
          var text = intentData.text;
          var long = intentData.long;
          this._show(text, long);
        } else this._show(intentData);
      };
      Toast.prototype._show = function(text, long) {
        var node = cc.instantiate(this.view.holder);
        this.view.node.addChild(node);
        var spriteBackground = node.getChildByName("SpriteBackground").getComponent(cc.Sprite);
        var textLabel = node.getChildByName("Label").getComponent(cc.Label);
        textLabel.string = text;
        true;
        textLabel._updateRenderData(true);
        spriteBackground.node.width = textLabel.node.width + 40;
        var finished = cc.callFunc(function(target) {
          node.destroy();
        }, this);
        var time1 = 1;
        var time2 = .6;
        if (long) {
          time1 = 2;
          time2 = 1.2;
        }
        var action = cc.sequence(cc.moveBy(time1, cc.v2(0, 50)), cc.fadeOut(time2), finished);
        node.runAction(action);
      };
      Toast = __decorate([ ccclass, module_base_1.moduleInit("Toast") ], Toast);
      return Toast;
    }(module_base_1.default);
    exports.default = Toast;
    cc._RF.pop();
  }, {
    "../../../../framework/core/mvvm/module_base": "module_base",
    "./toast_view": "toast_view"
  } ],
  toggle_item: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4cf2aAQysVFkqKS1dG87Qvh", "toggle_item");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ToggleItem = function(_super) {
      __extends(ToggleItem, _super);
      function ToggleItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.startPos = 0;
        _this.dis = 0;
        _this.childToggle = [];
        return _this;
      }
      ToggleItem.prototype.init = function() {};
      __decorate([ property(cc.Float) ], ToggleItem.prototype, "startPos", void 0);
      __decorate([ property(cc.Float) ], ToggleItem.prototype, "dis", void 0);
      ToggleItem = __decorate([ ccclass ], ToggleItem);
      return ToggleItem;
    }(cc.Component);
    exports.ToggleItem = ToggleItem;
    cc._RF.pop();
  }, {} ],
  ui_state_switcher: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ed34bY5yjJPtbHZzCFbx/Mj", "ui_state_switcher");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var UIStateSwitcher = function(_super) {
      __extends(UIStateSwitcher, _super);
      function UIStateSwitcher() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      UIStateSwitcher.prototype.showChild = function(name, playAnim, needMask) {
        void 0 === playAnim && (playAnim = false);
        void 0 === needMask && (needMask = false);
        var length = this.node.childrenCount;
        for (var i = 0; i < length; i++) {
          var child = this.node.children[i];
          child.name == name ? child.active = true : child.active = false;
        }
      };
      UIStateSwitcher.prototype._findMask = function(target) {
        var length = target.childrenCount;
        for (var i = 0; i < length; i++) if ("Mask" == target.children[i].name) return target.children[i];
        return null;
      };
      UIStateSwitcher.prototype.isChildActive = function(name) {
        var length = this.node.childrenCount;
        for (var i = 0; i < length; i++) {
          var child = this.node.children[i];
          if (child.name == name) return child.active;
        }
      };
      UIStateSwitcher.prototype.hasChildActive = function() {
        var length = this.node.childrenCount;
        for (var i = 0; i < length; i++) {
          var child = this.node.children[i];
          if (child.active) return true;
        }
        return false;
      };
      UIStateSwitcher.prototype.hideAll = function() {
        var length = this.node.childrenCount;
        for (var i = 0; i < length; i++) this.node.children[i].active = false;
      };
      UIStateSwitcher = __decorate([ ccclass, menu("custom/UIStateSwitcher") ], UIStateSwitcher);
      return UIStateSwitcher;
    }(cc.Component);
    exports.default = UIStateSwitcher;
    cc._RF.pop();
  }, {} ],
  user_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f5becpzc6xGNY1pj16ycD3I", "user_manager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var UserDataManager = function() {
      function UserDataManager() {
        this._userInfo = null;
        this.mChairID = null;
        this.mPlayerCount = null;
      }
      UserDataManager.prototype.setUserData = function(data) {
        this._userInfo = data;
      };
      UserDataManager.prototype.getUserData = function() {
        return this._userInfo;
      };
      UserDataManager.prototype.isMale = function() {
        return 1 == this._userInfo.gender;
      };
      UserDataManager.instance = new UserDataManager();
      return UserDataManager;
    }();
    exports.default = UserDataManager;
    cc._RF.pop();
  }, {} ],
  utility: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "57df6HeHaREDoHlG4+A5lOj", "utility");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var audio_manager_1 = require("../manager/audio_manager");
    var GrayLable_1 = require("../pacakge/public/ui/GrayLable");
    var texture_manager_1 = require("../manager/texture_manager");
    var base64_1 = require("../utility/base64");
    var grayMateral;
    var normalMaterial;
    var Utility = function() {
      function Utility() {
        this._lastClickTime = 0;
        this._lastAnimTime = 0;
        this._screenSize = null;
      }
      Utility.prototype.random = function(min, max) {
        var range = max - min;
        return min + Math.random() * range;
      };
      Utility.prototype.randomToInt = function(min, max) {
        var range = max - min;
        return Math.round(min + Math.random() * range);
      };
      Utility.prototype.randomInsideRadius = function(radius) {
        void 0 === radius && (radius = 1);
        var vec = new cc.Vec2();
        vec.x = this.random(-radius, radius);
        vec.y = Math.sqrt(radius * radius - vec.x * vec.x) * this.random(-1, 1);
        return vec;
      };
      Utility.prototype.decodeBase64 = function(content) {
        return base64_1.Base64.decode(content);
      };
      Utility.prototype.nowTimestamp = function() {
        return Math.floor(.001 * Date.now());
      };
      Utility.prototype.formateNumb = function(coin) {
        return coin ? coin < 1e4 ? coin : coin < 1e6 ? (coin / 1e4).toFixed(2) + "\u4e07" : coin < 1e8 ? Math.floor(coin / 1e4) + "\u4e07" : (coin / 1e8).toFixed(3) + "\u4ebf" : 0;
      };
      Utility.prototype.setBtnGray = function(btn, isGray) {
        if (null == btn) {
          cc.warn("\u7f6e\u7070\u6309\u94ae\u4e3anull");
          return;
        }
        btn.interactable = !isGray;
        btn.enableAutoGrayEffect = isGray;
        this.setNodeGray(btn.node, isGray);
      };
      Utility.prototype.setNodeGray = function(node, isGray) {
        var coms = node.getComponents(cc.Sprite).concat(node.getComponentsInChildren(cc.Sprite));
        for (var i = 0; i < coms.length; i++) {
          var element = coms[i];
          isGray ? this.setGray(element) : this.resetGray(element);
        }
        var grayLabls = node.getComponents(GrayLable_1.default).concat(node.getComponentsInChildren(GrayLable_1.default));
        for (var i = 0; i < grayLabls.length; i++) {
          var element = grayLabls[i];
          element.enabled = !!isGray;
        }
      };
      Utility.prototype.isGray = function(sp) {
        return sp.getState() == cc.Sprite.State.GRAY;
      };
      Utility.prototype.setGray = function(sp) {
        grayMateral = grayMateral || cc.Material.getBuiltinMaterial("2d-gray-sprite");
        sp.setMaterial(0, grayMateral);
      };
      Utility.prototype.resetGray = function(sp) {
        normalMaterial = normalMaterial || (normalMaterial = cc.Material.getBuiltinMaterial("2d-sprite", sp));
        sp.setMaterial(0, normalMaterial);
      };
      Utility.prototype.formatTime = function(timestamp, pattern) {
        var date = null;
        date = null == timestamp ? new Date() : new Date(1e3 * timestamp);
        null != pattern && "" != pattern || (pattern = "yyyy-MM-dd hh:mm");
        var o = {
          "M+": date.getMonth() + 1,
          "d+": date.getDate(),
          "h+": date.getHours(),
          "m+": date.getMinutes(),
          "s+": date.getSeconds(),
          "q+": Math.floor((date.getMonth() + 3) / 3),
          S: date.getMilliseconds()
        };
        /(y+)/.test(pattern) && (pattern = pattern.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length)));
        for (var k in o) new RegExp("(" + k + ")").test(pattern) && (pattern = pattern.replace(RegExp.$1, 1 == RegExp.$1.length ? o[k] : ("00" + o[k]).substr(("" + o[k]).length)));
        return pattern;
      };
      Utility.prototype.getDate = function(time) {
        var date = new Date(time.replace(/-/g, "/"));
        var year = date.getFullYear() < 10 ? "0" + date.getFullYear() : "" + date.getFullYear();
        var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : "" + (date.getMonth() + 1);
        var day = date.getDate() < 10 ? "0" + date.getDate() : "" + date.getDate();
        var data = {
          year: year,
          month: month,
          day: day
        };
        return data;
      };
      Utility.prototype.notIOS = function() {
        if (!this.isMobile()) return true;
        return cc.sys.OS_IOS != cc.sys.os;
      };
      Utility.prototype.isMobile = function() {
        return cc.sys.isMobile;
      };
      Utility.prototype.playerNameClamp = function(str, maxChars, suffix) {
        var toCodePoint = function(unicodeSurrogates) {
          var r = [], c = 0, p = 0, i = 0;
          while (i < unicodeSurrogates.length) {
            var pos = i;
            c = unicodeSurrogates.charCodeAt(i++);
            if (65039 == c) continue;
            if (p) {
              var value = 65536 + (p - 55296 << 10) + (c - 56320);
              r.push({
                v: value,
                pos: pos
              });
              p = 0;
            } else 55296 <= c && c <= 56319 ? p = c : r.push({
              v: c,
              pos: pos
            });
          }
          return r;
        };
        suffix = null == suffix ? ".." : suffix;
        maxChars *= 2;
        var codeArr = toCodePoint(str);
        var numChar = 0;
        var index = 0;
        for (var i = 0; i < codeArr.length; ++i) {
          var code = codeArr[i].v;
          var add = 1;
          code >= 128 && (add = 2);
          if (numChar + add > maxChars) break;
          index = i;
          numChar += add;
        }
        if (codeArr.length - 1 == index) return str;
        var more = suffix ? 1 : 0;
        return str.substring(0, codeArr[index - more].pos + 1) + suffix;
      };
      Utility.prototype.getNameLen = function(name) {
        if ("" == name) return 0;
        var lenInByte = name.length;
        var inputLen = 0;
        var i = 0;
        while (i < lenInByte) {
          var curByte = name.charCodeAt(i);
          var addLen = 0;
          addLen = curByte > 0 && curByte <= 127 ? .5 : curByte >= 192 && curByte < 223 ? 1 : curByte >= 224 && curByte < 239 ? 1 : (curByte >= 240 && curByte <= 247, 
          1);
          inputLen += addLen;
          i += 1;
        }
        return inputLen;
      };
      Utility.prototype.filterPlayerName = function(name, maxCharLen) {
        if ("" == name) return "";
        maxCharLen = maxCharLen || 8;
        var newName = "";
        var lenInByte = name.length;
        var inputLen = 0;
        var i = 0;
        while (i < lenInByte) {
          var curByte = name.charCodeAt(i);
          var byteCount = 1;
          var addLen = 0;
          if (curByte > 0 && curByte <= 127) {
            byteCount = 1;
            addLen = 1;
          } else if (curByte >= 192 && curByte < 223) {
            byteCount = 2;
            addLen = 2;
          } else if (curByte >= 224 && curByte < 239) {
            byteCount = 3;
            addLen = 2;
          } else if (curByte >= 240 && curByte <= 247) {
            byteCount = 4;
            addLen = 2;
          } else {
            byteCount = 3;
            addLen = 2;
          }
          if (inputLen + addLen > maxCharLen) return newName + "..";
          inputLen += addLen;
          var char = name.charAt(i);
          i += 1;
          newName += char;
        }
        return newName;
      };
      Utility.prototype.hideAllChildren = function(parent) {
        var length = parent.childrenCount;
        for (var i = 0; i < length; i++) parent.children[i].active = false;
      };
      Utility.prototype.getIntRandom = function(under, over) {
        void 0 === under && (under = 0);
        void 0 === over && (over = 0);
        return Math.floor(Math.random() * (over - under + 1) + under);
      };
      Utility.prototype.playButtonSound = function() {
        var url = "sound/public/button";
        audio_manager_1.default.instance.playSound(url, false);
      };
      Utility.prototype.playRewardSound = function() {
        var url = "sound/public/huojiang";
        audio_manager_1.default.instance.playSound(url, false);
      };
      Utility.prototype.isNumArrayEquel = function(a, b) {
        if (a.length != b.length) return false;
        for (var i = 0; i < a.length; i++) {
          var index = b.indexOf(a[i]);
          if (index < 0) return false;
        }
        return true;
      };
      Utility.prototype.timeStamp = function() {
        return "" + new Date().getTime() / 1e3;
      };
      Utility.prototype.randomString = function() {
        var chars = "ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678";
        var maxPos = chars.length;
        var pwd = "";
        for (var i = 0; i < 32; i++) pwd += chars.charAt(Math.floor(Math.random() * maxPos));
        return pwd;
      };
      Utility.prototype.resetSpriteSize = function(sprite, maxWH) {
        if (maxWH) {
          var v2 = sprite.spriteFrame.getOriginalSize();
          var max = Math.max(v2.width, v2.height);
          var scale = 1;
          max > maxWH && (scale = maxWH / max);
          sprite.node.setContentSize(v2.width * scale, v2.height * scale);
        } else {
          var v2 = sprite.spriteFrame.getOriginalSize();
          sprite.node.setContentSize(v2);
        }
      };
      Utility.prototype.scaleSpriteToSize = function(sprite, spriteFrame, maxWH) {
        var v2 = spriteFrame.getOriginalSize();
        var width = v2.width;
        var height = v2.height;
        if (width > height) {
          width = maxWH;
          height = v2.height / v2.width * maxWH;
        } else {
          height = maxWH;
          width = v2.width / v2.height * maxWH;
        }
        sprite.spriteFrame = spriteFrame;
        sprite.node.setContentSize(width, height);
      };
      Utility.prototype.lastAnimValid = function(intervalTime) {
        var time = 300;
        intervalTime && (time = intervalTime);
        var cur = new Date().getTime();
        if (cur - this._lastAnimTime < time) return false;
        this._lastAnimTime = cur;
        return true;
      };
      Utility.prototype.btnClickValid = function(intervalTime) {
        var time = 400;
        intervalTime && (time = intervalTime);
        var cur = new Date().getTime();
        if (cur - this._lastClickTime < time) return false;
        this._lastClickTime = cur;
        return true;
      };
      Utility.prototype.getUserHeadImagePath = function(headImg) {
        return headImg && "" != headImg && "http://www.sincebest.com/app/lyfivestar/images/guest.png" != headImg ? headImg : "https://game.oss.sincebest.com/image/guest.png";
      };
      Utility.prototype.getLabelSize = function(str, label) {
        label.string = str;
        true;
        label._updateRenderData(true);
        return label.node.getContentSize();
      };
      Utility.prototype.getPrefabNode = function(index, parent, prefab) {
        if (parent.childrenCount <= index) {
          var node = cc.instantiate(prefab);
          node.position = cc.v2(0, 0);
          node.scale = 1;
          node.parent = parent;
          node.active = false;
          return this.getPrefabNode(index, parent, prefab);
        }
        return parent.children[index];
      };
      Utility.prototype.getScreenSize = function() {
        if (this._screenSize) return this._screenSize;
        var canvas = cc.find("GameRoot/UI");
        return canvas.getContentSize();
      };
      Utility.prototype.getDesignResolutionSize = function() {
        if (this._screenSize) return this._screenSize;
        var canvas = cc.find("GameRoot/UI").getComponent(cc.Canvas);
        return canvas.designResolution;
      };
      Utility.prototype.strIsContain = function(sourceStr, needStr) {
        if (!sourceStr) return false;
        if (!needStr) return false;
        return -1 != sourceStr.indexOf(needStr);
      };
      Utility.prototype.setHeadFrame = function(url, sprite, self, size) {
        void 0 === size && (size = 95);
        if (!url) return;
        texture_manager_1.default.instance.getSprite(url, function(frame) {
          self && self.isValid && frame && (sprite.spriteFrame = frame);
        });
      };
      Utility.prototype.getStrLength = function(str) {
        if (str) return 0;
        var toCodePoint = function(unicodeSurrogates) {
          var r = [], c = 0, p = 0, i = 0;
          while (i < unicodeSurrogates.length) {
            var pos = i;
            c = unicodeSurrogates.charCodeAt(i++);
            if (65039 == c) continue;
            if (p) {
              var value = 65536 + (p - 55296 << 10) + (c - 56320);
              r.push({
                v: value,
                pos: pos
              });
              p = 0;
            } else 55296 <= c && c <= 56319 ? p = c : r.push({
              v: c,
              pos: pos
            });
          }
          return r;
        };
        var codeArr = toCodePoint(str);
        var numChar = 0;
        for (var i = 0; i < codeArr.length; ++i) {
          var code = codeArr[i].v;
          var add = 1;
          code >= 128 && (add = 2);
          numChar += add;
        }
        return numChar;
      };
      Utility.prototype.resetAnimation = function(anim) {
        if (!anim) return;
        anim.setCurrentTime(0);
      };
      Utility.prototype.findChildNode = function(node, path) {
        var index = path.indexOf("/");
        if (index > 0) {
          var name = path.substring(0, index);
          if (index + 1 < path.length) {
            path = path.substring(index + 1);
            var child = node.getChildByName(name);
            if (child) return this.findChildNode(child, path);
            return null;
          }
          return node.getChildByName(name);
        }
        return node.getChildByName(path);
      };
      Utility.currencyFormatting = function(num, isInt) {
        void 0 === isInt && (isInt = false);
        var numStr = (num.toFixed(2) || 0).toString(), result = "";
        var arr = numStr.split(".");
        var beforeStr = arr[0];
        while (beforeStr.length > 3) {
          result = "," + beforeStr.slice(-3) + result;
          beforeStr = beforeStr.slice(0, beforeStr.length - 3);
        }
        beforeStr && (result = beforeStr + result);
        if (isInt) return result;
        arr.length > 1 && (result = result + "." + arr[1]);
        return result;
      };
      Utility.instance = new Utility();
      return Utility;
    }();
    exports.default = Utility;
    cc._RF.pop();
  }, {
    "../manager/audio_manager": "audio_manager",
    "../manager/texture_manager": "texture_manager",
    "../pacakge/public/ui/GrayLable": "GrayLable",
    "../utility/base64": "base64"
  } ],
  version_manager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7befe1nhylHsK2mLzLAyiyR", "version_manager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var debug_1 = require("./debug");
    var event_manager_1 = require("./event_manager");
    var app_data_1 = require("../pacakge/public/const/app_data");
    var local_storage_1 = require("./local_storage");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var VersionManager = function(_super) {
      __extends(VersionManager, _super);
      function VersionManager() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.manifestUrl = null;
        return _this;
      }
      VersionManager_1 = VersionManager;
      VersionManager.prototype.onLoad = function() {
        VersionManager_1.instance = this;
      };
      VersionManager.prototype.checkVersion = function() {
        if (!cc.sys.isNative) return;
        if (!this.manifestUrl) {
          debug_1.default.error(" the manifestUrl is null ");
          return;
        }
        this.storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + "remote-asset-ssqp";
        cc.log("Storage path for remote asset : " + this.storagePath);
        var self = this;
        this.assetManager = new jsb.AssetsManager("", this.storagePath, this.versionCompareHandle.bind(this));
        this.assetManager.setVerifyCallback(function(path, asset) {
          var compressed = asset.compressed;
          var expectedMD5 = asset.md5;
          var relativePath = asset.path;
          var size = asset.size;
          return compressed, true;
        });
        cc.sys.os === cc.sys.OS_ANDROID && this.assetManager.setMaxConcurrentTask(2);
        this.checkUpdate();
      };
      VersionManager.prototype.versionCompare = function(versionA, versionB) {
        var vA = versionA.split(".");
        var vB = versionB.split(".");
        for (var i = 0; i < vA.length; ++i) {
          var a = parseInt(vA[i]);
          var b = parseInt(vB[i] || 0);
          if (a == b) continue;
          return a - b;
        }
        return vB.length > vA.length ? -1 : 0;
      };
      VersionManager.prototype.versionCompareHandle = function(localVer, remoteVer) {
        cc.log("JS Custom Version Compare: local version is " + localVer + ", remote version is " + remoteVer);
        var vA = localVer.split(".");
        var vB = remoteVer.split(".");
        app_data_1.default.appVersion = localVer;
        local_storage_1.default.setNumber("version", localVer);
        event_manager_1.default.instance.dispatch("get_app_version", localVer);
        for (var i = 0; i < vA.length; ++i) {
          var a = parseInt(vA[i]);
          var b = parseInt(vB[i] || 0);
          if (a == b) continue;
          if (0 == i && a < b) {
            console.log("please down load the lastest app package .");
            return 0;
          }
          return a - b;
        }
        return vB.length > vA.length ? -1 : 0;
      };
      VersionManager.prototype.checkUpdate = function() {
        if (this.updating) return;
        if (this.assetManager.getState() === jsb.AssetsManager.State.UNINITED) {
          var url = this.manifestUrl.nativeUrl;
          cc.loader.md5Pipe && (url = cc.loader.md5Pipe.transformURL(url));
          this.assetManager.loadLocalManifest(url);
        }
        if (!this.assetManager.getLocalManifest() || !this.assetManager.getLocalManifest().isLoaded()) return;
        this.assetManager.setEventCallback(this.checkCb.bind(this));
        this.assetManager.checkUpdate();
        this.updating = true;
      };
      VersionManager.prototype.checkCb = function(event) {
        var code = event.getEventCode();
        cc.log("checkCb Code: " + code);
        this.updating = false;
        switch (code) {
         case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
          cc.log("No local manifest file found, hot update skipped.");
          event_manager_1.default.instance.dispatch("error_no_local_manifest.");
          break;

         case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
         case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
          cc.log("Fail to download manifest file, hot update skipped.");
          event_manager_1.default.instance.dispatch("error_download_manifest_file.");
          break;

         case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
          cc.log("Already up to date with the latest remote version.");
          event_manager_1.default.instance.dispatch("already_up_to_date");
          break;

         case jsb.EventAssetsManager.NEW_VERSION_FOUND:
          event_manager_1.default.instance.dispatch("new_version_found");
          cc.log("New version found, do update.");
          this.scheduleOnce(this.hotUpdate, .01);
          break;

         default:
          cc.log(" check cb default");
          return;
        }
        this.assetManager.setEventCallback(null);
      };
      VersionManager.prototype.hotUpdate = function() {
        if (this.assetManager && !this.updating) {
          this.assetManager.setEventCallback(this.updateCb.bind(this));
          if (this.assetManager.getState() === jsb.AssetsManager.State.UNINITED) {
            var url = this.manifestUrl.nativeUrl;
            cc.loader.md5Pipe && (url = cc.loader.md5Pipe.transformURL(url));
            this.assetManager.loadLocalManifest(url);
          }
          this.assetManager.update();
          this.updating = true;
        }
      };
      VersionManager.prototype.updateCb = function(event) {
        var needRestart = false;
        var failed = false;
        console.log(" updateCb ", event.getEventCode());
        switch (event.getEventCode()) {
         case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
          console.log("No local manifest file found, hot update skipped.");
          failed = true;
          break;

         case jsb.EventAssetsManager.UPDATE_PROGRESSION:
          var msg = event.getMessage();
          msg && console.log(" updateProgress msg ", msg);
          var downFiles = Number(event.getDownloadedFiles());
          var totalFiles = Number(event.getTotalFiles());
          var downBytes = Number(event.getDownloadedBytes());
          var totalBytes = Number(event.getTotalBytes());
          console.log(" update progress files : ", downFiles + " / " + totalFiles);
          console.log("update progress bytes : ", downBytes + " / " + totalBytes);
          var progress = 0 == totalBytes ? 0 : Number((downBytes / totalBytes).toFixed(2));
          console.log(" progress ", progress);
          this.progress != progress && event_manager_1.default.instance.dispatch("update_progress", progress);
          this.progress = progress;
          break;

         case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
         case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
          console.log("Fail to download manifest file, hot update skipped.");
          failed = true;
          break;

         case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
          console.log("Already up to date with the latest remote version.");
          failed = true;
          break;

         case jsb.EventAssetsManager.UPDATE_FINISHED:
          console.log(" Update finished", event.getMessage());
          event_manager_1.default.instance.dispatch("update_finished");
          needRestart = true;
          break;

         case jsb.EventAssetsManager.UPDATE_FAILED:
          this.updating = false;
          this.canRetry = true;
          console.log("Update failed. ", event.getMessage());
          break;

         case jsb.EventAssetsManager.ERROR_UPDATING:
          console.log("Asset update error: ", event.getAssetId() + ", ", event.getMessage());
          break;

         case jsb.EventAssetsManager.ERROR_DECOMPRESS:
          console.log(" ERROR_DECOMPRESS ", event.getMessage());
        }
        if (failed) {
          this.assetManager.setEventCallback(null);
          this.updating = false;
        }
        if (needRestart) {
          this.assetManager.setEventCallback(null);
          var searchPaths = jsb.fileUtils.getSearchPaths();
          var newPaths = this.assetManager.getLocalManifest().getSearchPaths();
          console.log(JSON.stringify(newPaths));
          Array.prototype.unshift.apply(searchPaths, newPaths);
          cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(searchPaths));
          jsb.fileUtils.setSearchPaths(searchPaths);
          cc.audioEngine.stopAll();
          cc.game.restart();
        }
      };
      VersionManager.prototype.retry = function() {
        if (!this.updating && this.canRetry) {
          this.canRetry = false;
          this.assetManager.downloadFailedAssets();
        }
      };
      var VersionManager_1;
      __decorate([ property(cc.Object) ], VersionManager.prototype, "manifestUrl", void 0);
      VersionManager = VersionManager_1 = __decorate([ ccclass ], VersionManager);
      return VersionManager;
    }(cc.Component);
    exports.default = VersionManager;
    cc._RF.pop();
  }, {
    "../pacakge/public/const/app_data": "app_data",
    "./debug": "debug",
    "./event_manager": "event_manager",
    "./local_storage": "local_storage"
  } ],
  view_base: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a414aWqKqZMArC29GaUZY67", "view_base");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var module_manager_1 = require("../module_manager");
    var mvvm_base_1 = require("./mvvm_base");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ViewBase = function(_super) {
      __extends(ViewBase, _super);
      function ViewBase() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._cacheComponent = [];
        return _this;
      }
      ViewBase.prototype.onShow = function(arg0) {};
      ViewBase.prototype.onLoad = function() {};
      ViewBase.prototype._show = function(intentData) {
        this.onShow(intentData);
      };
      ViewBase.prototype.on_destroy = function() {};
      ViewBase.prototype.destroyView = function() {
        this.isDestroyed = true;
        this._baseDestroy();
      };
      ViewBase.prototype.onInit = function() {};
      ViewBase.prototype.cacheComponent = function(name, component) {
        this._cacheComponent.push(component);
      };
      ViewBase.prototype.showNetPrompt = function(show) {
        show ? module_manager_1.default.instance.showModuleName("NetPrompt") : module_manager_1.default.instance.hideModule("NetPrompt");
      };
      ViewBase.prototype.buttonClick = function(node, customEventData) {
        this._moduleBase._ButtonClick(node, customEventData);
      };
      ViewBase = __decorate([ ccclass ], ViewBase);
      return ViewBase;
    }(mvvm_base_1.default);
    exports.default = ViewBase;
    cc._RF.pop();
  }, {
    "../module_manager": "module_manager",
    "./mvvm_base": "mvvm_base"
  } ],
  water_shader: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ceb59k2DJ1Mp7bkTM6C2K4F", "water_shader");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var shader_component_1 = require("./shader_component");
    var renderEngine = cc.renderer.renderEngine;
    var renderer = renderEngine.renderer;
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
    var WaterShader = function(_super) {
      __extends(WaterShader, _super);
      function WaterShader() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._shaderName = "Water";
        _this._vert = "\n    uniform mat4 viewProj;\n    attribute vec3 a_position;\n    attribute vec2 a_uv0;\n    varying vec2 uv0;\n    void main () {\n        vec4 pos = viewProj * vec4(a_position, 1);\n        gl_Position = pos;\n        uv0 = a_uv0;\n    }";
        _this._frag = "uniform sampler2D texture;\n    uniform vec3 iResolution;\n    uniform float time;\n    varying vec2 uv0;\n\n    #define F cos(x-y)*cos(y),sin(x+y)*sin(y)\n\n    vec2 s(vec2 p)\n    {\n        float d=time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\n        return vec2(F);\n    }\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        // \u6362\u6210resolution\n        vec2 rs = iResolution.xy;\n        // \u6362\u6210\u7eb9\u7406\u5750\u6807v_texCoord.xy\n        vec2 uv = fragCoord;\n        vec2 q = uv+2./iResolution.x*(s(uv)-s(uv+rs));\n        //\u53cd\u8f6cy\n        //q.y=1.-q.y;\n        fragColor = texture2D(texture, q);\n    }\n    void main()\n    {\n        mainImage(gl_FragColor, uv0.xy);\n    }";
        _this._defines = [];
        _this._params = [ {
          name: "iResolution",
          type: renderer.PARAM_FLOAT3
        } ];
        _this._needUpdate = true;
        return _this;
      }
      WaterShader.prototype.setParamValue = function(material) {
        var iResolution = new cc.Vec3(this.node.width, this.node.height, 0);
        material.setParamValue("iResolution", iResolution);
      };
      WaterShader = __decorate([ ccclass, menu("custom/Shader/Water") ], WaterShader);
      return WaterShader;
    }(shader_component_1.default);
    exports.default = WaterShader;
    cc._RF.pop();
  }, {
    "./shader_component": "shader_component"
  } ]
}, {}, [ "template", "template_model", "template_view", "play_anim", "simple_rotation", "JsonOb", "module_manager", "model_base", "module_base", "mvvm_base", "view_base", "descriptor", "net_client", "listview", "listview_demo", "scrollview", "init", "init_config_test", "init_plugins", "loader_wrap", "ConfigLanguageData", "TLabel", "countUp", "pomelo", "audio_manager", "auto_dialog_manager", "debug", "event_manager", "game_manager", "language_manager", "local_storage", "log_report_manager", "make_points_manager", "memory_storage", "scene_manager", "sdk_manager", "texture_manager", "time_manager", "user_manager", "version_manager", "activity", "activityTabItem", "activity_view", "club_data", "club_model", "club_module", "club_view", "component_club", "component_marquee", "component_table", "clubMemList_model", "clubMemList_module", "clubMemList_view", "net_clubRoute", "clubRank_model", "clubRank_module", "clubRank_view", "clubRecord_model", "clubRecord_module", "clubRecord_view", "clubList_item", "hall_model", "hall_module", "hall_route", "hall_view", "auth_module", "auth_view", "toggle_item", "createroom_model", "createroom_module", "createroom_view", "rule_data", "rule_factory", "marquee_component", "joinClub_model", "joinClub_module", "joinClub_route", "joinClub_view", "pdk_myseat_pokers", "pdk_seat_pokers", "pdk_table_seat_view", "pdk_table_sound", "poker_node", "poker_node_set", "result_module", "result_view", "score_item", "room_config", "public_rule", "public_rule_view", "pdk_const", "pdk_data", "pdk_base_view", "pdk_model", "pdk_module", "pdk_module_base", "pdk_view", "poker_data", "poker_logic_set", "poker_pattern", "poker_recommend", "recommend_tools", "pdk_route", "playerinfo", "playerinfo_view", "chat", "chat_action", "chat_action_view", "move_item", "chat_config", "chat_model", "chat_route", "chat_view", "app_data", "const_code", "game_cfg", "module_data", "event_config", "gamePlayerinfo", "gamePlayerinfo_view", "magicEmojWidget", "loading", "loading_view", "model_data", "dialog_view", "diaolog", "dialog_tips", "dialog_tips_view", "netprompt", "netprompt_view", "toast", "toast_view", "ping_component", "poker_myseat_pokers", "poker_seat_pokers_base", "poker_table_poker_base", "poker_table_seat_base_view", "setting", "setting_view", "GrayLable", "custom_ui_state_switcher", "editor_box_center", "layout_grid", "menu_scroll_widget", "screenAdaptationUtil", "spriteFrameHolder", "ui_state_switcher", "game_net_route", "game_server", "hall_net_route", "hall_server", "login_net_route", "login_server", "server_base", "String", "SdkBridge", "SdkHandler", "SdkInterface", "SdkStorage", "sdk_define", "sdk_facebook", "sdk_line", "blur_shader", "dissolve_shader", "flash_shader", "fluxay_shader", "fluxay_super_shader", "frozen_shader", "gauss_blur_shader", "glowing_shader", "ice_shader", "mirror_shader", "mosaic_shader", "outline_shader", "poison_shader", "rain_shader", "shader_component", "shader_material", "shader_test", "stone_shader", "water_shader", "CustomRichText", "CustomToggle", "ToggleObjectContral", "UButton", "ULabel", "USprite", "aes", "base64", "center_horizont_layout", "game_util", "image_font", "md5", "pool", "promiseUtility", "utility" ]);